"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[899],{9233:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>h});var i=t(4848),a=t(8453);const s={sidebar_position:1},o="ChainPay",r={id:"introduction",title:"ChainPay",description:"ChainPay aims to make sending and receiving payments across all EVM-compatible",source:"@site/docs/introduction.md",sourceDirName:".",slug:"/introduction",permalink:"/docs/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/Hattorius/ChainPay/tree/main/docs/docs/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"ideaSidebar",next:{title:"Roadmap",permalink:"/docs/future"}},c={},h=[{value:"Current State of ChainPay",id:"current-state-of-chainpay",level:2}];function l(n){const e={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"chainpay",children:"ChainPay"})}),"\n",(0,i.jsx)(e.p,{children:"ChainPay aims to make sending and receiving payments across all EVM-compatible\nblockchains simple and seamless. It eliminates the hassle of checking whether\nyour customer accepts a specific token or coin and removes the need for multiple\ntransactions."}),"\n",(0,i.jsx)(e.p,{children:"Imagine this scenario:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"You want to pay your friend for mowing the lawn last night."}),"\n",(0,i.jsx)(e.li,{children:"Your friend prefers BUSD on the Polygon chain."}),"\n",(0,i.jsx)(e.li,{children:"You only have ETH on Arbitrum."}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"What do you do?"}),"\n",(0,i.jsx)(e.p,{children:"ChainPay's goal is to streamline situations like this, making payments as easy\nas possible. At the same time, it enables third parties to accept payments from\nany blockchain using any token."}),"\n",(0,i.jsx)(e.h2,{id:"current-state-of-chainpay",children:"Current State of ChainPay"}),"\n",(0,i.jsx)(e.p,{children:"ChainPay was developed for Binance\u2019s 2024 Q3 hackathon. Despite the hackathon\nspanning two weeks, the current version of ChainPay was built in just five days.\nAs a result, it is in the proof of concept or minimum viable product stage, and\ncurrently supports the Binance Smart Chain with the following features:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"Payment requests in BNB, with the user paying in BNB."}),"\n",(0,i.jsx)(e.li,{children:"Payment requests in a specific token, with the user paying in that token."}),"\n",(0,i.jsx)(e.li,{children:"Payment requests in BNB or a token, with the user paying in a different token."}),"\n",(0,i.jsx)(e.li,{children:"Payment requests in a token, with the user paying in BNB."}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"Additionally, the project supports on-chain postbacks, allowing you to trigger\non-chain actions with your smart contract after receiving a payment."})]})}function d(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(l,{...n})}):l(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>r});var i=t(6540);const a={},s=i.createContext(a);function o(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);