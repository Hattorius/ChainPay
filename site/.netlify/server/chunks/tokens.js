import { c as create_ssr_component, b as createEventDispatcher, d as add_attribute } from "./index3.js";
import { w as writable, d as derived, B as Buffer } from "./index2.js";
import { createPublicClient, http } from "viem";
import { mainnet, bsc } from "viem/chains";
import { __assign, __extends as __extends$g, __spreadArray as __spreadArray$i } from "tslib";
import require$$0 from "url";
import require$$0$1 from "util";
var commonjsGlobal = typeof globalThis !== "undefined" ? globalThis : typeof window !== "undefined" ? window : typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : {};
function getDefaultExportFromCjs(x) {
  return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, "default") ? x["default"] : x;
}
const TokenPicker = create_ssr_component(($$result, $$props, $$bindings, slots) => {
  let { tokens: tokens2 } = $$props;
  let wrapper;
  createEventDispatcher();
  if ($$props.tokens === void 0 && $$bindings.tokens && tokens2 !== void 0)
    $$bindings.tokens(tokens2);
  return `<div class="border cursor-pointer relative"${add_attribute("this", wrapper, 0)}>${`${`
		<div class="p-2">Press here</div>`}`}

	${``}</div>`;
});
var Chains = /* @__PURE__ */ ((Chains2) => {
  Chains2["ETH"] = "0x1";
  Chains2["BSC"] = "0x38";
  return Chains2;
})(Chains || {});
const chainsMetadata = {
  [Chains.ETH]: mainnet,
  [Chains.BSC]: bsc
};
const activeChain = writable(Chains.BSC);
const walletClient = writable();
const walletAccount = derived(
  [walletClient],
  ([$walletClient], set2) => {
    if (!$walletClient) {
      set2(void 0);
      return void 0;
    }
    $walletClient?.requestAddresses().then((accounts2) => {
      const [account2] = accounts2;
      set2(account2);
    });
  }
);
derived(activeChain, ($activeChain) => {
  return createPublicClient({
    chain: chainsMetadata[$activeChain],
    transport: http()
  });
});
derived([walletAccount], ([$walletAccount], set2) => {
  if (!$walletAccount)
    return void 0;
  const ethPublicClient = createPublicClient({
    chain: chainsMetadata[Chains.ETH],
    transport: http()
  });
  ethPublicClient.getEnsName({ address: $walletAccount }).then((ens2) => set2(ens2));
});
var cjs$1 = {};
var Observable$1 = {};
var Subscriber = {};
var isFunction$1 = {};
Object.defineProperty(isFunction$1, "__esModule", { value: true });
isFunction$1.isFunction = void 0;
function isFunction(value) {
  return typeof value === "function";
}
isFunction$1.isFunction = isFunction;
var Subscription$1 = {};
var UnsubscriptionError = {};
var createErrorClass$1 = {};
Object.defineProperty(createErrorClass$1, "__esModule", { value: true });
createErrorClass$1.createErrorClass = void 0;
function createErrorClass(createImpl) {
  var _super = function(instance) {
    Error.call(instance);
    instance.stack = new Error().stack;
  };
  var ctorFunc = createImpl(_super);
  ctorFunc.prototype = Object.create(Error.prototype);
  ctorFunc.prototype.constructor = ctorFunc;
  return ctorFunc;
}
createErrorClass$1.createErrorClass = createErrorClass;
Object.defineProperty(UnsubscriptionError, "__esModule", { value: true });
UnsubscriptionError.UnsubscriptionError = void 0;
var createErrorClass_1$5 = createErrorClass$1;
UnsubscriptionError.UnsubscriptionError = createErrorClass_1$5.createErrorClass(function(_super) {
  return function UnsubscriptionErrorImpl(errors2) {
    _super(this);
    this.message = errors2 ? errors2.length + " errors occurred during unsubscription:\n" + errors2.map(function(err, i) {
      return i + 1 + ") " + err.toString();
    }).join("\n  ") : "";
    this.name = "UnsubscriptionError";
    this.errors = errors2;
  };
});
var arrRemove$1 = {};
Object.defineProperty(arrRemove$1, "__esModule", { value: true });
arrRemove$1.arrRemove = void 0;
function arrRemove(arr, item) {
  if (arr) {
    var index = arr.indexOf(item);
    0 <= index && arr.splice(index, 1);
  }
}
arrRemove$1.arrRemove = arrRemove;
var __values$8 = commonjsGlobal && commonjsGlobal.__values || function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read$i = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$h = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(Subscription$1, "__esModule", { value: true });
Subscription$1.isSubscription = Subscription$1.EMPTY_SUBSCRIPTION = Subscription$1.Subscription = void 0;
var isFunction_1$p = isFunction$1;
var UnsubscriptionError_1 = UnsubscriptionError;
var arrRemove_1$7 = arrRemove$1;
var Subscription = function() {
  function Subscription2(initialTeardown) {
    this.initialTeardown = initialTeardown;
    this.closed = false;
    this._parentage = null;
    this._finalizers = null;
  }
  Subscription2.prototype.unsubscribe = function() {
    var e_1, _a2, e_2, _b;
    var errors2;
    if (!this.closed) {
      this.closed = true;
      var _parentage = this._parentage;
      if (_parentage) {
        this._parentage = null;
        if (Array.isArray(_parentage)) {
          try {
            for (var _parentage_1 = __values$8(_parentage), _parentage_1_1 = _parentage_1.next(); !_parentage_1_1.done; _parentage_1_1 = _parentage_1.next()) {
              var parent_1 = _parentage_1_1.value;
              parent_1.remove(this);
            }
          } catch (e_1_1) {
            e_1 = { error: e_1_1 };
          } finally {
            try {
              if (_parentage_1_1 && !_parentage_1_1.done && (_a2 = _parentage_1.return))
                _a2.call(_parentage_1);
            } finally {
              if (e_1)
                throw e_1.error;
            }
          }
        } else {
          _parentage.remove(this);
        }
      }
      var initialFinalizer = this.initialTeardown;
      if (isFunction_1$p.isFunction(initialFinalizer)) {
        try {
          initialFinalizer();
        } catch (e) {
          errors2 = e instanceof UnsubscriptionError_1.UnsubscriptionError ? e.errors : [e];
        }
      }
      var _finalizers = this._finalizers;
      if (_finalizers) {
        this._finalizers = null;
        try {
          for (var _finalizers_1 = __values$8(_finalizers), _finalizers_1_1 = _finalizers_1.next(); !_finalizers_1_1.done; _finalizers_1_1 = _finalizers_1.next()) {
            var finalizer = _finalizers_1_1.value;
            try {
              execFinalizer(finalizer);
            } catch (err) {
              errors2 = errors2 !== null && errors2 !== void 0 ? errors2 : [];
              if (err instanceof UnsubscriptionError_1.UnsubscriptionError) {
                errors2 = __spreadArray$h(__spreadArray$h([], __read$i(errors2)), __read$i(err.errors));
              } else {
                errors2.push(err);
              }
            }
          }
        } catch (e_2_1) {
          e_2 = { error: e_2_1 };
        } finally {
          try {
            if (_finalizers_1_1 && !_finalizers_1_1.done && (_b = _finalizers_1.return))
              _b.call(_finalizers_1);
          } finally {
            if (e_2)
              throw e_2.error;
          }
        }
      }
      if (errors2) {
        throw new UnsubscriptionError_1.UnsubscriptionError(errors2);
      }
    }
  };
  Subscription2.prototype.add = function(teardown) {
    var _a2;
    if (teardown && teardown !== this) {
      if (this.closed) {
        execFinalizer(teardown);
      } else {
        if (teardown instanceof Subscription2) {
          if (teardown.closed || teardown._hasParent(this)) {
            return;
          }
          teardown._addParent(this);
        }
        (this._finalizers = (_a2 = this._finalizers) !== null && _a2 !== void 0 ? _a2 : []).push(teardown);
      }
    }
  };
  Subscription2.prototype._hasParent = function(parent) {
    var _parentage = this._parentage;
    return _parentage === parent || Array.isArray(_parentage) && _parentage.includes(parent);
  };
  Subscription2.prototype._addParent = function(parent) {
    var _parentage = this._parentage;
    this._parentage = Array.isArray(_parentage) ? (_parentage.push(parent), _parentage) : _parentage ? [_parentage, parent] : parent;
  };
  Subscription2.prototype._removeParent = function(parent) {
    var _parentage = this._parentage;
    if (_parentage === parent) {
      this._parentage = null;
    } else if (Array.isArray(_parentage)) {
      arrRemove_1$7.arrRemove(_parentage, parent);
    }
  };
  Subscription2.prototype.remove = function(teardown) {
    var _finalizers = this._finalizers;
    _finalizers && arrRemove_1$7.arrRemove(_finalizers, teardown);
    if (teardown instanceof Subscription2) {
      teardown._removeParent(this);
    }
  };
  Subscription2.EMPTY = function() {
    var empty2 = new Subscription2();
    empty2.closed = true;
    return empty2;
  }();
  return Subscription2;
}();
Subscription$1.Subscription = Subscription;
Subscription$1.EMPTY_SUBSCRIPTION = Subscription.EMPTY;
function isSubscription(value) {
  return value instanceof Subscription || value && "closed" in value && isFunction_1$p.isFunction(value.remove) && isFunction_1$p.isFunction(value.add) && isFunction_1$p.isFunction(value.unsubscribe);
}
Subscription$1.isSubscription = isSubscription;
function execFinalizer(finalizer) {
  if (isFunction_1$p.isFunction(finalizer)) {
    finalizer();
  } else {
    finalizer.unsubscribe();
  }
}
var config = {};
Object.defineProperty(config, "__esModule", { value: true });
config.config = void 0;
config.config = {
  onUnhandledError: null,
  onStoppedNotification: null,
  Promise: void 0,
  useDeprecatedSynchronousErrorHandling: false,
  useDeprecatedNextContext: false
};
var reportUnhandledError$1 = {};
var timeoutProvider = {};
(function(exports) {
  var __read2 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m)
      return o;
    var i = m.call(o), r, ar = [], e;
    try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
        ar.push(r.value);
    } catch (error2) {
      e = { error: error2 };
    } finally {
      try {
        if (r && !r.done && (m = i["return"]))
          m.call(i);
      } finally {
        if (e)
          throw e.error;
      }
    }
    return ar;
  };
  var __spreadArray2 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
    for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
      to[j] = from2[i];
    return to;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.timeoutProvider = void 0;
  exports.timeoutProvider = {
    setTimeout: function(handler, timeout2) {
      var args2 = [];
      for (var _i = 2; _i < arguments.length; _i++) {
        args2[_i - 2] = arguments[_i];
      }
      var delegate = exports.timeoutProvider.delegate;
      if (delegate === null || delegate === void 0 ? void 0 : delegate.setTimeout) {
        return delegate.setTimeout.apply(delegate, __spreadArray2([handler, timeout2], __read2(args2)));
      }
      return setTimeout.apply(void 0, __spreadArray2([handler, timeout2], __read2(args2)));
    },
    clearTimeout: function(handle) {
      var delegate = exports.timeoutProvider.delegate;
      return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearTimeout) || clearTimeout)(handle);
    },
    delegate: void 0
  };
})(timeoutProvider);
Object.defineProperty(reportUnhandledError$1, "__esModule", { value: true });
reportUnhandledError$1.reportUnhandledError = void 0;
var config_1$2 = config;
var timeoutProvider_1 = timeoutProvider;
function reportUnhandledError(err) {
  timeoutProvider_1.timeoutProvider.setTimeout(function() {
    var onUnhandledError = config_1$2.config.onUnhandledError;
    if (onUnhandledError) {
      onUnhandledError(err);
    } else {
      throw err;
    }
  });
}
reportUnhandledError$1.reportUnhandledError = reportUnhandledError;
var noop$1 = {};
Object.defineProperty(noop$1, "__esModule", { value: true });
noop$1.noop = void 0;
function noop() {
}
noop$1.noop = noop;
var NotificationFactories = {};
Object.defineProperty(NotificationFactories, "__esModule", { value: true });
NotificationFactories.createNotification = NotificationFactories.nextNotification = NotificationFactories.errorNotification = NotificationFactories.COMPLETE_NOTIFICATION = void 0;
NotificationFactories.COMPLETE_NOTIFICATION = function() {
  return createNotification("C", void 0, void 0);
}();
function errorNotification(error2) {
  return createNotification("E", void 0, error2);
}
NotificationFactories.errorNotification = errorNotification;
function nextNotification(value) {
  return createNotification("N", value, void 0);
}
NotificationFactories.nextNotification = nextNotification;
function createNotification(kind, value, error2) {
  return {
    kind,
    value,
    error: error2
  };
}
NotificationFactories.createNotification = createNotification;
var errorContext$1 = {};
Object.defineProperty(errorContext$1, "__esModule", { value: true });
errorContext$1.captureError = errorContext$1.errorContext = void 0;
var config_1$1 = config;
var context = null;
function errorContext(cb) {
  if (config_1$1.config.useDeprecatedSynchronousErrorHandling) {
    var isRoot = !context;
    if (isRoot) {
      context = { errorThrown: false, error: null };
    }
    cb();
    if (isRoot) {
      var _a2 = context, errorThrown = _a2.errorThrown, error2 = _a2.error;
      context = null;
      if (errorThrown) {
        throw error2;
      }
    }
  } else {
    cb();
  }
}
errorContext$1.errorContext = errorContext;
function captureError(err) {
  if (config_1$1.config.useDeprecatedSynchronousErrorHandling && context) {
    context.errorThrown = true;
    context.error = err;
  }
}
errorContext$1.captureError = captureError;
(function(exports) {
  var __extends2 = commonjsGlobal && commonjsGlobal.__extends || function() {
    var extendStatics = function(d, b) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
        d2.__proto__ = b2;
      } || function(d2, b2) {
        for (var p in b2)
          if (Object.prototype.hasOwnProperty.call(b2, p))
            d2[p] = b2[p];
      };
      return extendStatics(d, b);
    };
    return function(d, b) {
      if (typeof b !== "function" && b !== null)
        throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
      extendStatics(d, b);
      function __() {
        this.constructor = d;
      }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
  }();
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.EMPTY_OBSERVER = exports.SafeSubscriber = exports.Subscriber = void 0;
  var isFunction_12 = isFunction$1;
  var Subscription_12 = Subscription$1;
  var config_12 = config;
  var reportUnhandledError_12 = reportUnhandledError$1;
  var noop_12 = noop$1;
  var NotificationFactories_1 = NotificationFactories;
  var timeoutProvider_12 = timeoutProvider;
  var errorContext_12 = errorContext$1;
  var Subscriber2 = function(_super) {
    __extends2(Subscriber3, _super);
    function Subscriber3(destination) {
      var _this = _super.call(this) || this;
      _this.isStopped = false;
      if (destination) {
        _this.destination = destination;
        if (Subscription_12.isSubscription(destination)) {
          destination.add(_this);
        }
      } else {
        _this.destination = exports.EMPTY_OBSERVER;
      }
      return _this;
    }
    Subscriber3.create = function(next, error2, complete) {
      return new SafeSubscriber(next, error2, complete);
    };
    Subscriber3.prototype.next = function(value) {
      if (this.isStopped) {
        handleStoppedNotification(NotificationFactories_1.nextNotification(value), this);
      } else {
        this._next(value);
      }
    };
    Subscriber3.prototype.error = function(err) {
      if (this.isStopped) {
        handleStoppedNotification(NotificationFactories_1.errorNotification(err), this);
      } else {
        this.isStopped = true;
        this._error(err);
      }
    };
    Subscriber3.prototype.complete = function() {
      if (this.isStopped) {
        handleStoppedNotification(NotificationFactories_1.COMPLETE_NOTIFICATION, this);
      } else {
        this.isStopped = true;
        this._complete();
      }
    };
    Subscriber3.prototype.unsubscribe = function() {
      if (!this.closed) {
        this.isStopped = true;
        _super.prototype.unsubscribe.call(this);
        this.destination = null;
      }
    };
    Subscriber3.prototype._next = function(value) {
      this.destination.next(value);
    };
    Subscriber3.prototype._error = function(err) {
      try {
        this.destination.error(err);
      } finally {
        this.unsubscribe();
      }
    };
    Subscriber3.prototype._complete = function() {
      try {
        this.destination.complete();
      } finally {
        this.unsubscribe();
      }
    };
    return Subscriber3;
  }(Subscription_12.Subscription);
  exports.Subscriber = Subscriber2;
  var _bind = Function.prototype.bind;
  function bind(fn, thisArg) {
    return _bind.call(fn, thisArg);
  }
  var ConsumerObserver = function() {
    function ConsumerObserver2(partialObserver) {
      this.partialObserver = partialObserver;
    }
    ConsumerObserver2.prototype.next = function(value) {
      var partialObserver = this.partialObserver;
      if (partialObserver.next) {
        try {
          partialObserver.next(value);
        } catch (error2) {
          handleUnhandledError(error2);
        }
      }
    };
    ConsumerObserver2.prototype.error = function(err) {
      var partialObserver = this.partialObserver;
      if (partialObserver.error) {
        try {
          partialObserver.error(err);
        } catch (error2) {
          handleUnhandledError(error2);
        }
      } else {
        handleUnhandledError(err);
      }
    };
    ConsumerObserver2.prototype.complete = function() {
      var partialObserver = this.partialObserver;
      if (partialObserver.complete) {
        try {
          partialObserver.complete();
        } catch (error2) {
          handleUnhandledError(error2);
        }
      }
    };
    return ConsumerObserver2;
  }();
  var SafeSubscriber = function(_super) {
    __extends2(SafeSubscriber2, _super);
    function SafeSubscriber2(observerOrNext, error2, complete) {
      var _this = _super.call(this) || this;
      var partialObserver;
      if (isFunction_12.isFunction(observerOrNext) || !observerOrNext) {
        partialObserver = {
          next: observerOrNext !== null && observerOrNext !== void 0 ? observerOrNext : void 0,
          error: error2 !== null && error2 !== void 0 ? error2 : void 0,
          complete: complete !== null && complete !== void 0 ? complete : void 0
        };
      } else {
        var context_1;
        if (_this && config_12.config.useDeprecatedNextContext) {
          context_1 = Object.create(observerOrNext);
          context_1.unsubscribe = function() {
            return _this.unsubscribe();
          };
          partialObserver = {
            next: observerOrNext.next && bind(observerOrNext.next, context_1),
            error: observerOrNext.error && bind(observerOrNext.error, context_1),
            complete: observerOrNext.complete && bind(observerOrNext.complete, context_1)
          };
        } else {
          partialObserver = observerOrNext;
        }
      }
      _this.destination = new ConsumerObserver(partialObserver);
      return _this;
    }
    return SafeSubscriber2;
  }(Subscriber2);
  exports.SafeSubscriber = SafeSubscriber;
  function handleUnhandledError(error2) {
    if (config_12.config.useDeprecatedSynchronousErrorHandling) {
      errorContext_12.captureError(error2);
    } else {
      reportUnhandledError_12.reportUnhandledError(error2);
    }
  }
  function defaultErrorHandler(err) {
    throw err;
  }
  function handleStoppedNotification(notification, subscriber) {
    var onStoppedNotification = config_12.config.onStoppedNotification;
    onStoppedNotification && timeoutProvider_12.timeoutProvider.setTimeout(function() {
      return onStoppedNotification(notification, subscriber);
    });
  }
  exports.EMPTY_OBSERVER = {
    closed: true,
    next: noop_12.noop,
    error: defaultErrorHandler,
    complete: noop_12.noop
  };
})(Subscriber);
var observable = {};
Object.defineProperty(observable, "__esModule", { value: true });
observable.observable = void 0;
observable.observable = function() {
  return typeof Symbol === "function" && Symbol.observable || "@@observable";
}();
var pipe$1 = {};
var identity$1 = {};
Object.defineProperty(identity$1, "__esModule", { value: true });
identity$1.identity = void 0;
function identity(x) {
  return x;
}
identity$1.identity = identity;
Object.defineProperty(pipe$1, "__esModule", { value: true });
pipe$1.pipeFromArray = pipe$1.pipe = void 0;
var identity_1$e = identity$1;
function pipe() {
  var fns = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    fns[_i] = arguments[_i];
  }
  return pipeFromArray(fns);
}
pipe$1.pipe = pipe;
function pipeFromArray(fns) {
  if (fns.length === 0) {
    return identity_1$e.identity;
  }
  if (fns.length === 1) {
    return fns[0];
  }
  return function piped(input) {
    return fns.reduce(function(prev, fn) {
      return fn(prev);
    }, input);
  };
}
pipe$1.pipeFromArray = pipeFromArray;
Object.defineProperty(Observable$1, "__esModule", { value: true });
Observable$1.Observable = void 0;
var Subscriber_1$3 = Subscriber;
var Subscription_1$8 = Subscription$1;
var observable_1$2 = observable;
var pipe_1$2 = pipe$1;
var config_1 = config;
var isFunction_1$o = isFunction$1;
var errorContext_1$1 = errorContext$1;
var Observable = function() {
  function Observable2(subscribe) {
    if (subscribe) {
      this._subscribe = subscribe;
    }
  }
  Observable2.prototype.lift = function(operator) {
    var observable2 = new Observable2();
    observable2.source = this;
    observable2.operator = operator;
    return observable2;
  };
  Observable2.prototype.subscribe = function(observerOrNext, error2, complete) {
    var _this = this;
    var subscriber = isSubscriber(observerOrNext) ? observerOrNext : new Subscriber_1$3.SafeSubscriber(observerOrNext, error2, complete);
    errorContext_1$1.errorContext(function() {
      var _a2 = _this, operator = _a2.operator, source = _a2.source;
      subscriber.add(operator ? operator.call(subscriber, source) : source ? _this._subscribe(subscriber) : _this._trySubscribe(subscriber));
    });
    return subscriber;
  };
  Observable2.prototype._trySubscribe = function(sink) {
    try {
      return this._subscribe(sink);
    } catch (err) {
      sink.error(err);
    }
  };
  Observable2.prototype.forEach = function(next, promiseCtor) {
    var _this = this;
    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function(resolve, reject) {
      var subscriber = new Subscriber_1$3.SafeSubscriber({
        next: function(value) {
          try {
            next(value);
          } catch (err) {
            reject(err);
            subscriber.unsubscribe();
          }
        },
        error: reject,
        complete: resolve
      });
      _this.subscribe(subscriber);
    });
  };
  Observable2.prototype._subscribe = function(subscriber) {
    var _a2;
    return (_a2 = this.source) === null || _a2 === void 0 ? void 0 : _a2.subscribe(subscriber);
  };
  Observable2.prototype[observable_1$2.observable] = function() {
    return this;
  };
  Observable2.prototype.pipe = function() {
    var operations = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      operations[_i] = arguments[_i];
    }
    return pipe_1$2.pipeFromArray(operations)(this);
  };
  Observable2.prototype.toPromise = function(promiseCtor) {
    var _this = this;
    promiseCtor = getPromiseCtor(promiseCtor);
    return new promiseCtor(function(resolve, reject) {
      var value;
      _this.subscribe(function(x) {
        return value = x;
      }, function(err) {
        return reject(err);
      }, function() {
        return resolve(value);
      });
    });
  };
  Observable2.create = function(subscribe) {
    return new Observable2(subscribe);
  };
  return Observable2;
}();
Observable$1.Observable = Observable;
function getPromiseCtor(promiseCtor) {
  var _a2;
  return (_a2 = promiseCtor !== null && promiseCtor !== void 0 ? promiseCtor : config_1.config.Promise) !== null && _a2 !== void 0 ? _a2 : Promise;
}
function isObserver(value) {
  return value && isFunction_1$o.isFunction(value.next) && isFunction_1$o.isFunction(value.error) && isFunction_1$o.isFunction(value.complete);
}
function isSubscriber(value) {
  return value && value instanceof Subscriber_1$3.Subscriber || isObserver(value) && Subscription_1$8.isSubscription(value);
}
var ConnectableObservable$1 = {};
var refCount$1 = {};
var lift = {};
Object.defineProperty(lift, "__esModule", { value: true });
lift.operate = lift.hasLift = void 0;
var isFunction_1$n = isFunction$1;
function hasLift(source) {
  return isFunction_1$n.isFunction(source === null || source === void 0 ? void 0 : source.lift);
}
lift.hasLift = hasLift;
function operate(init) {
  return function(source) {
    if (hasLift(source)) {
      return source.lift(function(liftedSource) {
        try {
          return init(liftedSource, this);
        } catch (err) {
          this.error(err);
        }
      });
    }
    throw new TypeError("Unable to lift unknown Observable type");
  };
}
lift.operate = operate;
var OperatorSubscriber$1 = {};
var __extends$f = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(OperatorSubscriber$1, "__esModule", { value: true });
OperatorSubscriber$1.OperatorSubscriber = OperatorSubscriber$1.createOperatorSubscriber = void 0;
var Subscriber_1$2 = Subscriber;
function createOperatorSubscriber(destination, onNext, onComplete, onError, onFinalize) {
  return new OperatorSubscriber(destination, onNext, onComplete, onError, onFinalize);
}
OperatorSubscriber$1.createOperatorSubscriber = createOperatorSubscriber;
var OperatorSubscriber = function(_super) {
  __extends$f(OperatorSubscriber2, _super);
  function OperatorSubscriber2(destination, onNext, onComplete, onError, onFinalize, shouldUnsubscribe) {
    var _this = _super.call(this, destination) || this;
    _this.onFinalize = onFinalize;
    _this.shouldUnsubscribe = shouldUnsubscribe;
    _this._next = onNext ? function(value) {
      try {
        onNext(value);
      } catch (err) {
        destination.error(err);
      }
    } : _super.prototype._next;
    _this._error = onError ? function(err) {
      try {
        onError(err);
      } catch (err2) {
        destination.error(err2);
      } finally {
        this.unsubscribe();
      }
    } : _super.prototype._error;
    _this._complete = onComplete ? function() {
      try {
        onComplete();
      } catch (err) {
        destination.error(err);
      } finally {
        this.unsubscribe();
      }
    } : _super.prototype._complete;
    return _this;
  }
  OperatorSubscriber2.prototype.unsubscribe = function() {
    var _a2;
    if (!this.shouldUnsubscribe || this.shouldUnsubscribe()) {
      var closed_1 = this.closed;
      _super.prototype.unsubscribe.call(this);
      !closed_1 && ((_a2 = this.onFinalize) === null || _a2 === void 0 ? void 0 : _a2.call(this));
    }
  };
  return OperatorSubscriber2;
}(Subscriber_1$2.Subscriber);
OperatorSubscriber$1.OperatorSubscriber = OperatorSubscriber;
Object.defineProperty(refCount$1, "__esModule", { value: true });
refCount$1.refCount = void 0;
var lift_1$14 = lift;
var OperatorSubscriber_1$V = OperatorSubscriber$1;
function refCount() {
  return lift_1$14.operate(function(source, subscriber) {
    var connection = null;
    source._refCount++;
    var refCounter = OperatorSubscriber_1$V.createOperatorSubscriber(subscriber, void 0, void 0, void 0, function() {
      if (!source || source._refCount <= 0 || 0 < --source._refCount) {
        connection = null;
        return;
      }
      var sharedConnection = source._connection;
      var conn = connection;
      connection = null;
      if (sharedConnection && (!conn || sharedConnection === conn)) {
        sharedConnection.unsubscribe();
      }
      subscriber.unsubscribe();
    });
    source.subscribe(refCounter);
    if (!refCounter.closed) {
      connection = source.connect();
    }
  });
}
refCount$1.refCount = refCount;
var __extends$e = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(ConnectableObservable$1, "__esModule", { value: true });
ConnectableObservable$1.ConnectableObservable = void 0;
var Observable_1$n = Observable$1;
var Subscription_1$7 = Subscription$1;
var refCount_1 = refCount$1;
var OperatorSubscriber_1$U = OperatorSubscriber$1;
var lift_1$13 = lift;
var ConnectableObservable = function(_super) {
  __extends$e(ConnectableObservable2, _super);
  function ConnectableObservable2(source, subjectFactory) {
    var _this = _super.call(this) || this;
    _this.source = source;
    _this.subjectFactory = subjectFactory;
    _this._subject = null;
    _this._refCount = 0;
    _this._connection = null;
    if (lift_1$13.hasLift(source)) {
      _this.lift = source.lift;
    }
    return _this;
  }
  ConnectableObservable2.prototype._subscribe = function(subscriber) {
    return this.getSubject().subscribe(subscriber);
  };
  ConnectableObservable2.prototype.getSubject = function() {
    var subject = this._subject;
    if (!subject || subject.isStopped) {
      this._subject = this.subjectFactory();
    }
    return this._subject;
  };
  ConnectableObservable2.prototype._teardown = function() {
    this._refCount = 0;
    var _connection = this._connection;
    this._subject = this._connection = null;
    _connection === null || _connection === void 0 ? void 0 : _connection.unsubscribe();
  };
  ConnectableObservable2.prototype.connect = function() {
    var _this = this;
    var connection = this._connection;
    if (!connection) {
      connection = this._connection = new Subscription_1$7.Subscription();
      var subject_1 = this.getSubject();
      connection.add(this.source.subscribe(OperatorSubscriber_1$U.createOperatorSubscriber(subject_1, void 0, function() {
        _this._teardown();
        subject_1.complete();
      }, function(err) {
        _this._teardown();
        subject_1.error(err);
      }, function() {
        return _this._teardown();
      })));
      if (connection.closed) {
        this._connection = null;
        connection = Subscription_1$7.Subscription.EMPTY;
      }
    }
    return connection;
  };
  ConnectableObservable2.prototype.refCount = function() {
    return refCount_1.refCount()(this);
  };
  return ConnectableObservable2;
}(Observable_1$n.Observable);
ConnectableObservable$1.ConnectableObservable = ConnectableObservable;
var animationFrames$1 = {};
var performanceTimestampProvider = {};
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.performanceTimestampProvider = void 0;
  exports.performanceTimestampProvider = {
    now: function() {
      return (exports.performanceTimestampProvider.delegate || performance).now();
    },
    delegate: void 0
  };
})(performanceTimestampProvider);
var animationFrameProvider = {};
(function(exports) {
  var __read2 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m)
      return o;
    var i = m.call(o), r, ar = [], e;
    try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
        ar.push(r.value);
    } catch (error2) {
      e = { error: error2 };
    } finally {
      try {
        if (r && !r.done && (m = i["return"]))
          m.call(i);
      } finally {
        if (e)
          throw e.error;
      }
    }
    return ar;
  };
  var __spreadArray2 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
    for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
      to[j] = from2[i];
    return to;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.animationFrameProvider = void 0;
  var Subscription_12 = Subscription$1;
  exports.animationFrameProvider = {
    schedule: function(callback) {
      var request = requestAnimationFrame;
      var cancel = cancelAnimationFrame;
      var delegate = exports.animationFrameProvider.delegate;
      if (delegate) {
        request = delegate.requestAnimationFrame;
        cancel = delegate.cancelAnimationFrame;
      }
      var handle = request(function(timestamp2) {
        cancel = void 0;
        callback(timestamp2);
      });
      return new Subscription_12.Subscription(function() {
        return cancel === null || cancel === void 0 ? void 0 : cancel(handle);
      });
    },
    requestAnimationFrame: function() {
      var args2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args2[_i] = arguments[_i];
      }
      var delegate = exports.animationFrameProvider.delegate;
      return ((delegate === null || delegate === void 0 ? void 0 : delegate.requestAnimationFrame) || requestAnimationFrame).apply(void 0, __spreadArray2([], __read2(args2)));
    },
    cancelAnimationFrame: function() {
      var args2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args2[_i] = arguments[_i];
      }
      var delegate = exports.animationFrameProvider.delegate;
      return ((delegate === null || delegate === void 0 ? void 0 : delegate.cancelAnimationFrame) || cancelAnimationFrame).apply(void 0, __spreadArray2([], __read2(args2)));
    },
    delegate: void 0
  };
})(animationFrameProvider);
Object.defineProperty(animationFrames$1, "__esModule", { value: true });
animationFrames$1.animationFrames = void 0;
var Observable_1$m = Observable$1;
var performanceTimestampProvider_1 = performanceTimestampProvider;
var animationFrameProvider_1$1 = animationFrameProvider;
function animationFrames(timestampProvider) {
  return timestampProvider ? animationFramesFactory(timestampProvider) : DEFAULT_ANIMATION_FRAMES;
}
animationFrames$1.animationFrames = animationFrames;
function animationFramesFactory(timestampProvider) {
  return new Observable_1$m.Observable(function(subscriber) {
    var provider = timestampProvider || performanceTimestampProvider_1.performanceTimestampProvider;
    var start = provider.now();
    var id = 0;
    var run = function() {
      if (!subscriber.closed) {
        id = animationFrameProvider_1$1.animationFrameProvider.requestAnimationFrame(function(timestamp2) {
          id = 0;
          var now = provider.now();
          subscriber.next({
            timestamp: timestampProvider ? now : timestamp2,
            elapsed: now - start
          });
          run();
        });
      }
    };
    run();
    return function() {
      if (id) {
        animationFrameProvider_1$1.animationFrameProvider.cancelAnimationFrame(id);
      }
    };
  });
}
var DEFAULT_ANIMATION_FRAMES = animationFramesFactory();
var Subject$1 = {};
var ObjectUnsubscribedError = {};
Object.defineProperty(ObjectUnsubscribedError, "__esModule", { value: true });
ObjectUnsubscribedError.ObjectUnsubscribedError = void 0;
var createErrorClass_1$4 = createErrorClass$1;
ObjectUnsubscribedError.ObjectUnsubscribedError = createErrorClass_1$4.createErrorClass(function(_super) {
  return function ObjectUnsubscribedErrorImpl() {
    _super(this);
    this.name = "ObjectUnsubscribedError";
    this.message = "object unsubscribed";
  };
});
var __extends$d = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
var __values$7 = commonjsGlobal && commonjsGlobal.__values || function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(Subject$1, "__esModule", { value: true });
Subject$1.AnonymousSubject = Subject$1.Subject = void 0;
var Observable_1$l = Observable$1;
var Subscription_1$6 = Subscription$1;
var ObjectUnsubscribedError_1 = ObjectUnsubscribedError;
var arrRemove_1$6 = arrRemove$1;
var errorContext_1 = errorContext$1;
var Subject = function(_super) {
  __extends$d(Subject2, _super);
  function Subject2() {
    var _this = _super.call(this) || this;
    _this.closed = false;
    _this.currentObservers = null;
    _this.observers = [];
    _this.isStopped = false;
    _this.hasError = false;
    _this.thrownError = null;
    return _this;
  }
  Subject2.prototype.lift = function(operator) {
    var subject = new AnonymousSubject(this, this);
    subject.operator = operator;
    return subject;
  };
  Subject2.prototype._throwIfClosed = function() {
    if (this.closed) {
      throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
    }
  };
  Subject2.prototype.next = function(value) {
    var _this = this;
    errorContext_1.errorContext(function() {
      var e_1, _a2;
      _this._throwIfClosed();
      if (!_this.isStopped) {
        if (!_this.currentObservers) {
          _this.currentObservers = Array.from(_this.observers);
        }
        try {
          for (var _b = __values$7(_this.currentObservers), _c = _b.next(); !_c.done; _c = _b.next()) {
            var observer = _c.value;
            observer.next(value);
          }
        } catch (e_1_1) {
          e_1 = { error: e_1_1 };
        } finally {
          try {
            if (_c && !_c.done && (_a2 = _b.return))
              _a2.call(_b);
          } finally {
            if (e_1)
              throw e_1.error;
          }
        }
      }
    });
  };
  Subject2.prototype.error = function(err) {
    var _this = this;
    errorContext_1.errorContext(function() {
      _this._throwIfClosed();
      if (!_this.isStopped) {
        _this.hasError = _this.isStopped = true;
        _this.thrownError = err;
        var observers = _this.observers;
        while (observers.length) {
          observers.shift().error(err);
        }
      }
    });
  };
  Subject2.prototype.complete = function() {
    var _this = this;
    errorContext_1.errorContext(function() {
      _this._throwIfClosed();
      if (!_this.isStopped) {
        _this.isStopped = true;
        var observers = _this.observers;
        while (observers.length) {
          observers.shift().complete();
        }
      }
    });
  };
  Subject2.prototype.unsubscribe = function() {
    this.isStopped = this.closed = true;
    this.observers = this.currentObservers = null;
  };
  Object.defineProperty(Subject2.prototype, "observed", {
    get: function() {
      var _a2;
      return ((_a2 = this.observers) === null || _a2 === void 0 ? void 0 : _a2.length) > 0;
    },
    enumerable: false,
    configurable: true
  });
  Subject2.prototype._trySubscribe = function(subscriber) {
    this._throwIfClosed();
    return _super.prototype._trySubscribe.call(this, subscriber);
  };
  Subject2.prototype._subscribe = function(subscriber) {
    this._throwIfClosed();
    this._checkFinalizedStatuses(subscriber);
    return this._innerSubscribe(subscriber);
  };
  Subject2.prototype._innerSubscribe = function(subscriber) {
    var _this = this;
    var _a2 = this, hasError = _a2.hasError, isStopped = _a2.isStopped, observers = _a2.observers;
    if (hasError || isStopped) {
      return Subscription_1$6.EMPTY_SUBSCRIPTION;
    }
    this.currentObservers = null;
    observers.push(subscriber);
    return new Subscription_1$6.Subscription(function() {
      _this.currentObservers = null;
      arrRemove_1$6.arrRemove(observers, subscriber);
    });
  };
  Subject2.prototype._checkFinalizedStatuses = function(subscriber) {
    var _a2 = this, hasError = _a2.hasError, thrownError = _a2.thrownError, isStopped = _a2.isStopped;
    if (hasError) {
      subscriber.error(thrownError);
    } else if (isStopped) {
      subscriber.complete();
    }
  };
  Subject2.prototype.asObservable = function() {
    var observable2 = new Observable_1$l.Observable();
    observable2.source = this;
    return observable2;
  };
  Subject2.create = function(destination, source) {
    return new AnonymousSubject(destination, source);
  };
  return Subject2;
}(Observable_1$l.Observable);
Subject$1.Subject = Subject;
var AnonymousSubject = function(_super) {
  __extends$d(AnonymousSubject2, _super);
  function AnonymousSubject2(destination, source) {
    var _this = _super.call(this) || this;
    _this.destination = destination;
    _this.source = source;
    return _this;
  }
  AnonymousSubject2.prototype.next = function(value) {
    var _a2, _b;
    (_b = (_a2 = this.destination) === null || _a2 === void 0 ? void 0 : _a2.next) === null || _b === void 0 ? void 0 : _b.call(_a2, value);
  };
  AnonymousSubject2.prototype.error = function(err) {
    var _a2, _b;
    (_b = (_a2 = this.destination) === null || _a2 === void 0 ? void 0 : _a2.error) === null || _b === void 0 ? void 0 : _b.call(_a2, err);
  };
  AnonymousSubject2.prototype.complete = function() {
    var _a2, _b;
    (_b = (_a2 = this.destination) === null || _a2 === void 0 ? void 0 : _a2.complete) === null || _b === void 0 ? void 0 : _b.call(_a2);
  };
  AnonymousSubject2.prototype._subscribe = function(subscriber) {
    var _a2, _b;
    return (_b = (_a2 = this.source) === null || _a2 === void 0 ? void 0 : _a2.subscribe(subscriber)) !== null && _b !== void 0 ? _b : Subscription_1$6.EMPTY_SUBSCRIPTION;
  };
  return AnonymousSubject2;
}(Subject);
Subject$1.AnonymousSubject = AnonymousSubject;
var BehaviorSubject$1 = {};
var __extends$c = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(BehaviorSubject$1, "__esModule", { value: true });
BehaviorSubject$1.BehaviorSubject = void 0;
var Subject_1$e = Subject$1;
var BehaviorSubject = function(_super) {
  __extends$c(BehaviorSubject2, _super);
  function BehaviorSubject2(_value) {
    var _this = _super.call(this) || this;
    _this._value = _value;
    return _this;
  }
  Object.defineProperty(BehaviorSubject2.prototype, "value", {
    get: function() {
      return this.getValue();
    },
    enumerable: false,
    configurable: true
  });
  BehaviorSubject2.prototype._subscribe = function(subscriber) {
    var subscription = _super.prototype._subscribe.call(this, subscriber);
    !subscription.closed && subscriber.next(this._value);
    return subscription;
  };
  BehaviorSubject2.prototype.getValue = function() {
    var _a2 = this, hasError = _a2.hasError, thrownError = _a2.thrownError, _value = _a2._value;
    if (hasError) {
      throw thrownError;
    }
    this._throwIfClosed();
    return _value;
  };
  BehaviorSubject2.prototype.next = function(value) {
    _super.prototype.next.call(this, this._value = value);
  };
  return BehaviorSubject2;
}(Subject_1$e.Subject);
BehaviorSubject$1.BehaviorSubject = BehaviorSubject;
var ReplaySubject$1 = {};
var dateTimestampProvider = {};
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.dateTimestampProvider = void 0;
  exports.dateTimestampProvider = {
    now: function() {
      return (exports.dateTimestampProvider.delegate || Date).now();
    },
    delegate: void 0
  };
})(dateTimestampProvider);
var __extends$b = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(ReplaySubject$1, "__esModule", { value: true });
ReplaySubject$1.ReplaySubject = void 0;
var Subject_1$d = Subject$1;
var dateTimestampProvider_1$2 = dateTimestampProvider;
var ReplaySubject = function(_super) {
  __extends$b(ReplaySubject2, _super);
  function ReplaySubject2(_bufferSize, _windowTime, _timestampProvider) {
    if (_bufferSize === void 0) {
      _bufferSize = Infinity;
    }
    if (_windowTime === void 0) {
      _windowTime = Infinity;
    }
    if (_timestampProvider === void 0) {
      _timestampProvider = dateTimestampProvider_1$2.dateTimestampProvider;
    }
    var _this = _super.call(this) || this;
    _this._bufferSize = _bufferSize;
    _this._windowTime = _windowTime;
    _this._timestampProvider = _timestampProvider;
    _this._buffer = [];
    _this._infiniteTimeWindow = true;
    _this._infiniteTimeWindow = _windowTime === Infinity;
    _this._bufferSize = Math.max(1, _bufferSize);
    _this._windowTime = Math.max(1, _windowTime);
    return _this;
  }
  ReplaySubject2.prototype.next = function(value) {
    var _a2 = this, isStopped = _a2.isStopped, _buffer = _a2._buffer, _infiniteTimeWindow = _a2._infiniteTimeWindow, _timestampProvider = _a2._timestampProvider, _windowTime = _a2._windowTime;
    if (!isStopped) {
      _buffer.push(value);
      !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);
    }
    this._trimBuffer();
    _super.prototype.next.call(this, value);
  };
  ReplaySubject2.prototype._subscribe = function(subscriber) {
    this._throwIfClosed();
    this._trimBuffer();
    var subscription = this._innerSubscribe(subscriber);
    var _a2 = this, _infiniteTimeWindow = _a2._infiniteTimeWindow, _buffer = _a2._buffer;
    var copy = _buffer.slice();
    for (var i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {
      subscriber.next(copy[i]);
    }
    this._checkFinalizedStatuses(subscriber);
    return subscription;
  };
  ReplaySubject2.prototype._trimBuffer = function() {
    var _a2 = this, _bufferSize = _a2._bufferSize, _timestampProvider = _a2._timestampProvider, _buffer = _a2._buffer, _infiniteTimeWindow = _a2._infiniteTimeWindow;
    var adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;
    _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);
    if (!_infiniteTimeWindow) {
      var now = _timestampProvider.now();
      var last2 = 0;
      for (var i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {
        last2 = i;
      }
      last2 && _buffer.splice(0, last2 + 1);
    }
  };
  return ReplaySubject2;
}(Subject_1$d.Subject);
ReplaySubject$1.ReplaySubject = ReplaySubject;
var AsyncSubject$1 = {};
var __extends$a = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(AsyncSubject$1, "__esModule", { value: true });
AsyncSubject$1.AsyncSubject = void 0;
var Subject_1$c = Subject$1;
var AsyncSubject = function(_super) {
  __extends$a(AsyncSubject2, _super);
  function AsyncSubject2() {
    var _this = _super !== null && _super.apply(this, arguments) || this;
    _this._value = null;
    _this._hasValue = false;
    _this._isComplete = false;
    return _this;
  }
  AsyncSubject2.prototype._checkFinalizedStatuses = function(subscriber) {
    var _a2 = this, hasError = _a2.hasError, _hasValue = _a2._hasValue, _value = _a2._value, thrownError = _a2.thrownError, isStopped = _a2.isStopped, _isComplete = _a2._isComplete;
    if (hasError) {
      subscriber.error(thrownError);
    } else if (isStopped || _isComplete) {
      _hasValue && subscriber.next(_value);
      subscriber.complete();
    }
  };
  AsyncSubject2.prototype.next = function(value) {
    if (!this.isStopped) {
      this._value = value;
      this._hasValue = true;
    }
  };
  AsyncSubject2.prototype.complete = function() {
    var _a2 = this, _hasValue = _a2._hasValue, _value = _a2._value, _isComplete = _a2._isComplete;
    if (!_isComplete) {
      this._isComplete = true;
      _hasValue && _super.prototype.next.call(this, _value);
      _super.prototype.complete.call(this);
    }
  };
  return AsyncSubject2;
}(Subject_1$c.Subject);
AsyncSubject$1.AsyncSubject = AsyncSubject;
var asap = {};
var AsapAction$1 = {};
var AsyncAction$1 = {};
var Action$1 = {};
var __extends$9 = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(Action$1, "__esModule", { value: true });
Action$1.Action = void 0;
var Subscription_1$5 = Subscription$1;
var Action = function(_super) {
  __extends$9(Action2, _super);
  function Action2(scheduler, work) {
    return _super.call(this) || this;
  }
  Action2.prototype.schedule = function(state2, delay2) {
    return this;
  };
  return Action2;
}(Subscription_1$5.Subscription);
Action$1.Action = Action;
var intervalProvider = {};
(function(exports) {
  var __read2 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m)
      return o;
    var i = m.call(o), r, ar = [], e;
    try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
        ar.push(r.value);
    } catch (error2) {
      e = { error: error2 };
    } finally {
      try {
        if (r && !r.done && (m = i["return"]))
          m.call(i);
      } finally {
        if (e)
          throw e.error;
      }
    }
    return ar;
  };
  var __spreadArray2 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
    for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
      to[j] = from2[i];
    return to;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.intervalProvider = void 0;
  exports.intervalProvider = {
    setInterval: function(handler, timeout2) {
      var args2 = [];
      for (var _i = 2; _i < arguments.length; _i++) {
        args2[_i - 2] = arguments[_i];
      }
      var delegate = exports.intervalProvider.delegate;
      if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {
        return delegate.setInterval.apply(delegate, __spreadArray2([handler, timeout2], __read2(args2)));
      }
      return setInterval.apply(void 0, __spreadArray2([handler, timeout2], __read2(args2)));
    },
    clearInterval: function(handle) {
      var delegate = exports.intervalProvider.delegate;
      return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);
    },
    delegate: void 0
  };
})(intervalProvider);
var __extends$8 = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(AsyncAction$1, "__esModule", { value: true });
AsyncAction$1.AsyncAction = void 0;
var Action_1 = Action$1;
var intervalProvider_1 = intervalProvider;
var arrRemove_1$5 = arrRemove$1;
var AsyncAction = function(_super) {
  __extends$8(AsyncAction2, _super);
  function AsyncAction2(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;
    _this.scheduler = scheduler;
    _this.work = work;
    _this.pending = false;
    return _this;
  }
  AsyncAction2.prototype.schedule = function(state2, delay2) {
    var _a2;
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (this.closed) {
      return this;
    }
    this.state = state2;
    var id = this.id;
    var scheduler = this.scheduler;
    if (id != null) {
      this.id = this.recycleAsyncId(scheduler, id, delay2);
    }
    this.pending = true;
    this.delay = delay2;
    this.id = (_a2 = this.id) !== null && _a2 !== void 0 ? _a2 : this.requestAsyncId(scheduler, this.id, delay2);
    return this;
  };
  AsyncAction2.prototype.requestAsyncId = function(scheduler, _id, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    return intervalProvider_1.intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay2);
  };
  AsyncAction2.prototype.recycleAsyncId = function(_scheduler, id, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (delay2 != null && this.delay === delay2 && this.pending === false) {
      return id;
    }
    if (id != null) {
      intervalProvider_1.intervalProvider.clearInterval(id);
    }
    return void 0;
  };
  AsyncAction2.prototype.execute = function(state2, delay2) {
    if (this.closed) {
      return new Error("executing a cancelled action");
    }
    this.pending = false;
    var error2 = this._execute(state2, delay2);
    if (error2) {
      return error2;
    } else if (this.pending === false && this.id != null) {
      this.id = this.recycleAsyncId(this.scheduler, this.id, null);
    }
  };
  AsyncAction2.prototype._execute = function(state2, _delay) {
    var errored = false;
    var errorValue;
    try {
      this.work(state2);
    } catch (e) {
      errored = true;
      errorValue = e ? e : new Error("Scheduled action threw falsy error");
    }
    if (errored) {
      this.unsubscribe();
      return errorValue;
    }
  };
  AsyncAction2.prototype.unsubscribe = function() {
    if (!this.closed) {
      var _a2 = this, id = _a2.id, scheduler = _a2.scheduler;
      var actions = scheduler.actions;
      this.work = this.state = this.scheduler = null;
      this.pending = false;
      arrRemove_1$5.arrRemove(actions, this);
      if (id != null) {
        this.id = this.recycleAsyncId(scheduler, id, null);
      }
      this.delay = null;
      _super.prototype.unsubscribe.call(this);
    }
  };
  return AsyncAction2;
}(Action_1.Action);
AsyncAction$1.AsyncAction = AsyncAction;
var immediateProvider = {};
var Immediate = {};
Object.defineProperty(Immediate, "__esModule", { value: true });
Immediate.TestTools = Immediate.Immediate = void 0;
var nextHandle = 1;
var resolved;
var activeHandles = {};
function findAndClearHandle(handle) {
  if (handle in activeHandles) {
    delete activeHandles[handle];
    return true;
  }
  return false;
}
Immediate.Immediate = {
  setImmediate: function(cb) {
    var handle = nextHandle++;
    activeHandles[handle] = true;
    if (!resolved) {
      resolved = Promise.resolve();
    }
    resolved.then(function() {
      return findAndClearHandle(handle) && cb();
    });
    return handle;
  },
  clearImmediate: function(handle) {
    findAndClearHandle(handle);
  }
};
Immediate.TestTools = {
  pending: function() {
    return Object.keys(activeHandles).length;
  }
};
(function(exports) {
  var __read2 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m)
      return o;
    var i = m.call(o), r, ar = [], e;
    try {
      while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
        ar.push(r.value);
    } catch (error2) {
      e = { error: error2 };
    } finally {
      try {
        if (r && !r.done && (m = i["return"]))
          m.call(i);
      } finally {
        if (e)
          throw e.error;
      }
    }
    return ar;
  };
  var __spreadArray2 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
    for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
      to[j] = from2[i];
    return to;
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.immediateProvider = void 0;
  var Immediate_1 = Immediate;
  var setImmediate = Immediate_1.Immediate.setImmediate, clearImmediate = Immediate_1.Immediate.clearImmediate;
  exports.immediateProvider = {
    setImmediate: function() {
      var args2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args2[_i] = arguments[_i];
      }
      var delegate = exports.immediateProvider.delegate;
      return ((delegate === null || delegate === void 0 ? void 0 : delegate.setImmediate) || setImmediate).apply(void 0, __spreadArray2([], __read2(args2)));
    },
    clearImmediate: function(handle) {
      var delegate = exports.immediateProvider.delegate;
      return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearImmediate) || clearImmediate)(handle);
    },
    delegate: void 0
  };
})(immediateProvider);
var __extends$7 = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(AsapAction$1, "__esModule", { value: true });
AsapAction$1.AsapAction = void 0;
var AsyncAction_1$3 = AsyncAction$1;
var immediateProvider_1 = immediateProvider;
var AsapAction = function(_super) {
  __extends$7(AsapAction2, _super);
  function AsapAction2(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;
    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }
  AsapAction2.prototype.requestAsyncId = function(scheduler, id, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (delay2 !== null && delay2 > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay2);
    }
    scheduler.actions.push(this);
    return scheduler._scheduled || (scheduler._scheduled = immediateProvider_1.immediateProvider.setImmediate(scheduler.flush.bind(scheduler, void 0)));
  };
  AsapAction2.prototype.recycleAsyncId = function(scheduler, id, delay2) {
    var _a2;
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (delay2 != null ? delay2 > 0 : this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay2);
    }
    var actions = scheduler.actions;
    if (id != null && ((_a2 = actions[actions.length - 1]) === null || _a2 === void 0 ? void 0 : _a2.id) !== id) {
      immediateProvider_1.immediateProvider.clearImmediate(id);
      if (scheduler._scheduled === id) {
        scheduler._scheduled = void 0;
      }
    }
    return void 0;
  };
  return AsapAction2;
}(AsyncAction_1$3.AsyncAction);
AsapAction$1.AsapAction = AsapAction;
var AsapScheduler$1 = {};
var AsyncScheduler$1 = {};
var Scheduler$1 = {};
Object.defineProperty(Scheduler$1, "__esModule", { value: true });
Scheduler$1.Scheduler = void 0;
var dateTimestampProvider_1$1 = dateTimestampProvider;
var Scheduler = function() {
  function Scheduler2(schedulerActionCtor, now) {
    if (now === void 0) {
      now = Scheduler2.now;
    }
    this.schedulerActionCtor = schedulerActionCtor;
    this.now = now;
  }
  Scheduler2.prototype.schedule = function(work, delay2, state2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    return new this.schedulerActionCtor(this, work).schedule(state2, delay2);
  };
  Scheduler2.now = dateTimestampProvider_1$1.dateTimestampProvider.now;
  return Scheduler2;
}();
Scheduler$1.Scheduler = Scheduler;
var __extends$6 = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(AsyncScheduler$1, "__esModule", { value: true });
AsyncScheduler$1.AsyncScheduler = void 0;
var Scheduler_1 = Scheduler$1;
var AsyncScheduler = function(_super) {
  __extends$6(AsyncScheduler2, _super);
  function AsyncScheduler2(SchedulerAction, now) {
    if (now === void 0) {
      now = Scheduler_1.Scheduler.now;
    }
    var _this = _super.call(this, SchedulerAction, now) || this;
    _this.actions = [];
    _this._active = false;
    return _this;
  }
  AsyncScheduler2.prototype.flush = function(action) {
    var actions = this.actions;
    if (this._active) {
      actions.push(action);
      return;
    }
    var error2;
    this._active = true;
    do {
      if (error2 = action.execute(action.state, action.delay)) {
        break;
      }
    } while (action = actions.shift());
    this._active = false;
    if (error2) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }
      throw error2;
    }
  };
  return AsyncScheduler2;
}(Scheduler_1.Scheduler);
AsyncScheduler$1.AsyncScheduler = AsyncScheduler;
var __extends$5 = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(AsapScheduler$1, "__esModule", { value: true });
AsapScheduler$1.AsapScheduler = void 0;
var AsyncScheduler_1$3 = AsyncScheduler$1;
var AsapScheduler = function(_super) {
  __extends$5(AsapScheduler2, _super);
  function AsapScheduler2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  AsapScheduler2.prototype.flush = function(action) {
    this._active = true;
    var flushId = this._scheduled;
    this._scheduled = void 0;
    var actions = this.actions;
    var error2;
    action = action || actions.shift();
    do {
      if (error2 = action.execute(action.state, action.delay)) {
        break;
      }
    } while ((action = actions[0]) && action.id === flushId && actions.shift());
    this._active = false;
    if (error2) {
      while ((action = actions[0]) && action.id === flushId && actions.shift()) {
        action.unsubscribe();
      }
      throw error2;
    }
  };
  return AsapScheduler2;
}(AsyncScheduler_1$3.AsyncScheduler);
AsapScheduler$1.AsapScheduler = AsapScheduler;
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.asap = exports.asapScheduler = void 0;
  var AsapAction_1 = AsapAction$1;
  var AsapScheduler_1 = AsapScheduler$1;
  exports.asapScheduler = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);
  exports.asap = exports.asapScheduler;
})(asap);
var async = {};
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.async = exports.asyncScheduler = void 0;
  var AsyncAction_12 = AsyncAction$1;
  var AsyncScheduler_12 = AsyncScheduler$1;
  exports.asyncScheduler = new AsyncScheduler_12.AsyncScheduler(AsyncAction_12.AsyncAction);
  exports.async = exports.asyncScheduler;
})(async);
var queue$1 = {};
var QueueAction$1 = {};
var __extends$4 = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(QueueAction$1, "__esModule", { value: true });
QueueAction$1.QueueAction = void 0;
var AsyncAction_1$2 = AsyncAction$1;
var QueueAction = function(_super) {
  __extends$4(QueueAction2, _super);
  function QueueAction2(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;
    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }
  QueueAction2.prototype.schedule = function(state2, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (delay2 > 0) {
      return _super.prototype.schedule.call(this, state2, delay2);
    }
    this.delay = delay2;
    this.state = state2;
    this.scheduler.flush(this);
    return this;
  };
  QueueAction2.prototype.execute = function(state2, delay2) {
    return delay2 > 0 || this.closed ? _super.prototype.execute.call(this, state2, delay2) : this._execute(state2, delay2);
  };
  QueueAction2.prototype.requestAsyncId = function(scheduler, id, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (delay2 != null && delay2 > 0 || delay2 == null && this.delay > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay2);
    }
    scheduler.flush(this);
    return 0;
  };
  return QueueAction2;
}(AsyncAction_1$2.AsyncAction);
QueueAction$1.QueueAction = QueueAction;
var QueueScheduler$1 = {};
var __extends$3 = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(QueueScheduler$1, "__esModule", { value: true });
QueueScheduler$1.QueueScheduler = void 0;
var AsyncScheduler_1$2 = AsyncScheduler$1;
var QueueScheduler = function(_super) {
  __extends$3(QueueScheduler2, _super);
  function QueueScheduler2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  return QueueScheduler2;
}(AsyncScheduler_1$2.AsyncScheduler);
QueueScheduler$1.QueueScheduler = QueueScheduler;
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.queue = exports.queueScheduler = void 0;
  var QueueAction_1 = QueueAction$1;
  var QueueScheduler_1 = QueueScheduler$1;
  exports.queueScheduler = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);
  exports.queue = exports.queueScheduler;
})(queue$1);
var animationFrame = {};
var AnimationFrameAction$1 = {};
var __extends$2 = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(AnimationFrameAction$1, "__esModule", { value: true });
AnimationFrameAction$1.AnimationFrameAction = void 0;
var AsyncAction_1$1 = AsyncAction$1;
var animationFrameProvider_1 = animationFrameProvider;
var AnimationFrameAction = function(_super) {
  __extends$2(AnimationFrameAction2, _super);
  function AnimationFrameAction2(scheduler, work) {
    var _this = _super.call(this, scheduler, work) || this;
    _this.scheduler = scheduler;
    _this.work = work;
    return _this;
  }
  AnimationFrameAction2.prototype.requestAsyncId = function(scheduler, id, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (delay2 !== null && delay2 > 0) {
      return _super.prototype.requestAsyncId.call(this, scheduler, id, delay2);
    }
    scheduler.actions.push(this);
    return scheduler._scheduled || (scheduler._scheduled = animationFrameProvider_1.animationFrameProvider.requestAnimationFrame(function() {
      return scheduler.flush(void 0);
    }));
  };
  AnimationFrameAction2.prototype.recycleAsyncId = function(scheduler, id, delay2) {
    var _a2;
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (delay2 != null ? delay2 > 0 : this.delay > 0) {
      return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay2);
    }
    var actions = scheduler.actions;
    if (id != null && ((_a2 = actions[actions.length - 1]) === null || _a2 === void 0 ? void 0 : _a2.id) !== id) {
      animationFrameProvider_1.animationFrameProvider.cancelAnimationFrame(id);
      scheduler._scheduled = void 0;
    }
    return void 0;
  };
  return AnimationFrameAction2;
}(AsyncAction_1$1.AsyncAction);
AnimationFrameAction$1.AnimationFrameAction = AnimationFrameAction;
var AnimationFrameScheduler$1 = {};
var __extends$1 = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(AnimationFrameScheduler$1, "__esModule", { value: true });
AnimationFrameScheduler$1.AnimationFrameScheduler = void 0;
var AsyncScheduler_1$1 = AsyncScheduler$1;
var AnimationFrameScheduler = function(_super) {
  __extends$1(AnimationFrameScheduler2, _super);
  function AnimationFrameScheduler2() {
    return _super !== null && _super.apply(this, arguments) || this;
  }
  AnimationFrameScheduler2.prototype.flush = function(action) {
    this._active = true;
    var flushId = this._scheduled;
    this._scheduled = void 0;
    var actions = this.actions;
    var error2;
    action = action || actions.shift();
    do {
      if (error2 = action.execute(action.state, action.delay)) {
        break;
      }
    } while ((action = actions[0]) && action.id === flushId && actions.shift());
    this._active = false;
    if (error2) {
      while ((action = actions[0]) && action.id === flushId && actions.shift()) {
        action.unsubscribe();
      }
      throw error2;
    }
  };
  return AnimationFrameScheduler2;
}(AsyncScheduler_1$1.AsyncScheduler);
AnimationFrameScheduler$1.AnimationFrameScheduler = AnimationFrameScheduler;
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.animationFrame = exports.animationFrameScheduler = void 0;
  var AnimationFrameAction_1 = AnimationFrameAction$1;
  var AnimationFrameScheduler_1 = AnimationFrameScheduler$1;
  exports.animationFrameScheduler = new AnimationFrameScheduler_1.AnimationFrameScheduler(AnimationFrameAction_1.AnimationFrameAction);
  exports.animationFrame = exports.animationFrameScheduler;
})(animationFrame);
var VirtualTimeScheduler$1 = {};
var __extends = commonjsGlobal && commonjsGlobal.__extends || function() {
  var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
      d2.__proto__ = b2;
    } || function(d2, b2) {
      for (var p in b2)
        if (Object.prototype.hasOwnProperty.call(b2, p))
          d2[p] = b2[p];
    };
    return extendStatics(d, b);
  };
  return function(d, b) {
    if (typeof b !== "function" && b !== null)
      throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
    extendStatics(d, b);
    function __() {
      this.constructor = d;
    }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();
Object.defineProperty(VirtualTimeScheduler$1, "__esModule", { value: true });
VirtualTimeScheduler$1.VirtualAction = VirtualTimeScheduler$1.VirtualTimeScheduler = void 0;
var AsyncAction_1 = AsyncAction$1;
var Subscription_1$4 = Subscription$1;
var AsyncScheduler_1 = AsyncScheduler$1;
var VirtualTimeScheduler = function(_super) {
  __extends(VirtualTimeScheduler2, _super);
  function VirtualTimeScheduler2(schedulerActionCtor, maxFrames) {
    if (schedulerActionCtor === void 0) {
      schedulerActionCtor = VirtualAction;
    }
    if (maxFrames === void 0) {
      maxFrames = Infinity;
    }
    var _this = _super.call(this, schedulerActionCtor, function() {
      return _this.frame;
    }) || this;
    _this.maxFrames = maxFrames;
    _this.frame = 0;
    _this.index = -1;
    return _this;
  }
  VirtualTimeScheduler2.prototype.flush = function() {
    var _a2 = this, actions = _a2.actions, maxFrames = _a2.maxFrames;
    var error2;
    var action;
    while ((action = actions[0]) && action.delay <= maxFrames) {
      actions.shift();
      this.frame = action.delay;
      if (error2 = action.execute(action.state, action.delay)) {
        break;
      }
    }
    if (error2) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }
      throw error2;
    }
  };
  VirtualTimeScheduler2.frameTimeFactor = 10;
  return VirtualTimeScheduler2;
}(AsyncScheduler_1.AsyncScheduler);
VirtualTimeScheduler$1.VirtualTimeScheduler = VirtualTimeScheduler;
var VirtualAction = function(_super) {
  __extends(VirtualAction2, _super);
  function VirtualAction2(scheduler, work, index) {
    if (index === void 0) {
      index = scheduler.index += 1;
    }
    var _this = _super.call(this, scheduler, work) || this;
    _this.scheduler = scheduler;
    _this.work = work;
    _this.index = index;
    _this.active = true;
    _this.index = scheduler.index = index;
    return _this;
  }
  VirtualAction2.prototype.schedule = function(state2, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    if (Number.isFinite(delay2)) {
      if (!this.id) {
        return _super.prototype.schedule.call(this, state2, delay2);
      }
      this.active = false;
      var action = new VirtualAction2(this.scheduler, this.work);
      this.add(action);
      return action.schedule(state2, delay2);
    } else {
      return Subscription_1$4.Subscription.EMPTY;
    }
  };
  VirtualAction2.prototype.requestAsyncId = function(scheduler, id, delay2) {
    if (delay2 === void 0) {
      delay2 = 0;
    }
    this.delay = scheduler.frame + delay2;
    var actions = scheduler.actions;
    actions.push(this);
    actions.sort(VirtualAction2.sortActions);
    return 1;
  };
  VirtualAction2.prototype.recycleAsyncId = function(scheduler, id, delay2) {
    return void 0;
  };
  VirtualAction2.prototype._execute = function(state2, delay2) {
    if (this.active === true) {
      return _super.prototype._execute.call(this, state2, delay2);
    }
  };
  VirtualAction2.sortActions = function(a, b) {
    if (a.delay === b.delay) {
      if (a.index === b.index) {
        return 0;
      } else if (a.index > b.index) {
        return 1;
      } else {
        return -1;
      }
    } else if (a.delay > b.delay) {
      return 1;
    } else {
      return -1;
    }
  };
  return VirtualAction2;
}(AsyncAction_1.AsyncAction);
VirtualTimeScheduler$1.VirtualAction = VirtualAction;
var Notification = {};
var empty = {};
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.empty = exports.EMPTY = void 0;
  var Observable_12 = Observable$1;
  exports.EMPTY = new Observable_12.Observable(function(subscriber) {
    return subscriber.complete();
  });
  function empty2(scheduler) {
    return scheduler ? emptyScheduled(scheduler) : exports.EMPTY;
  }
  exports.empty = empty2;
  function emptyScheduled(scheduler) {
    return new Observable_12.Observable(function(subscriber) {
      return scheduler.schedule(function() {
        return subscriber.complete();
      });
    });
  }
})(empty);
var of$1 = {};
var args = {};
var isScheduler$1 = {};
Object.defineProperty(isScheduler$1, "__esModule", { value: true });
isScheduler$1.isScheduler = void 0;
var isFunction_1$m = isFunction$1;
function isScheduler(value) {
  return value && isFunction_1$m.isFunction(value.schedule);
}
isScheduler$1.isScheduler = isScheduler;
Object.defineProperty(args, "__esModule", { value: true });
args.popNumber = args.popScheduler = args.popResultSelector = void 0;
var isFunction_1$l = isFunction$1;
var isScheduler_1$3 = isScheduler$1;
function last$2(arr) {
  return arr[arr.length - 1];
}
function popResultSelector(args2) {
  return isFunction_1$l.isFunction(last$2(args2)) ? args2.pop() : void 0;
}
args.popResultSelector = popResultSelector;
function popScheduler(args2) {
  return isScheduler_1$3.isScheduler(last$2(args2)) ? args2.pop() : void 0;
}
args.popScheduler = popScheduler;
function popNumber(args2, defaultValue) {
  return typeof last$2(args2) === "number" ? args2.pop() : defaultValue;
}
args.popNumber = popNumber;
var from$1 = {};
var scheduled$1 = {};
var scheduleObservable$1 = {};
var innerFrom$1 = {};
var isArrayLike = {};
Object.defineProperty(isArrayLike, "__esModule", { value: true });
isArrayLike.isArrayLike = void 0;
isArrayLike.isArrayLike = function(x) {
  return x && typeof x.length === "number" && typeof x !== "function";
};
var isPromise$1 = {};
Object.defineProperty(isPromise$1, "__esModule", { value: true });
isPromise$1.isPromise = void 0;
var isFunction_1$k = isFunction$1;
function isPromise(value) {
  return isFunction_1$k.isFunction(value === null || value === void 0 ? void 0 : value.then);
}
isPromise$1.isPromise = isPromise;
var isInteropObservable$1 = {};
Object.defineProperty(isInteropObservable$1, "__esModule", { value: true });
isInteropObservable$1.isInteropObservable = void 0;
var observable_1$1 = observable;
var isFunction_1$j = isFunction$1;
function isInteropObservable(input) {
  return isFunction_1$j.isFunction(input[observable_1$1.observable]);
}
isInteropObservable$1.isInteropObservable = isInteropObservable;
var isAsyncIterable$1 = {};
Object.defineProperty(isAsyncIterable$1, "__esModule", { value: true });
isAsyncIterable$1.isAsyncIterable = void 0;
var isFunction_1$i = isFunction$1;
function isAsyncIterable(obj) {
  return Symbol.asyncIterator && isFunction_1$i.isFunction(obj === null || obj === void 0 ? void 0 : obj[Symbol.asyncIterator]);
}
isAsyncIterable$1.isAsyncIterable = isAsyncIterable;
var throwUnobservableError = {};
Object.defineProperty(throwUnobservableError, "__esModule", { value: true });
throwUnobservableError.createInvalidObservableTypeError = void 0;
function createInvalidObservableTypeError(input) {
  return new TypeError("You provided " + (input !== null && typeof input === "object" ? "an invalid object" : "'" + input + "'") + " where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.");
}
throwUnobservableError.createInvalidObservableTypeError = createInvalidObservableTypeError;
var isIterable$1 = {};
var iterator = {};
Object.defineProperty(iterator, "__esModule", { value: true });
iterator.iterator = iterator.getSymbolIterator = void 0;
function getSymbolIterator() {
  if (typeof Symbol !== "function" || !Symbol.iterator) {
    return "@@iterator";
  }
  return Symbol.iterator;
}
iterator.getSymbolIterator = getSymbolIterator;
iterator.iterator = getSymbolIterator();
Object.defineProperty(isIterable$1, "__esModule", { value: true });
isIterable$1.isIterable = void 0;
var iterator_1$1 = iterator;
var isFunction_1$h = isFunction$1;
function isIterable(input) {
  return isFunction_1$h.isFunction(input === null || input === void 0 ? void 0 : input[iterator_1$1.iterator]);
}
isIterable$1.isIterable = isIterable;
var isReadableStreamLike$1 = {};
var __generator$2 = commonjsGlobal && commonjsGlobal.__generator || function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __await = commonjsGlobal && commonjsGlobal.__await || function(v) {
  return this instanceof __await ? (this.v = v, this) : new __await(v);
};
var __asyncGenerator = commonjsGlobal && commonjsGlobal.__asyncGenerator || function(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var g = generator.apply(thisArg, _arguments || []), i, q = [];
  return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i;
  function verb(n) {
    if (g[n])
      i[n] = function(v) {
        return new Promise(function(a, b) {
          q.push([n, v, a, b]) > 1 || resume(n, v);
        });
      };
  }
  function resume(n, v) {
    try {
      step(g[n](v));
    } catch (e) {
      settle(q[0][3], e);
    }
  }
  function step(r) {
    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f, v) {
    if (f(v), q.shift(), q.length)
      resume(q[0][0], q[0][1]);
  }
};
Object.defineProperty(isReadableStreamLike$1, "__esModule", { value: true });
isReadableStreamLike$1.isReadableStreamLike = isReadableStreamLike$1.readableStreamLikeToAsyncGenerator = void 0;
var isFunction_1$g = isFunction$1;
function readableStreamLikeToAsyncGenerator(readableStream) {
  return __asyncGenerator(this, arguments, function readableStreamLikeToAsyncGenerator_1() {
    var reader, _a2, value, done;
    return __generator$2(this, function(_b) {
      switch (_b.label) {
        case 0:
          reader = readableStream.getReader();
          _b.label = 1;
        case 1:
          _b.trys.push([1, , 9, 10]);
          _b.label = 2;
        case 2:
          return [4, __await(reader.read())];
        case 3:
          _a2 = _b.sent(), value = _a2.value, done = _a2.done;
          if (!done)
            return [3, 5];
          return [4, __await(void 0)];
        case 4:
          return [2, _b.sent()];
        case 5:
          return [4, __await(value)];
        case 6:
          return [4, _b.sent()];
        case 7:
          _b.sent();
          return [3, 2];
        case 8:
          return [3, 10];
        case 9:
          reader.releaseLock();
          return [7];
        case 10:
          return [2];
      }
    });
  });
}
isReadableStreamLike$1.readableStreamLikeToAsyncGenerator = readableStreamLikeToAsyncGenerator;
function isReadableStreamLike(obj) {
  return isFunction_1$g.isFunction(obj === null || obj === void 0 ? void 0 : obj.getReader);
}
isReadableStreamLike$1.isReadableStreamLike = isReadableStreamLike;
var __awaiter = commonjsGlobal && commonjsGlobal.__awaiter || function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator$1 = commonjsGlobal && commonjsGlobal.__generator || function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
var __asyncValues = commonjsGlobal && commonjsGlobal.__asyncValues || function(o) {
  if (!Symbol.asyncIterator)
    throw new TypeError("Symbol.asyncIterator is not defined.");
  var m = o[Symbol.asyncIterator], i;
  return m ? m.call(o) : (o = typeof __values$6 === "function" ? __values$6(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function() {
    return this;
  }, i);
  function verb(n) {
    i[n] = o[n] && function(v) {
      return new Promise(function(resolve, reject) {
        v = o[n](v), settle(resolve, reject, v.done, v.value);
      });
    };
  }
  function settle(resolve, reject, d, v) {
    Promise.resolve(v).then(function(v2) {
      resolve({ value: v2, done: d });
    }, reject);
  }
};
var __values$6 = commonjsGlobal && commonjsGlobal.__values || function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(innerFrom$1, "__esModule", { value: true });
innerFrom$1.fromReadableStreamLike = innerFrom$1.fromAsyncIterable = innerFrom$1.fromIterable = innerFrom$1.fromPromise = innerFrom$1.fromArrayLike = innerFrom$1.fromInteropObservable = innerFrom$1.innerFrom = void 0;
var isArrayLike_1$2 = isArrayLike;
var isPromise_1$1 = isPromise$1;
var Observable_1$k = Observable$1;
var isInteropObservable_1$1 = isInteropObservable$1;
var isAsyncIterable_1$1 = isAsyncIterable$1;
var throwUnobservableError_1$1 = throwUnobservableError;
var isIterable_1$1 = isIterable$1;
var isReadableStreamLike_1$2 = isReadableStreamLike$1;
var isFunction_1$f = isFunction$1;
var reportUnhandledError_1 = reportUnhandledError$1;
var observable_1 = observable;
function innerFrom(input) {
  if (input instanceof Observable_1$k.Observable) {
    return input;
  }
  if (input != null) {
    if (isInteropObservable_1$1.isInteropObservable(input)) {
      return fromInteropObservable(input);
    }
    if (isArrayLike_1$2.isArrayLike(input)) {
      return fromArrayLike(input);
    }
    if (isPromise_1$1.isPromise(input)) {
      return fromPromise(input);
    }
    if (isAsyncIterable_1$1.isAsyncIterable(input)) {
      return fromAsyncIterable(input);
    }
    if (isIterable_1$1.isIterable(input)) {
      return fromIterable(input);
    }
    if (isReadableStreamLike_1$2.isReadableStreamLike(input)) {
      return fromReadableStreamLike(input);
    }
  }
  throw throwUnobservableError_1$1.createInvalidObservableTypeError(input);
}
innerFrom$1.innerFrom = innerFrom;
function fromInteropObservable(obj) {
  return new Observable_1$k.Observable(function(subscriber) {
    var obs = obj[observable_1.observable]();
    if (isFunction_1$f.isFunction(obs.subscribe)) {
      return obs.subscribe(subscriber);
    }
    throw new TypeError("Provided object does not correctly implement Symbol.observable");
  });
}
innerFrom$1.fromInteropObservable = fromInteropObservable;
function fromArrayLike(array2) {
  return new Observable_1$k.Observable(function(subscriber) {
    for (var i = 0; i < array2.length && !subscriber.closed; i++) {
      subscriber.next(array2[i]);
    }
    subscriber.complete();
  });
}
innerFrom$1.fromArrayLike = fromArrayLike;
function fromPromise(promise) {
  return new Observable_1$k.Observable(function(subscriber) {
    promise.then(function(value) {
      if (!subscriber.closed) {
        subscriber.next(value);
        subscriber.complete();
      }
    }, function(err) {
      return subscriber.error(err);
    }).then(null, reportUnhandledError_1.reportUnhandledError);
  });
}
innerFrom$1.fromPromise = fromPromise;
function fromIterable(iterable) {
  return new Observable_1$k.Observable(function(subscriber) {
    var e_1, _a2;
    try {
      for (var iterable_1 = __values$6(iterable), iterable_1_1 = iterable_1.next(); !iterable_1_1.done; iterable_1_1 = iterable_1.next()) {
        var value = iterable_1_1.value;
        subscriber.next(value);
        if (subscriber.closed) {
          return;
        }
      }
    } catch (e_1_1) {
      e_1 = { error: e_1_1 };
    } finally {
      try {
        if (iterable_1_1 && !iterable_1_1.done && (_a2 = iterable_1.return))
          _a2.call(iterable_1);
      } finally {
        if (e_1)
          throw e_1.error;
      }
    }
    subscriber.complete();
  });
}
innerFrom$1.fromIterable = fromIterable;
function fromAsyncIterable(asyncIterable) {
  return new Observable_1$k.Observable(function(subscriber) {
    process(asyncIterable, subscriber).catch(function(err) {
      return subscriber.error(err);
    });
  });
}
innerFrom$1.fromAsyncIterable = fromAsyncIterable;
function fromReadableStreamLike(readableStream) {
  return fromAsyncIterable(isReadableStreamLike_1$2.readableStreamLikeToAsyncGenerator(readableStream));
}
innerFrom$1.fromReadableStreamLike = fromReadableStreamLike;
function process(asyncIterable, subscriber) {
  var asyncIterable_1, asyncIterable_1_1;
  var e_2, _a2;
  return __awaiter(this, void 0, void 0, function() {
    var value, e_2_1;
    return __generator$1(this, function(_b) {
      switch (_b.label) {
        case 0:
          _b.trys.push([0, 5, 6, 11]);
          asyncIterable_1 = __asyncValues(asyncIterable);
          _b.label = 1;
        case 1:
          return [4, asyncIterable_1.next()];
        case 2:
          if (!(asyncIterable_1_1 = _b.sent(), !asyncIterable_1_1.done))
            return [3, 4];
          value = asyncIterable_1_1.value;
          subscriber.next(value);
          if (subscriber.closed) {
            return [2];
          }
          _b.label = 3;
        case 3:
          return [3, 1];
        case 4:
          return [3, 11];
        case 5:
          e_2_1 = _b.sent();
          e_2 = { error: e_2_1 };
          return [3, 11];
        case 6:
          _b.trys.push([6, , 9, 10]);
          if (!(asyncIterable_1_1 && !asyncIterable_1_1.done && (_a2 = asyncIterable_1.return)))
            return [3, 8];
          return [4, _a2.call(asyncIterable_1)];
        case 7:
          _b.sent();
          _b.label = 8;
        case 8:
          return [3, 10];
        case 9:
          if (e_2)
            throw e_2.error;
          return [7];
        case 10:
          return [7];
        case 11:
          subscriber.complete();
          return [2];
      }
    });
  });
}
var observeOn$1 = {};
var executeSchedule$1 = {};
Object.defineProperty(executeSchedule$1, "__esModule", { value: true });
executeSchedule$1.executeSchedule = void 0;
function executeSchedule(parentSubscription, scheduler, work, delay2, repeat2) {
  if (delay2 === void 0) {
    delay2 = 0;
  }
  if (repeat2 === void 0) {
    repeat2 = false;
  }
  var scheduleSubscription = scheduler.schedule(function() {
    work();
    if (repeat2) {
      parentSubscription.add(this.schedule(null, delay2));
    } else {
      this.unsubscribe();
    }
  }, delay2);
  parentSubscription.add(scheduleSubscription);
  if (!repeat2) {
    return scheduleSubscription;
  }
}
executeSchedule$1.executeSchedule = executeSchedule;
Object.defineProperty(observeOn$1, "__esModule", { value: true });
observeOn$1.observeOn = void 0;
var executeSchedule_1$6 = executeSchedule$1;
var lift_1$12 = lift;
var OperatorSubscriber_1$T = OperatorSubscriber$1;
function observeOn(scheduler, delay2) {
  if (delay2 === void 0) {
    delay2 = 0;
  }
  return lift_1$12.operate(function(source, subscriber) {
    source.subscribe(OperatorSubscriber_1$T.createOperatorSubscriber(subscriber, function(value) {
      return executeSchedule_1$6.executeSchedule(subscriber, scheduler, function() {
        return subscriber.next(value);
      }, delay2);
    }, function() {
      return executeSchedule_1$6.executeSchedule(subscriber, scheduler, function() {
        return subscriber.complete();
      }, delay2);
    }, function(err) {
      return executeSchedule_1$6.executeSchedule(subscriber, scheduler, function() {
        return subscriber.error(err);
      }, delay2);
    }));
  });
}
observeOn$1.observeOn = observeOn;
var subscribeOn$1 = {};
Object.defineProperty(subscribeOn$1, "__esModule", { value: true });
subscribeOn$1.subscribeOn = void 0;
var lift_1$11 = lift;
function subscribeOn(scheduler, delay2) {
  if (delay2 === void 0) {
    delay2 = 0;
  }
  return lift_1$11.operate(function(source, subscriber) {
    subscriber.add(scheduler.schedule(function() {
      return source.subscribe(subscriber);
    }, delay2));
  });
}
subscribeOn$1.subscribeOn = subscribeOn;
Object.defineProperty(scheduleObservable$1, "__esModule", { value: true });
scheduleObservable$1.scheduleObservable = void 0;
var innerFrom_1$D = innerFrom$1;
var observeOn_1$2 = observeOn$1;
var subscribeOn_1$2 = subscribeOn$1;
function scheduleObservable(input, scheduler) {
  return innerFrom_1$D.innerFrom(input).pipe(subscribeOn_1$2.subscribeOn(scheduler), observeOn_1$2.observeOn(scheduler));
}
scheduleObservable$1.scheduleObservable = scheduleObservable;
var schedulePromise$1 = {};
Object.defineProperty(schedulePromise$1, "__esModule", { value: true });
schedulePromise$1.schedulePromise = void 0;
var innerFrom_1$C = innerFrom$1;
var observeOn_1$1 = observeOn$1;
var subscribeOn_1$1 = subscribeOn$1;
function schedulePromise(input, scheduler) {
  return innerFrom_1$C.innerFrom(input).pipe(subscribeOn_1$1.subscribeOn(scheduler), observeOn_1$1.observeOn(scheduler));
}
schedulePromise$1.schedulePromise = schedulePromise;
var scheduleArray$1 = {};
Object.defineProperty(scheduleArray$1, "__esModule", { value: true });
scheduleArray$1.scheduleArray = void 0;
var Observable_1$j = Observable$1;
function scheduleArray(input, scheduler) {
  return new Observable_1$j.Observable(function(subscriber) {
    var i = 0;
    return scheduler.schedule(function() {
      if (i === input.length) {
        subscriber.complete();
      } else {
        subscriber.next(input[i++]);
        if (!subscriber.closed) {
          this.schedule();
        }
      }
    });
  });
}
scheduleArray$1.scheduleArray = scheduleArray;
var scheduleIterable$1 = {};
Object.defineProperty(scheduleIterable$1, "__esModule", { value: true });
scheduleIterable$1.scheduleIterable = void 0;
var Observable_1$i = Observable$1;
var iterator_1 = iterator;
var isFunction_1$e = isFunction$1;
var executeSchedule_1$5 = executeSchedule$1;
function scheduleIterable(input, scheduler) {
  return new Observable_1$i.Observable(function(subscriber) {
    var iterator2;
    executeSchedule_1$5.executeSchedule(subscriber, scheduler, function() {
      iterator2 = input[iterator_1.iterator]();
      executeSchedule_1$5.executeSchedule(subscriber, scheduler, function() {
        var _a2;
        var value;
        var done;
        try {
          _a2 = iterator2.next(), value = _a2.value, done = _a2.done;
        } catch (err) {
          subscriber.error(err);
          return;
        }
        if (done) {
          subscriber.complete();
        } else {
          subscriber.next(value);
        }
      }, 0, true);
    });
    return function() {
      return isFunction_1$e.isFunction(iterator2 === null || iterator2 === void 0 ? void 0 : iterator2.return) && iterator2.return();
    };
  });
}
scheduleIterable$1.scheduleIterable = scheduleIterable;
var scheduleAsyncIterable$1 = {};
Object.defineProperty(scheduleAsyncIterable$1, "__esModule", { value: true });
scheduleAsyncIterable$1.scheduleAsyncIterable = void 0;
var Observable_1$h = Observable$1;
var executeSchedule_1$4 = executeSchedule$1;
function scheduleAsyncIterable(input, scheduler) {
  if (!input) {
    throw new Error("Iterable cannot be null");
  }
  return new Observable_1$h.Observable(function(subscriber) {
    executeSchedule_1$4.executeSchedule(subscriber, scheduler, function() {
      var iterator2 = input[Symbol.asyncIterator]();
      executeSchedule_1$4.executeSchedule(subscriber, scheduler, function() {
        iterator2.next().then(function(result) {
          if (result.done) {
            subscriber.complete();
          } else {
            subscriber.next(result.value);
          }
        });
      }, 0, true);
    });
  });
}
scheduleAsyncIterable$1.scheduleAsyncIterable = scheduleAsyncIterable;
var scheduleReadableStreamLike$1 = {};
Object.defineProperty(scheduleReadableStreamLike$1, "__esModule", { value: true });
scheduleReadableStreamLike$1.scheduleReadableStreamLike = void 0;
var scheduleAsyncIterable_1$1 = scheduleAsyncIterable$1;
var isReadableStreamLike_1$1 = isReadableStreamLike$1;
function scheduleReadableStreamLike(input, scheduler) {
  return scheduleAsyncIterable_1$1.scheduleAsyncIterable(isReadableStreamLike_1$1.readableStreamLikeToAsyncGenerator(input), scheduler);
}
scheduleReadableStreamLike$1.scheduleReadableStreamLike = scheduleReadableStreamLike;
Object.defineProperty(scheduled$1, "__esModule", { value: true });
scheduled$1.scheduled = void 0;
var scheduleObservable_1 = scheduleObservable$1;
var schedulePromise_1 = schedulePromise$1;
var scheduleArray_1 = scheduleArray$1;
var scheduleIterable_1$1 = scheduleIterable$1;
var scheduleAsyncIterable_1 = scheduleAsyncIterable$1;
var isInteropObservable_1 = isInteropObservable$1;
var isPromise_1 = isPromise$1;
var isArrayLike_1$1 = isArrayLike;
var isIterable_1 = isIterable$1;
var isAsyncIterable_1 = isAsyncIterable$1;
var throwUnobservableError_1 = throwUnobservableError;
var isReadableStreamLike_1 = isReadableStreamLike$1;
var scheduleReadableStreamLike_1 = scheduleReadableStreamLike$1;
function scheduled(input, scheduler) {
  if (input != null) {
    if (isInteropObservable_1.isInteropObservable(input)) {
      return scheduleObservable_1.scheduleObservable(input, scheduler);
    }
    if (isArrayLike_1$1.isArrayLike(input)) {
      return scheduleArray_1.scheduleArray(input, scheduler);
    }
    if (isPromise_1.isPromise(input)) {
      return schedulePromise_1.schedulePromise(input, scheduler);
    }
    if (isAsyncIterable_1.isAsyncIterable(input)) {
      return scheduleAsyncIterable_1.scheduleAsyncIterable(input, scheduler);
    }
    if (isIterable_1.isIterable(input)) {
      return scheduleIterable_1$1.scheduleIterable(input, scheduler);
    }
    if (isReadableStreamLike_1.isReadableStreamLike(input)) {
      return scheduleReadableStreamLike_1.scheduleReadableStreamLike(input, scheduler);
    }
  }
  throw throwUnobservableError_1.createInvalidObservableTypeError(input);
}
scheduled$1.scheduled = scheduled;
Object.defineProperty(from$1, "__esModule", { value: true });
from$1.from = void 0;
var scheduled_1 = scheduled$1;
var innerFrom_1$B = innerFrom$1;
function from(input, scheduler) {
  return scheduler ? scheduled_1.scheduled(input, scheduler) : innerFrom_1$B.innerFrom(input);
}
from$1.from = from;
Object.defineProperty(of$1, "__esModule", { value: true });
of$1.of = void 0;
var args_1$c = args;
var from_1$6 = from$1;
function of() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  var scheduler = args_1$c.popScheduler(args2);
  return from_1$6.from(args2, scheduler);
}
of$1.of = of;
var throwError$1 = {};
Object.defineProperty(throwError$1, "__esModule", { value: true });
throwError$1.throwError = void 0;
var Observable_1$g = Observable$1;
var isFunction_1$d = isFunction$1;
function throwError(errorOrErrorFactory, scheduler) {
  var errorFactory = isFunction_1$d.isFunction(errorOrErrorFactory) ? errorOrErrorFactory : function() {
    return errorOrErrorFactory;
  };
  var init = function(subscriber) {
    return subscriber.error(errorFactory());
  };
  return new Observable_1$g.Observable(scheduler ? function(subscriber) {
    return scheduler.schedule(init, 0, subscriber);
  } : init);
}
throwError$1.throwError = throwError;
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.observeNotification = exports.Notification = exports.NotificationKind = void 0;
  var empty_12 = empty;
  var of_12 = of$1;
  var throwError_1 = throwError$1;
  var isFunction_12 = isFunction$1;
  (function(NotificationKind) {
    NotificationKind["NEXT"] = "N";
    NotificationKind["ERROR"] = "E";
    NotificationKind["COMPLETE"] = "C";
  })(exports.NotificationKind || (exports.NotificationKind = {}));
  var Notification2 = function() {
    function Notification3(kind, value, error2) {
      this.kind = kind;
      this.value = value;
      this.error = error2;
      this.hasValue = kind === "N";
    }
    Notification3.prototype.observe = function(observer) {
      return observeNotification(this, observer);
    };
    Notification3.prototype.do = function(nextHandler, errorHandler, completeHandler) {
      var _a2 = this, kind = _a2.kind, value = _a2.value, error2 = _a2.error;
      return kind === "N" ? nextHandler === null || nextHandler === void 0 ? void 0 : nextHandler(value) : kind === "E" ? errorHandler === null || errorHandler === void 0 ? void 0 : errorHandler(error2) : completeHandler === null || completeHandler === void 0 ? void 0 : completeHandler();
    };
    Notification3.prototype.accept = function(nextOrObserver, error2, complete) {
      var _a2;
      return isFunction_12.isFunction((_a2 = nextOrObserver) === null || _a2 === void 0 ? void 0 : _a2.next) ? this.observe(nextOrObserver) : this.do(nextOrObserver, error2, complete);
    };
    Notification3.prototype.toObservable = function() {
      var _a2 = this, kind = _a2.kind, value = _a2.value, error2 = _a2.error;
      var result = kind === "N" ? of_12.of(value) : kind === "E" ? throwError_1.throwError(function() {
        return error2;
      }) : kind === "C" ? empty_12.EMPTY : 0;
      if (!result) {
        throw new TypeError("Unexpected notification kind " + kind);
      }
      return result;
    };
    Notification3.createNext = function(value) {
      return new Notification3("N", value);
    };
    Notification3.createError = function(err) {
      return new Notification3("E", void 0, err);
    };
    Notification3.createComplete = function() {
      return Notification3.completeNotification;
    };
    Notification3.completeNotification = new Notification3("C");
    return Notification3;
  }();
  exports.Notification = Notification2;
  function observeNotification(notification, observer) {
    var _a2, _b, _c;
    var _d = notification, kind = _d.kind, value = _d.value, error2 = _d.error;
    if (typeof kind !== "string") {
      throw new TypeError('Invalid notification, missing "kind"');
    }
    kind === "N" ? (_a2 = observer.next) === null || _a2 === void 0 ? void 0 : _a2.call(observer, value) : kind === "E" ? (_b = observer.error) === null || _b === void 0 ? void 0 : _b.call(observer, error2) : (_c = observer.complete) === null || _c === void 0 ? void 0 : _c.call(observer);
  }
  exports.observeNotification = observeNotification;
})(Notification);
var isObservable$1 = {};
Object.defineProperty(isObservable$1, "__esModule", { value: true });
isObservable$1.isObservable = void 0;
var Observable_1$f = Observable$1;
var isFunction_1$c = isFunction$1;
function isObservable(obj) {
  return !!obj && (obj instanceof Observable_1$f.Observable || isFunction_1$c.isFunction(obj.lift) && isFunction_1$c.isFunction(obj.subscribe));
}
isObservable$1.isObservable = isObservable;
var lastValueFrom$1 = {};
var EmptyError = {};
Object.defineProperty(EmptyError, "__esModule", { value: true });
EmptyError.EmptyError = void 0;
var createErrorClass_1$3 = createErrorClass$1;
EmptyError.EmptyError = createErrorClass_1$3.createErrorClass(function(_super) {
  return function EmptyErrorImpl() {
    _super(this);
    this.name = "EmptyError";
    this.message = "no elements in sequence";
  };
});
Object.defineProperty(lastValueFrom$1, "__esModule", { value: true });
lastValueFrom$1.lastValueFrom = void 0;
var EmptyError_1$5 = EmptyError;
function lastValueFrom(source, config2) {
  var hasConfig = typeof config2 === "object";
  return new Promise(function(resolve, reject) {
    var _hasValue = false;
    var _value;
    source.subscribe({
      next: function(value) {
        _value = value;
        _hasValue = true;
      },
      error: reject,
      complete: function() {
        if (_hasValue) {
          resolve(_value);
        } else if (hasConfig) {
          resolve(config2.defaultValue);
        } else {
          reject(new EmptyError_1$5.EmptyError());
        }
      }
    });
  });
}
lastValueFrom$1.lastValueFrom = lastValueFrom;
var firstValueFrom$1 = {};
Object.defineProperty(firstValueFrom$1, "__esModule", { value: true });
firstValueFrom$1.firstValueFrom = void 0;
var EmptyError_1$4 = EmptyError;
var Subscriber_1$1 = Subscriber;
function firstValueFrom(source, config2) {
  var hasConfig = typeof config2 === "object";
  return new Promise(function(resolve, reject) {
    var subscriber = new Subscriber_1$1.SafeSubscriber({
      next: function(value) {
        resolve(value);
        subscriber.unsubscribe();
      },
      error: reject,
      complete: function() {
        if (hasConfig) {
          resolve(config2.defaultValue);
        } else {
          reject(new EmptyError_1$4.EmptyError());
        }
      }
    });
    source.subscribe(subscriber);
  });
}
firstValueFrom$1.firstValueFrom = firstValueFrom;
var ArgumentOutOfRangeError = {};
Object.defineProperty(ArgumentOutOfRangeError, "__esModule", { value: true });
ArgumentOutOfRangeError.ArgumentOutOfRangeError = void 0;
var createErrorClass_1$2 = createErrorClass$1;
ArgumentOutOfRangeError.ArgumentOutOfRangeError = createErrorClass_1$2.createErrorClass(function(_super) {
  return function ArgumentOutOfRangeErrorImpl() {
    _super(this);
    this.name = "ArgumentOutOfRangeError";
    this.message = "argument out of range";
  };
});
var NotFoundError = {};
Object.defineProperty(NotFoundError, "__esModule", { value: true });
NotFoundError.NotFoundError = void 0;
var createErrorClass_1$1 = createErrorClass$1;
NotFoundError.NotFoundError = createErrorClass_1$1.createErrorClass(function(_super) {
  return function NotFoundErrorImpl(message) {
    _super(this);
    this.name = "NotFoundError";
    this.message = message;
  };
});
var SequenceError = {};
Object.defineProperty(SequenceError, "__esModule", { value: true });
SequenceError.SequenceError = void 0;
var createErrorClass_1 = createErrorClass$1;
SequenceError.SequenceError = createErrorClass_1.createErrorClass(function(_super) {
  return function SequenceErrorImpl(message) {
    _super(this);
    this.name = "SequenceError";
    this.message = message;
  };
});
var timeout = {};
var isDate = {};
Object.defineProperty(isDate, "__esModule", { value: true });
isDate.isValidDate = void 0;
function isValidDate(value) {
  return value instanceof Date && !isNaN(value);
}
isDate.isValidDate = isValidDate;
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.timeout = exports.TimeoutError = void 0;
  var async_12 = async;
  var isDate_12 = isDate;
  var lift_12 = lift;
  var innerFrom_12 = innerFrom$1;
  var createErrorClass_12 = createErrorClass$1;
  var OperatorSubscriber_12 = OperatorSubscriber$1;
  var executeSchedule_12 = executeSchedule$1;
  exports.TimeoutError = createErrorClass_12.createErrorClass(function(_super) {
    return function TimeoutErrorImpl(info) {
      if (info === void 0) {
        info = null;
      }
      _super(this);
      this.message = "Timeout has occurred";
      this.name = "TimeoutError";
      this.info = info;
    };
  });
  function timeout2(config2, schedulerArg) {
    var _a2 = isDate_12.isValidDate(config2) ? { first: config2 } : typeof config2 === "number" ? { each: config2 } : config2, first2 = _a2.first, each = _a2.each, _b = _a2.with, _with = _b === void 0 ? timeoutErrorFactory : _b, _c = _a2.scheduler, scheduler = _c === void 0 ? schedulerArg !== null && schedulerArg !== void 0 ? schedulerArg : async_12.asyncScheduler : _c, _d = _a2.meta, meta = _d === void 0 ? null : _d;
    if (first2 == null && each == null) {
      throw new TypeError("No timeout provided.");
    }
    return lift_12.operate(function(source, subscriber) {
      var originalSourceSubscription;
      var timerSubscription;
      var lastValue = null;
      var seen = 0;
      var startTimer = function(delay2) {
        timerSubscription = executeSchedule_12.executeSchedule(subscriber, scheduler, function() {
          try {
            originalSourceSubscription.unsubscribe();
            innerFrom_12.innerFrom(_with({
              meta,
              lastValue,
              seen
            })).subscribe(subscriber);
          } catch (err) {
            subscriber.error(err);
          }
        }, delay2);
      };
      originalSourceSubscription = source.subscribe(OperatorSubscriber_12.createOperatorSubscriber(subscriber, function(value) {
        timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();
        seen++;
        subscriber.next(lastValue = value);
        each > 0 && startTimer(each);
      }, void 0, void 0, function() {
        if (!(timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.closed)) {
          timerSubscription === null || timerSubscription === void 0 ? void 0 : timerSubscription.unsubscribe();
        }
        lastValue = null;
      }));
      !seen && startTimer(first2 != null ? typeof first2 === "number" ? first2 : +first2 - scheduler.now() : each);
    });
  }
  exports.timeout = timeout2;
  function timeoutErrorFactory(info) {
    throw new exports.TimeoutError(info);
  }
})(timeout);
var bindCallback$1 = {};
var bindCallbackInternals$1 = {};
var mapOneOrManyArgs$1 = {};
var map$1 = {};
Object.defineProperty(map$1, "__esModule", { value: true });
map$1.map = void 0;
var lift_1$10 = lift;
var OperatorSubscriber_1$S = OperatorSubscriber$1;
function map(project, thisArg) {
  return lift_1$10.operate(function(source, subscriber) {
    var index = 0;
    source.subscribe(OperatorSubscriber_1$S.createOperatorSubscriber(subscriber, function(value) {
      subscriber.next(project.call(thisArg, value, index++));
    }));
  });
}
map$1.map = map;
var __read$h = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$g = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(mapOneOrManyArgs$1, "__esModule", { value: true });
mapOneOrManyArgs$1.mapOneOrManyArgs = void 0;
var map_1$5 = map$1;
var isArray$2 = Array.isArray;
function callOrApply(fn, args2) {
  return isArray$2(args2) ? fn.apply(void 0, __spreadArray$g([], __read$h(args2))) : fn(args2);
}
function mapOneOrManyArgs(fn) {
  return map_1$5.map(function(args2) {
    return callOrApply(fn, args2);
  });
}
mapOneOrManyArgs$1.mapOneOrManyArgs = mapOneOrManyArgs;
var __read$g = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$f = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(bindCallbackInternals$1, "__esModule", { value: true });
bindCallbackInternals$1.bindCallbackInternals = void 0;
var isScheduler_1$2 = isScheduler$1;
var Observable_1$e = Observable$1;
var subscribeOn_1 = subscribeOn$1;
var mapOneOrManyArgs_1$6 = mapOneOrManyArgs$1;
var observeOn_1 = observeOn$1;
var AsyncSubject_1$1 = AsyncSubject$1;
function bindCallbackInternals(isNodeStyle, callbackFunc, resultSelector, scheduler) {
  if (resultSelector) {
    if (isScheduler_1$2.isScheduler(resultSelector)) {
      scheduler = resultSelector;
    } else {
      return function() {
        var args2 = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args2[_i] = arguments[_i];
        }
        return bindCallbackInternals(isNodeStyle, callbackFunc, scheduler).apply(this, args2).pipe(mapOneOrManyArgs_1$6.mapOneOrManyArgs(resultSelector));
      };
    }
  }
  if (scheduler) {
    return function() {
      var args2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args2[_i] = arguments[_i];
      }
      return bindCallbackInternals(isNodeStyle, callbackFunc).apply(this, args2).pipe(subscribeOn_1.subscribeOn(scheduler), observeOn_1.observeOn(scheduler));
    };
  }
  return function() {
    var _this = this;
    var args2 = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args2[_i] = arguments[_i];
    }
    var subject = new AsyncSubject_1$1.AsyncSubject();
    var uninitialized = true;
    return new Observable_1$e.Observable(function(subscriber) {
      var subs = subject.subscribe(subscriber);
      if (uninitialized) {
        uninitialized = false;
        var isAsync_1 = false;
        var isComplete_1 = false;
        callbackFunc.apply(_this, __spreadArray$f(__spreadArray$f([], __read$g(args2)), [
          function() {
            var results = [];
            for (var _i2 = 0; _i2 < arguments.length; _i2++) {
              results[_i2] = arguments[_i2];
            }
            if (isNodeStyle) {
              var err = results.shift();
              if (err != null) {
                subject.error(err);
                return;
              }
            }
            subject.next(1 < results.length ? results : results[0]);
            isComplete_1 = true;
            if (isAsync_1) {
              subject.complete();
            }
          }
        ]));
        if (isComplete_1) {
          subject.complete();
        }
        isAsync_1 = true;
      }
      return subs;
    });
  };
}
bindCallbackInternals$1.bindCallbackInternals = bindCallbackInternals;
Object.defineProperty(bindCallback$1, "__esModule", { value: true });
bindCallback$1.bindCallback = void 0;
var bindCallbackInternals_1$1 = bindCallbackInternals$1;
function bindCallback(callbackFunc, resultSelector, scheduler) {
  return bindCallbackInternals_1$1.bindCallbackInternals(false, callbackFunc, resultSelector, scheduler);
}
bindCallback$1.bindCallback = bindCallback;
var bindNodeCallback$1 = {};
Object.defineProperty(bindNodeCallback$1, "__esModule", { value: true });
bindNodeCallback$1.bindNodeCallback = void 0;
var bindCallbackInternals_1 = bindCallbackInternals$1;
function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
  return bindCallbackInternals_1.bindCallbackInternals(true, callbackFunc, resultSelector, scheduler);
}
bindNodeCallback$1.bindNodeCallback = bindNodeCallback;
var combineLatest$3 = {};
var argsArgArrayOrObject$1 = {};
Object.defineProperty(argsArgArrayOrObject$1, "__esModule", { value: true });
argsArgArrayOrObject$1.argsArgArrayOrObject = void 0;
var isArray$1 = Array.isArray;
var getPrototypeOf = Object.getPrototypeOf, objectProto = Object.prototype, getKeys$1 = Object.keys;
function argsArgArrayOrObject(args2) {
  if (args2.length === 1) {
    var first_1 = args2[0];
    if (isArray$1(first_1)) {
      return { args: first_1, keys: null };
    }
    if (isPOJO(first_1)) {
      var keys2 = getKeys$1(first_1);
      return {
        args: keys2.map(function(key) {
          return first_1[key];
        }),
        keys: keys2
      };
    }
  }
  return { args: args2, keys: null };
}
argsArgArrayOrObject$1.argsArgArrayOrObject = argsArgArrayOrObject;
function isPOJO(obj) {
  return obj && typeof obj === "object" && getPrototypeOf(obj) === objectProto;
}
var createObject$1 = {};
Object.defineProperty(createObject$1, "__esModule", { value: true });
createObject$1.createObject = void 0;
function createObject(keys2, values2) {
  return keys2.reduce(function(result, key, i) {
    return result[key] = values2[i], result;
  }, {});
}
createObject$1.createObject = createObject;
Object.defineProperty(combineLatest$3, "__esModule", { value: true });
combineLatest$3.combineLatestInit = combineLatest$3.combineLatest = void 0;
var Observable_1$d = Observable$1;
var argsArgArrayOrObject_1$1 = argsArgArrayOrObject$1;
var from_1$5 = from$1;
var identity_1$d = identity$1;
var mapOneOrManyArgs_1$5 = mapOneOrManyArgs$1;
var args_1$b = args;
var createObject_1$1 = createObject$1;
var OperatorSubscriber_1$R = OperatorSubscriber$1;
var executeSchedule_1$3 = executeSchedule$1;
function combineLatest$2() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  var scheduler = args_1$b.popScheduler(args2);
  var resultSelector = args_1$b.popResultSelector(args2);
  var _a2 = argsArgArrayOrObject_1$1.argsArgArrayOrObject(args2), observables = _a2.args, keys2 = _a2.keys;
  if (observables.length === 0) {
    return from_1$5.from([], scheduler);
  }
  var result = new Observable_1$d.Observable(combineLatestInit(observables, scheduler, keys2 ? function(values2) {
    return createObject_1$1.createObject(keys2, values2);
  } : identity_1$d.identity));
  return resultSelector ? result.pipe(mapOneOrManyArgs_1$5.mapOneOrManyArgs(resultSelector)) : result;
}
combineLatest$3.combineLatest = combineLatest$2;
function combineLatestInit(observables, scheduler, valueTransform) {
  if (valueTransform === void 0) {
    valueTransform = identity_1$d.identity;
  }
  return function(subscriber) {
    maybeSchedule(scheduler, function() {
      var length = observables.length;
      var values2 = new Array(length);
      var active = length;
      var remainingFirstValues = length;
      var _loop_1 = function(i2) {
        maybeSchedule(scheduler, function() {
          var source = from_1$5.from(observables[i2], scheduler);
          var hasFirstValue = false;
          source.subscribe(OperatorSubscriber_1$R.createOperatorSubscriber(subscriber, function(value) {
            values2[i2] = value;
            if (!hasFirstValue) {
              hasFirstValue = true;
              remainingFirstValues--;
            }
            if (!remainingFirstValues) {
              subscriber.next(valueTransform(values2.slice()));
            }
          }, function() {
            if (!--active) {
              subscriber.complete();
            }
          }));
        }, subscriber);
      };
      for (var i = 0; i < length; i++) {
        _loop_1(i);
      }
    }, subscriber);
  };
}
combineLatest$3.combineLatestInit = combineLatestInit;
function maybeSchedule(scheduler, execute, subscription) {
  if (scheduler) {
    executeSchedule_1$3.executeSchedule(subscription, scheduler, execute);
  } else {
    execute();
  }
}
var concat$3 = {};
var concatAll$1 = {};
var mergeAll$1 = {};
var mergeMap$1 = {};
var mergeInternals$1 = {};
Object.defineProperty(mergeInternals$1, "__esModule", { value: true });
mergeInternals$1.mergeInternals = void 0;
var innerFrom_1$A = innerFrom$1;
var executeSchedule_1$2 = executeSchedule$1;
var OperatorSubscriber_1$Q = OperatorSubscriber$1;
function mergeInternals(source, subscriber, project, concurrent, onBeforeNext, expand2, innerSubScheduler, additionalFinalizer) {
  var buffer2 = [];
  var active = 0;
  var index = 0;
  var isComplete = false;
  var checkComplete = function() {
    if (isComplete && !buffer2.length && !active) {
      subscriber.complete();
    }
  };
  var outerNext = function(value) {
    return active < concurrent ? doInnerSub(value) : buffer2.push(value);
  };
  var doInnerSub = function(value) {
    expand2 && subscriber.next(value);
    active++;
    var innerComplete = false;
    innerFrom_1$A.innerFrom(project(value, index++)).subscribe(OperatorSubscriber_1$Q.createOperatorSubscriber(subscriber, function(innerValue) {
      onBeforeNext === null || onBeforeNext === void 0 ? void 0 : onBeforeNext(innerValue);
      if (expand2) {
        outerNext(innerValue);
      } else {
        subscriber.next(innerValue);
      }
    }, function() {
      innerComplete = true;
    }, void 0, function() {
      if (innerComplete) {
        try {
          active--;
          var _loop_1 = function() {
            var bufferedValue = buffer2.shift();
            if (innerSubScheduler) {
              executeSchedule_1$2.executeSchedule(subscriber, innerSubScheduler, function() {
                return doInnerSub(bufferedValue);
              });
            } else {
              doInnerSub(bufferedValue);
            }
          };
          while (buffer2.length && active < concurrent) {
            _loop_1();
          }
          checkComplete();
        } catch (err) {
          subscriber.error(err);
        }
      }
    }));
  };
  source.subscribe(OperatorSubscriber_1$Q.createOperatorSubscriber(subscriber, outerNext, function() {
    isComplete = true;
    checkComplete();
  }));
  return function() {
    additionalFinalizer === null || additionalFinalizer === void 0 ? void 0 : additionalFinalizer();
  };
}
mergeInternals$1.mergeInternals = mergeInternals;
Object.defineProperty(mergeMap$1, "__esModule", { value: true });
mergeMap$1.mergeMap = void 0;
var map_1$4 = map$1;
var innerFrom_1$z = innerFrom$1;
var lift_1$$ = lift;
var mergeInternals_1$2 = mergeInternals$1;
var isFunction_1$b = isFunction$1;
function mergeMap(project, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }
  if (isFunction_1$b.isFunction(resultSelector)) {
    return mergeMap(function(a, i) {
      return map_1$4.map(function(b, ii) {
        return resultSelector(a, b, i, ii);
      })(innerFrom_1$z.innerFrom(project(a, i)));
    }, concurrent);
  } else if (typeof resultSelector === "number") {
    concurrent = resultSelector;
  }
  return lift_1$$.operate(function(source, subscriber) {
    return mergeInternals_1$2.mergeInternals(source, subscriber, project, concurrent);
  });
}
mergeMap$1.mergeMap = mergeMap;
Object.defineProperty(mergeAll$1, "__esModule", { value: true });
mergeAll$1.mergeAll = void 0;
var mergeMap_1$6 = mergeMap$1;
var identity_1$c = identity$1;
function mergeAll(concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }
  return mergeMap_1$6.mergeMap(identity_1$c.identity, concurrent);
}
mergeAll$1.mergeAll = mergeAll;
Object.defineProperty(concatAll$1, "__esModule", { value: true });
concatAll$1.concatAll = void 0;
var mergeAll_1$2 = mergeAll$1;
function concatAll() {
  return mergeAll_1$2.mergeAll(1);
}
concatAll$1.concatAll = concatAll;
Object.defineProperty(concat$3, "__esModule", { value: true });
concat$3.concat = void 0;
var concatAll_1$1 = concatAll$1;
var args_1$a = args;
var from_1$4 = from$1;
function concat$2() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  return concatAll_1$1.concatAll()(from_1$4.from(args2, args_1$a.popScheduler(args2)));
}
concat$3.concat = concat$2;
var connectable$1 = {};
var defer$1 = {};
Object.defineProperty(defer$1, "__esModule", { value: true });
defer$1.defer = void 0;
var Observable_1$c = Observable$1;
var innerFrom_1$y = innerFrom$1;
function defer(observableFactory) {
  return new Observable_1$c.Observable(function(subscriber) {
    innerFrom_1$y.innerFrom(observableFactory()).subscribe(subscriber);
  });
}
defer$1.defer = defer;
Object.defineProperty(connectable$1, "__esModule", { value: true });
connectable$1.connectable = void 0;
var Subject_1$b = Subject$1;
var Observable_1$b = Observable$1;
var defer_1$2 = defer$1;
var DEFAULT_CONFIG$1 = {
  connector: function() {
    return new Subject_1$b.Subject();
  },
  resetOnDisconnect: true
};
function connectable(source, config2) {
  if (config2 === void 0) {
    config2 = DEFAULT_CONFIG$1;
  }
  var connection = null;
  var connector = config2.connector, _a2 = config2.resetOnDisconnect, resetOnDisconnect = _a2 === void 0 ? true : _a2;
  var subject = connector();
  var result = new Observable_1$b.Observable(function(subscriber) {
    return subject.subscribe(subscriber);
  });
  result.connect = function() {
    if (!connection || connection.closed) {
      connection = defer_1$2.defer(function() {
        return source;
      }).subscribe(subject);
      if (resetOnDisconnect) {
        connection.add(function() {
          return subject = connector();
        });
      }
    }
    return connection;
  };
  return result;
}
connectable$1.connectable = connectable;
var forkJoin$1 = {};
Object.defineProperty(forkJoin$1, "__esModule", { value: true });
forkJoin$1.forkJoin = void 0;
var Observable_1$a = Observable$1;
var argsArgArrayOrObject_1 = argsArgArrayOrObject$1;
var innerFrom_1$x = innerFrom$1;
var args_1$9 = args;
var OperatorSubscriber_1$P = OperatorSubscriber$1;
var mapOneOrManyArgs_1$4 = mapOneOrManyArgs$1;
var createObject_1 = createObject$1;
function forkJoin() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  var resultSelector = args_1$9.popResultSelector(args2);
  var _a2 = argsArgArrayOrObject_1.argsArgArrayOrObject(args2), sources = _a2.args, keys2 = _a2.keys;
  var result = new Observable_1$a.Observable(function(subscriber) {
    var length = sources.length;
    if (!length) {
      subscriber.complete();
      return;
    }
    var values2 = new Array(length);
    var remainingCompletions = length;
    var remainingEmissions = length;
    var _loop_1 = function(sourceIndex2) {
      var hasValue = false;
      innerFrom_1$x.innerFrom(sources[sourceIndex2]).subscribe(OperatorSubscriber_1$P.createOperatorSubscriber(subscriber, function(value) {
        if (!hasValue) {
          hasValue = true;
          remainingEmissions--;
        }
        values2[sourceIndex2] = value;
      }, function() {
        return remainingCompletions--;
      }, void 0, function() {
        if (!remainingCompletions || !hasValue) {
          if (!remainingEmissions) {
            subscriber.next(keys2 ? createObject_1.createObject(keys2, values2) : values2);
          }
          subscriber.complete();
        }
      }));
    };
    for (var sourceIndex = 0; sourceIndex < length; sourceIndex++) {
      _loop_1(sourceIndex);
    }
  });
  return resultSelector ? result.pipe(mapOneOrManyArgs_1$4.mapOneOrManyArgs(resultSelector)) : result;
}
forkJoin$1.forkJoin = forkJoin;
var fromEvent$1 = {};
var __read$f = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
Object.defineProperty(fromEvent$1, "__esModule", { value: true });
fromEvent$1.fromEvent = void 0;
var innerFrom_1$w = innerFrom$1;
var Observable_1$9 = Observable$1;
var mergeMap_1$5 = mergeMap$1;
var isArrayLike_1 = isArrayLike;
var isFunction_1$a = isFunction$1;
var mapOneOrManyArgs_1$3 = mapOneOrManyArgs$1;
var nodeEventEmitterMethods = ["addListener", "removeListener"];
var eventTargetMethods = ["addEventListener", "removeEventListener"];
var jqueryMethods = ["on", "off"];
function fromEvent(target, eventName, options2, resultSelector) {
  if (isFunction_1$a.isFunction(options2)) {
    resultSelector = options2;
    options2 = void 0;
  }
  if (resultSelector) {
    return fromEvent(target, eventName, options2).pipe(mapOneOrManyArgs_1$3.mapOneOrManyArgs(resultSelector));
  }
  var _a2 = __read$f(isEventTarget(target) ? eventTargetMethods.map(function(methodName) {
    return function(handler) {
      return target[methodName](eventName, handler, options2);
    };
  }) : isNodeStyleEventEmitter(target) ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName)) : isJQueryStyleEventEmitter(target) ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName)) : [], 2), add = _a2[0], remove = _a2[1];
  if (!add) {
    if (isArrayLike_1.isArrayLike(target)) {
      return mergeMap_1$5.mergeMap(function(subTarget) {
        return fromEvent(subTarget, eventName, options2);
      })(innerFrom_1$w.innerFrom(target));
    }
  }
  if (!add) {
    throw new TypeError("Invalid event target");
  }
  return new Observable_1$9.Observable(function(subscriber) {
    var handler = function() {
      var args2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args2[_i] = arguments[_i];
      }
      return subscriber.next(1 < args2.length ? args2 : args2[0]);
    };
    add(handler);
    return function() {
      return remove(handler);
    };
  });
}
fromEvent$1.fromEvent = fromEvent;
function toCommonHandlerRegistry(target, eventName) {
  return function(methodName) {
    return function(handler) {
      return target[methodName](eventName, handler);
    };
  };
}
function isNodeStyleEventEmitter(target) {
  return isFunction_1$a.isFunction(target.addListener) && isFunction_1$a.isFunction(target.removeListener);
}
function isJQueryStyleEventEmitter(target) {
  return isFunction_1$a.isFunction(target.on) && isFunction_1$a.isFunction(target.off);
}
function isEventTarget(target) {
  return isFunction_1$a.isFunction(target.addEventListener) && isFunction_1$a.isFunction(target.removeEventListener);
}
var fromEventPattern$1 = {};
Object.defineProperty(fromEventPattern$1, "__esModule", { value: true });
fromEventPattern$1.fromEventPattern = void 0;
var Observable_1$8 = Observable$1;
var isFunction_1$9 = isFunction$1;
var mapOneOrManyArgs_1$2 = mapOneOrManyArgs$1;
function fromEventPattern(addHandler, removeHandler, resultSelector) {
  if (resultSelector) {
    return fromEventPattern(addHandler, removeHandler).pipe(mapOneOrManyArgs_1$2.mapOneOrManyArgs(resultSelector));
  }
  return new Observable_1$8.Observable(function(subscriber) {
    var handler = function() {
      var e = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        e[_i] = arguments[_i];
      }
      return subscriber.next(e.length === 1 ? e[0] : e);
    };
    var retValue = addHandler(handler);
    return isFunction_1$9.isFunction(removeHandler) ? function() {
      return removeHandler(handler, retValue);
    } : void 0;
  });
}
fromEventPattern$1.fromEventPattern = fromEventPattern;
var generate$1 = {};
var __generator = commonjsGlobal && commonjsGlobal.__generator || function(thisArg, body) {
  var _ = { label: 0, sent: function() {
    if (t[0] & 1)
      throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f, y, t, g;
  return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_)
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return { value: op[1], done: false };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    if (op[0] & 5)
      throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
};
Object.defineProperty(generate$1, "__esModule", { value: true });
generate$1.generate = void 0;
var identity_1$b = identity$1;
var isScheduler_1$1 = isScheduler$1;
var defer_1$1 = defer$1;
var scheduleIterable_1 = scheduleIterable$1;
function generate(initialStateOrOptions, condition, iterate, resultSelectorOrScheduler, scheduler) {
  var _a2, _b;
  var resultSelector;
  var initialState;
  if (arguments.length === 1) {
    _a2 = initialStateOrOptions, initialState = _a2.initialState, condition = _a2.condition, iterate = _a2.iterate, _b = _a2.resultSelector, resultSelector = _b === void 0 ? identity_1$b.identity : _b, scheduler = _a2.scheduler;
  } else {
    initialState = initialStateOrOptions;
    if (!resultSelectorOrScheduler || isScheduler_1$1.isScheduler(resultSelectorOrScheduler)) {
      resultSelector = identity_1$b.identity;
      scheduler = resultSelectorOrScheduler;
    } else {
      resultSelector = resultSelectorOrScheduler;
    }
  }
  function gen() {
    var state2;
    return __generator(this, function(_a3) {
      switch (_a3.label) {
        case 0:
          state2 = initialState;
          _a3.label = 1;
        case 1:
          if (!(!condition || condition(state2)))
            return [3, 4];
          return [4, resultSelector(state2)];
        case 2:
          _a3.sent();
          _a3.label = 3;
        case 3:
          state2 = iterate(state2);
          return [3, 1];
        case 4:
          return [2];
      }
    });
  }
  return defer_1$1.defer(scheduler ? function() {
    return scheduleIterable_1.scheduleIterable(gen(), scheduler);
  } : gen);
}
generate$1.generate = generate;
var iif$1 = {};
Object.defineProperty(iif$1, "__esModule", { value: true });
iif$1.iif = void 0;
var defer_1 = defer$1;
function iif(condition, trueResult, falseResult) {
  return defer_1.defer(function() {
    return condition() ? trueResult : falseResult;
  });
}
iif$1.iif = iif;
var interval$1 = {};
var timer$1 = {};
Object.defineProperty(timer$1, "__esModule", { value: true });
timer$1.timer = void 0;
var Observable_1$7 = Observable$1;
var async_1$a = async;
var isScheduler_1 = isScheduler$1;
var isDate_1$1 = isDate;
function timer(dueTime, intervalOrScheduler, scheduler) {
  if (dueTime === void 0) {
    dueTime = 0;
  }
  if (scheduler === void 0) {
    scheduler = async_1$a.async;
  }
  var intervalDuration = -1;
  if (intervalOrScheduler != null) {
    if (isScheduler_1.isScheduler(intervalOrScheduler)) {
      scheduler = intervalOrScheduler;
    } else {
      intervalDuration = intervalOrScheduler;
    }
  }
  return new Observable_1$7.Observable(function(subscriber) {
    var due = isDate_1$1.isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;
    if (due < 0) {
      due = 0;
    }
    var n = 0;
    return scheduler.schedule(function() {
      if (!subscriber.closed) {
        subscriber.next(n++);
        if (0 <= intervalDuration) {
          this.schedule(void 0, intervalDuration);
        } else {
          subscriber.complete();
        }
      }
    }, due);
  });
}
timer$1.timer = timer;
Object.defineProperty(interval$1, "__esModule", { value: true });
interval$1.interval = void 0;
var async_1$9 = async;
var timer_1$5 = timer$1;
function interval(period, scheduler) {
  if (period === void 0) {
    period = 0;
  }
  if (scheduler === void 0) {
    scheduler = async_1$9.asyncScheduler;
  }
  if (period < 0) {
    period = 0;
  }
  return timer_1$5.timer(period, period, scheduler);
}
interval$1.interval = interval;
var merge$4 = {};
Object.defineProperty(merge$4, "__esModule", { value: true });
merge$4.merge = void 0;
var mergeAll_1$1 = mergeAll$1;
var innerFrom_1$v = innerFrom$1;
var empty_1$6 = empty;
var args_1$8 = args;
var from_1$3 = from$1;
function merge$3() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  var scheduler = args_1$8.popScheduler(args2);
  var concurrent = args_1$8.popNumber(args2, Infinity);
  var sources = args2;
  return !sources.length ? empty_1$6.EMPTY : sources.length === 1 ? innerFrom_1$v.innerFrom(sources[0]) : mergeAll_1$1.mergeAll(concurrent)(from_1$3.from(sources, scheduler));
}
merge$4.merge = merge$3;
var never = {};
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.never = exports.NEVER = void 0;
  var Observable_12 = Observable$1;
  var noop_12 = noop$1;
  exports.NEVER = new Observable_12.Observable(noop_12.noop);
  function never2() {
    return exports.NEVER;
  }
  exports.never = never2;
})(never);
var onErrorResumeNext$1 = {};
var argsOrArgArray$1 = {};
Object.defineProperty(argsOrArgArray$1, "__esModule", { value: true });
argsOrArgArray$1.argsOrArgArray = void 0;
var isArray = Array.isArray;
function argsOrArgArray(args2) {
  return args2.length === 1 && isArray(args2[0]) ? args2[0] : args2;
}
argsOrArgArray$1.argsOrArgArray = argsOrArgArray;
Object.defineProperty(onErrorResumeNext$1, "__esModule", { value: true });
onErrorResumeNext$1.onErrorResumeNext = void 0;
var Observable_1$6 = Observable$1;
var argsOrArgArray_1$6 = argsOrArgArray$1;
var OperatorSubscriber_1$O = OperatorSubscriber$1;
var noop_1$c = noop$1;
var innerFrom_1$u = innerFrom$1;
function onErrorResumeNext() {
  var sources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }
  var nextSources = argsOrArgArray_1$6.argsOrArgArray(sources);
  return new Observable_1$6.Observable(function(subscriber) {
    var sourceIndex = 0;
    var subscribeNext = function() {
      if (sourceIndex < nextSources.length) {
        var nextSource = void 0;
        try {
          nextSource = innerFrom_1$u.innerFrom(nextSources[sourceIndex++]);
        } catch (err) {
          subscribeNext();
          return;
        }
        var innerSubscriber = new OperatorSubscriber_1$O.OperatorSubscriber(subscriber, void 0, noop_1$c.noop, noop_1$c.noop);
        nextSource.subscribe(innerSubscriber);
        innerSubscriber.add(subscribeNext);
      } else {
        subscriber.complete();
      }
    };
    subscribeNext();
  });
}
onErrorResumeNext$1.onErrorResumeNext = onErrorResumeNext;
var pairs$1 = {};
Object.defineProperty(pairs$1, "__esModule", { value: true });
pairs$1.pairs = void 0;
var from_1$2 = from$1;
function pairs(obj, scheduler) {
  return from_1$2.from(Object.entries(obj), scheduler);
}
pairs$1.pairs = pairs;
var partition$3 = {};
var not$1 = {};
Object.defineProperty(not$1, "__esModule", { value: true });
not$1.not = void 0;
function not(pred, thisArg) {
  return function(value, index) {
    return !pred.call(thisArg, value, index);
  };
}
not$1.not = not;
var filter$1 = {};
Object.defineProperty(filter$1, "__esModule", { value: true });
filter$1.filter = void 0;
var lift_1$_ = lift;
var OperatorSubscriber_1$N = OperatorSubscriber$1;
function filter(predicate, thisArg) {
  return lift_1$_.operate(function(source, subscriber) {
    var index = 0;
    source.subscribe(OperatorSubscriber_1$N.createOperatorSubscriber(subscriber, function(value) {
      return predicate.call(thisArg, value, index++) && subscriber.next(value);
    }));
  });
}
filter$1.filter = filter;
Object.defineProperty(partition$3, "__esModule", { value: true });
partition$3.partition = void 0;
var not_1$1 = not$1;
var filter_1$5 = filter$1;
var innerFrom_1$t = innerFrom$1;
function partition$2(source, predicate, thisArg) {
  return [filter_1$5.filter(predicate, thisArg)(innerFrom_1$t.innerFrom(source)), filter_1$5.filter(not_1$1.not(predicate, thisArg))(innerFrom_1$t.innerFrom(source))];
}
partition$3.partition = partition$2;
var race$3 = {};
Object.defineProperty(race$3, "__esModule", { value: true });
race$3.raceInit = race$3.race = void 0;
var Observable_1$5 = Observable$1;
var innerFrom_1$s = innerFrom$1;
var argsOrArgArray_1$5 = argsOrArgArray$1;
var OperatorSubscriber_1$M = OperatorSubscriber$1;
function race$2() {
  var sources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }
  sources = argsOrArgArray_1$5.argsOrArgArray(sources);
  return sources.length === 1 ? innerFrom_1$s.innerFrom(sources[0]) : new Observable_1$5.Observable(raceInit(sources));
}
race$3.race = race$2;
function raceInit(sources) {
  return function(subscriber) {
    var subscriptions = [];
    var _loop_1 = function(i2) {
      subscriptions.push(innerFrom_1$s.innerFrom(sources[i2]).subscribe(OperatorSubscriber_1$M.createOperatorSubscriber(subscriber, function(value) {
        if (subscriptions) {
          for (var s = 0; s < subscriptions.length; s++) {
            s !== i2 && subscriptions[s].unsubscribe();
          }
          subscriptions = null;
        }
        subscriber.next(value);
      })));
    };
    for (var i = 0; subscriptions && !subscriber.closed && i < sources.length; i++) {
      _loop_1(i);
    }
  };
}
race$3.raceInit = raceInit;
var range$1 = {};
Object.defineProperty(range$1, "__esModule", { value: true });
range$1.range = void 0;
var Observable_1$4 = Observable$1;
var empty_1$5 = empty;
function range(start, count2, scheduler) {
  if (count2 == null) {
    count2 = start;
    start = 0;
  }
  if (count2 <= 0) {
    return empty_1$5.EMPTY;
  }
  var end = count2 + start;
  return new Observable_1$4.Observable(scheduler ? function(subscriber) {
    var n = start;
    return scheduler.schedule(function() {
      if (n < end) {
        subscriber.next(n++);
        this.schedule();
      } else {
        subscriber.complete();
      }
    });
  } : function(subscriber) {
    var n = start;
    while (n < end && !subscriber.closed) {
      subscriber.next(n++);
    }
    subscriber.complete();
  });
}
range$1.range = range;
var using$1 = {};
Object.defineProperty(using$1, "__esModule", { value: true });
using$1.using = void 0;
var Observable_1$3 = Observable$1;
var innerFrom_1$r = innerFrom$1;
var empty_1$4 = empty;
function using(resourceFactory, observableFactory) {
  return new Observable_1$3.Observable(function(subscriber) {
    var resource = resourceFactory();
    var result = observableFactory(resource);
    var source = result ? innerFrom_1$r.innerFrom(result) : empty_1$4.EMPTY;
    source.subscribe(subscriber);
    return function() {
      if (resource) {
        resource.unsubscribe();
      }
    };
  });
}
using$1.using = using;
var zip$3 = {};
var __read$e = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$e = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(zip$3, "__esModule", { value: true });
zip$3.zip = void 0;
var Observable_1$2 = Observable$1;
var innerFrom_1$q = innerFrom$1;
var argsOrArgArray_1$4 = argsOrArgArray$1;
var empty_1$3 = empty;
var OperatorSubscriber_1$L = OperatorSubscriber$1;
var args_1$7 = args;
function zip$2() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  var resultSelector = args_1$7.popResultSelector(args2);
  var sources = argsOrArgArray_1$4.argsOrArgArray(args2);
  return sources.length ? new Observable_1$2.Observable(function(subscriber) {
    var buffers = sources.map(function() {
      return [];
    });
    var completed = sources.map(function() {
      return false;
    });
    subscriber.add(function() {
      buffers = completed = null;
    });
    var _loop_1 = function(sourceIndex2) {
      innerFrom_1$q.innerFrom(sources[sourceIndex2]).subscribe(OperatorSubscriber_1$L.createOperatorSubscriber(subscriber, function(value) {
        buffers[sourceIndex2].push(value);
        if (buffers.every(function(buffer2) {
          return buffer2.length;
        })) {
          var result = buffers.map(function(buffer2) {
            return buffer2.shift();
          });
          subscriber.next(resultSelector ? resultSelector.apply(void 0, __spreadArray$e([], __read$e(result))) : result);
          if (buffers.some(function(buffer2, i) {
            return !buffer2.length && completed[i];
          })) {
            subscriber.complete();
          }
        }
      }, function() {
        completed[sourceIndex2] = true;
        !buffers[sourceIndex2].length && subscriber.complete();
      }));
    };
    for (var sourceIndex = 0; !subscriber.closed && sourceIndex < sources.length; sourceIndex++) {
      _loop_1(sourceIndex);
    }
    return function() {
      buffers = completed = null;
    };
  }) : empty_1$3.EMPTY;
}
zip$3.zip = zip$2;
var types$2 = {};
Object.defineProperty(types$2, "__esModule", { value: true });
var audit$1 = {};
Object.defineProperty(audit$1, "__esModule", { value: true });
audit$1.audit = void 0;
var lift_1$Z = lift;
var innerFrom_1$p = innerFrom$1;
var OperatorSubscriber_1$K = OperatorSubscriber$1;
function audit(durationSelector) {
  return lift_1$Z.operate(function(source, subscriber) {
    var hasValue = false;
    var lastValue = null;
    var durationSubscriber = null;
    var isComplete = false;
    var endDuration = function() {
      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
      durationSubscriber = null;
      if (hasValue) {
        hasValue = false;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
      isComplete && subscriber.complete();
    };
    var cleanupDuration = function() {
      durationSubscriber = null;
      isComplete && subscriber.complete();
    };
    source.subscribe(OperatorSubscriber_1$K.createOperatorSubscriber(subscriber, function(value) {
      hasValue = true;
      lastValue = value;
      if (!durationSubscriber) {
        innerFrom_1$p.innerFrom(durationSelector(value)).subscribe(durationSubscriber = OperatorSubscriber_1$K.createOperatorSubscriber(subscriber, endDuration, cleanupDuration));
      }
    }, function() {
      isComplete = true;
      (!hasValue || !durationSubscriber || durationSubscriber.closed) && subscriber.complete();
    }));
  });
}
audit$1.audit = audit;
var auditTime$1 = {};
Object.defineProperty(auditTime$1, "__esModule", { value: true });
auditTime$1.auditTime = void 0;
var async_1$8 = async;
var audit_1 = audit$1;
var timer_1$4 = timer$1;
function auditTime(duration, scheduler) {
  if (scheduler === void 0) {
    scheduler = async_1$8.asyncScheduler;
  }
  return audit_1.audit(function() {
    return timer_1$4.timer(duration, scheduler);
  });
}
auditTime$1.auditTime = auditTime;
var buffer$1 = {};
Object.defineProperty(buffer$1, "__esModule", { value: true });
buffer$1.buffer = void 0;
var lift_1$Y = lift;
var noop_1$b = noop$1;
var OperatorSubscriber_1$J = OperatorSubscriber$1;
var innerFrom_1$o = innerFrom$1;
function buffer(closingNotifier) {
  return lift_1$Y.operate(function(source, subscriber) {
    var currentBuffer = [];
    source.subscribe(OperatorSubscriber_1$J.createOperatorSubscriber(subscriber, function(value) {
      return currentBuffer.push(value);
    }, function() {
      subscriber.next(currentBuffer);
      subscriber.complete();
    }));
    innerFrom_1$o.innerFrom(closingNotifier).subscribe(OperatorSubscriber_1$J.createOperatorSubscriber(subscriber, function() {
      var b = currentBuffer;
      currentBuffer = [];
      subscriber.next(b);
    }, noop_1$b.noop));
    return function() {
      currentBuffer = null;
    };
  });
}
buffer$1.buffer = buffer;
var bufferCount$1 = {};
var __values$5 = commonjsGlobal && commonjsGlobal.__values || function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(bufferCount$1, "__esModule", { value: true });
bufferCount$1.bufferCount = void 0;
var lift_1$X = lift;
var OperatorSubscriber_1$I = OperatorSubscriber$1;
var arrRemove_1$4 = arrRemove$1;
function bufferCount(bufferSize, startBufferEvery) {
  if (startBufferEvery === void 0) {
    startBufferEvery = null;
  }
  startBufferEvery = startBufferEvery !== null && startBufferEvery !== void 0 ? startBufferEvery : bufferSize;
  return lift_1$X.operate(function(source, subscriber) {
    var buffers = [];
    var count2 = 0;
    source.subscribe(OperatorSubscriber_1$I.createOperatorSubscriber(subscriber, function(value) {
      var e_1, _a2, e_2, _b;
      var toEmit = null;
      if (count2++ % startBufferEvery === 0) {
        buffers.push([]);
      }
      try {
        for (var buffers_1 = __values$5(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {
          var buffer2 = buffers_1_1.value;
          buffer2.push(value);
          if (bufferSize <= buffer2.length) {
            toEmit = toEmit !== null && toEmit !== void 0 ? toEmit : [];
            toEmit.push(buffer2);
          }
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (buffers_1_1 && !buffers_1_1.done && (_a2 = buffers_1.return))
            _a2.call(buffers_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      if (toEmit) {
        try {
          for (var toEmit_1 = __values$5(toEmit), toEmit_1_1 = toEmit_1.next(); !toEmit_1_1.done; toEmit_1_1 = toEmit_1.next()) {
            var buffer2 = toEmit_1_1.value;
            arrRemove_1$4.arrRemove(buffers, buffer2);
            subscriber.next(buffer2);
          }
        } catch (e_2_1) {
          e_2 = { error: e_2_1 };
        } finally {
          try {
            if (toEmit_1_1 && !toEmit_1_1.done && (_b = toEmit_1.return))
              _b.call(toEmit_1);
          } finally {
            if (e_2)
              throw e_2.error;
          }
        }
      }
    }, function() {
      var e_3, _a2;
      try {
        for (var buffers_2 = __values$5(buffers), buffers_2_1 = buffers_2.next(); !buffers_2_1.done; buffers_2_1 = buffers_2.next()) {
          var buffer2 = buffers_2_1.value;
          subscriber.next(buffer2);
        }
      } catch (e_3_1) {
        e_3 = { error: e_3_1 };
      } finally {
        try {
          if (buffers_2_1 && !buffers_2_1.done && (_a2 = buffers_2.return))
            _a2.call(buffers_2);
        } finally {
          if (e_3)
            throw e_3.error;
        }
      }
      subscriber.complete();
    }, void 0, function() {
      buffers = null;
    }));
  });
}
bufferCount$1.bufferCount = bufferCount;
var bufferTime$1 = {};
var __values$4 = commonjsGlobal && commonjsGlobal.__values || function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(bufferTime$1, "__esModule", { value: true });
bufferTime$1.bufferTime = void 0;
var Subscription_1$3 = Subscription$1;
var lift_1$W = lift;
var OperatorSubscriber_1$H = OperatorSubscriber$1;
var arrRemove_1$3 = arrRemove$1;
var async_1$7 = async;
var args_1$6 = args;
var executeSchedule_1$1 = executeSchedule$1;
function bufferTime(bufferTimeSpan) {
  var _a2, _b;
  var otherArgs = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    otherArgs[_i - 1] = arguments[_i];
  }
  var scheduler = (_a2 = args_1$6.popScheduler(otherArgs)) !== null && _a2 !== void 0 ? _a2 : async_1$7.asyncScheduler;
  var bufferCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;
  var maxBufferSize = otherArgs[1] || Infinity;
  return lift_1$W.operate(function(source, subscriber) {
    var bufferRecords = [];
    var restartOnEmit = false;
    var emit = function(record) {
      var buffer2 = record.buffer, subs = record.subs;
      subs.unsubscribe();
      arrRemove_1$3.arrRemove(bufferRecords, record);
      subscriber.next(buffer2);
      restartOnEmit && startBuffer();
    };
    var startBuffer = function() {
      if (bufferRecords) {
        var subs = new Subscription_1$3.Subscription();
        subscriber.add(subs);
        var buffer2 = [];
        var record_1 = {
          buffer: buffer2,
          subs
        };
        bufferRecords.push(record_1);
        executeSchedule_1$1.executeSchedule(subs, scheduler, function() {
          return emit(record_1);
        }, bufferTimeSpan);
      }
    };
    if (bufferCreationInterval !== null && bufferCreationInterval >= 0) {
      executeSchedule_1$1.executeSchedule(subscriber, scheduler, startBuffer, bufferCreationInterval, true);
    } else {
      restartOnEmit = true;
    }
    startBuffer();
    var bufferTimeSubscriber = OperatorSubscriber_1$H.createOperatorSubscriber(subscriber, function(value) {
      var e_1, _a3;
      var recordsCopy = bufferRecords.slice();
      try {
        for (var recordsCopy_1 = __values$4(recordsCopy), recordsCopy_1_1 = recordsCopy_1.next(); !recordsCopy_1_1.done; recordsCopy_1_1 = recordsCopy_1.next()) {
          var record = recordsCopy_1_1.value;
          var buffer2 = record.buffer;
          buffer2.push(value);
          maxBufferSize <= buffer2.length && emit(record);
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (recordsCopy_1_1 && !recordsCopy_1_1.done && (_a3 = recordsCopy_1.return))
            _a3.call(recordsCopy_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
    }, function() {
      while (bufferRecords === null || bufferRecords === void 0 ? void 0 : bufferRecords.length) {
        subscriber.next(bufferRecords.shift().buffer);
      }
      bufferTimeSubscriber === null || bufferTimeSubscriber === void 0 ? void 0 : bufferTimeSubscriber.unsubscribe();
      subscriber.complete();
      subscriber.unsubscribe();
    }, void 0, function() {
      return bufferRecords = null;
    });
    source.subscribe(bufferTimeSubscriber);
  });
}
bufferTime$1.bufferTime = bufferTime;
var bufferToggle$1 = {};
var __values$3 = commonjsGlobal && commonjsGlobal.__values || function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(bufferToggle$1, "__esModule", { value: true });
bufferToggle$1.bufferToggle = void 0;
var Subscription_1$2 = Subscription$1;
var lift_1$V = lift;
var innerFrom_1$n = innerFrom$1;
var OperatorSubscriber_1$G = OperatorSubscriber$1;
var noop_1$a = noop$1;
var arrRemove_1$2 = arrRemove$1;
function bufferToggle(openings, closingSelector) {
  return lift_1$V.operate(function(source, subscriber) {
    var buffers = [];
    innerFrom_1$n.innerFrom(openings).subscribe(OperatorSubscriber_1$G.createOperatorSubscriber(subscriber, function(openValue) {
      var buffer2 = [];
      buffers.push(buffer2);
      var closingSubscription = new Subscription_1$2.Subscription();
      var emitBuffer = function() {
        arrRemove_1$2.arrRemove(buffers, buffer2);
        subscriber.next(buffer2);
        closingSubscription.unsubscribe();
      };
      closingSubscription.add(innerFrom_1$n.innerFrom(closingSelector(openValue)).subscribe(OperatorSubscriber_1$G.createOperatorSubscriber(subscriber, emitBuffer, noop_1$a.noop)));
    }, noop_1$a.noop));
    source.subscribe(OperatorSubscriber_1$G.createOperatorSubscriber(subscriber, function(value) {
      var e_1, _a2;
      try {
        for (var buffers_1 = __values$3(buffers), buffers_1_1 = buffers_1.next(); !buffers_1_1.done; buffers_1_1 = buffers_1.next()) {
          var buffer2 = buffers_1_1.value;
          buffer2.push(value);
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (buffers_1_1 && !buffers_1_1.done && (_a2 = buffers_1.return))
            _a2.call(buffers_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
    }, function() {
      while (buffers.length > 0) {
        subscriber.next(buffers.shift());
      }
      subscriber.complete();
    }));
  });
}
bufferToggle$1.bufferToggle = bufferToggle;
var bufferWhen$1 = {};
Object.defineProperty(bufferWhen$1, "__esModule", { value: true });
bufferWhen$1.bufferWhen = void 0;
var lift_1$U = lift;
var noop_1$9 = noop$1;
var OperatorSubscriber_1$F = OperatorSubscriber$1;
var innerFrom_1$m = innerFrom$1;
function bufferWhen(closingSelector) {
  return lift_1$U.operate(function(source, subscriber) {
    var buffer2 = null;
    var closingSubscriber = null;
    var openBuffer = function() {
      closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();
      var b = buffer2;
      buffer2 = [];
      b && subscriber.next(b);
      innerFrom_1$m.innerFrom(closingSelector()).subscribe(closingSubscriber = OperatorSubscriber_1$F.createOperatorSubscriber(subscriber, openBuffer, noop_1$9.noop));
    };
    openBuffer();
    source.subscribe(OperatorSubscriber_1$F.createOperatorSubscriber(subscriber, function(value) {
      return buffer2 === null || buffer2 === void 0 ? void 0 : buffer2.push(value);
    }, function() {
      buffer2 && subscriber.next(buffer2);
      subscriber.complete();
    }, void 0, function() {
      return buffer2 = closingSubscriber = null;
    }));
  });
}
bufferWhen$1.bufferWhen = bufferWhen;
var catchError$1 = {};
Object.defineProperty(catchError$1, "__esModule", { value: true });
catchError$1.catchError = void 0;
var innerFrom_1$l = innerFrom$1;
var OperatorSubscriber_1$E = OperatorSubscriber$1;
var lift_1$T = lift;
function catchError(selector) {
  return lift_1$T.operate(function(source, subscriber) {
    var innerSub = null;
    var syncUnsub = false;
    var handledResult;
    innerSub = source.subscribe(OperatorSubscriber_1$E.createOperatorSubscriber(subscriber, void 0, void 0, function(err) {
      handledResult = innerFrom_1$l.innerFrom(selector(err, catchError(selector)(source)));
      if (innerSub) {
        innerSub.unsubscribe();
        innerSub = null;
        handledResult.subscribe(subscriber);
      } else {
        syncUnsub = true;
      }
    }));
    if (syncUnsub) {
      innerSub.unsubscribe();
      innerSub = null;
      handledResult.subscribe(subscriber);
    }
  });
}
catchError$1.catchError = catchError;
var combineAll = {};
var combineLatestAll$1 = {};
var joinAllInternals$1 = {};
var toArray$1 = {};
var reduce$1 = {};
var scanInternals$1 = {};
Object.defineProperty(scanInternals$1, "__esModule", { value: true });
scanInternals$1.scanInternals = void 0;
var OperatorSubscriber_1$D = OperatorSubscriber$1;
function scanInternals(accumulator, seed, hasSeed, emitOnNext, emitBeforeComplete) {
  return function(source, subscriber) {
    var hasState = hasSeed;
    var state2 = seed;
    var index = 0;
    source.subscribe(OperatorSubscriber_1$D.createOperatorSubscriber(subscriber, function(value) {
      var i = index++;
      state2 = hasState ? accumulator(state2, value, i) : (hasState = true, value);
      emitOnNext && subscriber.next(state2);
    }, emitBeforeComplete && function() {
      hasState && subscriber.next(state2);
      subscriber.complete();
    }));
  };
}
scanInternals$1.scanInternals = scanInternals;
Object.defineProperty(reduce$1, "__esModule", { value: true });
reduce$1.reduce = void 0;
var scanInternals_1$1 = scanInternals$1;
var lift_1$S = lift;
function reduce(accumulator, seed) {
  return lift_1$S.operate(scanInternals_1$1.scanInternals(accumulator, seed, arguments.length >= 2, false, true));
}
reduce$1.reduce = reduce;
Object.defineProperty(toArray$1, "__esModule", { value: true });
toArray$1.toArray = void 0;
var reduce_1$3 = reduce$1;
var lift_1$R = lift;
var arrReducer = function(arr, value) {
  return arr.push(value), arr;
};
function toArray() {
  return lift_1$R.operate(function(source, subscriber) {
    reduce_1$3.reduce(arrReducer, [])(source).subscribe(subscriber);
  });
}
toArray$1.toArray = toArray;
Object.defineProperty(joinAllInternals$1, "__esModule", { value: true });
joinAllInternals$1.joinAllInternals = void 0;
var identity_1$a = identity$1;
var mapOneOrManyArgs_1$1 = mapOneOrManyArgs$1;
var pipe_1$1 = pipe$1;
var mergeMap_1$4 = mergeMap$1;
var toArray_1 = toArray$1;
function joinAllInternals(joinFn, project) {
  return pipe_1$1.pipe(toArray_1.toArray(), mergeMap_1$4.mergeMap(function(sources) {
    return joinFn(sources);
  }), project ? mapOneOrManyArgs_1$1.mapOneOrManyArgs(project) : identity_1$a.identity);
}
joinAllInternals$1.joinAllInternals = joinAllInternals;
Object.defineProperty(combineLatestAll$1, "__esModule", { value: true });
combineLatestAll$1.combineLatestAll = void 0;
var combineLatest_1$2 = combineLatest$3;
var joinAllInternals_1$1 = joinAllInternals$1;
function combineLatestAll(project) {
  return joinAllInternals_1$1.joinAllInternals(combineLatest_1$2.combineLatest, project);
}
combineLatestAll$1.combineLatestAll = combineLatestAll;
Object.defineProperty(combineAll, "__esModule", { value: true });
combineAll.combineAll = void 0;
var combineLatestAll_1 = combineLatestAll$1;
combineAll.combineAll = combineLatestAll_1.combineLatestAll;
var combineLatestWith$1 = {};
var combineLatest$1 = {};
var __read$d = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$d = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(combineLatest$1, "__esModule", { value: true });
combineLatest$1.combineLatest = void 0;
var combineLatest_1$1 = combineLatest$3;
var lift_1$Q = lift;
var argsOrArgArray_1$3 = argsOrArgArray$1;
var mapOneOrManyArgs_1 = mapOneOrManyArgs$1;
var pipe_1 = pipe$1;
var args_1$5 = args;
function combineLatest() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  var resultSelector = args_1$5.popResultSelector(args2);
  return resultSelector ? pipe_1.pipe(combineLatest.apply(void 0, __spreadArray$d([], __read$d(args2))), mapOneOrManyArgs_1.mapOneOrManyArgs(resultSelector)) : lift_1$Q.operate(function(source, subscriber) {
    combineLatest_1$1.combineLatestInit(__spreadArray$d([source], __read$d(argsOrArgArray_1$3.argsOrArgArray(args2))))(subscriber);
  });
}
combineLatest$1.combineLatest = combineLatest;
var __read$c = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$c = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(combineLatestWith$1, "__esModule", { value: true });
combineLatestWith$1.combineLatestWith = void 0;
var combineLatest_1 = combineLatest$1;
function combineLatestWith() {
  var otherSources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    otherSources[_i] = arguments[_i];
  }
  return combineLatest_1.combineLatest.apply(void 0, __spreadArray$c([], __read$c(otherSources)));
}
combineLatestWith$1.combineLatestWith = combineLatestWith;
var concatMap$1 = {};
Object.defineProperty(concatMap$1, "__esModule", { value: true });
concatMap$1.concatMap = void 0;
var mergeMap_1$3 = mergeMap$1;
var isFunction_1$8 = isFunction$1;
function concatMap(project, resultSelector) {
  return isFunction_1$8.isFunction(resultSelector) ? mergeMap_1$3.mergeMap(project, resultSelector, 1) : mergeMap_1$3.mergeMap(project, 1);
}
concatMap$1.concatMap = concatMap;
var concatMapTo$1 = {};
Object.defineProperty(concatMapTo$1, "__esModule", { value: true });
concatMapTo$1.concatMapTo = void 0;
var concatMap_1 = concatMap$1;
var isFunction_1$7 = isFunction$1;
function concatMapTo(innerObservable, resultSelector) {
  return isFunction_1$7.isFunction(resultSelector) ? concatMap_1.concatMap(function() {
    return innerObservable;
  }, resultSelector) : concatMap_1.concatMap(function() {
    return innerObservable;
  });
}
concatMapTo$1.concatMapTo = concatMapTo;
var concatWith$1 = {};
var concat$1 = {};
var __read$b = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$b = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(concat$1, "__esModule", { value: true });
concat$1.concat = void 0;
var lift_1$P = lift;
var concatAll_1 = concatAll$1;
var args_1$4 = args;
var from_1$1 = from$1;
function concat() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  var scheduler = args_1$4.popScheduler(args2);
  return lift_1$P.operate(function(source, subscriber) {
    concatAll_1.concatAll()(from_1$1.from(__spreadArray$b([source], __read$b(args2)), scheduler)).subscribe(subscriber);
  });
}
concat$1.concat = concat;
var __read$a = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$a = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(concatWith$1, "__esModule", { value: true });
concatWith$1.concatWith = void 0;
var concat_1$3 = concat$1;
function concatWith() {
  var otherSources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    otherSources[_i] = arguments[_i];
  }
  return concat_1$3.concat.apply(void 0, __spreadArray$a([], __read$a(otherSources)));
}
concatWith$1.concatWith = concatWith;
var connect$1 = {};
var fromSubscribable$1 = {};
Object.defineProperty(fromSubscribable$1, "__esModule", { value: true });
fromSubscribable$1.fromSubscribable = void 0;
var Observable_1$1 = Observable$1;
function fromSubscribable(subscribable) {
  return new Observable_1$1.Observable(function(subscriber) {
    return subscribable.subscribe(subscriber);
  });
}
fromSubscribable$1.fromSubscribable = fromSubscribable;
Object.defineProperty(connect$1, "__esModule", { value: true });
connect$1.connect = void 0;
var Subject_1$a = Subject$1;
var innerFrom_1$k = innerFrom$1;
var lift_1$O = lift;
var fromSubscribable_1 = fromSubscribable$1;
var DEFAULT_CONFIG = {
  connector: function() {
    return new Subject_1$a.Subject();
  }
};
function connect(selector, config2) {
  if (config2 === void 0) {
    config2 = DEFAULT_CONFIG;
  }
  var connector = config2.connector;
  return lift_1$O.operate(function(source, subscriber) {
    var subject = connector();
    innerFrom_1$k.innerFrom(selector(fromSubscribable_1.fromSubscribable(subject))).subscribe(subscriber);
    subscriber.add(source.subscribe(subject));
  });
}
connect$1.connect = connect;
var count$1 = {};
Object.defineProperty(count$1, "__esModule", { value: true });
count$1.count = void 0;
var reduce_1$2 = reduce$1;
function count(predicate) {
  return reduce_1$2.reduce(function(total, value, i) {
    return !predicate || predicate(value, i) ? total + 1 : total;
  }, 0);
}
count$1.count = count;
var debounce$1 = {};
Object.defineProperty(debounce$1, "__esModule", { value: true });
debounce$1.debounce = void 0;
var lift_1$N = lift;
var noop_1$8 = noop$1;
var OperatorSubscriber_1$C = OperatorSubscriber$1;
var innerFrom_1$j = innerFrom$1;
function debounce(durationSelector) {
  return lift_1$N.operate(function(source, subscriber) {
    var hasValue = false;
    var lastValue = null;
    var durationSubscriber = null;
    var emit = function() {
      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
      durationSubscriber = null;
      if (hasValue) {
        hasValue = false;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
    };
    source.subscribe(OperatorSubscriber_1$C.createOperatorSubscriber(subscriber, function(value) {
      durationSubscriber === null || durationSubscriber === void 0 ? void 0 : durationSubscriber.unsubscribe();
      hasValue = true;
      lastValue = value;
      durationSubscriber = OperatorSubscriber_1$C.createOperatorSubscriber(subscriber, emit, noop_1$8.noop);
      innerFrom_1$j.innerFrom(durationSelector(value)).subscribe(durationSubscriber);
    }, function() {
      emit();
      subscriber.complete();
    }, void 0, function() {
      lastValue = durationSubscriber = null;
    }));
  });
}
debounce$1.debounce = debounce;
var debounceTime$1 = {};
Object.defineProperty(debounceTime$1, "__esModule", { value: true });
debounceTime$1.debounceTime = void 0;
var async_1$6 = async;
var lift_1$M = lift;
var OperatorSubscriber_1$B = OperatorSubscriber$1;
function debounceTime(dueTime, scheduler) {
  if (scheduler === void 0) {
    scheduler = async_1$6.asyncScheduler;
  }
  return lift_1$M.operate(function(source, subscriber) {
    var activeTask = null;
    var lastValue = null;
    var lastTime = null;
    var emit = function() {
      if (activeTask) {
        activeTask.unsubscribe();
        activeTask = null;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
    };
    function emitWhenIdle() {
      var targetTime = lastTime + dueTime;
      var now = scheduler.now();
      if (now < targetTime) {
        activeTask = this.schedule(void 0, targetTime - now);
        subscriber.add(activeTask);
        return;
      }
      emit();
    }
    source.subscribe(OperatorSubscriber_1$B.createOperatorSubscriber(subscriber, function(value) {
      lastValue = value;
      lastTime = scheduler.now();
      if (!activeTask) {
        activeTask = scheduler.schedule(emitWhenIdle, dueTime);
        subscriber.add(activeTask);
      }
    }, function() {
      emit();
      subscriber.complete();
    }, void 0, function() {
      lastValue = activeTask = null;
    }));
  });
}
debounceTime$1.debounceTime = debounceTime;
var defaultIfEmpty$1 = {};
Object.defineProperty(defaultIfEmpty$1, "__esModule", { value: true });
defaultIfEmpty$1.defaultIfEmpty = void 0;
var lift_1$L = lift;
var OperatorSubscriber_1$A = OperatorSubscriber$1;
function defaultIfEmpty(defaultValue) {
  return lift_1$L.operate(function(source, subscriber) {
    var hasValue = false;
    source.subscribe(OperatorSubscriber_1$A.createOperatorSubscriber(subscriber, function(value) {
      hasValue = true;
      subscriber.next(value);
    }, function() {
      if (!hasValue) {
        subscriber.next(defaultValue);
      }
      subscriber.complete();
    }));
  });
}
defaultIfEmpty$1.defaultIfEmpty = defaultIfEmpty;
var delay$1 = {};
var delayWhen$1 = {};
var take$1 = {};
Object.defineProperty(take$1, "__esModule", { value: true });
take$1.take = void 0;
var empty_1$2 = empty;
var lift_1$K = lift;
var OperatorSubscriber_1$z = OperatorSubscriber$1;
function take(count2) {
  return count2 <= 0 ? function() {
    return empty_1$2.EMPTY;
  } : lift_1$K.operate(function(source, subscriber) {
    var seen = 0;
    source.subscribe(OperatorSubscriber_1$z.createOperatorSubscriber(subscriber, function(value) {
      if (++seen <= count2) {
        subscriber.next(value);
        if (count2 <= seen) {
          subscriber.complete();
        }
      }
    }));
  });
}
take$1.take = take;
var ignoreElements$1 = {};
Object.defineProperty(ignoreElements$1, "__esModule", { value: true });
ignoreElements$1.ignoreElements = void 0;
var lift_1$J = lift;
var OperatorSubscriber_1$y = OperatorSubscriber$1;
var noop_1$7 = noop$1;
function ignoreElements() {
  return lift_1$J.operate(function(source, subscriber) {
    source.subscribe(OperatorSubscriber_1$y.createOperatorSubscriber(subscriber, noop_1$7.noop));
  });
}
ignoreElements$1.ignoreElements = ignoreElements;
var mapTo$1 = {};
Object.defineProperty(mapTo$1, "__esModule", { value: true });
mapTo$1.mapTo = void 0;
var map_1$3 = map$1;
function mapTo(value) {
  return map_1$3.map(function() {
    return value;
  });
}
mapTo$1.mapTo = mapTo;
Object.defineProperty(delayWhen$1, "__esModule", { value: true });
delayWhen$1.delayWhen = void 0;
var concat_1$2 = concat$3;
var take_1$2 = take$1;
var ignoreElements_1 = ignoreElements$1;
var mapTo_1 = mapTo$1;
var mergeMap_1$2 = mergeMap$1;
var innerFrom_1$i = innerFrom$1;
function delayWhen(delayDurationSelector, subscriptionDelay) {
  if (subscriptionDelay) {
    return function(source) {
      return concat_1$2.concat(subscriptionDelay.pipe(take_1$2.take(1), ignoreElements_1.ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));
    };
  }
  return mergeMap_1$2.mergeMap(function(value, index) {
    return innerFrom_1$i.innerFrom(delayDurationSelector(value, index)).pipe(take_1$2.take(1), mapTo_1.mapTo(value));
  });
}
delayWhen$1.delayWhen = delayWhen;
Object.defineProperty(delay$1, "__esModule", { value: true });
delay$1.delay = void 0;
var async_1$5 = async;
var delayWhen_1 = delayWhen$1;
var timer_1$3 = timer$1;
function delay(due, scheduler) {
  if (scheduler === void 0) {
    scheduler = async_1$5.asyncScheduler;
  }
  var duration = timer_1$3.timer(due, scheduler);
  return delayWhen_1.delayWhen(function() {
    return duration;
  });
}
delay$1.delay = delay;
var dematerialize$1 = {};
Object.defineProperty(dematerialize$1, "__esModule", { value: true });
dematerialize$1.dematerialize = void 0;
var Notification_1$1 = Notification;
var lift_1$I = lift;
var OperatorSubscriber_1$x = OperatorSubscriber$1;
function dematerialize() {
  return lift_1$I.operate(function(source, subscriber) {
    source.subscribe(OperatorSubscriber_1$x.createOperatorSubscriber(subscriber, function(notification) {
      return Notification_1$1.observeNotification(notification, subscriber);
    }));
  });
}
dematerialize$1.dematerialize = dematerialize;
var distinct$1 = {};
Object.defineProperty(distinct$1, "__esModule", { value: true });
distinct$1.distinct = void 0;
var lift_1$H = lift;
var OperatorSubscriber_1$w = OperatorSubscriber$1;
var noop_1$6 = noop$1;
var innerFrom_1$h = innerFrom$1;
function distinct(keySelector, flushes) {
  return lift_1$H.operate(function(source, subscriber) {
    var distinctKeys = /* @__PURE__ */ new Set();
    source.subscribe(OperatorSubscriber_1$w.createOperatorSubscriber(subscriber, function(value) {
      var key = keySelector ? keySelector(value) : value;
      if (!distinctKeys.has(key)) {
        distinctKeys.add(key);
        subscriber.next(value);
      }
    }));
    flushes && innerFrom_1$h.innerFrom(flushes).subscribe(OperatorSubscriber_1$w.createOperatorSubscriber(subscriber, function() {
      return distinctKeys.clear();
    }, noop_1$6.noop));
  });
}
distinct$1.distinct = distinct;
var distinctUntilChanged$1 = {};
Object.defineProperty(distinctUntilChanged$1, "__esModule", { value: true });
distinctUntilChanged$1.distinctUntilChanged = void 0;
var identity_1$9 = identity$1;
var lift_1$G = lift;
var OperatorSubscriber_1$v = OperatorSubscriber$1;
function distinctUntilChanged(comparator, keySelector) {
  if (keySelector === void 0) {
    keySelector = identity_1$9.identity;
  }
  comparator = comparator !== null && comparator !== void 0 ? comparator : defaultCompare;
  return lift_1$G.operate(function(source, subscriber) {
    var previousKey;
    var first2 = true;
    source.subscribe(OperatorSubscriber_1$v.createOperatorSubscriber(subscriber, function(value) {
      var currentKey = keySelector(value);
      if (first2 || !comparator(previousKey, currentKey)) {
        first2 = false;
        previousKey = currentKey;
        subscriber.next(value);
      }
    }));
  });
}
distinctUntilChanged$1.distinctUntilChanged = distinctUntilChanged;
function defaultCompare(a, b) {
  return a === b;
}
var distinctUntilKeyChanged$1 = {};
Object.defineProperty(distinctUntilKeyChanged$1, "__esModule", { value: true });
distinctUntilKeyChanged$1.distinctUntilKeyChanged = void 0;
var distinctUntilChanged_1 = distinctUntilChanged$1;
function distinctUntilKeyChanged(key, compare) {
  return distinctUntilChanged_1.distinctUntilChanged(function(x, y) {
    return compare ? compare(x[key], y[key]) : x[key] === y[key];
  });
}
distinctUntilKeyChanged$1.distinctUntilKeyChanged = distinctUntilKeyChanged;
var elementAt$1 = {};
var throwIfEmpty$1 = {};
Object.defineProperty(throwIfEmpty$1, "__esModule", { value: true });
throwIfEmpty$1.throwIfEmpty = void 0;
var EmptyError_1$3 = EmptyError;
var lift_1$F = lift;
var OperatorSubscriber_1$u = OperatorSubscriber$1;
function throwIfEmpty(errorFactory) {
  if (errorFactory === void 0) {
    errorFactory = defaultErrorFactory;
  }
  return lift_1$F.operate(function(source, subscriber) {
    var hasValue = false;
    source.subscribe(OperatorSubscriber_1$u.createOperatorSubscriber(subscriber, function(value) {
      hasValue = true;
      subscriber.next(value);
    }, function() {
      return hasValue ? subscriber.complete() : subscriber.error(errorFactory());
    }));
  });
}
throwIfEmpty$1.throwIfEmpty = throwIfEmpty;
function defaultErrorFactory() {
  return new EmptyError_1$3.EmptyError();
}
Object.defineProperty(elementAt$1, "__esModule", { value: true });
elementAt$1.elementAt = void 0;
var ArgumentOutOfRangeError_1 = ArgumentOutOfRangeError;
var filter_1$4 = filter$1;
var throwIfEmpty_1$2 = throwIfEmpty$1;
var defaultIfEmpty_1$2 = defaultIfEmpty$1;
var take_1$1 = take$1;
function elementAt(index, defaultValue) {
  if (index < 0) {
    throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();
  }
  var hasDefaultValue = arguments.length >= 2;
  return function(source) {
    return source.pipe(filter_1$4.filter(function(v, i) {
      return i === index;
    }), take_1$1.take(1), hasDefaultValue ? defaultIfEmpty_1$2.defaultIfEmpty(defaultValue) : throwIfEmpty_1$2.throwIfEmpty(function() {
      return new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();
    }));
  };
}
elementAt$1.elementAt = elementAt;
var endWith$1 = {};
var __read$9 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$9 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(endWith$1, "__esModule", { value: true });
endWith$1.endWith = void 0;
var concat_1$1 = concat$3;
var of_1 = of$1;
function endWith() {
  var values2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    values2[_i] = arguments[_i];
  }
  return function(source) {
    return concat_1$1.concat(source, of_1.of.apply(void 0, __spreadArray$9([], __read$9(values2))));
  };
}
endWith$1.endWith = endWith;
var every$1 = {};
Object.defineProperty(every$1, "__esModule", { value: true });
every$1.every = void 0;
var lift_1$E = lift;
var OperatorSubscriber_1$t = OperatorSubscriber$1;
function every(predicate, thisArg) {
  return lift_1$E.operate(function(source, subscriber) {
    var index = 0;
    source.subscribe(OperatorSubscriber_1$t.createOperatorSubscriber(subscriber, function(value) {
      if (!predicate.call(thisArg, value, index++, source)) {
        subscriber.next(false);
        subscriber.complete();
      }
    }, function() {
      subscriber.next(true);
      subscriber.complete();
    }));
  });
}
every$1.every = every;
var exhaust = {};
var exhaustAll$1 = {};
var exhaustMap$1 = {};
Object.defineProperty(exhaustMap$1, "__esModule", { value: true });
exhaustMap$1.exhaustMap = void 0;
var map_1$2 = map$1;
var innerFrom_1$g = innerFrom$1;
var lift_1$D = lift;
var OperatorSubscriber_1$s = OperatorSubscriber$1;
function exhaustMap(project, resultSelector) {
  if (resultSelector) {
    return function(source) {
      return source.pipe(exhaustMap(function(a, i) {
        return innerFrom_1$g.innerFrom(project(a, i)).pipe(map_1$2.map(function(b, ii) {
          return resultSelector(a, b, i, ii);
        }));
      }));
    };
  }
  return lift_1$D.operate(function(source, subscriber) {
    var index = 0;
    var innerSub = null;
    var isComplete = false;
    source.subscribe(OperatorSubscriber_1$s.createOperatorSubscriber(subscriber, function(outerValue) {
      if (!innerSub) {
        innerSub = OperatorSubscriber_1$s.createOperatorSubscriber(subscriber, void 0, function() {
          innerSub = null;
          isComplete && subscriber.complete();
        });
        innerFrom_1$g.innerFrom(project(outerValue, index++)).subscribe(innerSub);
      }
    }, function() {
      isComplete = true;
      !innerSub && subscriber.complete();
    }));
  });
}
exhaustMap$1.exhaustMap = exhaustMap;
Object.defineProperty(exhaustAll$1, "__esModule", { value: true });
exhaustAll$1.exhaustAll = void 0;
var exhaustMap_1 = exhaustMap$1;
var identity_1$8 = identity$1;
function exhaustAll() {
  return exhaustMap_1.exhaustMap(identity_1$8.identity);
}
exhaustAll$1.exhaustAll = exhaustAll;
Object.defineProperty(exhaust, "__esModule", { value: true });
exhaust.exhaust = void 0;
var exhaustAll_1 = exhaustAll$1;
exhaust.exhaust = exhaustAll_1.exhaustAll;
var expand$1 = {};
Object.defineProperty(expand$1, "__esModule", { value: true });
expand$1.expand = void 0;
var lift_1$C = lift;
var mergeInternals_1$1 = mergeInternals$1;
function expand(project, concurrent, scheduler) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }
  concurrent = (concurrent || 0) < 1 ? Infinity : concurrent;
  return lift_1$C.operate(function(source, subscriber) {
    return mergeInternals_1$1.mergeInternals(source, subscriber, project, concurrent, void 0, true, scheduler);
  });
}
expand$1.expand = expand;
var finalize$1 = {};
Object.defineProperty(finalize$1, "__esModule", { value: true });
finalize$1.finalize = void 0;
var lift_1$B = lift;
function finalize(callback) {
  return lift_1$B.operate(function(source, subscriber) {
    try {
      source.subscribe(subscriber);
    } finally {
      subscriber.add(callback);
    }
  });
}
finalize$1.finalize = finalize;
var find$1 = {};
Object.defineProperty(find$1, "__esModule", { value: true });
find$1.createFind = find$1.find = void 0;
var lift_1$A = lift;
var OperatorSubscriber_1$r = OperatorSubscriber$1;
function find(predicate, thisArg) {
  return lift_1$A.operate(createFind(predicate, thisArg, "value"));
}
find$1.find = find;
function createFind(predicate, thisArg, emit) {
  var findIndex2 = emit === "index";
  return function(source, subscriber) {
    var index = 0;
    source.subscribe(OperatorSubscriber_1$r.createOperatorSubscriber(subscriber, function(value) {
      var i = index++;
      if (predicate.call(thisArg, value, i, source)) {
        subscriber.next(findIndex2 ? i : value);
        subscriber.complete();
      }
    }, function() {
      subscriber.next(findIndex2 ? -1 : void 0);
      subscriber.complete();
    }));
  };
}
find$1.createFind = createFind;
var findIndex$1 = {};
Object.defineProperty(findIndex$1, "__esModule", { value: true });
findIndex$1.findIndex = void 0;
var lift_1$z = lift;
var find_1 = find$1;
function findIndex(predicate, thisArg) {
  return lift_1$z.operate(find_1.createFind(predicate, thisArg, "index"));
}
findIndex$1.findIndex = findIndex;
var first$1 = {};
Object.defineProperty(first$1, "__esModule", { value: true });
first$1.first = void 0;
var EmptyError_1$2 = EmptyError;
var filter_1$3 = filter$1;
var take_1 = take$1;
var defaultIfEmpty_1$1 = defaultIfEmpty$1;
var throwIfEmpty_1$1 = throwIfEmpty$1;
var identity_1$7 = identity$1;
function first(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function(source) {
    return source.pipe(predicate ? filter_1$3.filter(function(v, i) {
      return predicate(v, i, source);
    }) : identity_1$7.identity, take_1.take(1), hasDefaultValue ? defaultIfEmpty_1$1.defaultIfEmpty(defaultValue) : throwIfEmpty_1$1.throwIfEmpty(function() {
      return new EmptyError_1$2.EmptyError();
    }));
  };
}
first$1.first = first;
var groupBy$1 = {};
Object.defineProperty(groupBy$1, "__esModule", { value: true });
groupBy$1.groupBy = void 0;
var Observable_1 = Observable$1;
var innerFrom_1$f = innerFrom$1;
var Subject_1$9 = Subject$1;
var lift_1$y = lift;
var OperatorSubscriber_1$q = OperatorSubscriber$1;
function groupBy(keySelector, elementOrOptions, duration, connector) {
  return lift_1$y.operate(function(source, subscriber) {
    var element;
    if (!elementOrOptions || typeof elementOrOptions === "function") {
      element = elementOrOptions;
    } else {
      duration = elementOrOptions.duration, element = elementOrOptions.element, connector = elementOrOptions.connector;
    }
    var groups = /* @__PURE__ */ new Map();
    var notify = function(cb) {
      groups.forEach(cb);
      cb(subscriber);
    };
    var handleError = function(err) {
      return notify(function(consumer) {
        return consumer.error(err);
      });
    };
    var activeGroups = 0;
    var teardownAttempted = false;
    var groupBySourceSubscriber = new OperatorSubscriber_1$q.OperatorSubscriber(subscriber, function(value) {
      try {
        var key_1 = keySelector(value);
        var group_1 = groups.get(key_1);
        if (!group_1) {
          groups.set(key_1, group_1 = connector ? connector() : new Subject_1$9.Subject());
          var grouped = createGroupedObservable(key_1, group_1);
          subscriber.next(grouped);
          if (duration) {
            var durationSubscriber_1 = OperatorSubscriber_1$q.createOperatorSubscriber(group_1, function() {
              group_1.complete();
              durationSubscriber_1 === null || durationSubscriber_1 === void 0 ? void 0 : durationSubscriber_1.unsubscribe();
            }, void 0, void 0, function() {
              return groups.delete(key_1);
            });
            groupBySourceSubscriber.add(innerFrom_1$f.innerFrom(duration(grouped)).subscribe(durationSubscriber_1));
          }
        }
        group_1.next(element ? element(value) : value);
      } catch (err) {
        handleError(err);
      }
    }, function() {
      return notify(function(consumer) {
        return consumer.complete();
      });
    }, handleError, function() {
      return groups.clear();
    }, function() {
      teardownAttempted = true;
      return activeGroups === 0;
    });
    source.subscribe(groupBySourceSubscriber);
    function createGroupedObservable(key, groupSubject) {
      var result = new Observable_1.Observable(function(groupSubscriber) {
        activeGroups++;
        var innerSub = groupSubject.subscribe(groupSubscriber);
        return function() {
          innerSub.unsubscribe();
          --activeGroups === 0 && teardownAttempted && groupBySourceSubscriber.unsubscribe();
        };
      });
      result.key = key;
      return result;
    }
  });
}
groupBy$1.groupBy = groupBy;
var isEmpty$1 = {};
Object.defineProperty(isEmpty$1, "__esModule", { value: true });
isEmpty$1.isEmpty = void 0;
var lift_1$x = lift;
var OperatorSubscriber_1$p = OperatorSubscriber$1;
function isEmpty() {
  return lift_1$x.operate(function(source, subscriber) {
    source.subscribe(OperatorSubscriber_1$p.createOperatorSubscriber(subscriber, function() {
      subscriber.next(false);
      subscriber.complete();
    }, function() {
      subscriber.next(true);
      subscriber.complete();
    }));
  });
}
isEmpty$1.isEmpty = isEmpty;
var last$1 = {};
var takeLast$1 = {};
var __values$2 = commonjsGlobal && commonjsGlobal.__values || function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(takeLast$1, "__esModule", { value: true });
takeLast$1.takeLast = void 0;
var empty_1$1 = empty;
var lift_1$w = lift;
var OperatorSubscriber_1$o = OperatorSubscriber$1;
function takeLast(count2) {
  return count2 <= 0 ? function() {
    return empty_1$1.EMPTY;
  } : lift_1$w.operate(function(source, subscriber) {
    var buffer2 = [];
    source.subscribe(OperatorSubscriber_1$o.createOperatorSubscriber(subscriber, function(value) {
      buffer2.push(value);
      count2 < buffer2.length && buffer2.shift();
    }, function() {
      var e_1, _a2;
      try {
        for (var buffer_1 = __values$2(buffer2), buffer_1_1 = buffer_1.next(); !buffer_1_1.done; buffer_1_1 = buffer_1.next()) {
          var value = buffer_1_1.value;
          subscriber.next(value);
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (buffer_1_1 && !buffer_1_1.done && (_a2 = buffer_1.return))
            _a2.call(buffer_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      subscriber.complete();
    }, void 0, function() {
      buffer2 = null;
    }));
  });
}
takeLast$1.takeLast = takeLast;
Object.defineProperty(last$1, "__esModule", { value: true });
last$1.last = void 0;
var EmptyError_1$1 = EmptyError;
var filter_1$2 = filter$1;
var takeLast_1 = takeLast$1;
var throwIfEmpty_1 = throwIfEmpty$1;
var defaultIfEmpty_1 = defaultIfEmpty$1;
var identity_1$6 = identity$1;
function last(predicate, defaultValue) {
  var hasDefaultValue = arguments.length >= 2;
  return function(source) {
    return source.pipe(predicate ? filter_1$2.filter(function(v, i) {
      return predicate(v, i, source);
    }) : identity_1$6.identity, takeLast_1.takeLast(1), hasDefaultValue ? defaultIfEmpty_1.defaultIfEmpty(defaultValue) : throwIfEmpty_1.throwIfEmpty(function() {
      return new EmptyError_1$1.EmptyError();
    }));
  };
}
last$1.last = last;
var materialize$1 = {};
Object.defineProperty(materialize$1, "__esModule", { value: true });
materialize$1.materialize = void 0;
var Notification_1 = Notification;
var lift_1$v = lift;
var OperatorSubscriber_1$n = OperatorSubscriber$1;
function materialize() {
  return lift_1$v.operate(function(source, subscriber) {
    source.subscribe(OperatorSubscriber_1$n.createOperatorSubscriber(subscriber, function(value) {
      subscriber.next(Notification_1.Notification.createNext(value));
    }, function() {
      subscriber.next(Notification_1.Notification.createComplete());
      subscriber.complete();
    }, function(err) {
      subscriber.next(Notification_1.Notification.createError(err));
      subscriber.complete();
    }));
  });
}
materialize$1.materialize = materialize;
var max$1 = {};
Object.defineProperty(max$1, "__esModule", { value: true });
max$1.max = void 0;
var reduce_1$1 = reduce$1;
var isFunction_1$6 = isFunction$1;
function max(comparer) {
  return reduce_1$1.reduce(isFunction_1$6.isFunction(comparer) ? function(x, y) {
    return comparer(x, y) > 0 ? x : y;
  } : function(x, y) {
    return x > y ? x : y;
  });
}
max$1.max = max;
var flatMap = {};
Object.defineProperty(flatMap, "__esModule", { value: true });
flatMap.flatMap = void 0;
var mergeMap_1$1 = mergeMap$1;
flatMap.flatMap = mergeMap_1$1.mergeMap;
var mergeMapTo$1 = {};
Object.defineProperty(mergeMapTo$1, "__esModule", { value: true });
mergeMapTo$1.mergeMapTo = void 0;
var mergeMap_1 = mergeMap$1;
var isFunction_1$5 = isFunction$1;
function mergeMapTo(innerObservable, resultSelector, concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }
  if (isFunction_1$5.isFunction(resultSelector)) {
    return mergeMap_1.mergeMap(function() {
      return innerObservable;
    }, resultSelector, concurrent);
  }
  if (typeof resultSelector === "number") {
    concurrent = resultSelector;
  }
  return mergeMap_1.mergeMap(function() {
    return innerObservable;
  }, concurrent);
}
mergeMapTo$1.mergeMapTo = mergeMapTo;
var mergeScan$1 = {};
Object.defineProperty(mergeScan$1, "__esModule", { value: true });
mergeScan$1.mergeScan = void 0;
var lift_1$u = lift;
var mergeInternals_1 = mergeInternals$1;
function mergeScan(accumulator, seed, concurrent) {
  if (concurrent === void 0) {
    concurrent = Infinity;
  }
  return lift_1$u.operate(function(source, subscriber) {
    var state2 = seed;
    return mergeInternals_1.mergeInternals(source, subscriber, function(value, index) {
      return accumulator(state2, value, index);
    }, concurrent, function(value) {
      state2 = value;
    }, false, void 0, function() {
      return state2 = null;
    });
  });
}
mergeScan$1.mergeScan = mergeScan;
var mergeWith$1 = {};
var merge$2 = {};
var __read$8 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$8 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(merge$2, "__esModule", { value: true });
merge$2.merge = void 0;
var lift_1$t = lift;
var argsOrArgArray_1$2 = argsOrArgArray$1;
var mergeAll_1 = mergeAll$1;
var args_1$3 = args;
var from_1 = from$1;
function merge$1() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  var scheduler = args_1$3.popScheduler(args2);
  var concurrent = args_1$3.popNumber(args2, Infinity);
  args2 = argsOrArgArray_1$2.argsOrArgArray(args2);
  return lift_1$t.operate(function(source, subscriber) {
    mergeAll_1.mergeAll(concurrent)(from_1.from(__spreadArray$8([source], __read$8(args2)), scheduler)).subscribe(subscriber);
  });
}
merge$2.merge = merge$1;
var __read$7 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$7 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(mergeWith$1, "__esModule", { value: true });
mergeWith$1.mergeWith = void 0;
var merge_1 = merge$2;
function mergeWith() {
  var otherSources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    otherSources[_i] = arguments[_i];
  }
  return merge_1.merge.apply(void 0, __spreadArray$7([], __read$7(otherSources)));
}
mergeWith$1.mergeWith = mergeWith;
var min$1 = {};
Object.defineProperty(min$1, "__esModule", { value: true });
min$1.min = void 0;
var reduce_1 = reduce$1;
var isFunction_1$4 = isFunction$1;
function min(comparer) {
  return reduce_1.reduce(isFunction_1$4.isFunction(comparer) ? function(x, y) {
    return comparer(x, y) < 0 ? x : y;
  } : function(x, y) {
    return x < y ? x : y;
  });
}
min$1.min = min;
var multicast$1 = {};
Object.defineProperty(multicast$1, "__esModule", { value: true });
multicast$1.multicast = void 0;
var ConnectableObservable_1$2 = ConnectableObservable$1;
var isFunction_1$3 = isFunction$1;
var connect_1$1 = connect$1;
function multicast(subjectOrSubjectFactory, selector) {
  var subjectFactory = isFunction_1$3.isFunction(subjectOrSubjectFactory) ? subjectOrSubjectFactory : function() {
    return subjectOrSubjectFactory;
  };
  if (isFunction_1$3.isFunction(selector)) {
    return connect_1$1.connect(selector, {
      connector: subjectFactory
    });
  }
  return function(source) {
    return new ConnectableObservable_1$2.ConnectableObservable(source, subjectFactory);
  };
}
multicast$1.multicast = multicast;
var onErrorResumeNextWith$1 = {};
var __read$6 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$6 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(onErrorResumeNextWith$1, "__esModule", { value: true });
onErrorResumeNextWith$1.onErrorResumeNext = onErrorResumeNextWith$1.onErrorResumeNextWith = void 0;
var argsOrArgArray_1$1 = argsOrArgArray$1;
var onErrorResumeNext_1 = onErrorResumeNext$1;
function onErrorResumeNextWith() {
  var sources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }
  var nextSources = argsOrArgArray_1$1.argsOrArgArray(sources);
  return function(source) {
    return onErrorResumeNext_1.onErrorResumeNext.apply(void 0, __spreadArray$6([source], __read$6(nextSources)));
  };
}
onErrorResumeNextWith$1.onErrorResumeNextWith = onErrorResumeNextWith;
onErrorResumeNextWith$1.onErrorResumeNext = onErrorResumeNextWith;
var pairwise$1 = {};
Object.defineProperty(pairwise$1, "__esModule", { value: true });
pairwise$1.pairwise = void 0;
var lift_1$s = lift;
var OperatorSubscriber_1$m = OperatorSubscriber$1;
function pairwise() {
  return lift_1$s.operate(function(source, subscriber) {
    var prev;
    var hasPrev = false;
    source.subscribe(OperatorSubscriber_1$m.createOperatorSubscriber(subscriber, function(value) {
      var p = prev;
      prev = value;
      hasPrev && subscriber.next([p, value]);
      hasPrev = true;
    }));
  });
}
pairwise$1.pairwise = pairwise;
var pluck$1 = {};
Object.defineProperty(pluck$1, "__esModule", { value: true });
pluck$1.pluck = void 0;
var map_1$1 = map$1;
function pluck() {
  var properties = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    properties[_i] = arguments[_i];
  }
  var length = properties.length;
  if (length === 0) {
    throw new Error("list of properties cannot be empty.");
  }
  return map_1$1.map(function(x) {
    var currentProp = x;
    for (var i = 0; i < length; i++) {
      var p = currentProp === null || currentProp === void 0 ? void 0 : currentProp[properties[i]];
      if (typeof p !== "undefined") {
        currentProp = p;
      } else {
        return void 0;
      }
    }
    return currentProp;
  });
}
pluck$1.pluck = pluck;
var publish$1 = {};
Object.defineProperty(publish$1, "__esModule", { value: true });
publish$1.publish = void 0;
var Subject_1$8 = Subject$1;
var multicast_1$1 = multicast$1;
var connect_1 = connect$1;
function publish(selector) {
  return selector ? function(source) {
    return connect_1.connect(selector)(source);
  } : function(source) {
    return multicast_1$1.multicast(new Subject_1$8.Subject())(source);
  };
}
publish$1.publish = publish;
var publishBehavior$1 = {};
Object.defineProperty(publishBehavior$1, "__esModule", { value: true });
publishBehavior$1.publishBehavior = void 0;
var BehaviorSubject_1 = BehaviorSubject$1;
var ConnectableObservable_1$1 = ConnectableObservable$1;
function publishBehavior(initialValue) {
  return function(source) {
    var subject = new BehaviorSubject_1.BehaviorSubject(initialValue);
    return new ConnectableObservable_1$1.ConnectableObservable(source, function() {
      return subject;
    });
  };
}
publishBehavior$1.publishBehavior = publishBehavior;
var publishLast$1 = {};
Object.defineProperty(publishLast$1, "__esModule", { value: true });
publishLast$1.publishLast = void 0;
var AsyncSubject_1 = AsyncSubject$1;
var ConnectableObservable_1 = ConnectableObservable$1;
function publishLast() {
  return function(source) {
    var subject = new AsyncSubject_1.AsyncSubject();
    return new ConnectableObservable_1.ConnectableObservable(source, function() {
      return subject;
    });
  };
}
publishLast$1.publishLast = publishLast;
var publishReplay$1 = {};
Object.defineProperty(publishReplay$1, "__esModule", { value: true });
publishReplay$1.publishReplay = void 0;
var ReplaySubject_1$1 = ReplaySubject$1;
var multicast_1 = multicast$1;
var isFunction_1$2 = isFunction$1;
function publishReplay(bufferSize, windowTime2, selectorOrScheduler, timestampProvider) {
  if (selectorOrScheduler && !isFunction_1$2.isFunction(selectorOrScheduler)) {
    timestampProvider = selectorOrScheduler;
  }
  var selector = isFunction_1$2.isFunction(selectorOrScheduler) ? selectorOrScheduler : void 0;
  return function(source) {
    return multicast_1.multicast(new ReplaySubject_1$1.ReplaySubject(bufferSize, windowTime2, timestampProvider), selector)(source);
  };
}
publishReplay$1.publishReplay = publishReplay;
var raceWith$1 = {};
var __read$5 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$5 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(raceWith$1, "__esModule", { value: true });
raceWith$1.raceWith = void 0;
var race_1 = race$3;
var lift_1$r = lift;
var identity_1$5 = identity$1;
function raceWith() {
  var otherSources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    otherSources[_i] = arguments[_i];
  }
  return !otherSources.length ? identity_1$5.identity : lift_1$r.operate(function(source, subscriber) {
    race_1.raceInit(__spreadArray$5([source], __read$5(otherSources)))(subscriber);
  });
}
raceWith$1.raceWith = raceWith;
var repeat$1 = {};
Object.defineProperty(repeat$1, "__esModule", { value: true });
repeat$1.repeat = void 0;
var empty_1 = empty;
var lift_1$q = lift;
var OperatorSubscriber_1$l = OperatorSubscriber$1;
var innerFrom_1$e = innerFrom$1;
var timer_1$2 = timer$1;
function repeat(countOrConfig) {
  var _a2;
  var count2 = Infinity;
  var delay2;
  if (countOrConfig != null) {
    if (typeof countOrConfig === "object") {
      _a2 = countOrConfig.count, count2 = _a2 === void 0 ? Infinity : _a2, delay2 = countOrConfig.delay;
    } else {
      count2 = countOrConfig;
    }
  }
  return count2 <= 0 ? function() {
    return empty_1.EMPTY;
  } : lift_1$q.operate(function(source, subscriber) {
    var soFar = 0;
    var sourceSub;
    var resubscribe = function() {
      sourceSub === null || sourceSub === void 0 ? void 0 : sourceSub.unsubscribe();
      sourceSub = null;
      if (delay2 != null) {
        var notifier = typeof delay2 === "number" ? timer_1$2.timer(delay2) : innerFrom_1$e.innerFrom(delay2(soFar));
        var notifierSubscriber_1 = OperatorSubscriber_1$l.createOperatorSubscriber(subscriber, function() {
          notifierSubscriber_1.unsubscribe();
          subscribeToSource();
        });
        notifier.subscribe(notifierSubscriber_1);
      } else {
        subscribeToSource();
      }
    };
    var subscribeToSource = function() {
      var syncUnsub = false;
      sourceSub = source.subscribe(OperatorSubscriber_1$l.createOperatorSubscriber(subscriber, void 0, function() {
        if (++soFar < count2) {
          if (sourceSub) {
            resubscribe();
          } else {
            syncUnsub = true;
          }
        } else {
          subscriber.complete();
        }
      }));
      if (syncUnsub) {
        resubscribe();
      }
    };
    subscribeToSource();
  });
}
repeat$1.repeat = repeat;
var repeatWhen$1 = {};
Object.defineProperty(repeatWhen$1, "__esModule", { value: true });
repeatWhen$1.repeatWhen = void 0;
var innerFrom_1$d = innerFrom$1;
var Subject_1$7 = Subject$1;
var lift_1$p = lift;
var OperatorSubscriber_1$k = OperatorSubscriber$1;
function repeatWhen(notifier) {
  return lift_1$p.operate(function(source, subscriber) {
    var innerSub;
    var syncResub = false;
    var completions$;
    var isNotifierComplete = false;
    var isMainComplete = false;
    var checkComplete = function() {
      return isMainComplete && isNotifierComplete && (subscriber.complete(), true);
    };
    var getCompletionSubject = function() {
      if (!completions$) {
        completions$ = new Subject_1$7.Subject();
        innerFrom_1$d.innerFrom(notifier(completions$)).subscribe(OperatorSubscriber_1$k.createOperatorSubscriber(subscriber, function() {
          if (innerSub) {
            subscribeForRepeatWhen();
          } else {
            syncResub = true;
          }
        }, function() {
          isNotifierComplete = true;
          checkComplete();
        }));
      }
      return completions$;
    };
    var subscribeForRepeatWhen = function() {
      isMainComplete = false;
      innerSub = source.subscribe(OperatorSubscriber_1$k.createOperatorSubscriber(subscriber, void 0, function() {
        isMainComplete = true;
        !checkComplete() && getCompletionSubject().next();
      }));
      if (syncResub) {
        innerSub.unsubscribe();
        innerSub = null;
        syncResub = false;
        subscribeForRepeatWhen();
      }
    };
    subscribeForRepeatWhen();
  });
}
repeatWhen$1.repeatWhen = repeatWhen;
var retry$1 = {};
Object.defineProperty(retry$1, "__esModule", { value: true });
retry$1.retry = void 0;
var lift_1$o = lift;
var OperatorSubscriber_1$j = OperatorSubscriber$1;
var identity_1$4 = identity$1;
var timer_1$1 = timer$1;
var innerFrom_1$c = innerFrom$1;
function retry(configOrCount) {
  if (configOrCount === void 0) {
    configOrCount = Infinity;
  }
  var config2;
  if (configOrCount && typeof configOrCount === "object") {
    config2 = configOrCount;
  } else {
    config2 = {
      count: configOrCount
    };
  }
  var _a2 = config2.count, count2 = _a2 === void 0 ? Infinity : _a2, delay2 = config2.delay, _b = config2.resetOnSuccess, resetOnSuccess = _b === void 0 ? false : _b;
  return count2 <= 0 ? identity_1$4.identity : lift_1$o.operate(function(source, subscriber) {
    var soFar = 0;
    var innerSub;
    var subscribeForRetry = function() {
      var syncUnsub = false;
      innerSub = source.subscribe(OperatorSubscriber_1$j.createOperatorSubscriber(subscriber, function(value) {
        if (resetOnSuccess) {
          soFar = 0;
        }
        subscriber.next(value);
      }, void 0, function(err) {
        if (soFar++ < count2) {
          var resub_1 = function() {
            if (innerSub) {
              innerSub.unsubscribe();
              innerSub = null;
              subscribeForRetry();
            } else {
              syncUnsub = true;
            }
          };
          if (delay2 != null) {
            var notifier = typeof delay2 === "number" ? timer_1$1.timer(delay2) : innerFrom_1$c.innerFrom(delay2(err, soFar));
            var notifierSubscriber_1 = OperatorSubscriber_1$j.createOperatorSubscriber(subscriber, function() {
              notifierSubscriber_1.unsubscribe();
              resub_1();
            }, function() {
              subscriber.complete();
            });
            notifier.subscribe(notifierSubscriber_1);
          } else {
            resub_1();
          }
        } else {
          subscriber.error(err);
        }
      }));
      if (syncUnsub) {
        innerSub.unsubscribe();
        innerSub = null;
        subscribeForRetry();
      }
    };
    subscribeForRetry();
  });
}
retry$1.retry = retry;
var retryWhen$1 = {};
Object.defineProperty(retryWhen$1, "__esModule", { value: true });
retryWhen$1.retryWhen = void 0;
var innerFrom_1$b = innerFrom$1;
var Subject_1$6 = Subject$1;
var lift_1$n = lift;
var OperatorSubscriber_1$i = OperatorSubscriber$1;
function retryWhen(notifier) {
  return lift_1$n.operate(function(source, subscriber) {
    var innerSub;
    var syncResub = false;
    var errors$;
    var subscribeForRetryWhen = function() {
      innerSub = source.subscribe(OperatorSubscriber_1$i.createOperatorSubscriber(subscriber, void 0, void 0, function(err) {
        if (!errors$) {
          errors$ = new Subject_1$6.Subject();
          innerFrom_1$b.innerFrom(notifier(errors$)).subscribe(OperatorSubscriber_1$i.createOperatorSubscriber(subscriber, function() {
            return innerSub ? subscribeForRetryWhen() : syncResub = true;
          }));
        }
        if (errors$) {
          errors$.next(err);
        }
      }));
      if (syncResub) {
        innerSub.unsubscribe();
        innerSub = null;
        syncResub = false;
        subscribeForRetryWhen();
      }
    };
    subscribeForRetryWhen();
  });
}
retryWhen$1.retryWhen = retryWhen;
var sample$1 = {};
Object.defineProperty(sample$1, "__esModule", { value: true });
sample$1.sample = void 0;
var innerFrom_1$a = innerFrom$1;
var lift_1$m = lift;
var noop_1$5 = noop$1;
var OperatorSubscriber_1$h = OperatorSubscriber$1;
function sample(notifier) {
  return lift_1$m.operate(function(source, subscriber) {
    var hasValue = false;
    var lastValue = null;
    source.subscribe(OperatorSubscriber_1$h.createOperatorSubscriber(subscriber, function(value) {
      hasValue = true;
      lastValue = value;
    }));
    innerFrom_1$a.innerFrom(notifier).subscribe(OperatorSubscriber_1$h.createOperatorSubscriber(subscriber, function() {
      if (hasValue) {
        hasValue = false;
        var value = lastValue;
        lastValue = null;
        subscriber.next(value);
      }
    }, noop_1$5.noop));
  });
}
sample$1.sample = sample;
var sampleTime$1 = {};
Object.defineProperty(sampleTime$1, "__esModule", { value: true });
sampleTime$1.sampleTime = void 0;
var async_1$4 = async;
var sample_1 = sample$1;
var interval_1 = interval$1;
function sampleTime(period, scheduler) {
  if (scheduler === void 0) {
    scheduler = async_1$4.asyncScheduler;
  }
  return sample_1.sample(interval_1.interval(period, scheduler));
}
sampleTime$1.sampleTime = sampleTime;
var scan$1 = {};
Object.defineProperty(scan$1, "__esModule", { value: true });
scan$1.scan = void 0;
var lift_1$l = lift;
var scanInternals_1 = scanInternals$1;
function scan(accumulator, seed) {
  return lift_1$l.operate(scanInternals_1.scanInternals(accumulator, seed, arguments.length >= 2, true));
}
scan$1.scan = scan;
var sequenceEqual$1 = {};
Object.defineProperty(sequenceEqual$1, "__esModule", { value: true });
sequenceEqual$1.sequenceEqual = void 0;
var lift_1$k = lift;
var OperatorSubscriber_1$g = OperatorSubscriber$1;
var innerFrom_1$9 = innerFrom$1;
function sequenceEqual(compareTo, comparator) {
  if (comparator === void 0) {
    comparator = function(a, b) {
      return a === b;
    };
  }
  return lift_1$k.operate(function(source, subscriber) {
    var aState = createState();
    var bState = createState();
    var emit = function(isEqual) {
      subscriber.next(isEqual);
      subscriber.complete();
    };
    var createSubscriber = function(selfState, otherState) {
      var sequenceEqualSubscriber = OperatorSubscriber_1$g.createOperatorSubscriber(subscriber, function(a) {
        var buffer2 = otherState.buffer, complete = otherState.complete;
        if (buffer2.length === 0) {
          complete ? emit(false) : selfState.buffer.push(a);
        } else {
          !comparator(a, buffer2.shift()) && emit(false);
        }
      }, function() {
        selfState.complete = true;
        var complete = otherState.complete, buffer2 = otherState.buffer;
        complete && emit(buffer2.length === 0);
        sequenceEqualSubscriber === null || sequenceEqualSubscriber === void 0 ? void 0 : sequenceEqualSubscriber.unsubscribe();
      });
      return sequenceEqualSubscriber;
    };
    source.subscribe(createSubscriber(aState, bState));
    innerFrom_1$9.innerFrom(compareTo).subscribe(createSubscriber(bState, aState));
  });
}
sequenceEqual$1.sequenceEqual = sequenceEqual;
function createState() {
  return {
    buffer: [],
    complete: false
  };
}
var share$1 = {};
var __read$4 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$4 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(share$1, "__esModule", { value: true });
share$1.share = void 0;
var innerFrom_1$8 = innerFrom$1;
var Subject_1$5 = Subject$1;
var Subscriber_1 = Subscriber;
var lift_1$j = lift;
function share(options2) {
  if (options2 === void 0) {
    options2 = {};
  }
  var _a2 = options2.connector, connector = _a2 === void 0 ? function() {
    return new Subject_1$5.Subject();
  } : _a2, _b = options2.resetOnError, resetOnError = _b === void 0 ? true : _b, _c = options2.resetOnComplete, resetOnComplete = _c === void 0 ? true : _c, _d = options2.resetOnRefCountZero, resetOnRefCountZero = _d === void 0 ? true : _d;
  return function(wrapperSource) {
    var connection;
    var resetConnection;
    var subject;
    var refCount2 = 0;
    var hasCompleted = false;
    var hasErrored = false;
    var cancelReset = function() {
      resetConnection === null || resetConnection === void 0 ? void 0 : resetConnection.unsubscribe();
      resetConnection = void 0;
    };
    var reset = function() {
      cancelReset();
      connection = subject = void 0;
      hasCompleted = hasErrored = false;
    };
    var resetAndUnsubscribe = function() {
      var conn = connection;
      reset();
      conn === null || conn === void 0 ? void 0 : conn.unsubscribe();
    };
    return lift_1$j.operate(function(source, subscriber) {
      refCount2++;
      if (!hasErrored && !hasCompleted) {
        cancelReset();
      }
      var dest = subject = subject !== null && subject !== void 0 ? subject : connector();
      subscriber.add(function() {
        refCount2--;
        if (refCount2 === 0 && !hasErrored && !hasCompleted) {
          resetConnection = handleReset(resetAndUnsubscribe, resetOnRefCountZero);
        }
      });
      dest.subscribe(subscriber);
      if (!connection && refCount2 > 0) {
        connection = new Subscriber_1.SafeSubscriber({
          next: function(value) {
            return dest.next(value);
          },
          error: function(err) {
            hasErrored = true;
            cancelReset();
            resetConnection = handleReset(reset, resetOnError, err);
            dest.error(err);
          },
          complete: function() {
            hasCompleted = true;
            cancelReset();
            resetConnection = handleReset(reset, resetOnComplete);
            dest.complete();
          }
        });
        innerFrom_1$8.innerFrom(source).subscribe(connection);
      }
    })(wrapperSource);
  };
}
share$1.share = share;
function handleReset(reset, on) {
  var args2 = [];
  for (var _i = 2; _i < arguments.length; _i++) {
    args2[_i - 2] = arguments[_i];
  }
  if (on === true) {
    reset();
    return;
  }
  if (on === false) {
    return;
  }
  var onSubscriber = new Subscriber_1.SafeSubscriber({
    next: function() {
      onSubscriber.unsubscribe();
      reset();
    }
  });
  return innerFrom_1$8.innerFrom(on.apply(void 0, __spreadArray$4([], __read$4(args2)))).subscribe(onSubscriber);
}
var shareReplay$1 = {};
Object.defineProperty(shareReplay$1, "__esModule", { value: true });
shareReplay$1.shareReplay = void 0;
var ReplaySubject_1 = ReplaySubject$1;
var share_1 = share$1;
function shareReplay(configOrBufferSize, windowTime2, scheduler) {
  var _a2, _b, _c;
  var bufferSize;
  var refCount2 = false;
  if (configOrBufferSize && typeof configOrBufferSize === "object") {
    _a2 = configOrBufferSize.bufferSize, bufferSize = _a2 === void 0 ? Infinity : _a2, _b = configOrBufferSize.windowTime, windowTime2 = _b === void 0 ? Infinity : _b, _c = configOrBufferSize.refCount, refCount2 = _c === void 0 ? false : _c, scheduler = configOrBufferSize.scheduler;
  } else {
    bufferSize = configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity;
  }
  return share_1.share({
    connector: function() {
      return new ReplaySubject_1.ReplaySubject(bufferSize, windowTime2, scheduler);
    },
    resetOnError: true,
    resetOnComplete: false,
    resetOnRefCountZero: refCount2
  });
}
shareReplay$1.shareReplay = shareReplay;
var single$1 = {};
Object.defineProperty(single$1, "__esModule", { value: true });
single$1.single = void 0;
var EmptyError_1 = EmptyError;
var SequenceError_1 = SequenceError;
var NotFoundError_1 = NotFoundError;
var lift_1$i = lift;
var OperatorSubscriber_1$f = OperatorSubscriber$1;
function single(predicate) {
  return lift_1$i.operate(function(source, subscriber) {
    var hasValue = false;
    var singleValue;
    var seenValue = false;
    var index = 0;
    source.subscribe(OperatorSubscriber_1$f.createOperatorSubscriber(subscriber, function(value) {
      seenValue = true;
      if (!predicate || predicate(value, index++, source)) {
        hasValue && subscriber.error(new SequenceError_1.SequenceError("Too many matching values"));
        hasValue = true;
        singleValue = value;
      }
    }, function() {
      if (hasValue) {
        subscriber.next(singleValue);
        subscriber.complete();
      } else {
        subscriber.error(seenValue ? new NotFoundError_1.NotFoundError("No matching values") : new EmptyError_1.EmptyError());
      }
    }));
  });
}
single$1.single = single;
var skip$1 = {};
Object.defineProperty(skip$1, "__esModule", { value: true });
skip$1.skip = void 0;
var filter_1$1 = filter$1;
function skip(count2) {
  return filter_1$1.filter(function(_, index) {
    return count2 <= index;
  });
}
skip$1.skip = skip;
var skipLast$1 = {};
Object.defineProperty(skipLast$1, "__esModule", { value: true });
skipLast$1.skipLast = void 0;
var identity_1$3 = identity$1;
var lift_1$h = lift;
var OperatorSubscriber_1$e = OperatorSubscriber$1;
function skipLast(skipCount) {
  return skipCount <= 0 ? identity_1$3.identity : lift_1$h.operate(function(source, subscriber) {
    var ring = new Array(skipCount);
    var seen = 0;
    source.subscribe(OperatorSubscriber_1$e.createOperatorSubscriber(subscriber, function(value) {
      var valueIndex = seen++;
      if (valueIndex < skipCount) {
        ring[valueIndex] = value;
      } else {
        var index = valueIndex % skipCount;
        var oldValue = ring[index];
        ring[index] = value;
        subscriber.next(oldValue);
      }
    }));
    return function() {
      ring = null;
    };
  });
}
skipLast$1.skipLast = skipLast;
var skipUntil$1 = {};
Object.defineProperty(skipUntil$1, "__esModule", { value: true });
skipUntil$1.skipUntil = void 0;
var lift_1$g = lift;
var OperatorSubscriber_1$d = OperatorSubscriber$1;
var innerFrom_1$7 = innerFrom$1;
var noop_1$4 = noop$1;
function skipUntil(notifier) {
  return lift_1$g.operate(function(source, subscriber) {
    var taking = false;
    var skipSubscriber = OperatorSubscriber_1$d.createOperatorSubscriber(subscriber, function() {
      skipSubscriber === null || skipSubscriber === void 0 ? void 0 : skipSubscriber.unsubscribe();
      taking = true;
    }, noop_1$4.noop);
    innerFrom_1$7.innerFrom(notifier).subscribe(skipSubscriber);
    source.subscribe(OperatorSubscriber_1$d.createOperatorSubscriber(subscriber, function(value) {
      return taking && subscriber.next(value);
    }));
  });
}
skipUntil$1.skipUntil = skipUntil;
var skipWhile$1 = {};
Object.defineProperty(skipWhile$1, "__esModule", { value: true });
skipWhile$1.skipWhile = void 0;
var lift_1$f = lift;
var OperatorSubscriber_1$c = OperatorSubscriber$1;
function skipWhile(predicate) {
  return lift_1$f.operate(function(source, subscriber) {
    var taking = false;
    var index = 0;
    source.subscribe(OperatorSubscriber_1$c.createOperatorSubscriber(subscriber, function(value) {
      return (taking || (taking = !predicate(value, index++))) && subscriber.next(value);
    }));
  });
}
skipWhile$1.skipWhile = skipWhile;
var startWith$1 = {};
Object.defineProperty(startWith$1, "__esModule", { value: true });
startWith$1.startWith = void 0;
var concat_1 = concat$3;
var args_1$2 = args;
var lift_1$e = lift;
function startWith() {
  var values2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    values2[_i] = arguments[_i];
  }
  var scheduler = args_1$2.popScheduler(values2);
  return lift_1$e.operate(function(source, subscriber) {
    (scheduler ? concat_1.concat(values2, source, scheduler) : concat_1.concat(values2, source)).subscribe(subscriber);
  });
}
startWith$1.startWith = startWith;
var switchAll$1 = {};
var switchMap$1 = {};
Object.defineProperty(switchMap$1, "__esModule", { value: true });
switchMap$1.switchMap = void 0;
var innerFrom_1$6 = innerFrom$1;
var lift_1$d = lift;
var OperatorSubscriber_1$b = OperatorSubscriber$1;
function switchMap(project, resultSelector) {
  return lift_1$d.operate(function(source, subscriber) {
    var innerSubscriber = null;
    var index = 0;
    var isComplete = false;
    var checkComplete = function() {
      return isComplete && !innerSubscriber && subscriber.complete();
    };
    source.subscribe(OperatorSubscriber_1$b.createOperatorSubscriber(subscriber, function(value) {
      innerSubscriber === null || innerSubscriber === void 0 ? void 0 : innerSubscriber.unsubscribe();
      var innerIndex = 0;
      var outerIndex = index++;
      innerFrom_1$6.innerFrom(project(value, outerIndex)).subscribe(innerSubscriber = OperatorSubscriber_1$b.createOperatorSubscriber(subscriber, function(innerValue) {
        return subscriber.next(resultSelector ? resultSelector(value, innerValue, outerIndex, innerIndex++) : innerValue);
      }, function() {
        innerSubscriber = null;
        checkComplete();
      }));
    }, function() {
      isComplete = true;
      checkComplete();
    }));
  });
}
switchMap$1.switchMap = switchMap;
Object.defineProperty(switchAll$1, "__esModule", { value: true });
switchAll$1.switchAll = void 0;
var switchMap_1$2 = switchMap$1;
var identity_1$2 = identity$1;
function switchAll() {
  return switchMap_1$2.switchMap(identity_1$2.identity);
}
switchAll$1.switchAll = switchAll;
var switchMapTo$1 = {};
Object.defineProperty(switchMapTo$1, "__esModule", { value: true });
switchMapTo$1.switchMapTo = void 0;
var switchMap_1$1 = switchMap$1;
var isFunction_1$1 = isFunction$1;
function switchMapTo(innerObservable, resultSelector) {
  return isFunction_1$1.isFunction(resultSelector) ? switchMap_1$1.switchMap(function() {
    return innerObservable;
  }, resultSelector) : switchMap_1$1.switchMap(function() {
    return innerObservable;
  });
}
switchMapTo$1.switchMapTo = switchMapTo;
var switchScan$1 = {};
Object.defineProperty(switchScan$1, "__esModule", { value: true });
switchScan$1.switchScan = void 0;
var switchMap_1 = switchMap$1;
var lift_1$c = lift;
function switchScan(accumulator, seed) {
  return lift_1$c.operate(function(source, subscriber) {
    var state2 = seed;
    switchMap_1.switchMap(function(value, index) {
      return accumulator(state2, value, index);
    }, function(_, innerValue) {
      return state2 = innerValue, innerValue;
    })(source).subscribe(subscriber);
    return function() {
      state2 = null;
    };
  });
}
switchScan$1.switchScan = switchScan;
var takeUntil$1 = {};
Object.defineProperty(takeUntil$1, "__esModule", { value: true });
takeUntil$1.takeUntil = void 0;
var lift_1$b = lift;
var OperatorSubscriber_1$a = OperatorSubscriber$1;
var innerFrom_1$5 = innerFrom$1;
var noop_1$3 = noop$1;
function takeUntil(notifier) {
  return lift_1$b.operate(function(source, subscriber) {
    innerFrom_1$5.innerFrom(notifier).subscribe(OperatorSubscriber_1$a.createOperatorSubscriber(subscriber, function() {
      return subscriber.complete();
    }, noop_1$3.noop));
    !subscriber.closed && source.subscribe(subscriber);
  });
}
takeUntil$1.takeUntil = takeUntil;
var takeWhile$1 = {};
Object.defineProperty(takeWhile$1, "__esModule", { value: true });
takeWhile$1.takeWhile = void 0;
var lift_1$a = lift;
var OperatorSubscriber_1$9 = OperatorSubscriber$1;
function takeWhile(predicate, inclusive) {
  if (inclusive === void 0) {
    inclusive = false;
  }
  return lift_1$a.operate(function(source, subscriber) {
    var index = 0;
    source.subscribe(OperatorSubscriber_1$9.createOperatorSubscriber(subscriber, function(value) {
      var result = predicate(value, index++);
      (result || inclusive) && subscriber.next(value);
      !result && subscriber.complete();
    }));
  });
}
takeWhile$1.takeWhile = takeWhile;
var tap$1 = {};
Object.defineProperty(tap$1, "__esModule", { value: true });
tap$1.tap = void 0;
var isFunction_1 = isFunction$1;
var lift_1$9 = lift;
var OperatorSubscriber_1$8 = OperatorSubscriber$1;
var identity_1$1 = identity$1;
function tap(observerOrNext, error2, complete) {
  var tapObserver = isFunction_1.isFunction(observerOrNext) || error2 || complete ? { next: observerOrNext, error: error2, complete } : observerOrNext;
  return tapObserver ? lift_1$9.operate(function(source, subscriber) {
    var _a2;
    (_a2 = tapObserver.subscribe) === null || _a2 === void 0 ? void 0 : _a2.call(tapObserver);
    var isUnsub = true;
    source.subscribe(OperatorSubscriber_1$8.createOperatorSubscriber(subscriber, function(value) {
      var _a3;
      (_a3 = tapObserver.next) === null || _a3 === void 0 ? void 0 : _a3.call(tapObserver, value);
      subscriber.next(value);
    }, function() {
      var _a3;
      isUnsub = false;
      (_a3 = tapObserver.complete) === null || _a3 === void 0 ? void 0 : _a3.call(tapObserver);
      subscriber.complete();
    }, function(err) {
      var _a3;
      isUnsub = false;
      (_a3 = tapObserver.error) === null || _a3 === void 0 ? void 0 : _a3.call(tapObserver, err);
      subscriber.error(err);
    }, function() {
      var _a3, _b;
      if (isUnsub) {
        (_a3 = tapObserver.unsubscribe) === null || _a3 === void 0 ? void 0 : _a3.call(tapObserver);
      }
      (_b = tapObserver.finalize) === null || _b === void 0 ? void 0 : _b.call(tapObserver);
    }));
  }) : identity_1$1.identity;
}
tap$1.tap = tap;
var throttle$1 = {};
Object.defineProperty(throttle$1, "__esModule", { value: true });
throttle$1.throttle = void 0;
var lift_1$8 = lift;
var OperatorSubscriber_1$7 = OperatorSubscriber$1;
var innerFrom_1$4 = innerFrom$1;
function throttle(durationSelector, config2) {
  return lift_1$8.operate(function(source, subscriber) {
    var _a2 = config2 !== null && config2 !== void 0 ? config2 : {}, _b = _a2.leading, leading = _b === void 0 ? true : _b, _c = _a2.trailing, trailing = _c === void 0 ? false : _c;
    var hasValue = false;
    var sendValue = null;
    var throttled = null;
    var isComplete = false;
    var endThrottling = function() {
      throttled === null || throttled === void 0 ? void 0 : throttled.unsubscribe();
      throttled = null;
      if (trailing) {
        send();
        isComplete && subscriber.complete();
      }
    };
    var cleanupThrottling = function() {
      throttled = null;
      isComplete && subscriber.complete();
    };
    var startThrottle = function(value) {
      return throttled = innerFrom_1$4.innerFrom(durationSelector(value)).subscribe(OperatorSubscriber_1$7.createOperatorSubscriber(subscriber, endThrottling, cleanupThrottling));
    };
    var send = function() {
      if (hasValue) {
        hasValue = false;
        var value = sendValue;
        sendValue = null;
        subscriber.next(value);
        !isComplete && startThrottle(value);
      }
    };
    source.subscribe(OperatorSubscriber_1$7.createOperatorSubscriber(subscriber, function(value) {
      hasValue = true;
      sendValue = value;
      !(throttled && !throttled.closed) && (leading ? send() : startThrottle(value));
    }, function() {
      isComplete = true;
      !(trailing && hasValue && throttled && !throttled.closed) && subscriber.complete();
    }));
  });
}
throttle$1.throttle = throttle;
var throttleTime$1 = {};
Object.defineProperty(throttleTime$1, "__esModule", { value: true });
throttleTime$1.throttleTime = void 0;
var async_1$3 = async;
var throttle_1 = throttle$1;
var timer_1 = timer$1;
function throttleTime(duration, scheduler, config2) {
  if (scheduler === void 0) {
    scheduler = async_1$3.asyncScheduler;
  }
  var duration$ = timer_1.timer(duration, scheduler);
  return throttle_1.throttle(function() {
    return duration$;
  }, config2);
}
throttleTime$1.throttleTime = throttleTime;
var timeInterval$1 = {};
Object.defineProperty(timeInterval$1, "__esModule", { value: true });
timeInterval$1.TimeInterval = timeInterval$1.timeInterval = void 0;
var async_1$2 = async;
var lift_1$7 = lift;
var OperatorSubscriber_1$6 = OperatorSubscriber$1;
function timeInterval(scheduler) {
  if (scheduler === void 0) {
    scheduler = async_1$2.asyncScheduler;
  }
  return lift_1$7.operate(function(source, subscriber) {
    var last2 = scheduler.now();
    source.subscribe(OperatorSubscriber_1$6.createOperatorSubscriber(subscriber, function(value) {
      var now = scheduler.now();
      var interval2 = now - last2;
      last2 = now;
      subscriber.next(new TimeInterval(value, interval2));
    }));
  });
}
timeInterval$1.timeInterval = timeInterval;
var TimeInterval = function() {
  function TimeInterval2(value, interval2) {
    this.value = value;
    this.interval = interval2;
  }
  return TimeInterval2;
}();
timeInterval$1.TimeInterval = TimeInterval;
var timeoutWith$1 = {};
Object.defineProperty(timeoutWith$1, "__esModule", { value: true });
timeoutWith$1.timeoutWith = void 0;
var async_1$1 = async;
var isDate_1 = isDate;
var timeout_1 = timeout;
function timeoutWith(due, withObservable, scheduler) {
  var first2;
  var each;
  var _with;
  scheduler = scheduler !== null && scheduler !== void 0 ? scheduler : async_1$1.async;
  if (isDate_1.isValidDate(due)) {
    first2 = due;
  } else if (typeof due === "number") {
    each = due;
  }
  if (withObservable) {
    _with = function() {
      return withObservable;
    };
  } else {
    throw new TypeError("No observable provided to switch to");
  }
  if (first2 == null && each == null) {
    throw new TypeError("No timeout provided.");
  }
  return timeout_1.timeout({
    first: first2,
    each,
    scheduler,
    with: _with
  });
}
timeoutWith$1.timeoutWith = timeoutWith;
var timestamp$1 = {};
Object.defineProperty(timestamp$1, "__esModule", { value: true });
timestamp$1.timestamp = void 0;
var dateTimestampProvider_1 = dateTimestampProvider;
var map_1 = map$1;
function timestamp(timestampProvider) {
  if (timestampProvider === void 0) {
    timestampProvider = dateTimestampProvider_1.dateTimestampProvider;
  }
  return map_1.map(function(value) {
    return { value, timestamp: timestampProvider.now() };
  });
}
timestamp$1.timestamp = timestamp;
var window$2 = {};
Object.defineProperty(window$2, "__esModule", { value: true });
window$2.window = void 0;
var Subject_1$4 = Subject$1;
var lift_1$6 = lift;
var OperatorSubscriber_1$5 = OperatorSubscriber$1;
var noop_1$2 = noop$1;
var innerFrom_1$3 = innerFrom$1;
function window$1(windowBoundaries) {
  return lift_1$6.operate(function(source, subscriber) {
    var windowSubject = new Subject_1$4.Subject();
    subscriber.next(windowSubject.asObservable());
    var errorHandler = function(err) {
      windowSubject.error(err);
      subscriber.error(err);
    };
    source.subscribe(OperatorSubscriber_1$5.createOperatorSubscriber(subscriber, function(value) {
      return windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.next(value);
    }, function() {
      windowSubject.complete();
      subscriber.complete();
    }, errorHandler));
    innerFrom_1$3.innerFrom(windowBoundaries).subscribe(OperatorSubscriber_1$5.createOperatorSubscriber(subscriber, function() {
      windowSubject.complete();
      subscriber.next(windowSubject = new Subject_1$4.Subject());
    }, noop_1$2.noop, errorHandler));
    return function() {
      windowSubject === null || windowSubject === void 0 ? void 0 : windowSubject.unsubscribe();
      windowSubject = null;
    };
  });
}
window$2.window = window$1;
var windowCount$1 = {};
var __values$1 = commonjsGlobal && commonjsGlobal.__values || function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(windowCount$1, "__esModule", { value: true });
windowCount$1.windowCount = void 0;
var Subject_1$3 = Subject$1;
var lift_1$5 = lift;
var OperatorSubscriber_1$4 = OperatorSubscriber$1;
function windowCount(windowSize, startWindowEvery) {
  if (startWindowEvery === void 0) {
    startWindowEvery = 0;
  }
  var startEvery = startWindowEvery > 0 ? startWindowEvery : windowSize;
  return lift_1$5.operate(function(source, subscriber) {
    var windows = [new Subject_1$3.Subject()];
    var count2 = 0;
    subscriber.next(windows[0].asObservable());
    source.subscribe(OperatorSubscriber_1$4.createOperatorSubscriber(subscriber, function(value) {
      var e_1, _a2;
      try {
        for (var windows_1 = __values$1(windows), windows_1_1 = windows_1.next(); !windows_1_1.done; windows_1_1 = windows_1.next()) {
          var window_1 = windows_1_1.value;
          window_1.next(value);
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (windows_1_1 && !windows_1_1.done && (_a2 = windows_1.return))
            _a2.call(windows_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
      var c = count2 - windowSize + 1;
      if (c >= 0 && c % startEvery === 0) {
        windows.shift().complete();
      }
      if (++count2 % startEvery === 0) {
        var window_2 = new Subject_1$3.Subject();
        windows.push(window_2);
        subscriber.next(window_2.asObservable());
      }
    }, function() {
      while (windows.length > 0) {
        windows.shift().complete();
      }
      subscriber.complete();
    }, function(err) {
      while (windows.length > 0) {
        windows.shift().error(err);
      }
      subscriber.error(err);
    }, function() {
      windows = null;
    }));
  });
}
windowCount$1.windowCount = windowCount;
var windowTime$1 = {};
Object.defineProperty(windowTime$1, "__esModule", { value: true });
windowTime$1.windowTime = void 0;
var Subject_1$2 = Subject$1;
var async_1 = async;
var Subscription_1$1 = Subscription$1;
var lift_1$4 = lift;
var OperatorSubscriber_1$3 = OperatorSubscriber$1;
var arrRemove_1$1 = arrRemove$1;
var args_1$1 = args;
var executeSchedule_1 = executeSchedule$1;
function windowTime(windowTimeSpan) {
  var _a2, _b;
  var otherArgs = [];
  for (var _i = 1; _i < arguments.length; _i++) {
    otherArgs[_i - 1] = arguments[_i];
  }
  var scheduler = (_a2 = args_1$1.popScheduler(otherArgs)) !== null && _a2 !== void 0 ? _a2 : async_1.asyncScheduler;
  var windowCreationInterval = (_b = otherArgs[0]) !== null && _b !== void 0 ? _b : null;
  var maxWindowSize = otherArgs[1] || Infinity;
  return lift_1$4.operate(function(source, subscriber) {
    var windowRecords = [];
    var restartOnClose = false;
    var closeWindow = function(record) {
      var window2 = record.window, subs = record.subs;
      window2.complete();
      subs.unsubscribe();
      arrRemove_1$1.arrRemove(windowRecords, record);
      restartOnClose && startWindow();
    };
    var startWindow = function() {
      if (windowRecords) {
        var subs = new Subscription_1$1.Subscription();
        subscriber.add(subs);
        var window_1 = new Subject_1$2.Subject();
        var record_1 = {
          window: window_1,
          subs,
          seen: 0
        };
        windowRecords.push(record_1);
        subscriber.next(window_1.asObservable());
        executeSchedule_1.executeSchedule(subs, scheduler, function() {
          return closeWindow(record_1);
        }, windowTimeSpan);
      }
    };
    if (windowCreationInterval !== null && windowCreationInterval >= 0) {
      executeSchedule_1.executeSchedule(subscriber, scheduler, startWindow, windowCreationInterval, true);
    } else {
      restartOnClose = true;
    }
    startWindow();
    var loop = function(cb) {
      return windowRecords.slice().forEach(cb);
    };
    var terminate = function(cb) {
      loop(function(_a3) {
        var window2 = _a3.window;
        return cb(window2);
      });
      cb(subscriber);
      subscriber.unsubscribe();
    };
    source.subscribe(OperatorSubscriber_1$3.createOperatorSubscriber(subscriber, function(value) {
      loop(function(record) {
        record.window.next(value);
        maxWindowSize <= ++record.seen && closeWindow(record);
      });
    }, function() {
      return terminate(function(consumer) {
        return consumer.complete();
      });
    }, function(err) {
      return terminate(function(consumer) {
        return consumer.error(err);
      });
    }));
    return function() {
      windowRecords = null;
    };
  });
}
windowTime$1.windowTime = windowTime;
var windowToggle$1 = {};
var __values = commonjsGlobal && commonjsGlobal.__values || function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function() {
        if (o && i >= o.length)
          o = void 0;
        return { value: o && o[i++], done: !o };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
Object.defineProperty(windowToggle$1, "__esModule", { value: true });
windowToggle$1.windowToggle = void 0;
var Subject_1$1 = Subject$1;
var Subscription_1 = Subscription$1;
var lift_1$3 = lift;
var innerFrom_1$2 = innerFrom$1;
var OperatorSubscriber_1$2 = OperatorSubscriber$1;
var noop_1$1 = noop$1;
var arrRemove_1 = arrRemove$1;
function windowToggle(openings, closingSelector) {
  return lift_1$3.operate(function(source, subscriber) {
    var windows = [];
    var handleError = function(err) {
      while (0 < windows.length) {
        windows.shift().error(err);
      }
      subscriber.error(err);
    };
    innerFrom_1$2.innerFrom(openings).subscribe(OperatorSubscriber_1$2.createOperatorSubscriber(subscriber, function(openValue) {
      var window2 = new Subject_1$1.Subject();
      windows.push(window2);
      var closingSubscription = new Subscription_1.Subscription();
      var closeWindow = function() {
        arrRemove_1.arrRemove(windows, window2);
        window2.complete();
        closingSubscription.unsubscribe();
      };
      var closingNotifier;
      try {
        closingNotifier = innerFrom_1$2.innerFrom(closingSelector(openValue));
      } catch (err) {
        handleError(err);
        return;
      }
      subscriber.next(window2.asObservable());
      closingSubscription.add(closingNotifier.subscribe(OperatorSubscriber_1$2.createOperatorSubscriber(subscriber, closeWindow, noop_1$1.noop, handleError)));
    }, noop_1$1.noop));
    source.subscribe(OperatorSubscriber_1$2.createOperatorSubscriber(subscriber, function(value) {
      var e_1, _a2;
      var windowsCopy = windows.slice();
      try {
        for (var windowsCopy_1 = __values(windowsCopy), windowsCopy_1_1 = windowsCopy_1.next(); !windowsCopy_1_1.done; windowsCopy_1_1 = windowsCopy_1.next()) {
          var window_1 = windowsCopy_1_1.value;
          window_1.next(value);
        }
      } catch (e_1_1) {
        e_1 = { error: e_1_1 };
      } finally {
        try {
          if (windowsCopy_1_1 && !windowsCopy_1_1.done && (_a2 = windowsCopy_1.return))
            _a2.call(windowsCopy_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
    }, function() {
      while (0 < windows.length) {
        windows.shift().complete();
      }
      subscriber.complete();
    }, handleError, function() {
      while (0 < windows.length) {
        windows.shift().unsubscribe();
      }
    }));
  });
}
windowToggle$1.windowToggle = windowToggle;
var windowWhen$1 = {};
Object.defineProperty(windowWhen$1, "__esModule", { value: true });
windowWhen$1.windowWhen = void 0;
var Subject_1 = Subject$1;
var lift_1$2 = lift;
var OperatorSubscriber_1$1 = OperatorSubscriber$1;
var innerFrom_1$1 = innerFrom$1;
function windowWhen(closingSelector) {
  return lift_1$2.operate(function(source, subscriber) {
    var window2;
    var closingSubscriber;
    var handleError = function(err) {
      window2.error(err);
      subscriber.error(err);
    };
    var openWindow = function() {
      closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();
      window2 === null || window2 === void 0 ? void 0 : window2.complete();
      window2 = new Subject_1.Subject();
      subscriber.next(window2.asObservable());
      var closingNotifier;
      try {
        closingNotifier = innerFrom_1$1.innerFrom(closingSelector());
      } catch (err) {
        handleError(err);
        return;
      }
      closingNotifier.subscribe(closingSubscriber = OperatorSubscriber_1$1.createOperatorSubscriber(subscriber, openWindow, openWindow, handleError));
    };
    openWindow();
    source.subscribe(OperatorSubscriber_1$1.createOperatorSubscriber(subscriber, function(value) {
      return window2.next(value);
    }, function() {
      window2.complete();
      subscriber.complete();
    }, handleError, function() {
      closingSubscriber === null || closingSubscriber === void 0 ? void 0 : closingSubscriber.unsubscribe();
      window2 = null;
    }));
  });
}
windowWhen$1.windowWhen = windowWhen;
var withLatestFrom$1 = {};
var __read$3 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$3 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(withLatestFrom$1, "__esModule", { value: true });
withLatestFrom$1.withLatestFrom = void 0;
var lift_1$1 = lift;
var OperatorSubscriber_1 = OperatorSubscriber$1;
var innerFrom_1 = innerFrom$1;
var identity_1 = identity$1;
var noop_1 = noop$1;
var args_1 = args;
function withLatestFrom() {
  var inputs = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    inputs[_i] = arguments[_i];
  }
  var project = args_1.popResultSelector(inputs);
  return lift_1$1.operate(function(source, subscriber) {
    var len = inputs.length;
    var otherValues = new Array(len);
    var hasValue = inputs.map(function() {
      return false;
    });
    var ready = false;
    var _loop_1 = function(i2) {
      innerFrom_1.innerFrom(inputs[i2]).subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function(value) {
        otherValues[i2] = value;
        if (!ready && !hasValue[i2]) {
          hasValue[i2] = true;
          (ready = hasValue.every(identity_1.identity)) && (hasValue = null);
        }
      }, noop_1.noop));
    };
    for (var i = 0; i < len; i++) {
      _loop_1(i);
    }
    source.subscribe(OperatorSubscriber_1.createOperatorSubscriber(subscriber, function(value) {
      if (ready) {
        var values2 = __spreadArray$3([value], __read$3(otherValues));
        subscriber.next(project ? project.apply(void 0, __spreadArray$3([], __read$3(values2))) : values2);
      }
    }));
  });
}
withLatestFrom$1.withLatestFrom = withLatestFrom;
var zipAll$1 = {};
Object.defineProperty(zipAll$1, "__esModule", { value: true });
zipAll$1.zipAll = void 0;
var zip_1$2 = zip$3;
var joinAllInternals_1 = joinAllInternals$1;
function zipAll(project) {
  return joinAllInternals_1.joinAllInternals(zip_1$2.zip, project);
}
zipAll$1.zipAll = zipAll;
var zipWith$1 = {};
var zip$1 = {};
var __read$2 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$2 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(zip$1, "__esModule", { value: true });
zip$1.zip = void 0;
var zip_1$1 = zip$3;
var lift_1 = lift;
function zip() {
  var sources = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    sources[_i] = arguments[_i];
  }
  return lift_1.operate(function(source, subscriber) {
    zip_1$1.zip.apply(void 0, __spreadArray$2([source], __read$2(sources))).subscribe(subscriber);
  });
}
zip$1.zip = zip;
var __read$1 = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray$1 = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(zipWith$1, "__esModule", { value: true });
zipWith$1.zipWith = void 0;
var zip_1 = zip$1;
function zipWith() {
  var otherInputs = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    otherInputs[_i] = arguments[_i];
  }
  return zip_1.zip.apply(void 0, __spreadArray$1([], __read$1(otherInputs)));
}
zipWith$1.zipWith = zipWith;
(function(exports) {
  var __createBinding = commonjsGlobal && commonjsGlobal.__createBinding || (Object.create ? function(o, m, k, k2) {
    if (k2 === void 0)
      k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() {
      return m[k];
    } });
  } : function(o, m, k, k2) {
    if (k2 === void 0)
      k2 = k;
    o[k2] = m[k];
  });
  var __exportStar = commonjsGlobal && commonjsGlobal.__exportStar || function(m, exports2) {
    for (var p in m)
      if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports2, p))
        __createBinding(exports2, m, p);
  };
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.interval = exports.iif = exports.generate = exports.fromEventPattern = exports.fromEvent = exports.from = exports.forkJoin = exports.empty = exports.defer = exports.connectable = exports.concat = exports.combineLatest = exports.bindNodeCallback = exports.bindCallback = exports.UnsubscriptionError = exports.TimeoutError = exports.SequenceError = exports.ObjectUnsubscribedError = exports.NotFoundError = exports.EmptyError = exports.ArgumentOutOfRangeError = exports.firstValueFrom = exports.lastValueFrom = exports.isObservable = exports.identity = exports.noop = exports.pipe = exports.NotificationKind = exports.Notification = exports.Subscriber = exports.Subscription = exports.Scheduler = exports.VirtualAction = exports.VirtualTimeScheduler = exports.animationFrameScheduler = exports.animationFrame = exports.queueScheduler = exports.queue = exports.asyncScheduler = exports.async = exports.asapScheduler = exports.asap = exports.AsyncSubject = exports.ReplaySubject = exports.BehaviorSubject = exports.Subject = exports.animationFrames = exports.observable = exports.ConnectableObservable = exports.Observable = void 0;
  exports.filter = exports.expand = exports.exhaustMap = exports.exhaustAll = exports.exhaust = exports.every = exports.endWith = exports.elementAt = exports.distinctUntilKeyChanged = exports.distinctUntilChanged = exports.distinct = exports.dematerialize = exports.delayWhen = exports.delay = exports.defaultIfEmpty = exports.debounceTime = exports.debounce = exports.count = exports.connect = exports.concatWith = exports.concatMapTo = exports.concatMap = exports.concatAll = exports.combineLatestWith = exports.combineLatestAll = exports.combineAll = exports.catchError = exports.bufferWhen = exports.bufferToggle = exports.bufferTime = exports.bufferCount = exports.buffer = exports.auditTime = exports.audit = exports.config = exports.NEVER = exports.EMPTY = exports.scheduled = exports.zip = exports.using = exports.timer = exports.throwError = exports.range = exports.race = exports.partition = exports.pairs = exports.onErrorResumeNext = exports.of = exports.never = exports.merge = void 0;
  exports.switchMap = exports.switchAll = exports.subscribeOn = exports.startWith = exports.skipWhile = exports.skipUntil = exports.skipLast = exports.skip = exports.single = exports.shareReplay = exports.share = exports.sequenceEqual = exports.scan = exports.sampleTime = exports.sample = exports.refCount = exports.retryWhen = exports.retry = exports.repeatWhen = exports.repeat = exports.reduce = exports.raceWith = exports.publishReplay = exports.publishLast = exports.publishBehavior = exports.publish = exports.pluck = exports.pairwise = exports.onErrorResumeNextWith = exports.observeOn = exports.multicast = exports.min = exports.mergeWith = exports.mergeScan = exports.mergeMapTo = exports.mergeMap = exports.flatMap = exports.mergeAll = exports.max = exports.materialize = exports.mapTo = exports.map = exports.last = exports.isEmpty = exports.ignoreElements = exports.groupBy = exports.first = exports.findIndex = exports.find = exports.finalize = void 0;
  exports.zipWith = exports.zipAll = exports.withLatestFrom = exports.windowWhen = exports.windowToggle = exports.windowTime = exports.windowCount = exports.window = exports.toArray = exports.timestamp = exports.timeoutWith = exports.timeout = exports.timeInterval = exports.throwIfEmpty = exports.throttleTime = exports.throttle = exports.tap = exports.takeWhile = exports.takeUntil = exports.takeLast = exports.take = exports.switchScan = exports.switchMapTo = void 0;
  var Observable_12 = Observable$1;
  Object.defineProperty(exports, "Observable", { enumerable: true, get: function() {
    return Observable_12.Observable;
  } });
  var ConnectableObservable_12 = ConnectableObservable$1;
  Object.defineProperty(exports, "ConnectableObservable", { enumerable: true, get: function() {
    return ConnectableObservable_12.ConnectableObservable;
  } });
  var observable_12 = observable;
  Object.defineProperty(exports, "observable", { enumerable: true, get: function() {
    return observable_12.observable;
  } });
  var animationFrames_1 = animationFrames$1;
  Object.defineProperty(exports, "animationFrames", { enumerable: true, get: function() {
    return animationFrames_1.animationFrames;
  } });
  var Subject_12 = Subject$1;
  Object.defineProperty(exports, "Subject", { enumerable: true, get: function() {
    return Subject_12.Subject;
  } });
  var BehaviorSubject_12 = BehaviorSubject$1;
  Object.defineProperty(exports, "BehaviorSubject", { enumerable: true, get: function() {
    return BehaviorSubject_12.BehaviorSubject;
  } });
  var ReplaySubject_12 = ReplaySubject$1;
  Object.defineProperty(exports, "ReplaySubject", { enumerable: true, get: function() {
    return ReplaySubject_12.ReplaySubject;
  } });
  var AsyncSubject_12 = AsyncSubject$1;
  Object.defineProperty(exports, "AsyncSubject", { enumerable: true, get: function() {
    return AsyncSubject_12.AsyncSubject;
  } });
  var asap_1 = asap;
  Object.defineProperty(exports, "asap", { enumerable: true, get: function() {
    return asap_1.asap;
  } });
  Object.defineProperty(exports, "asapScheduler", { enumerable: true, get: function() {
    return asap_1.asapScheduler;
  } });
  var async_12 = async;
  Object.defineProperty(exports, "async", { enumerable: true, get: function() {
    return async_12.async;
  } });
  Object.defineProperty(exports, "asyncScheduler", { enumerable: true, get: function() {
    return async_12.asyncScheduler;
  } });
  var queue_1 = queue$1;
  Object.defineProperty(exports, "queue", { enumerable: true, get: function() {
    return queue_1.queue;
  } });
  Object.defineProperty(exports, "queueScheduler", { enumerable: true, get: function() {
    return queue_1.queueScheduler;
  } });
  var animationFrame_1 = animationFrame;
  Object.defineProperty(exports, "animationFrame", { enumerable: true, get: function() {
    return animationFrame_1.animationFrame;
  } });
  Object.defineProperty(exports, "animationFrameScheduler", { enumerable: true, get: function() {
    return animationFrame_1.animationFrameScheduler;
  } });
  var VirtualTimeScheduler_1 = VirtualTimeScheduler$1;
  Object.defineProperty(exports, "VirtualTimeScheduler", { enumerable: true, get: function() {
    return VirtualTimeScheduler_1.VirtualTimeScheduler;
  } });
  Object.defineProperty(exports, "VirtualAction", { enumerable: true, get: function() {
    return VirtualTimeScheduler_1.VirtualAction;
  } });
  var Scheduler_12 = Scheduler$1;
  Object.defineProperty(exports, "Scheduler", { enumerable: true, get: function() {
    return Scheduler_12.Scheduler;
  } });
  var Subscription_12 = Subscription$1;
  Object.defineProperty(exports, "Subscription", { enumerable: true, get: function() {
    return Subscription_12.Subscription;
  } });
  var Subscriber_12 = Subscriber;
  Object.defineProperty(exports, "Subscriber", { enumerable: true, get: function() {
    return Subscriber_12.Subscriber;
  } });
  var Notification_12 = Notification;
  Object.defineProperty(exports, "Notification", { enumerable: true, get: function() {
    return Notification_12.Notification;
  } });
  Object.defineProperty(exports, "NotificationKind", { enumerable: true, get: function() {
    return Notification_12.NotificationKind;
  } });
  var pipe_12 = pipe$1;
  Object.defineProperty(exports, "pipe", { enumerable: true, get: function() {
    return pipe_12.pipe;
  } });
  var noop_12 = noop$1;
  Object.defineProperty(exports, "noop", { enumerable: true, get: function() {
    return noop_12.noop;
  } });
  var identity_12 = identity$1;
  Object.defineProperty(exports, "identity", { enumerable: true, get: function() {
    return identity_12.identity;
  } });
  var isObservable_1 = isObservable$1;
  Object.defineProperty(exports, "isObservable", { enumerable: true, get: function() {
    return isObservable_1.isObservable;
  } });
  var lastValueFrom_1 = lastValueFrom$1;
  Object.defineProperty(exports, "lastValueFrom", { enumerable: true, get: function() {
    return lastValueFrom_1.lastValueFrom;
  } });
  var firstValueFrom_1 = firstValueFrom$1;
  Object.defineProperty(exports, "firstValueFrom", { enumerable: true, get: function() {
    return firstValueFrom_1.firstValueFrom;
  } });
  var ArgumentOutOfRangeError_12 = ArgumentOutOfRangeError;
  Object.defineProperty(exports, "ArgumentOutOfRangeError", { enumerable: true, get: function() {
    return ArgumentOutOfRangeError_12.ArgumentOutOfRangeError;
  } });
  var EmptyError_12 = EmptyError;
  Object.defineProperty(exports, "EmptyError", { enumerable: true, get: function() {
    return EmptyError_12.EmptyError;
  } });
  var NotFoundError_12 = NotFoundError;
  Object.defineProperty(exports, "NotFoundError", { enumerable: true, get: function() {
    return NotFoundError_12.NotFoundError;
  } });
  var ObjectUnsubscribedError_12 = ObjectUnsubscribedError;
  Object.defineProperty(exports, "ObjectUnsubscribedError", { enumerable: true, get: function() {
    return ObjectUnsubscribedError_12.ObjectUnsubscribedError;
  } });
  var SequenceError_12 = SequenceError;
  Object.defineProperty(exports, "SequenceError", { enumerable: true, get: function() {
    return SequenceError_12.SequenceError;
  } });
  var timeout_12 = timeout;
  Object.defineProperty(exports, "TimeoutError", { enumerable: true, get: function() {
    return timeout_12.TimeoutError;
  } });
  var UnsubscriptionError_12 = UnsubscriptionError;
  Object.defineProperty(exports, "UnsubscriptionError", { enumerable: true, get: function() {
    return UnsubscriptionError_12.UnsubscriptionError;
  } });
  var bindCallback_1 = bindCallback$1;
  Object.defineProperty(exports, "bindCallback", { enumerable: true, get: function() {
    return bindCallback_1.bindCallback;
  } });
  var bindNodeCallback_1 = bindNodeCallback$1;
  Object.defineProperty(exports, "bindNodeCallback", { enumerable: true, get: function() {
    return bindNodeCallback_1.bindNodeCallback;
  } });
  var combineLatest_12 = combineLatest$3;
  Object.defineProperty(exports, "combineLatest", { enumerable: true, get: function() {
    return combineLatest_12.combineLatest;
  } });
  var concat_12 = concat$3;
  Object.defineProperty(exports, "concat", { enumerable: true, get: function() {
    return concat_12.concat;
  } });
  var connectable_1 = connectable$1;
  Object.defineProperty(exports, "connectable", { enumerable: true, get: function() {
    return connectable_1.connectable;
  } });
  var defer_12 = defer$1;
  Object.defineProperty(exports, "defer", { enumerable: true, get: function() {
    return defer_12.defer;
  } });
  var empty_12 = empty;
  Object.defineProperty(exports, "empty", { enumerable: true, get: function() {
    return empty_12.empty;
  } });
  var forkJoin_1 = forkJoin$1;
  Object.defineProperty(exports, "forkJoin", { enumerable: true, get: function() {
    return forkJoin_1.forkJoin;
  } });
  var from_12 = from$1;
  Object.defineProperty(exports, "from", { enumerable: true, get: function() {
    return from_12.from;
  } });
  var fromEvent_1 = fromEvent$1;
  Object.defineProperty(exports, "fromEvent", { enumerable: true, get: function() {
    return fromEvent_1.fromEvent;
  } });
  var fromEventPattern_1 = fromEventPattern$1;
  Object.defineProperty(exports, "fromEventPattern", { enumerable: true, get: function() {
    return fromEventPattern_1.fromEventPattern;
  } });
  var generate_1 = generate$1;
  Object.defineProperty(exports, "generate", { enumerable: true, get: function() {
    return generate_1.generate;
  } });
  var iif_1 = iif$1;
  Object.defineProperty(exports, "iif", { enumerable: true, get: function() {
    return iif_1.iif;
  } });
  var interval_12 = interval$1;
  Object.defineProperty(exports, "interval", { enumerable: true, get: function() {
    return interval_12.interval;
  } });
  var merge_12 = merge$4;
  Object.defineProperty(exports, "merge", { enumerable: true, get: function() {
    return merge_12.merge;
  } });
  var never_1 = never;
  Object.defineProperty(exports, "never", { enumerable: true, get: function() {
    return never_1.never;
  } });
  var of_12 = of$1;
  Object.defineProperty(exports, "of", { enumerable: true, get: function() {
    return of_12.of;
  } });
  var onErrorResumeNext_12 = onErrorResumeNext$1;
  Object.defineProperty(exports, "onErrorResumeNext", { enumerable: true, get: function() {
    return onErrorResumeNext_12.onErrorResumeNext;
  } });
  var pairs_1 = pairs$1;
  Object.defineProperty(exports, "pairs", { enumerable: true, get: function() {
    return pairs_1.pairs;
  } });
  var partition_1 = partition$3;
  Object.defineProperty(exports, "partition", { enumerable: true, get: function() {
    return partition_1.partition;
  } });
  var race_12 = race$3;
  Object.defineProperty(exports, "race", { enumerable: true, get: function() {
    return race_12.race;
  } });
  var range_1 = range$1;
  Object.defineProperty(exports, "range", { enumerable: true, get: function() {
    return range_1.range;
  } });
  var throwError_1 = throwError$1;
  Object.defineProperty(exports, "throwError", { enumerable: true, get: function() {
    return throwError_1.throwError;
  } });
  var timer_12 = timer$1;
  Object.defineProperty(exports, "timer", { enumerable: true, get: function() {
    return timer_12.timer;
  } });
  var using_1 = using$1;
  Object.defineProperty(exports, "using", { enumerable: true, get: function() {
    return using_1.using;
  } });
  var zip_12 = zip$3;
  Object.defineProperty(exports, "zip", { enumerable: true, get: function() {
    return zip_12.zip;
  } });
  var scheduled_12 = scheduled$1;
  Object.defineProperty(exports, "scheduled", { enumerable: true, get: function() {
    return scheduled_12.scheduled;
  } });
  var empty_2 = empty;
  Object.defineProperty(exports, "EMPTY", { enumerable: true, get: function() {
    return empty_2.EMPTY;
  } });
  var never_2 = never;
  Object.defineProperty(exports, "NEVER", { enumerable: true, get: function() {
    return never_2.NEVER;
  } });
  __exportStar(types$2, exports);
  var config_12 = config;
  Object.defineProperty(exports, "config", { enumerable: true, get: function() {
    return config_12.config;
  } });
  var audit_12 = audit$1;
  Object.defineProperty(exports, "audit", { enumerable: true, get: function() {
    return audit_12.audit;
  } });
  var auditTime_1 = auditTime$1;
  Object.defineProperty(exports, "auditTime", { enumerable: true, get: function() {
    return auditTime_1.auditTime;
  } });
  var buffer_1 = buffer$1;
  Object.defineProperty(exports, "buffer", { enumerable: true, get: function() {
    return buffer_1.buffer;
  } });
  var bufferCount_1 = bufferCount$1;
  Object.defineProperty(exports, "bufferCount", { enumerable: true, get: function() {
    return bufferCount_1.bufferCount;
  } });
  var bufferTime_1 = bufferTime$1;
  Object.defineProperty(exports, "bufferTime", { enumerable: true, get: function() {
    return bufferTime_1.bufferTime;
  } });
  var bufferToggle_1 = bufferToggle$1;
  Object.defineProperty(exports, "bufferToggle", { enumerable: true, get: function() {
    return bufferToggle_1.bufferToggle;
  } });
  var bufferWhen_1 = bufferWhen$1;
  Object.defineProperty(exports, "bufferWhen", { enumerable: true, get: function() {
    return bufferWhen_1.bufferWhen;
  } });
  var catchError_1 = catchError$1;
  Object.defineProperty(exports, "catchError", { enumerable: true, get: function() {
    return catchError_1.catchError;
  } });
  var combineAll_1 = combineAll;
  Object.defineProperty(exports, "combineAll", { enumerable: true, get: function() {
    return combineAll_1.combineAll;
  } });
  var combineLatestAll_12 = combineLatestAll$1;
  Object.defineProperty(exports, "combineLatestAll", { enumerable: true, get: function() {
    return combineLatestAll_12.combineLatestAll;
  } });
  var combineLatestWith_1 = combineLatestWith$1;
  Object.defineProperty(exports, "combineLatestWith", { enumerable: true, get: function() {
    return combineLatestWith_1.combineLatestWith;
  } });
  var concatAll_12 = concatAll$1;
  Object.defineProperty(exports, "concatAll", { enumerable: true, get: function() {
    return concatAll_12.concatAll;
  } });
  var concatMap_12 = concatMap$1;
  Object.defineProperty(exports, "concatMap", { enumerable: true, get: function() {
    return concatMap_12.concatMap;
  } });
  var concatMapTo_1 = concatMapTo$1;
  Object.defineProperty(exports, "concatMapTo", { enumerable: true, get: function() {
    return concatMapTo_1.concatMapTo;
  } });
  var concatWith_1 = concatWith$1;
  Object.defineProperty(exports, "concatWith", { enumerable: true, get: function() {
    return concatWith_1.concatWith;
  } });
  var connect_12 = connect$1;
  Object.defineProperty(exports, "connect", { enumerable: true, get: function() {
    return connect_12.connect;
  } });
  var count_1 = count$1;
  Object.defineProperty(exports, "count", { enumerable: true, get: function() {
    return count_1.count;
  } });
  var debounce_1 = debounce$1;
  Object.defineProperty(exports, "debounce", { enumerable: true, get: function() {
    return debounce_1.debounce;
  } });
  var debounceTime_1 = debounceTime$1;
  Object.defineProperty(exports, "debounceTime", { enumerable: true, get: function() {
    return debounceTime_1.debounceTime;
  } });
  var defaultIfEmpty_12 = defaultIfEmpty$1;
  Object.defineProperty(exports, "defaultIfEmpty", { enumerable: true, get: function() {
    return defaultIfEmpty_12.defaultIfEmpty;
  } });
  var delay_1 = delay$1;
  Object.defineProperty(exports, "delay", { enumerable: true, get: function() {
    return delay_1.delay;
  } });
  var delayWhen_12 = delayWhen$1;
  Object.defineProperty(exports, "delayWhen", { enumerable: true, get: function() {
    return delayWhen_12.delayWhen;
  } });
  var dematerialize_1 = dematerialize$1;
  Object.defineProperty(exports, "dematerialize", { enumerable: true, get: function() {
    return dematerialize_1.dematerialize;
  } });
  var distinct_1 = distinct$1;
  Object.defineProperty(exports, "distinct", { enumerable: true, get: function() {
    return distinct_1.distinct;
  } });
  var distinctUntilChanged_12 = distinctUntilChanged$1;
  Object.defineProperty(exports, "distinctUntilChanged", { enumerable: true, get: function() {
    return distinctUntilChanged_12.distinctUntilChanged;
  } });
  var distinctUntilKeyChanged_1 = distinctUntilKeyChanged$1;
  Object.defineProperty(exports, "distinctUntilKeyChanged", { enumerable: true, get: function() {
    return distinctUntilKeyChanged_1.distinctUntilKeyChanged;
  } });
  var elementAt_1 = elementAt$1;
  Object.defineProperty(exports, "elementAt", { enumerable: true, get: function() {
    return elementAt_1.elementAt;
  } });
  var endWith_1 = endWith$1;
  Object.defineProperty(exports, "endWith", { enumerable: true, get: function() {
    return endWith_1.endWith;
  } });
  var every_1 = every$1;
  Object.defineProperty(exports, "every", { enumerable: true, get: function() {
    return every_1.every;
  } });
  var exhaust_1 = exhaust;
  Object.defineProperty(exports, "exhaust", { enumerable: true, get: function() {
    return exhaust_1.exhaust;
  } });
  var exhaustAll_12 = exhaustAll$1;
  Object.defineProperty(exports, "exhaustAll", { enumerable: true, get: function() {
    return exhaustAll_12.exhaustAll;
  } });
  var exhaustMap_12 = exhaustMap$1;
  Object.defineProperty(exports, "exhaustMap", { enumerable: true, get: function() {
    return exhaustMap_12.exhaustMap;
  } });
  var expand_1 = expand$1;
  Object.defineProperty(exports, "expand", { enumerable: true, get: function() {
    return expand_1.expand;
  } });
  var filter_12 = filter$1;
  Object.defineProperty(exports, "filter", { enumerable: true, get: function() {
    return filter_12.filter;
  } });
  var finalize_1 = finalize$1;
  Object.defineProperty(exports, "finalize", { enumerable: true, get: function() {
    return finalize_1.finalize;
  } });
  var find_12 = find$1;
  Object.defineProperty(exports, "find", { enumerable: true, get: function() {
    return find_12.find;
  } });
  var findIndex_1 = findIndex$1;
  Object.defineProperty(exports, "findIndex", { enumerable: true, get: function() {
    return findIndex_1.findIndex;
  } });
  var first_1 = first$1;
  Object.defineProperty(exports, "first", { enumerable: true, get: function() {
    return first_1.first;
  } });
  var groupBy_1 = groupBy$1;
  Object.defineProperty(exports, "groupBy", { enumerable: true, get: function() {
    return groupBy_1.groupBy;
  } });
  var ignoreElements_12 = ignoreElements$1;
  Object.defineProperty(exports, "ignoreElements", { enumerable: true, get: function() {
    return ignoreElements_12.ignoreElements;
  } });
  var isEmpty_1 = isEmpty$1;
  Object.defineProperty(exports, "isEmpty", { enumerable: true, get: function() {
    return isEmpty_1.isEmpty;
  } });
  var last_1 = last$1;
  Object.defineProperty(exports, "last", { enumerable: true, get: function() {
    return last_1.last;
  } });
  var map_12 = map$1;
  Object.defineProperty(exports, "map", { enumerable: true, get: function() {
    return map_12.map;
  } });
  var mapTo_12 = mapTo$1;
  Object.defineProperty(exports, "mapTo", { enumerable: true, get: function() {
    return mapTo_12.mapTo;
  } });
  var materialize_1 = materialize$1;
  Object.defineProperty(exports, "materialize", { enumerable: true, get: function() {
    return materialize_1.materialize;
  } });
  var max_1 = max$1;
  Object.defineProperty(exports, "max", { enumerable: true, get: function() {
    return max_1.max;
  } });
  var mergeAll_12 = mergeAll$1;
  Object.defineProperty(exports, "mergeAll", { enumerable: true, get: function() {
    return mergeAll_12.mergeAll;
  } });
  var flatMap_1 = flatMap;
  Object.defineProperty(exports, "flatMap", { enumerable: true, get: function() {
    return flatMap_1.flatMap;
  } });
  var mergeMap_12 = mergeMap$1;
  Object.defineProperty(exports, "mergeMap", { enumerable: true, get: function() {
    return mergeMap_12.mergeMap;
  } });
  var mergeMapTo_1 = mergeMapTo$1;
  Object.defineProperty(exports, "mergeMapTo", { enumerable: true, get: function() {
    return mergeMapTo_1.mergeMapTo;
  } });
  var mergeScan_1 = mergeScan$1;
  Object.defineProperty(exports, "mergeScan", { enumerable: true, get: function() {
    return mergeScan_1.mergeScan;
  } });
  var mergeWith_1 = mergeWith$1;
  Object.defineProperty(exports, "mergeWith", { enumerable: true, get: function() {
    return mergeWith_1.mergeWith;
  } });
  var min_1 = min$1;
  Object.defineProperty(exports, "min", { enumerable: true, get: function() {
    return min_1.min;
  } });
  var multicast_12 = multicast$1;
  Object.defineProperty(exports, "multicast", { enumerable: true, get: function() {
    return multicast_12.multicast;
  } });
  var observeOn_12 = observeOn$1;
  Object.defineProperty(exports, "observeOn", { enumerable: true, get: function() {
    return observeOn_12.observeOn;
  } });
  var onErrorResumeNextWith_1 = onErrorResumeNextWith$1;
  Object.defineProperty(exports, "onErrorResumeNextWith", { enumerable: true, get: function() {
    return onErrorResumeNextWith_1.onErrorResumeNextWith;
  } });
  var pairwise_1 = pairwise$1;
  Object.defineProperty(exports, "pairwise", { enumerable: true, get: function() {
    return pairwise_1.pairwise;
  } });
  var pluck_1 = pluck$1;
  Object.defineProperty(exports, "pluck", { enumerable: true, get: function() {
    return pluck_1.pluck;
  } });
  var publish_1 = publish$1;
  Object.defineProperty(exports, "publish", { enumerable: true, get: function() {
    return publish_1.publish;
  } });
  var publishBehavior_1 = publishBehavior$1;
  Object.defineProperty(exports, "publishBehavior", { enumerable: true, get: function() {
    return publishBehavior_1.publishBehavior;
  } });
  var publishLast_1 = publishLast$1;
  Object.defineProperty(exports, "publishLast", { enumerable: true, get: function() {
    return publishLast_1.publishLast;
  } });
  var publishReplay_1 = publishReplay$1;
  Object.defineProperty(exports, "publishReplay", { enumerable: true, get: function() {
    return publishReplay_1.publishReplay;
  } });
  var raceWith_12 = raceWith$1;
  Object.defineProperty(exports, "raceWith", { enumerable: true, get: function() {
    return raceWith_12.raceWith;
  } });
  var reduce_12 = reduce$1;
  Object.defineProperty(exports, "reduce", { enumerable: true, get: function() {
    return reduce_12.reduce;
  } });
  var repeat_1 = repeat$1;
  Object.defineProperty(exports, "repeat", { enumerable: true, get: function() {
    return repeat_1.repeat;
  } });
  var repeatWhen_1 = repeatWhen$1;
  Object.defineProperty(exports, "repeatWhen", { enumerable: true, get: function() {
    return repeatWhen_1.repeatWhen;
  } });
  var retry_1 = retry$1;
  Object.defineProperty(exports, "retry", { enumerable: true, get: function() {
    return retry_1.retry;
  } });
  var retryWhen_1 = retryWhen$1;
  Object.defineProperty(exports, "retryWhen", { enumerable: true, get: function() {
    return retryWhen_1.retryWhen;
  } });
  var refCount_12 = refCount$1;
  Object.defineProperty(exports, "refCount", { enumerable: true, get: function() {
    return refCount_12.refCount;
  } });
  var sample_12 = sample$1;
  Object.defineProperty(exports, "sample", { enumerable: true, get: function() {
    return sample_12.sample;
  } });
  var sampleTime_1 = sampleTime$1;
  Object.defineProperty(exports, "sampleTime", { enumerable: true, get: function() {
    return sampleTime_1.sampleTime;
  } });
  var scan_1 = scan$1;
  Object.defineProperty(exports, "scan", { enumerable: true, get: function() {
    return scan_1.scan;
  } });
  var sequenceEqual_1 = sequenceEqual$1;
  Object.defineProperty(exports, "sequenceEqual", { enumerable: true, get: function() {
    return sequenceEqual_1.sequenceEqual;
  } });
  var share_12 = share$1;
  Object.defineProperty(exports, "share", { enumerable: true, get: function() {
    return share_12.share;
  } });
  var shareReplay_1 = shareReplay$1;
  Object.defineProperty(exports, "shareReplay", { enumerable: true, get: function() {
    return shareReplay_1.shareReplay;
  } });
  var single_1 = single$1;
  Object.defineProperty(exports, "single", { enumerable: true, get: function() {
    return single_1.single;
  } });
  var skip_1 = skip$1;
  Object.defineProperty(exports, "skip", { enumerable: true, get: function() {
    return skip_1.skip;
  } });
  var skipLast_1 = skipLast$1;
  Object.defineProperty(exports, "skipLast", { enumerable: true, get: function() {
    return skipLast_1.skipLast;
  } });
  var skipUntil_1 = skipUntil$1;
  Object.defineProperty(exports, "skipUntil", { enumerable: true, get: function() {
    return skipUntil_1.skipUntil;
  } });
  var skipWhile_1 = skipWhile$1;
  Object.defineProperty(exports, "skipWhile", { enumerable: true, get: function() {
    return skipWhile_1.skipWhile;
  } });
  var startWith_1 = startWith$1;
  Object.defineProperty(exports, "startWith", { enumerable: true, get: function() {
    return startWith_1.startWith;
  } });
  var subscribeOn_12 = subscribeOn$1;
  Object.defineProperty(exports, "subscribeOn", { enumerable: true, get: function() {
    return subscribeOn_12.subscribeOn;
  } });
  var switchAll_1 = switchAll$1;
  Object.defineProperty(exports, "switchAll", { enumerable: true, get: function() {
    return switchAll_1.switchAll;
  } });
  var switchMap_12 = switchMap$1;
  Object.defineProperty(exports, "switchMap", { enumerable: true, get: function() {
    return switchMap_12.switchMap;
  } });
  var switchMapTo_1 = switchMapTo$1;
  Object.defineProperty(exports, "switchMapTo", { enumerable: true, get: function() {
    return switchMapTo_1.switchMapTo;
  } });
  var switchScan_1 = switchScan$1;
  Object.defineProperty(exports, "switchScan", { enumerable: true, get: function() {
    return switchScan_1.switchScan;
  } });
  var take_12 = take$1;
  Object.defineProperty(exports, "take", { enumerable: true, get: function() {
    return take_12.take;
  } });
  var takeLast_12 = takeLast$1;
  Object.defineProperty(exports, "takeLast", { enumerable: true, get: function() {
    return takeLast_12.takeLast;
  } });
  var takeUntil_1 = takeUntil$1;
  Object.defineProperty(exports, "takeUntil", { enumerable: true, get: function() {
    return takeUntil_1.takeUntil;
  } });
  var takeWhile_1 = takeWhile$1;
  Object.defineProperty(exports, "takeWhile", { enumerable: true, get: function() {
    return takeWhile_1.takeWhile;
  } });
  var tap_1 = tap$1;
  Object.defineProperty(exports, "tap", { enumerable: true, get: function() {
    return tap_1.tap;
  } });
  var throttle_12 = throttle$1;
  Object.defineProperty(exports, "throttle", { enumerable: true, get: function() {
    return throttle_12.throttle;
  } });
  var throttleTime_1 = throttleTime$1;
  Object.defineProperty(exports, "throttleTime", { enumerable: true, get: function() {
    return throttleTime_1.throttleTime;
  } });
  var throwIfEmpty_12 = throwIfEmpty$1;
  Object.defineProperty(exports, "throwIfEmpty", { enumerable: true, get: function() {
    return throwIfEmpty_12.throwIfEmpty;
  } });
  var timeInterval_1 = timeInterval$1;
  Object.defineProperty(exports, "timeInterval", { enumerable: true, get: function() {
    return timeInterval_1.timeInterval;
  } });
  var timeout_2 = timeout;
  Object.defineProperty(exports, "timeout", { enumerable: true, get: function() {
    return timeout_2.timeout;
  } });
  var timeoutWith_1 = timeoutWith$1;
  Object.defineProperty(exports, "timeoutWith", { enumerable: true, get: function() {
    return timeoutWith_1.timeoutWith;
  } });
  var timestamp_1 = timestamp$1;
  Object.defineProperty(exports, "timestamp", { enumerable: true, get: function() {
    return timestamp_1.timestamp;
  } });
  var toArray_12 = toArray$1;
  Object.defineProperty(exports, "toArray", { enumerable: true, get: function() {
    return toArray_12.toArray;
  } });
  var window_1 = window$2;
  Object.defineProperty(exports, "window", { enumerable: true, get: function() {
    return window_1.window;
  } });
  var windowCount_1 = windowCount$1;
  Object.defineProperty(exports, "windowCount", { enumerable: true, get: function() {
    return windowCount_1.windowCount;
  } });
  var windowTime_1 = windowTime$1;
  Object.defineProperty(exports, "windowTime", { enumerable: true, get: function() {
    return windowTime_1.windowTime;
  } });
  var windowToggle_1 = windowToggle$1;
  Object.defineProperty(exports, "windowToggle", { enumerable: true, get: function() {
    return windowToggle_1.windowToggle;
  } });
  var windowWhen_1 = windowWhen$1;
  Object.defineProperty(exports, "windowWhen", { enumerable: true, get: function() {
    return windowWhen_1.windowWhen;
  } });
  var withLatestFrom_1 = withLatestFrom$1;
  Object.defineProperty(exports, "withLatestFrom", { enumerable: true, get: function() {
    return withLatestFrom_1.withLatestFrom;
  } });
  var zipAll_1 = zipAll$1;
  Object.defineProperty(exports, "zipAll", { enumerable: true, get: function() {
    return zipAll_1.zipAll;
  } });
  var zipWith_1 = zipWith$1;
  Object.defineProperty(exports, "zipWith", { enumerable: true, get: function() {
    return zipWith_1.zipWith;
  } });
})(cjs$1);
var operators = {};
var partition$1 = {};
Object.defineProperty(partition$1, "__esModule", { value: true });
partition$1.partition = void 0;
var not_1 = not$1;
var filter_1 = filter$1;
function partition(predicate, thisArg) {
  return function(source) {
    return [filter_1.filter(predicate, thisArg)(source), filter_1.filter(not_1.not(predicate, thisArg))(source)];
  };
}
partition$1.partition = partition;
var race$1 = {};
var __read = commonjsGlobal && commonjsGlobal.__read || function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
      ar.push(r.value);
  } catch (error2) {
    e = { error: error2 };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spreadArray = commonjsGlobal && commonjsGlobal.__spreadArray || function(to, from2) {
  for (var i = 0, il = from2.length, j = to.length; i < il; i++, j++)
    to[j] = from2[i];
  return to;
};
Object.defineProperty(race$1, "__esModule", { value: true });
race$1.race = void 0;
var argsOrArgArray_1 = argsOrArgArray$1;
var raceWith_1 = raceWith$1;
function race() {
  var args2 = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args2[_i] = arguments[_i];
  }
  return raceWith_1.raceWith.apply(void 0, __spreadArray([], __read(argsOrArgArray_1.argsOrArgArray(args2))));
}
race$1.race = race;
(function(exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.mergeAll = exports.merge = exports.max = exports.materialize = exports.mapTo = exports.map = exports.last = exports.isEmpty = exports.ignoreElements = exports.groupBy = exports.first = exports.findIndex = exports.find = exports.finalize = exports.filter = exports.expand = exports.exhaustMap = exports.exhaustAll = exports.exhaust = exports.every = exports.endWith = exports.elementAt = exports.distinctUntilKeyChanged = exports.distinctUntilChanged = exports.distinct = exports.dematerialize = exports.delayWhen = exports.delay = exports.defaultIfEmpty = exports.debounceTime = exports.debounce = exports.count = exports.connect = exports.concatWith = exports.concatMapTo = exports.concatMap = exports.concatAll = exports.concat = exports.combineLatestWith = exports.combineLatest = exports.combineLatestAll = exports.combineAll = exports.catchError = exports.bufferWhen = exports.bufferToggle = exports.bufferTime = exports.bufferCount = exports.buffer = exports.auditTime = exports.audit = void 0;
  exports.timeInterval = exports.throwIfEmpty = exports.throttleTime = exports.throttle = exports.tap = exports.takeWhile = exports.takeUntil = exports.takeLast = exports.take = exports.switchScan = exports.switchMapTo = exports.switchMap = exports.switchAll = exports.subscribeOn = exports.startWith = exports.skipWhile = exports.skipUntil = exports.skipLast = exports.skip = exports.single = exports.shareReplay = exports.share = exports.sequenceEqual = exports.scan = exports.sampleTime = exports.sample = exports.refCount = exports.retryWhen = exports.retry = exports.repeatWhen = exports.repeat = exports.reduce = exports.raceWith = exports.race = exports.publishReplay = exports.publishLast = exports.publishBehavior = exports.publish = exports.pluck = exports.partition = exports.pairwise = exports.onErrorResumeNext = exports.observeOn = exports.multicast = exports.min = exports.mergeWith = exports.mergeScan = exports.mergeMapTo = exports.mergeMap = exports.flatMap = void 0;
  exports.zipWith = exports.zipAll = exports.zip = exports.withLatestFrom = exports.windowWhen = exports.windowToggle = exports.windowTime = exports.windowCount = exports.window = exports.toArray = exports.timestamp = exports.timeoutWith = exports.timeout = void 0;
  var audit_12 = audit$1;
  Object.defineProperty(exports, "audit", { enumerable: true, get: function() {
    return audit_12.audit;
  } });
  var auditTime_1 = auditTime$1;
  Object.defineProperty(exports, "auditTime", { enumerable: true, get: function() {
    return auditTime_1.auditTime;
  } });
  var buffer_1 = buffer$1;
  Object.defineProperty(exports, "buffer", { enumerable: true, get: function() {
    return buffer_1.buffer;
  } });
  var bufferCount_1 = bufferCount$1;
  Object.defineProperty(exports, "bufferCount", { enumerable: true, get: function() {
    return bufferCount_1.bufferCount;
  } });
  var bufferTime_1 = bufferTime$1;
  Object.defineProperty(exports, "bufferTime", { enumerable: true, get: function() {
    return bufferTime_1.bufferTime;
  } });
  var bufferToggle_1 = bufferToggle$1;
  Object.defineProperty(exports, "bufferToggle", { enumerable: true, get: function() {
    return bufferToggle_1.bufferToggle;
  } });
  var bufferWhen_1 = bufferWhen$1;
  Object.defineProperty(exports, "bufferWhen", { enumerable: true, get: function() {
    return bufferWhen_1.bufferWhen;
  } });
  var catchError_1 = catchError$1;
  Object.defineProperty(exports, "catchError", { enumerable: true, get: function() {
    return catchError_1.catchError;
  } });
  var combineAll_1 = combineAll;
  Object.defineProperty(exports, "combineAll", { enumerable: true, get: function() {
    return combineAll_1.combineAll;
  } });
  var combineLatestAll_12 = combineLatestAll$1;
  Object.defineProperty(exports, "combineLatestAll", { enumerable: true, get: function() {
    return combineLatestAll_12.combineLatestAll;
  } });
  var combineLatest_12 = combineLatest$1;
  Object.defineProperty(exports, "combineLatest", { enumerable: true, get: function() {
    return combineLatest_12.combineLatest;
  } });
  var combineLatestWith_1 = combineLatestWith$1;
  Object.defineProperty(exports, "combineLatestWith", { enumerable: true, get: function() {
    return combineLatestWith_1.combineLatestWith;
  } });
  var concat_12 = concat$1;
  Object.defineProperty(exports, "concat", { enumerable: true, get: function() {
    return concat_12.concat;
  } });
  var concatAll_12 = concatAll$1;
  Object.defineProperty(exports, "concatAll", { enumerable: true, get: function() {
    return concatAll_12.concatAll;
  } });
  var concatMap_12 = concatMap$1;
  Object.defineProperty(exports, "concatMap", { enumerable: true, get: function() {
    return concatMap_12.concatMap;
  } });
  var concatMapTo_1 = concatMapTo$1;
  Object.defineProperty(exports, "concatMapTo", { enumerable: true, get: function() {
    return concatMapTo_1.concatMapTo;
  } });
  var concatWith_1 = concatWith$1;
  Object.defineProperty(exports, "concatWith", { enumerable: true, get: function() {
    return concatWith_1.concatWith;
  } });
  var connect_12 = connect$1;
  Object.defineProperty(exports, "connect", { enumerable: true, get: function() {
    return connect_12.connect;
  } });
  var count_1 = count$1;
  Object.defineProperty(exports, "count", { enumerable: true, get: function() {
    return count_1.count;
  } });
  var debounce_1 = debounce$1;
  Object.defineProperty(exports, "debounce", { enumerable: true, get: function() {
    return debounce_1.debounce;
  } });
  var debounceTime_1 = debounceTime$1;
  Object.defineProperty(exports, "debounceTime", { enumerable: true, get: function() {
    return debounceTime_1.debounceTime;
  } });
  var defaultIfEmpty_12 = defaultIfEmpty$1;
  Object.defineProperty(exports, "defaultIfEmpty", { enumerable: true, get: function() {
    return defaultIfEmpty_12.defaultIfEmpty;
  } });
  var delay_1 = delay$1;
  Object.defineProperty(exports, "delay", { enumerable: true, get: function() {
    return delay_1.delay;
  } });
  var delayWhen_12 = delayWhen$1;
  Object.defineProperty(exports, "delayWhen", { enumerable: true, get: function() {
    return delayWhen_12.delayWhen;
  } });
  var dematerialize_1 = dematerialize$1;
  Object.defineProperty(exports, "dematerialize", { enumerable: true, get: function() {
    return dematerialize_1.dematerialize;
  } });
  var distinct_1 = distinct$1;
  Object.defineProperty(exports, "distinct", { enumerable: true, get: function() {
    return distinct_1.distinct;
  } });
  var distinctUntilChanged_12 = distinctUntilChanged$1;
  Object.defineProperty(exports, "distinctUntilChanged", { enumerable: true, get: function() {
    return distinctUntilChanged_12.distinctUntilChanged;
  } });
  var distinctUntilKeyChanged_1 = distinctUntilKeyChanged$1;
  Object.defineProperty(exports, "distinctUntilKeyChanged", { enumerable: true, get: function() {
    return distinctUntilKeyChanged_1.distinctUntilKeyChanged;
  } });
  var elementAt_1 = elementAt$1;
  Object.defineProperty(exports, "elementAt", { enumerable: true, get: function() {
    return elementAt_1.elementAt;
  } });
  var endWith_1 = endWith$1;
  Object.defineProperty(exports, "endWith", { enumerable: true, get: function() {
    return endWith_1.endWith;
  } });
  var every_1 = every$1;
  Object.defineProperty(exports, "every", { enumerable: true, get: function() {
    return every_1.every;
  } });
  var exhaust_1 = exhaust;
  Object.defineProperty(exports, "exhaust", { enumerable: true, get: function() {
    return exhaust_1.exhaust;
  } });
  var exhaustAll_12 = exhaustAll$1;
  Object.defineProperty(exports, "exhaustAll", { enumerable: true, get: function() {
    return exhaustAll_12.exhaustAll;
  } });
  var exhaustMap_12 = exhaustMap$1;
  Object.defineProperty(exports, "exhaustMap", { enumerable: true, get: function() {
    return exhaustMap_12.exhaustMap;
  } });
  var expand_1 = expand$1;
  Object.defineProperty(exports, "expand", { enumerable: true, get: function() {
    return expand_1.expand;
  } });
  var filter_12 = filter$1;
  Object.defineProperty(exports, "filter", { enumerable: true, get: function() {
    return filter_12.filter;
  } });
  var finalize_1 = finalize$1;
  Object.defineProperty(exports, "finalize", { enumerable: true, get: function() {
    return finalize_1.finalize;
  } });
  var find_12 = find$1;
  Object.defineProperty(exports, "find", { enumerable: true, get: function() {
    return find_12.find;
  } });
  var findIndex_1 = findIndex$1;
  Object.defineProperty(exports, "findIndex", { enumerable: true, get: function() {
    return findIndex_1.findIndex;
  } });
  var first_1 = first$1;
  Object.defineProperty(exports, "first", { enumerable: true, get: function() {
    return first_1.first;
  } });
  var groupBy_1 = groupBy$1;
  Object.defineProperty(exports, "groupBy", { enumerable: true, get: function() {
    return groupBy_1.groupBy;
  } });
  var ignoreElements_12 = ignoreElements$1;
  Object.defineProperty(exports, "ignoreElements", { enumerable: true, get: function() {
    return ignoreElements_12.ignoreElements;
  } });
  var isEmpty_1 = isEmpty$1;
  Object.defineProperty(exports, "isEmpty", { enumerable: true, get: function() {
    return isEmpty_1.isEmpty;
  } });
  var last_1 = last$1;
  Object.defineProperty(exports, "last", { enumerable: true, get: function() {
    return last_1.last;
  } });
  var map_12 = map$1;
  Object.defineProperty(exports, "map", { enumerable: true, get: function() {
    return map_12.map;
  } });
  var mapTo_12 = mapTo$1;
  Object.defineProperty(exports, "mapTo", { enumerable: true, get: function() {
    return mapTo_12.mapTo;
  } });
  var materialize_1 = materialize$1;
  Object.defineProperty(exports, "materialize", { enumerable: true, get: function() {
    return materialize_1.materialize;
  } });
  var max_1 = max$1;
  Object.defineProperty(exports, "max", { enumerable: true, get: function() {
    return max_1.max;
  } });
  var merge_12 = merge$2;
  Object.defineProperty(exports, "merge", { enumerable: true, get: function() {
    return merge_12.merge;
  } });
  var mergeAll_12 = mergeAll$1;
  Object.defineProperty(exports, "mergeAll", { enumerable: true, get: function() {
    return mergeAll_12.mergeAll;
  } });
  var flatMap_1 = flatMap;
  Object.defineProperty(exports, "flatMap", { enumerable: true, get: function() {
    return flatMap_1.flatMap;
  } });
  var mergeMap_12 = mergeMap$1;
  Object.defineProperty(exports, "mergeMap", { enumerable: true, get: function() {
    return mergeMap_12.mergeMap;
  } });
  var mergeMapTo_1 = mergeMapTo$1;
  Object.defineProperty(exports, "mergeMapTo", { enumerable: true, get: function() {
    return mergeMapTo_1.mergeMapTo;
  } });
  var mergeScan_1 = mergeScan$1;
  Object.defineProperty(exports, "mergeScan", { enumerable: true, get: function() {
    return mergeScan_1.mergeScan;
  } });
  var mergeWith_1 = mergeWith$1;
  Object.defineProperty(exports, "mergeWith", { enumerable: true, get: function() {
    return mergeWith_1.mergeWith;
  } });
  var min_1 = min$1;
  Object.defineProperty(exports, "min", { enumerable: true, get: function() {
    return min_1.min;
  } });
  var multicast_12 = multicast$1;
  Object.defineProperty(exports, "multicast", { enumerable: true, get: function() {
    return multicast_12.multicast;
  } });
  var observeOn_12 = observeOn$1;
  Object.defineProperty(exports, "observeOn", { enumerable: true, get: function() {
    return observeOn_12.observeOn;
  } });
  var onErrorResumeNextWith_1 = onErrorResumeNextWith$1;
  Object.defineProperty(exports, "onErrorResumeNext", { enumerable: true, get: function() {
    return onErrorResumeNextWith_1.onErrorResumeNext;
  } });
  var pairwise_1 = pairwise$1;
  Object.defineProperty(exports, "pairwise", { enumerable: true, get: function() {
    return pairwise_1.pairwise;
  } });
  var partition_1 = partition$1;
  Object.defineProperty(exports, "partition", { enumerable: true, get: function() {
    return partition_1.partition;
  } });
  var pluck_1 = pluck$1;
  Object.defineProperty(exports, "pluck", { enumerable: true, get: function() {
    return pluck_1.pluck;
  } });
  var publish_1 = publish$1;
  Object.defineProperty(exports, "publish", { enumerable: true, get: function() {
    return publish_1.publish;
  } });
  var publishBehavior_1 = publishBehavior$1;
  Object.defineProperty(exports, "publishBehavior", { enumerable: true, get: function() {
    return publishBehavior_1.publishBehavior;
  } });
  var publishLast_1 = publishLast$1;
  Object.defineProperty(exports, "publishLast", { enumerable: true, get: function() {
    return publishLast_1.publishLast;
  } });
  var publishReplay_1 = publishReplay$1;
  Object.defineProperty(exports, "publishReplay", { enumerable: true, get: function() {
    return publishReplay_1.publishReplay;
  } });
  var race_12 = race$1;
  Object.defineProperty(exports, "race", { enumerable: true, get: function() {
    return race_12.race;
  } });
  var raceWith_12 = raceWith$1;
  Object.defineProperty(exports, "raceWith", { enumerable: true, get: function() {
    return raceWith_12.raceWith;
  } });
  var reduce_12 = reduce$1;
  Object.defineProperty(exports, "reduce", { enumerable: true, get: function() {
    return reduce_12.reduce;
  } });
  var repeat_1 = repeat$1;
  Object.defineProperty(exports, "repeat", { enumerable: true, get: function() {
    return repeat_1.repeat;
  } });
  var repeatWhen_1 = repeatWhen$1;
  Object.defineProperty(exports, "repeatWhen", { enumerable: true, get: function() {
    return repeatWhen_1.repeatWhen;
  } });
  var retry_1 = retry$1;
  Object.defineProperty(exports, "retry", { enumerable: true, get: function() {
    return retry_1.retry;
  } });
  var retryWhen_1 = retryWhen$1;
  Object.defineProperty(exports, "retryWhen", { enumerable: true, get: function() {
    return retryWhen_1.retryWhen;
  } });
  var refCount_12 = refCount$1;
  Object.defineProperty(exports, "refCount", { enumerable: true, get: function() {
    return refCount_12.refCount;
  } });
  var sample_12 = sample$1;
  Object.defineProperty(exports, "sample", { enumerable: true, get: function() {
    return sample_12.sample;
  } });
  var sampleTime_1 = sampleTime$1;
  Object.defineProperty(exports, "sampleTime", { enumerable: true, get: function() {
    return sampleTime_1.sampleTime;
  } });
  var scan_1 = scan$1;
  Object.defineProperty(exports, "scan", { enumerable: true, get: function() {
    return scan_1.scan;
  } });
  var sequenceEqual_1 = sequenceEqual$1;
  Object.defineProperty(exports, "sequenceEqual", { enumerable: true, get: function() {
    return sequenceEqual_1.sequenceEqual;
  } });
  var share_12 = share$1;
  Object.defineProperty(exports, "share", { enumerable: true, get: function() {
    return share_12.share;
  } });
  var shareReplay_1 = shareReplay$1;
  Object.defineProperty(exports, "shareReplay", { enumerable: true, get: function() {
    return shareReplay_1.shareReplay;
  } });
  var single_1 = single$1;
  Object.defineProperty(exports, "single", { enumerable: true, get: function() {
    return single_1.single;
  } });
  var skip_1 = skip$1;
  Object.defineProperty(exports, "skip", { enumerable: true, get: function() {
    return skip_1.skip;
  } });
  var skipLast_1 = skipLast$1;
  Object.defineProperty(exports, "skipLast", { enumerable: true, get: function() {
    return skipLast_1.skipLast;
  } });
  var skipUntil_1 = skipUntil$1;
  Object.defineProperty(exports, "skipUntil", { enumerable: true, get: function() {
    return skipUntil_1.skipUntil;
  } });
  var skipWhile_1 = skipWhile$1;
  Object.defineProperty(exports, "skipWhile", { enumerable: true, get: function() {
    return skipWhile_1.skipWhile;
  } });
  var startWith_1 = startWith$1;
  Object.defineProperty(exports, "startWith", { enumerable: true, get: function() {
    return startWith_1.startWith;
  } });
  var subscribeOn_12 = subscribeOn$1;
  Object.defineProperty(exports, "subscribeOn", { enumerable: true, get: function() {
    return subscribeOn_12.subscribeOn;
  } });
  var switchAll_1 = switchAll$1;
  Object.defineProperty(exports, "switchAll", { enumerable: true, get: function() {
    return switchAll_1.switchAll;
  } });
  var switchMap_12 = switchMap$1;
  Object.defineProperty(exports, "switchMap", { enumerable: true, get: function() {
    return switchMap_12.switchMap;
  } });
  var switchMapTo_1 = switchMapTo$1;
  Object.defineProperty(exports, "switchMapTo", { enumerable: true, get: function() {
    return switchMapTo_1.switchMapTo;
  } });
  var switchScan_1 = switchScan$1;
  Object.defineProperty(exports, "switchScan", { enumerable: true, get: function() {
    return switchScan_1.switchScan;
  } });
  var take_12 = take$1;
  Object.defineProperty(exports, "take", { enumerable: true, get: function() {
    return take_12.take;
  } });
  var takeLast_12 = takeLast$1;
  Object.defineProperty(exports, "takeLast", { enumerable: true, get: function() {
    return takeLast_12.takeLast;
  } });
  var takeUntil_1 = takeUntil$1;
  Object.defineProperty(exports, "takeUntil", { enumerable: true, get: function() {
    return takeUntil_1.takeUntil;
  } });
  var takeWhile_1 = takeWhile$1;
  Object.defineProperty(exports, "takeWhile", { enumerable: true, get: function() {
    return takeWhile_1.takeWhile;
  } });
  var tap_1 = tap$1;
  Object.defineProperty(exports, "tap", { enumerable: true, get: function() {
    return tap_1.tap;
  } });
  var throttle_12 = throttle$1;
  Object.defineProperty(exports, "throttle", { enumerable: true, get: function() {
    return throttle_12.throttle;
  } });
  var throttleTime_1 = throttleTime$1;
  Object.defineProperty(exports, "throttleTime", { enumerable: true, get: function() {
    return throttleTime_1.throttleTime;
  } });
  var throwIfEmpty_12 = throwIfEmpty$1;
  Object.defineProperty(exports, "throwIfEmpty", { enumerable: true, get: function() {
    return throwIfEmpty_12.throwIfEmpty;
  } });
  var timeInterval_1 = timeInterval$1;
  Object.defineProperty(exports, "timeInterval", { enumerable: true, get: function() {
    return timeInterval_1.timeInterval;
  } });
  var timeout_12 = timeout;
  Object.defineProperty(exports, "timeout", { enumerable: true, get: function() {
    return timeout_12.timeout;
  } });
  var timeoutWith_1 = timeoutWith$1;
  Object.defineProperty(exports, "timeoutWith", { enumerable: true, get: function() {
    return timeoutWith_1.timeoutWith;
  } });
  var timestamp_1 = timestamp$1;
  Object.defineProperty(exports, "timestamp", { enumerable: true, get: function() {
    return timestamp_1.timestamp;
  } });
  var toArray_12 = toArray$1;
  Object.defineProperty(exports, "toArray", { enumerable: true, get: function() {
    return toArray_12.toArray;
  } });
  var window_1 = window$2;
  Object.defineProperty(exports, "window", { enumerable: true, get: function() {
    return window_1.window;
  } });
  var windowCount_1 = windowCount$1;
  Object.defineProperty(exports, "windowCount", { enumerable: true, get: function() {
    return windowCount_1.windowCount;
  } });
  var windowTime_1 = windowTime$1;
  Object.defineProperty(exports, "windowTime", { enumerable: true, get: function() {
    return windowTime_1.windowTime;
  } });
  var windowToggle_1 = windowToggle$1;
  Object.defineProperty(exports, "windowToggle", { enumerable: true, get: function() {
    return windowToggle_1.windowToggle;
  } });
  var windowWhen_1 = windowWhen$1;
  Object.defineProperty(exports, "windowWhen", { enumerable: true, get: function() {
    return windowWhen_1.windowWhen;
  } });
  var withLatestFrom_1 = withLatestFrom$1;
  Object.defineProperty(exports, "withLatestFrom", { enumerable: true, get: function() {
    return withLatestFrom_1.withLatestFrom;
  } });
  var zip_12 = zip$1;
  Object.defineProperty(exports, "zip", { enumerable: true, get: function() {
    return zip_12.zip;
  } });
  var zipAll_1 = zipAll$1;
  Object.defineProperty(exports, "zipAll", { enumerable: true, get: function() {
    return zipAll_1.zipAll;
  } });
  var zipWith_1 = zipWith$1;
  Object.defineProperty(exports, "zipWith", { enumerable: true, get: function() {
    return zipWith_1.zipWith;
  } });
})(operators);
const BROWSER_ALIASES_MAP = {
  "Amazon Silk": "amazon_silk",
  "Android Browser": "android",
  Bada: "bada",
  BlackBerry: "blackberry",
  Chrome: "chrome",
  Chromium: "chromium",
  Electron: "electron",
  Epiphany: "epiphany",
  Firefox: "firefox",
  Focus: "focus",
  Generic: "generic",
  "Google Search": "google_search",
  Googlebot: "googlebot",
  "Internet Explorer": "ie",
  "K-Meleon": "k_meleon",
  Maxthon: "maxthon",
  "Microsoft Edge": "edge",
  "MZ Browser": "mz",
  "NAVER Whale Browser": "naver",
  Opera: "opera",
  "Opera Coast": "opera_coast",
  PhantomJS: "phantomjs",
  Puffin: "puffin",
  QupZilla: "qupzilla",
  QQ: "qq",
  QQLite: "qqlite",
  Safari: "safari",
  Sailfish: "sailfish",
  "Samsung Internet for Android": "samsung_internet",
  SeaMonkey: "seamonkey",
  Sleipnir: "sleipnir",
  Swing: "swing",
  Tizen: "tizen",
  "UC Browser": "uc",
  Vivaldi: "vivaldi",
  "WebOS Browser": "webos",
  WeChat: "wechat",
  "Yandex Browser": "yandex",
  Roku: "roku"
};
const BROWSER_MAP = {
  amazon_silk: "Amazon Silk",
  android: "Android Browser",
  bada: "Bada",
  blackberry: "BlackBerry",
  chrome: "Chrome",
  chromium: "Chromium",
  electron: "Electron",
  epiphany: "Epiphany",
  firefox: "Firefox",
  focus: "Focus",
  generic: "Generic",
  googlebot: "Googlebot",
  google_search: "Google Search",
  ie: "Internet Explorer",
  k_meleon: "K-Meleon",
  maxthon: "Maxthon",
  edge: "Microsoft Edge",
  mz: "MZ Browser",
  naver: "NAVER Whale Browser",
  opera: "Opera",
  opera_coast: "Opera Coast",
  phantomjs: "PhantomJS",
  puffin: "Puffin",
  qupzilla: "QupZilla",
  qq: "QQ Browser",
  qqlite: "QQ Browser Lite",
  safari: "Safari",
  sailfish: "Sailfish",
  samsung_internet: "Samsung Internet for Android",
  seamonkey: "SeaMonkey",
  sleipnir: "Sleipnir",
  swing: "Swing",
  tizen: "Tizen",
  uc: "UC Browser",
  vivaldi: "Vivaldi",
  webos: "WebOS Browser",
  wechat: "WeChat",
  yandex: "Yandex Browser"
};
const PLATFORMS_MAP = {
  tablet: "tablet",
  mobile: "mobile",
  desktop: "desktop",
  tv: "tv"
};
const OS_MAP = {
  WindowsPhone: "Windows Phone",
  Windows: "Windows",
  MacOS: "macOS",
  iOS: "iOS",
  Android: "Android",
  WebOS: "WebOS",
  BlackBerry: "BlackBerry",
  Bada: "Bada",
  Tizen: "Tizen",
  Linux: "Linux",
  ChromeOS: "Chrome OS",
  PlayStation4: "PlayStation 4",
  Roku: "Roku"
};
const ENGINE_MAP = {
  EdgeHTML: "EdgeHTML",
  Blink: "Blink",
  Trident: "Trident",
  Presto: "Presto",
  Gecko: "Gecko",
  WebKit: "WebKit"
};
let Utils$2 = class Utils {
  /**
   * Get first matched item for a string
   * @param {RegExp} regexp
   * @param {String} ua
   * @return {Array|{index: number, input: string}|*|boolean|string}
   */
  static getFirstMatch(regexp, ua) {
    const match = ua.match(regexp);
    return match && match.length > 0 && match[1] || "";
  }
  /**
   * Get second matched item for a string
   * @param regexp
   * @param {String} ua
   * @return {Array|{index: number, input: string}|*|boolean|string}
   */
  static getSecondMatch(regexp, ua) {
    const match = ua.match(regexp);
    return match && match.length > 1 && match[2] || "";
  }
  /**
   * Match a regexp and return a constant or undefined
   * @param {RegExp} regexp
   * @param {String} ua
   * @param {*} _const Any const that will be returned if regexp matches the string
   * @return {*}
   */
  static matchAndReturnConst(regexp, ua, _const) {
    if (regexp.test(ua)) {
      return _const;
    }
    return void 0;
  }
  static getWindowsVersionName(version2) {
    switch (version2) {
      case "NT":
        return "NT";
      case "XP":
        return "XP";
      case "NT 5.0":
        return "2000";
      case "NT 5.1":
        return "XP";
      case "NT 5.2":
        return "2003";
      case "NT 6.0":
        return "Vista";
      case "NT 6.1":
        return "7";
      case "NT 6.2":
        return "8";
      case "NT 6.3":
        return "8.1";
      case "NT 10.0":
        return "10";
      default:
        return void 0;
    }
  }
  /**
   * Get macOS version name
   *    10.5 - Leopard
   *    10.6 - Snow Leopard
   *    10.7 - Lion
   *    10.8 - Mountain Lion
   *    10.9 - Mavericks
   *    10.10 - Yosemite
   *    10.11 - El Capitan
   *    10.12 - Sierra
   *    10.13 - High Sierra
   *    10.14 - Mojave
   *    10.15 - Catalina
   *
   * @example
   *   getMacOSVersionName("10.14") // 'Mojave'
   *
   * @param  {string} version
   * @return {string} versionName
   */
  static getMacOSVersionName(version2) {
    const v = version2.split(".").splice(0, 2).map((s) => parseInt(s, 10) || 0);
    v.push(0);
    if (v[0] !== 10)
      return void 0;
    switch (v[1]) {
      case 5:
        return "Leopard";
      case 6:
        return "Snow Leopard";
      case 7:
        return "Lion";
      case 8:
        return "Mountain Lion";
      case 9:
        return "Mavericks";
      case 10:
        return "Yosemite";
      case 11:
        return "El Capitan";
      case 12:
        return "Sierra";
      case 13:
        return "High Sierra";
      case 14:
        return "Mojave";
      case 15:
        return "Catalina";
      default:
        return void 0;
    }
  }
  /**
   * Get Android version name
   *    1.5 - Cupcake
   *    1.6 - Donut
   *    2.0 - Eclair
   *    2.1 - Eclair
   *    2.2 - Froyo
   *    2.x - Gingerbread
   *    3.x - Honeycomb
   *    4.0 - Ice Cream Sandwich
   *    4.1 - Jelly Bean
   *    4.4 - KitKat
   *    5.x - Lollipop
   *    6.x - Marshmallow
   *    7.x - Nougat
   *    8.x - Oreo
   *    9.x - Pie
   *
   * @example
   *   getAndroidVersionName("7.0") // 'Nougat'
   *
   * @param  {string} version
   * @return {string} versionName
   */
  static getAndroidVersionName(version2) {
    const v = version2.split(".").splice(0, 2).map((s) => parseInt(s, 10) || 0);
    v.push(0);
    if (v[0] === 1 && v[1] < 5)
      return void 0;
    if (v[0] === 1 && v[1] < 6)
      return "Cupcake";
    if (v[0] === 1 && v[1] >= 6)
      return "Donut";
    if (v[0] === 2 && v[1] < 2)
      return "Eclair";
    if (v[0] === 2 && v[1] === 2)
      return "Froyo";
    if (v[0] === 2 && v[1] > 2)
      return "Gingerbread";
    if (v[0] === 3)
      return "Honeycomb";
    if (v[0] === 4 && v[1] < 1)
      return "Ice Cream Sandwich";
    if (v[0] === 4 && v[1] < 4)
      return "Jelly Bean";
    if (v[0] === 4 && v[1] >= 4)
      return "KitKat";
    if (v[0] === 5)
      return "Lollipop";
    if (v[0] === 6)
      return "Marshmallow";
    if (v[0] === 7)
      return "Nougat";
    if (v[0] === 8)
      return "Oreo";
    if (v[0] === 9)
      return "Pie";
    return void 0;
  }
  /**
   * Get version precisions count
   *
   * @example
   *   getVersionPrecision("1.10.3") // 3
   *
   * @param  {string} version
   * @return {number}
   */
  static getVersionPrecision(version2) {
    return version2.split(".").length;
  }
  /**
   * Calculate browser version weight
   *
   * @example
   *   compareVersions('1.10.2.1',  '1.8.2.1.90')    // 1
   *   compareVersions('1.010.2.1', '1.09.2.1.90');  // 1
   *   compareVersions('1.10.2.1',  '1.10.2.1');     // 0
   *   compareVersions('1.10.2.1',  '1.0800.2');     // -1
   *   compareVersions('1.10.2.1',  '1.10',  true);  // 0
   *
   * @param {String} versionA versions versions to compare
   * @param {String} versionB versions versions to compare
   * @param {boolean} [isLoose] enable loose comparison
   * @return {Number} comparison result: -1 when versionA is lower,
   * 1 when versionA is bigger, 0 when both equal
   */
  /* eslint consistent-return: 1 */
  static compareVersions(versionA, versionB, isLoose = false) {
    const versionAPrecision = Utils.getVersionPrecision(versionA);
    const versionBPrecision = Utils.getVersionPrecision(versionB);
    let precision = Math.max(versionAPrecision, versionBPrecision);
    let lastPrecision = 0;
    const chunks = Utils.map([versionA, versionB], (version2) => {
      const delta = precision - Utils.getVersionPrecision(version2);
      const _version = version2 + new Array(delta + 1).join(".0");
      return Utils.map(_version.split("."), (chunk) => new Array(20 - chunk.length).join("0") + chunk).reverse();
    });
    if (isLoose) {
      lastPrecision = precision - Math.min(versionAPrecision, versionBPrecision);
    }
    precision -= 1;
    while (precision >= lastPrecision) {
      if (chunks[0][precision] > chunks[1][precision]) {
        return 1;
      }
      if (chunks[0][precision] === chunks[1][precision]) {
        if (precision === lastPrecision) {
          return 0;
        }
        precision -= 1;
      } else if (chunks[0][precision] < chunks[1][precision]) {
        return -1;
      }
    }
    return void 0;
  }
  /**
   * Array::map polyfill
   *
   * @param  {Array} arr
   * @param  {Function} iterator
   * @return {Array}
   */
  static map(arr, iterator2) {
    const result = [];
    let i;
    if (Array.prototype.map) {
      return Array.prototype.map.call(arr, iterator2);
    }
    for (i = 0; i < arr.length; i += 1) {
      result.push(iterator2(arr[i]));
    }
    return result;
  }
  /**
   * Array::find polyfill
   *
   * @param  {Array} arr
   * @param  {Function} predicate
   * @return {Array}
   */
  static find(arr, predicate) {
    let i;
    let l;
    if (Array.prototype.find) {
      return Array.prototype.find.call(arr, predicate);
    }
    for (i = 0, l = arr.length; i < l; i += 1) {
      const value = arr[i];
      if (predicate(value, i)) {
        return value;
      }
    }
    return void 0;
  }
  /**
   * Object::assign polyfill
   *
   * @param  {Object} obj
   * @param  {Object} ...objs
   * @return {Object}
   */
  static assign(obj, ...assigners) {
    const result = obj;
    let i;
    let l;
    if (Object.assign) {
      return Object.assign(obj, ...assigners);
    }
    for (i = 0, l = assigners.length; i < l; i += 1) {
      const assigner = assigners[i];
      if (typeof assigner === "object" && assigner !== null) {
        const keys2 = Object.keys(assigner);
        keys2.forEach((key) => {
          result[key] = assigner[key];
        });
      }
    }
    return obj;
  }
  /**
   * Get short version/alias for a browser name
   *
   * @example
   *   getBrowserAlias('Microsoft Edge') // edge
   *
   * @param  {string} browserName
   * @return {string}
   */
  static getBrowserAlias(browserName) {
    return BROWSER_ALIASES_MAP[browserName];
  }
  /**
   * Get short version/alias for a browser name
   *
   * @example
   *   getBrowserAlias('edge') // Microsoft Edge
   *
   * @param  {string} browserAlias
   * @return {string}
   */
  static getBrowserTypeByAlias(browserAlias) {
    return BROWSER_MAP[browserAlias] || "";
  }
};
const commonVersionIdentifier = /version\/(\d+(\.?_?\d+)+)/i;
const browsersList = [
  /* Googlebot */
  {
    test: [/googlebot/i],
    describe(ua) {
      const browser2 = {
        name: "Googlebot"
      };
      const version2 = Utils$2.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  /* Opera < 13.0 */
  {
    test: [/opera/i],
    describe(ua) {
      const browser2 = {
        name: "Opera"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  /* Opera > 13.0 */
  {
    test: [/opr\/|opios/i],
    describe(ua) {
      const browser2 = {
        name: "Opera"
      };
      const version2 = Utils$2.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/SamsungBrowser/i],
    describe(ua) {
      const browser2 = {
        name: "Samsung Internet for Android"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/Whale/i],
    describe(ua) {
      const browser2 = {
        name: "NAVER Whale Browser"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/MZBrowser/i],
    describe(ua) {
      const browser2 = {
        name: "MZ Browser"
      };
      const version2 = Utils$2.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/focus/i],
    describe(ua) {
      const browser2 = {
        name: "Focus"
      };
      const version2 = Utils$2.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/swing/i],
    describe(ua) {
      const browser2 = {
        name: "Swing"
      };
      const version2 = Utils$2.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/coast/i],
    describe(ua) {
      const browser2 = {
        name: "Opera Coast"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/opt\/\d+(?:.?_?\d+)+/i],
    describe(ua) {
      const browser2 = {
        name: "Opera Touch"
      };
      const version2 = Utils$2.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/yabrowser/i],
    describe(ua) {
      const browser2 = {
        name: "Yandex Browser"
      };
      const version2 = Utils$2.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/ucbrowser/i],
    describe(ua) {
      const browser2 = {
        name: "UC Browser"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/Maxthon|mxios/i],
    describe(ua) {
      const browser2 = {
        name: "Maxthon"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/epiphany/i],
    describe(ua) {
      const browser2 = {
        name: "Epiphany"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/puffin/i],
    describe(ua) {
      const browser2 = {
        name: "Puffin"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/sleipnir/i],
    describe(ua) {
      const browser2 = {
        name: "Sleipnir"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/k-meleon/i],
    describe(ua) {
      const browser2 = {
        name: "K-Meleon"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/micromessenger/i],
    describe(ua) {
      const browser2 = {
        name: "WeChat"
      };
      const version2 = Utils$2.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/qqbrowser/i],
    describe(ua) {
      const browser2 = {
        name: /qqbrowserlite/i.test(ua) ? "QQ Browser Lite" : "QQ Browser"
      };
      const version2 = Utils$2.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/msie|trident/i],
    describe(ua) {
      const browser2 = {
        name: "Internet Explorer"
      };
      const version2 = Utils$2.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/\sedg\//i],
    describe(ua) {
      const browser2 = {
        name: "Microsoft Edge"
      };
      const version2 = Utils$2.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/edg([ea]|ios)/i],
    describe(ua) {
      const browser2 = {
        name: "Microsoft Edge"
      };
      const version2 = Utils$2.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/vivaldi/i],
    describe(ua) {
      const browser2 = {
        name: "Vivaldi"
      };
      const version2 = Utils$2.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/seamonkey/i],
    describe(ua) {
      const browser2 = {
        name: "SeaMonkey"
      };
      const version2 = Utils$2.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/sailfish/i],
    describe(ua) {
      const browser2 = {
        name: "Sailfish"
      };
      const version2 = Utils$2.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/silk/i],
    describe(ua) {
      const browser2 = {
        name: "Amazon Silk"
      };
      const version2 = Utils$2.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/phantom/i],
    describe(ua) {
      const browser2 = {
        name: "PhantomJS"
      };
      const version2 = Utils$2.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/slimerjs/i],
    describe(ua) {
      const browser2 = {
        name: "SlimerJS"
      };
      const version2 = Utils$2.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
    describe(ua) {
      const browser2 = {
        name: "BlackBerry"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/(web|hpw)[o0]s/i],
    describe(ua) {
      const browser2 = {
        name: "WebOS Browser"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua) || Utils$2.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/bada/i],
    describe(ua) {
      const browser2 = {
        name: "Bada"
      };
      const version2 = Utils$2.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/tizen/i],
    describe(ua) {
      const browser2 = {
        name: "Tizen"
      };
      const version2 = Utils$2.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/qupzilla/i],
    describe(ua) {
      const browser2 = {
        name: "QupZilla"
      };
      const version2 = Utils$2.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/firefox|iceweasel|fxios/i],
    describe(ua) {
      const browser2 = {
        name: "Firefox"
      };
      const version2 = Utils$2.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/electron/i],
    describe(ua) {
      const browser2 = {
        name: "Electron"
      };
      const version2 = Utils$2.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/MiuiBrowser/i],
    describe(ua) {
      const browser2 = {
        name: "Miui"
      };
      const version2 = Utils$2.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/chromium/i],
    describe(ua) {
      const browser2 = {
        name: "Chromium"
      };
      const version2 = Utils$2.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, ua) || Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/chrome|crios|crmo/i],
    describe(ua) {
      const browser2 = {
        name: "Chrome"
      };
      const version2 = Utils$2.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  {
    test: [/GSA/i],
    describe(ua) {
      const browser2 = {
        name: "Google Search"
      };
      const version2 = Utils$2.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  /* Android Browser */
  {
    test(parser) {
      const notLikeAndroid = !parser.test(/like android/i);
      const butAndroid = parser.test(/android/i);
      return notLikeAndroid && butAndroid;
    },
    describe(ua) {
      const browser2 = {
        name: "Android Browser"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  /* PlayStation 4 */
  {
    test: [/playstation 4/i],
    describe(ua) {
      const browser2 = {
        name: "PlayStation 4"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  /* Safari */
  {
    test: [/safari|applewebkit/i],
    describe(ua) {
      const browser2 = {
        name: "Safari"
      };
      const version2 = Utils$2.getFirstMatch(commonVersionIdentifier, ua);
      if (version2) {
        browser2.version = version2;
      }
      return browser2;
    }
  },
  /* Something else */
  {
    test: [/.*/i],
    describe(ua) {
      const regexpWithoutDeviceSpec = /^(.*)\/(.*) /;
      const regexpWithDeviceSpec = /^(.*)\/(.*)[ \t]\((.*)/;
      const hasDeviceSpec = ua.search("\\(") !== -1;
      const regexp = hasDeviceSpec ? regexpWithDeviceSpec : regexpWithoutDeviceSpec;
      return {
        name: Utils$2.getFirstMatch(regexp, ua),
        version: Utils$2.getSecondMatch(regexp, ua)
      };
    }
  }
];
const osParsersList = [
  /* Roku */
  {
    test: [/Roku\/DVP/],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, ua);
      return {
        name: OS_MAP.Roku,
        version: version2
      };
    }
  },
  /* Windows Phone */
  {
    test: [/windows phone/i],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, ua);
      return {
        name: OS_MAP.WindowsPhone,
        version: version2
      };
    }
  },
  /* Windows */
  {
    test: [/windows /i],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, ua);
      const versionName = Utils$2.getWindowsVersionName(version2);
      return {
        name: OS_MAP.Windows,
        version: version2,
        versionName
      };
    }
  },
  /* Firefox on iPad */
  {
    test: [/Macintosh(.*?) FxiOS(.*?)\//],
    describe(ua) {
      const result = {
        name: OS_MAP.iOS
      };
      const version2 = Utils$2.getSecondMatch(/(Version\/)(\d[\d.]+)/, ua);
      if (version2) {
        result.version = version2;
      }
      return result;
    }
  },
  /* macOS */
  {
    test: [/macintosh/i],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, ua).replace(/[_\s]/g, ".");
      const versionName = Utils$2.getMacOSVersionName(version2);
      const os = {
        name: OS_MAP.MacOS,
        version: version2
      };
      if (versionName) {
        os.versionName = versionName;
      }
      return os;
    }
  },
  /* iOS */
  {
    test: [/(ipod|iphone|ipad)/i],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, ua).replace(/[_\s]/g, ".");
      return {
        name: OS_MAP.iOS,
        version: version2
      };
    }
  },
  /* Android */
  {
    test(parser) {
      const notLikeAndroid = !parser.test(/like android/i);
      const butAndroid = parser.test(/android/i);
      return notLikeAndroid && butAndroid;
    },
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, ua);
      const versionName = Utils$2.getAndroidVersionName(version2);
      const os = {
        name: OS_MAP.Android,
        version: version2
      };
      if (versionName) {
        os.versionName = versionName;
      }
      return os;
    }
  },
  /* WebOS */
  {
    test: [/(web|hpw)[o0]s/i],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, ua);
      const os = {
        name: OS_MAP.WebOS
      };
      if (version2 && version2.length) {
        os.version = version2;
      }
      return os;
    }
  },
  /* BlackBerry */
  {
    test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, ua) || Utils$2.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, ua) || Utils$2.getFirstMatch(/\bbb(\d+)/i, ua);
      return {
        name: OS_MAP.BlackBerry,
        version: version2
      };
    }
  },
  /* Bada */
  {
    test: [/bada/i],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, ua);
      return {
        name: OS_MAP.Bada,
        version: version2
      };
    }
  },
  /* Tizen */
  {
    test: [/tizen/i],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, ua);
      return {
        name: OS_MAP.Tizen,
        version: version2
      };
    }
  },
  /* Linux */
  {
    test: [/linux/i],
    describe() {
      return {
        name: OS_MAP.Linux
      };
    }
  },
  /* Chrome OS */
  {
    test: [/CrOS/],
    describe() {
      return {
        name: OS_MAP.ChromeOS
      };
    }
  },
  /* Playstation 4 */
  {
    test: [/PlayStation 4/],
    describe(ua) {
      const version2 = Utils$2.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, ua);
      return {
        name: OS_MAP.PlayStation4,
        version: version2
      };
    }
  }
];
const platformParsersList = [
  /* Googlebot */
  {
    test: [/googlebot/i],
    describe() {
      return {
        type: "bot",
        vendor: "Google"
      };
    }
  },
  /* Huawei */
  {
    test: [/huawei/i],
    describe(ua) {
      const model = Utils$2.getFirstMatch(/(can-l01)/i, ua) && "Nova";
      const platform = {
        type: PLATFORMS_MAP.mobile,
        vendor: "Huawei"
      };
      if (model) {
        platform.model = model;
      }
      return platform;
    }
  },
  /* Nexus Tablet */
  {
    test: [/nexus\s*(?:7|8|9|10).*/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Nexus"
      };
    }
  },
  /* iPad */
  {
    test: [/ipad/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Apple",
        model: "iPad"
      };
    }
  },
  /* Firefox on iPad */
  {
    test: [/Macintosh(.*?) FxiOS(.*?)\//],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Apple",
        model: "iPad"
      };
    }
  },
  /* Amazon Kindle Fire */
  {
    test: [/kftt build/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Amazon",
        model: "Kindle Fire HD 7"
      };
    }
  },
  /* Another Amazon Tablet with Silk */
  {
    test: [/silk/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet,
        vendor: "Amazon"
      };
    }
  },
  /* Tablet */
  {
    test: [/tablet(?! pc)/i],
    describe() {
      return {
        type: PLATFORMS_MAP.tablet
      };
    }
  },
  /* iPod/iPhone */
  {
    test(parser) {
      const iDevice = parser.test(/ipod|iphone/i);
      const likeIDevice = parser.test(/like (ipod|iphone)/i);
      return iDevice && !likeIDevice;
    },
    describe(ua) {
      const model = Utils$2.getFirstMatch(/(ipod|iphone)/i, ua);
      return {
        type: PLATFORMS_MAP.mobile,
        vendor: "Apple",
        model
      };
    }
  },
  /* Nexus Mobile */
  {
    test: [/nexus\s*[0-6].*/i, /galaxy nexus/i],
    describe() {
      return {
        type: PLATFORMS_MAP.mobile,
        vendor: "Nexus"
      };
    }
  },
  /* Mobile */
  {
    test: [/[^-]mobi/i],
    describe() {
      return {
        type: PLATFORMS_MAP.mobile
      };
    }
  },
  /* BlackBerry */
  {
    test(parser) {
      return parser.getBrowserName(true) === "blackberry";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.mobile,
        vendor: "BlackBerry"
      };
    }
  },
  /* Bada */
  {
    test(parser) {
      return parser.getBrowserName(true) === "bada";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.mobile
      };
    }
  },
  /* Windows Phone */
  {
    test(parser) {
      return parser.getBrowserName() === "windows phone";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.mobile,
        vendor: "Microsoft"
      };
    }
  },
  /* Android Tablet */
  {
    test(parser) {
      const osMajorVersion = Number(String(parser.getOSVersion()).split(".")[0]);
      return parser.getOSName(true) === "android" && osMajorVersion >= 3;
    },
    describe() {
      return {
        type: PLATFORMS_MAP.tablet
      };
    }
  },
  /* Android Mobile */
  {
    test(parser) {
      return parser.getOSName(true) === "android";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.mobile
      };
    }
  },
  /* desktop */
  {
    test(parser) {
      return parser.getOSName(true) === "macos";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.desktop,
        vendor: "Apple"
      };
    }
  },
  /* Windows */
  {
    test(parser) {
      return parser.getOSName(true) === "windows";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.desktop
      };
    }
  },
  /* Linux */
  {
    test(parser) {
      return parser.getOSName(true) === "linux";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.desktop
      };
    }
  },
  /* PlayStation 4 */
  {
    test(parser) {
      return parser.getOSName(true) === "playstation 4";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.tv
      };
    }
  },
  /* Roku */
  {
    test(parser) {
      return parser.getOSName(true) === "roku";
    },
    describe() {
      return {
        type: PLATFORMS_MAP.tv
      };
    }
  }
];
const enginesParsersList = [
  /* EdgeHTML */
  {
    test(parser) {
      return parser.getBrowserName(true) === "microsoft edge";
    },
    describe(ua) {
      const isBlinkBased = /\sedg\//i.test(ua);
      if (isBlinkBased) {
        return {
          name: ENGINE_MAP.Blink
        };
      }
      const version2 = Utils$2.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, ua);
      return {
        name: ENGINE_MAP.EdgeHTML,
        version: version2
      };
    }
  },
  /* Trident */
  {
    test: [/trident/i],
    describe(ua) {
      const engine = {
        name: ENGINE_MAP.Trident
      };
      const version2 = Utils$2.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        engine.version = version2;
      }
      return engine;
    }
  },
  /* Presto */
  {
    test(parser) {
      return parser.test(/presto/i);
    },
    describe(ua) {
      const engine = {
        name: ENGINE_MAP.Presto
      };
      const version2 = Utils$2.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        engine.version = version2;
      }
      return engine;
    }
  },
  /* Gecko */
  {
    test(parser) {
      const isGecko = parser.test(/gecko/i);
      const likeGecko = parser.test(/like gecko/i);
      return isGecko && !likeGecko;
    },
    describe(ua) {
      const engine = {
        name: ENGINE_MAP.Gecko
      };
      const version2 = Utils$2.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        engine.version = version2;
      }
      return engine;
    }
  },
  /* Blink */
  {
    test: [/(apple)?webkit\/537\.36/i],
    describe() {
      return {
        name: ENGINE_MAP.Blink
      };
    }
  },
  /* WebKit */
  {
    test: [/(apple)?webkit/i],
    describe(ua) {
      const engine = {
        name: ENGINE_MAP.WebKit
      };
      const version2 = Utils$2.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, ua);
      if (version2) {
        engine.version = version2;
      }
      return engine;
    }
  }
];
let Parser$1 = class Parser {
  /**
   * Create instance of Parser
   *
   * @param {String} UA User-Agent string
   * @param {Boolean} [skipParsing=false] parser can skip parsing in purpose of performance
   * improvements if you need to make a more particular parsing
   * like {@link Parser#parseBrowser} or {@link Parser#parsePlatform}
   *
   * @throw {Error} in case of empty UA String
   *
   * @constructor
   */
  constructor(UA, skipParsing = false) {
    if (UA === void 0 || UA === null || UA === "") {
      throw new Error("UserAgent parameter can't be empty");
    }
    this._ua = UA;
    this.parsedResult = {};
    if (skipParsing !== true) {
      this.parse();
    }
  }
  /**
   * Get UserAgent string of current Parser instance
   * @return {String} User-Agent String of the current <Parser> object
   *
   * @public
   */
  getUA() {
    return this._ua;
  }
  /**
   * Test a UA string for a regexp
   * @param {RegExp} regex
   * @return {Boolean}
   */
  test(regex) {
    return regex.test(this._ua);
  }
  /**
   * Get parsed browser object
   * @return {Object}
   */
  parseBrowser() {
    this.parsedResult.browser = {};
    const browserDescriptor = Utils$2.find(browsersList, (_browser) => {
      if (typeof _browser.test === "function") {
        return _browser.test(this);
      }
      if (_browser.test instanceof Array) {
        return _browser.test.some((condition) => this.test(condition));
      }
      throw new Error("Browser's test function is not valid");
    });
    if (browserDescriptor) {
      this.parsedResult.browser = browserDescriptor.describe(this.getUA());
    }
    return this.parsedResult.browser;
  }
  /**
   * Get parsed browser object
   * @return {Object}
   *
   * @public
   */
  getBrowser() {
    if (this.parsedResult.browser) {
      return this.parsedResult.browser;
    }
    return this.parseBrowser();
  }
  /**
   * Get browser's name
   * @return {String} Browser's name or an empty string
   *
   * @public
   */
  getBrowserName(toLowerCase) {
    if (toLowerCase) {
      return String(this.getBrowser().name).toLowerCase() || "";
    }
    return this.getBrowser().name || "";
  }
  /**
   * Get browser's version
   * @return {String} version of browser
   *
   * @public
   */
  getBrowserVersion() {
    return this.getBrowser().version;
  }
  /**
   * Get OS
   * @return {Object}
   *
   * @example
   * this.getOS();
   * {
   *   name: 'macOS',
   *   version: '10.11.12'
   * }
   */
  getOS() {
    if (this.parsedResult.os) {
      return this.parsedResult.os;
    }
    return this.parseOS();
  }
  /**
   * Parse OS and save it to this.parsedResult.os
   * @return {*|{}}
   */
  parseOS() {
    this.parsedResult.os = {};
    const os = Utils$2.find(osParsersList, (_os) => {
      if (typeof _os.test === "function") {
        return _os.test(this);
      }
      if (_os.test instanceof Array) {
        return _os.test.some((condition) => this.test(condition));
      }
      throw new Error("Browser's test function is not valid");
    });
    if (os) {
      this.parsedResult.os = os.describe(this.getUA());
    }
    return this.parsedResult.os;
  }
  /**
   * Get OS name
   * @param {Boolean} [toLowerCase] return lower-cased value
   * @return {String} name of the OS — macOS, Windows, Linux, etc.
   */
  getOSName(toLowerCase) {
    const { name: name2 } = this.getOS();
    if (toLowerCase) {
      return String(name2).toLowerCase() || "";
    }
    return name2 || "";
  }
  /**
   * Get OS version
   * @return {String} full version with dots ('10.11.12', '5.6', etc)
   */
  getOSVersion() {
    return this.getOS().version;
  }
  /**
   * Get parsed platform
   * @return {{}}
   */
  getPlatform() {
    if (this.parsedResult.platform) {
      return this.parsedResult.platform;
    }
    return this.parsePlatform();
  }
  /**
   * Get platform name
   * @param {Boolean} [toLowerCase=false]
   * @return {*}
   */
  getPlatformType(toLowerCase = false) {
    const { type } = this.getPlatform();
    if (toLowerCase) {
      return String(type).toLowerCase() || "";
    }
    return type || "";
  }
  /**
   * Get parsed platform
   * @return {{}}
   */
  parsePlatform() {
    this.parsedResult.platform = {};
    const platform = Utils$2.find(platformParsersList, (_platform) => {
      if (typeof _platform.test === "function") {
        return _platform.test(this);
      }
      if (_platform.test instanceof Array) {
        return _platform.test.some((condition) => this.test(condition));
      }
      throw new Error("Browser's test function is not valid");
    });
    if (platform) {
      this.parsedResult.platform = platform.describe(this.getUA());
    }
    return this.parsedResult.platform;
  }
  /**
   * Get parsed engine
   * @return {{}}
   */
  getEngine() {
    if (this.parsedResult.engine) {
      return this.parsedResult.engine;
    }
    return this.parseEngine();
  }
  /**
   * Get engines's name
   * @return {String} Engines's name or an empty string
   *
   * @public
   */
  getEngineName(toLowerCase) {
    if (toLowerCase) {
      return String(this.getEngine().name).toLowerCase() || "";
    }
    return this.getEngine().name || "";
  }
  /**
   * Get parsed platform
   * @return {{}}
   */
  parseEngine() {
    this.parsedResult.engine = {};
    const engine = Utils$2.find(enginesParsersList, (_engine) => {
      if (typeof _engine.test === "function") {
        return _engine.test(this);
      }
      if (_engine.test instanceof Array) {
        return _engine.test.some((condition) => this.test(condition));
      }
      throw new Error("Browser's test function is not valid");
    });
    if (engine) {
      this.parsedResult.engine = engine.describe(this.getUA());
    }
    return this.parsedResult.engine;
  }
  /**
   * Parse full information about the browser
   * @returns {Parser}
   */
  parse() {
    this.parseBrowser();
    this.parseOS();
    this.parsePlatform();
    this.parseEngine();
    return this;
  }
  /**
   * Get parsed result
   * @return {ParsedResult}
   */
  getResult() {
    return Utils$2.assign({}, this.parsedResult);
  }
  /**
   * Check if parsed browser matches certain conditions
   *
   * @param {Object} checkTree It's one or two layered object,
   * which can include a platform or an OS on the first layer
   * and should have browsers specs on the bottom-laying layer
   *
   * @returns {Boolean|undefined} Whether the browser satisfies the set conditions or not.
   * Returns `undefined` when the browser is no described in the checkTree object.
   *
   * @example
   * const browser = Bowser.getParser(window.navigator.userAgent);
   * if (browser.satisfies({chrome: '>118.01.1322' }))
   * // or with os
   * if (browser.satisfies({windows: { chrome: '>118.01.1322' } }))
   * // or with platforms
   * if (browser.satisfies({desktop: { chrome: '>118.01.1322' } }))
   */
  satisfies(checkTree) {
    const platformsAndOSes = {};
    let platformsAndOSCounter = 0;
    const browsers = {};
    let browsersCounter = 0;
    const allDefinitions = Object.keys(checkTree);
    allDefinitions.forEach((key) => {
      const currentDefinition = checkTree[key];
      if (typeof currentDefinition === "string") {
        browsers[key] = currentDefinition;
        browsersCounter += 1;
      } else if (typeof currentDefinition === "object") {
        platformsAndOSes[key] = currentDefinition;
        platformsAndOSCounter += 1;
      }
    });
    if (platformsAndOSCounter > 0) {
      const platformsAndOSNames = Object.keys(platformsAndOSes);
      const OSMatchingDefinition = Utils$2.find(platformsAndOSNames, (name2) => this.isOS(name2));
      if (OSMatchingDefinition) {
        const osResult = this.satisfies(platformsAndOSes[OSMatchingDefinition]);
        if (osResult !== void 0) {
          return osResult;
        }
      }
      const platformMatchingDefinition = Utils$2.find(
        platformsAndOSNames,
        (name2) => this.isPlatform(name2)
      );
      if (platformMatchingDefinition) {
        const platformResult = this.satisfies(platformsAndOSes[platformMatchingDefinition]);
        if (platformResult !== void 0) {
          return platformResult;
        }
      }
    }
    if (browsersCounter > 0) {
      const browserNames = Object.keys(browsers);
      const matchingDefinition = Utils$2.find(browserNames, (name2) => this.isBrowser(name2, true));
      if (matchingDefinition !== void 0) {
        return this.compareVersion(browsers[matchingDefinition]);
      }
    }
    return void 0;
  }
  /**
   * Check if the browser name equals the passed string
   * @param browserName The string to compare with the browser name
   * @param [includingAlias=false] The flag showing whether alias will be included into comparison
   * @returns {boolean}
   */
  isBrowser(browserName, includingAlias = false) {
    const defaultBrowserName = this.getBrowserName().toLowerCase();
    let browserNameLower = browserName.toLowerCase();
    const alias = Utils$2.getBrowserTypeByAlias(browserNameLower);
    if (includingAlias && alias) {
      browserNameLower = alias.toLowerCase();
    }
    return browserNameLower === defaultBrowserName;
  }
  compareVersion(version2) {
    let expectedResults = [0];
    let comparableVersion = version2;
    let isLoose = false;
    const currentBrowserVersion = this.getBrowserVersion();
    if (typeof currentBrowserVersion !== "string") {
      return void 0;
    }
    if (version2[0] === ">" || version2[0] === "<") {
      comparableVersion = version2.substr(1);
      if (version2[1] === "=") {
        isLoose = true;
        comparableVersion = version2.substr(2);
      } else {
        expectedResults = [];
      }
      if (version2[0] === ">") {
        expectedResults.push(1);
      } else {
        expectedResults.push(-1);
      }
    } else if (version2[0] === "=") {
      comparableVersion = version2.substr(1);
    } else if (version2[0] === "~") {
      isLoose = true;
      comparableVersion = version2.substr(1);
    }
    return expectedResults.indexOf(
      Utils$2.compareVersions(currentBrowserVersion, comparableVersion, isLoose)
    ) > -1;
  }
  isOS(osName) {
    return this.getOSName(true) === String(osName).toLowerCase();
  }
  isPlatform(platformType) {
    return this.getPlatformType(true) === String(platformType).toLowerCase();
  }
  isEngine(engineName) {
    return this.getEngineName(true) === String(engineName).toLowerCase();
  }
  /**
   * Is anything? Check if the browser is called "anything",
   * the OS called "anything" or the platform called "anything"
   * @param {String} anything
   * @param [includingAlias=false] The flag showing whether alias will be included into comparison
   * @returns {Boolean}
   */
  is(anything, includingAlias = false) {
    return this.isBrowser(anything, includingAlias) || this.isOS(anything) || this.isPlatform(anything);
  }
  /**
   * Check if any of the given values satisfies this.is(anything)
   * @param {String[]} anythings
   * @returns {Boolean}
   */
  some(anythings = []) {
    return anythings.some((anything) => this.is(anything));
  }
};
/*!
 * Bowser - a browser detector
 * https://github.com/lancedikson/bowser
 * MIT License | (c) Dustin Diaz 2012-2015
 * MIT License | (c) Denis Demchenko 2015-2019
 */
class Bowser {
  /**
   * Creates a {@link Parser} instance
   *
   * @param {String} UA UserAgent string
   * @param {Boolean} [skipParsing=false] Will make the Parser postpone parsing until you ask it
   * explicitly. Same as `skipParsing` for {@link Parser}.
   * @returns {Parser}
   * @throws {Error} when UA is not a String
   *
   * @example
   * const parser = Bowser.getParser(window.navigator.userAgent);
   * const result = parser.getResult();
   */
  static getParser(UA, skipParsing = false) {
    if (typeof UA !== "string") {
      throw new Error("UserAgent should be a string");
    }
    return new Parser$1(UA, skipParsing);
  }
  /**
   * Creates a {@link Parser} instance and runs {@link Parser.getResult} immediately
   *
   * @param UA
   * @return {ParsedResult}
   *
   * @example
   * const result = Bowser.parse(window.navigator.userAgent);
   */
  static parse(UA) {
    return new Parser$1(UA).getResult();
  }
  static get BROWSER_MAP() {
    return BROWSER_MAP;
  }
  static get ENGINE_MAP() {
    return ENGINE_MAP;
  }
  static get OS_MAP() {
    return OS_MAP;
  }
  static get PLATFORMS_MAP() {
    return PLATFORMS_MAP;
  }
}
var isMergeableObject = function isMergeableObject2(value) {
  return isNonNullObject(value) && !isSpecial(value);
};
function isNonNullObject(value) {
  return !!value && typeof value === "object";
}
function isSpecial(value) {
  var stringValue = Object.prototype.toString.call(value);
  return stringValue === "[object RegExp]" || stringValue === "[object Date]" || isReactElement(value);
}
var canUseSymbol = typeof Symbol === "function" && Symbol.for;
var REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for("react.element") : 60103;
function isReactElement(value) {
  return value.$$typeof === REACT_ELEMENT_TYPE;
}
function emptyTarget(val) {
  return Array.isArray(val) ? [] : {};
}
function cloneUnlessOtherwiseSpecified(value, options2) {
  return options2.clone !== false && options2.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options2) : value;
}
function defaultArrayMerge(target, source, options2) {
  return target.concat(source).map(function(element) {
    return cloneUnlessOtherwiseSpecified(element, options2);
  });
}
function getMergeFunction(key, options2) {
  if (!options2.customMerge) {
    return deepmerge;
  }
  var customMerge = options2.customMerge(key);
  return typeof customMerge === "function" ? customMerge : deepmerge;
}
function getEnumerableOwnPropertySymbols(target) {
  return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(target).filter(function(symbol2) {
    return Object.propertyIsEnumerable.call(target, symbol2);
  }) : [];
}
function getKeys(target) {
  return Object.keys(target).concat(getEnumerableOwnPropertySymbols(target));
}
function propertyIsOnObject(object2, property) {
  try {
    return property in object2;
  } catch (_) {
    return false;
  }
}
function propertyIsUnsafe(target, key) {
  return propertyIsOnObject(target, key) && !(Object.hasOwnProperty.call(target, key) && Object.propertyIsEnumerable.call(target, key));
}
function mergeObject(target, source, options2) {
  var destination = {};
  if (options2.isMergeableObject(target)) {
    getKeys(target).forEach(function(key) {
      destination[key] = cloneUnlessOtherwiseSpecified(target[key], options2);
    });
  }
  getKeys(source).forEach(function(key) {
    if (propertyIsUnsafe(target, key)) {
      return;
    }
    if (propertyIsOnObject(target, key) && options2.isMergeableObject(source[key])) {
      destination[key] = getMergeFunction(key, options2)(target[key], source[key], options2);
    } else {
      destination[key] = cloneUnlessOtherwiseSpecified(source[key], options2);
    }
  });
  return destination;
}
function deepmerge(target, source, options2) {
  options2 = options2 || {};
  options2.arrayMerge = options2.arrayMerge || defaultArrayMerge;
  options2.isMergeableObject = options2.isMergeableObject || isMergeableObject;
  options2.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;
  var sourceIsArray = Array.isArray(source);
  var targetIsArray = Array.isArray(target);
  var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;
  if (!sourceAndTargetTypesMatch) {
    return cloneUnlessOtherwiseSpecified(source, options2);
  } else if (sourceIsArray) {
    return options2.arrayMerge(target, source, options2);
  } else {
    return mergeObject(target, source, options2);
  }
}
deepmerge.all = function deepmergeAll(array2, options2) {
  if (!Array.isArray(array2)) {
    throw new Error("first argument should be an array");
  }
  return array2.reduce(function(prev, next) {
    return deepmerge(prev, next, options2);
  }, {});
};
var deepmerge_1 = deepmerge;
var cjs = deepmerge_1;
const deepmerge$1 = /* @__PURE__ */ getDefaultExportFromCjs(cjs);
var ErrorKind;
(function(ErrorKind2) {
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_CLOSING_BRACE"] = 1] = "EXPECT_ARGUMENT_CLOSING_BRACE";
  ErrorKind2[ErrorKind2["EMPTY_ARGUMENT"] = 2] = "EMPTY_ARGUMENT";
  ErrorKind2[ErrorKind2["MALFORMED_ARGUMENT"] = 3] = "MALFORMED_ARGUMENT";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_TYPE"] = 4] = "EXPECT_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["INVALID_ARGUMENT_TYPE"] = 5] = "INVALID_ARGUMENT_TYPE";
  ErrorKind2[ErrorKind2["EXPECT_ARGUMENT_STYLE"] = 6] = "EXPECT_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["INVALID_NUMBER_SKELETON"] = 7] = "INVALID_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["INVALID_DATE_TIME_SKELETON"] = 8] = "INVALID_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_NUMBER_SKELETON"] = 9] = "EXPECT_NUMBER_SKELETON";
  ErrorKind2[ErrorKind2["EXPECT_DATE_TIME_SKELETON"] = 10] = "EXPECT_DATE_TIME_SKELETON";
  ErrorKind2[ErrorKind2["UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"] = 11] = "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_OPTIONS"] = 12] = "EXPECT_SELECT_ARGUMENT_OPTIONS";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"] = 13] = "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"] = 14] = "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR"] = 15] = "EXPECT_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR"] = 16] = "EXPECT_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"] = 17] = "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"] = 18] = "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT";
  ErrorKind2[ErrorKind2["INVALID_PLURAL_ARGUMENT_SELECTOR"] = 19] = "INVALID_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_PLURAL_ARGUMENT_SELECTOR"] = 20] = "DUPLICATE_PLURAL_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["DUPLICATE_SELECT_ARGUMENT_SELECTOR"] = 21] = "DUPLICATE_SELECT_ARGUMENT_SELECTOR";
  ErrorKind2[ErrorKind2["MISSING_OTHER_CLAUSE"] = 22] = "MISSING_OTHER_CLAUSE";
  ErrorKind2[ErrorKind2["INVALID_TAG"] = 23] = "INVALID_TAG";
  ErrorKind2[ErrorKind2["INVALID_TAG_NAME"] = 25] = "INVALID_TAG_NAME";
  ErrorKind2[ErrorKind2["UNMATCHED_CLOSING_TAG"] = 26] = "UNMATCHED_CLOSING_TAG";
  ErrorKind2[ErrorKind2["UNCLOSED_TAG"] = 27] = "UNCLOSED_TAG";
})(ErrorKind || (ErrorKind = {}));
var TYPE;
(function(TYPE2) {
  TYPE2[TYPE2["literal"] = 0] = "literal";
  TYPE2[TYPE2["argument"] = 1] = "argument";
  TYPE2[TYPE2["number"] = 2] = "number";
  TYPE2[TYPE2["date"] = 3] = "date";
  TYPE2[TYPE2["time"] = 4] = "time";
  TYPE2[TYPE2["select"] = 5] = "select";
  TYPE2[TYPE2["plural"] = 6] = "plural";
  TYPE2[TYPE2["pound"] = 7] = "pound";
  TYPE2[TYPE2["tag"] = 8] = "tag";
})(TYPE || (TYPE = {}));
var SKELETON_TYPE;
(function(SKELETON_TYPE2) {
  SKELETON_TYPE2[SKELETON_TYPE2["number"] = 0] = "number";
  SKELETON_TYPE2[SKELETON_TYPE2["dateTime"] = 1] = "dateTime";
})(SKELETON_TYPE || (SKELETON_TYPE = {}));
function isLiteralElement(el) {
  return el.type === TYPE.literal;
}
function isArgumentElement(el) {
  return el.type === TYPE.argument;
}
function isNumberElement(el) {
  return el.type === TYPE.number;
}
function isDateElement(el) {
  return el.type === TYPE.date;
}
function isTimeElement(el) {
  return el.type === TYPE.time;
}
function isSelectElement(el) {
  return el.type === TYPE.select;
}
function isPluralElement(el) {
  return el.type === TYPE.plural;
}
function isPoundElement(el) {
  return el.type === TYPE.pound;
}
function isTagElement(el) {
  return el.type === TYPE.tag;
}
function isNumberSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.number);
}
function isDateTimeSkeleton(el) {
  return !!(el && typeof el === "object" && el.type === SKELETON_TYPE.dateTime);
}
var SPACE_SEPARATOR_REGEX = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/;
var DATE_TIME_REGEX = /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g;
function parseDateTimeSkeleton(skeleton) {
  var result = {};
  skeleton.replace(DATE_TIME_REGEX, function(match) {
    var len = match.length;
    switch (match[0]) {
      case "G":
        result.era = len === 4 ? "long" : len === 5 ? "narrow" : "short";
        break;
      case "y":
        result.year = len === 2 ? "2-digit" : "numeric";
        break;
      case "Y":
      case "u":
      case "U":
      case "r":
        throw new RangeError("`Y/u/U/r` (year) patterns are not supported, use `y` instead");
      case "q":
      case "Q":
        throw new RangeError("`q/Q` (quarter) patterns are not supported");
      case "M":
      case "L":
        result.month = ["numeric", "2-digit", "short", "long", "narrow"][len - 1];
        break;
      case "w":
      case "W":
        throw new RangeError("`w/W` (week) patterns are not supported");
      case "d":
        result.day = ["numeric", "2-digit"][len - 1];
        break;
      case "D":
      case "F":
      case "g":
        throw new RangeError("`D/F/g` (day) patterns are not supported, use `d` instead");
      case "E":
        result.weekday = len === 4 ? "short" : len === 5 ? "narrow" : "short";
        break;
      case "e":
        if (len < 4) {
          throw new RangeError("`e..eee` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "c":
        if (len < 4) {
          throw new RangeError("`c..ccc` (weekday) patterns are not supported");
        }
        result.weekday = ["short", "long", "narrow", "short"][len - 4];
        break;
      case "a":
        result.hour12 = true;
        break;
      case "b":
      case "B":
        throw new RangeError("`b/B` (period) patterns are not supported, use `a` instead");
      case "h":
        result.hourCycle = "h12";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "H":
        result.hourCycle = "h23";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "K":
        result.hourCycle = "h11";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "k":
        result.hourCycle = "h24";
        result.hour = ["numeric", "2-digit"][len - 1];
        break;
      case "j":
      case "J":
      case "C":
        throw new RangeError("`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead");
      case "m":
        result.minute = ["numeric", "2-digit"][len - 1];
        break;
      case "s":
        result.second = ["numeric", "2-digit"][len - 1];
        break;
      case "S":
      case "A":
        throw new RangeError("`S/A` (second) patterns are not supported, use `s` instead");
      case "z":
        result.timeZoneName = len < 4 ? "short" : "long";
        break;
      case "Z":
      case "O":
      case "v":
      case "V":
      case "X":
      case "x":
        throw new RangeError("`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead");
    }
    return "";
  });
  return result;
}
var WHITE_SPACE_REGEX = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i;
function parseNumberSkeletonFromString(skeleton) {
  if (skeleton.length === 0) {
    throw new Error("Number skeleton cannot be empty");
  }
  var stringTokens = skeleton.split(WHITE_SPACE_REGEX).filter(function(x) {
    return x.length > 0;
  });
  var tokens2 = [];
  for (var _i = 0, stringTokens_1 = stringTokens; _i < stringTokens_1.length; _i++) {
    var stringToken = stringTokens_1[_i];
    var stemAndOptions = stringToken.split("/");
    if (stemAndOptions.length === 0) {
      throw new Error("Invalid number skeleton");
    }
    var stem = stemAndOptions[0], options2 = stemAndOptions.slice(1);
    for (var _a2 = 0, options_1 = options2; _a2 < options_1.length; _a2++) {
      var option = options_1[_a2];
      if (option.length === 0) {
        throw new Error("Invalid number skeleton");
      }
    }
    tokens2.push({ stem, options: options2 });
  }
  return tokens2;
}
function icuUnitToEcma(unit) {
  return unit.replace(/^(.*?)-/, "");
}
var FRACTION_PRECISION_REGEX = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g;
var SIGNIFICANT_PRECISION_REGEX = /^(@+)?(\+|#+)?[rs]?$/g;
var INTEGER_WIDTH_REGEX = /(\*)(0+)|(#+)(0+)|(0+)/g;
var CONCISE_INTEGER_WIDTH_REGEX = /^(0+)$/;
function parseSignificantPrecision(str) {
  var result = {};
  if (str[str.length - 1] === "r") {
    result.roundingPriority = "morePrecision";
  } else if (str[str.length - 1] === "s") {
    result.roundingPriority = "lessPrecision";
  }
  str.replace(SIGNIFICANT_PRECISION_REGEX, function(_, g1, g2) {
    if (typeof g2 !== "string") {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length;
    } else if (g2 === "+") {
      result.minimumSignificantDigits = g1.length;
    } else if (g1[0] === "#") {
      result.maximumSignificantDigits = g1.length;
    } else {
      result.minimumSignificantDigits = g1.length;
      result.maximumSignificantDigits = g1.length + (typeof g2 === "string" ? g2.length : 0);
    }
    return "";
  });
  return result;
}
function parseSign(str) {
  switch (str) {
    case "sign-auto":
      return {
        signDisplay: "auto"
      };
    case "sign-accounting":
    case "()":
      return {
        currencySign: "accounting"
      };
    case "sign-always":
    case "+!":
      return {
        signDisplay: "always"
      };
    case "sign-accounting-always":
    case "()!":
      return {
        signDisplay: "always",
        currencySign: "accounting"
      };
    case "sign-except-zero":
    case "+?":
      return {
        signDisplay: "exceptZero"
      };
    case "sign-accounting-except-zero":
    case "()?":
      return {
        signDisplay: "exceptZero",
        currencySign: "accounting"
      };
    case "sign-never":
    case "+_":
      return {
        signDisplay: "never"
      };
  }
}
function parseConciseScientificAndEngineeringStem(stem) {
  var result;
  if (stem[0] === "E" && stem[1] === "E") {
    result = {
      notation: "engineering"
    };
    stem = stem.slice(2);
  } else if (stem[0] === "E") {
    result = {
      notation: "scientific"
    };
    stem = stem.slice(1);
  }
  if (result) {
    var signDisplay = stem.slice(0, 2);
    if (signDisplay === "+!") {
      result.signDisplay = "always";
      stem = stem.slice(2);
    } else if (signDisplay === "+?") {
      result.signDisplay = "exceptZero";
      stem = stem.slice(2);
    }
    if (!CONCISE_INTEGER_WIDTH_REGEX.test(stem)) {
      throw new Error("Malformed concise eng/scientific notation");
    }
    result.minimumIntegerDigits = stem.length;
  }
  return result;
}
function parseNotationOptions(opt) {
  var result = {};
  var signOpts = parseSign(opt);
  if (signOpts) {
    return signOpts;
  }
  return result;
}
function parseNumberSkeleton(tokens2) {
  var result = {};
  for (var _i = 0, tokens_1 = tokens2; _i < tokens_1.length; _i++) {
    var token = tokens_1[_i];
    switch (token.stem) {
      case "percent":
      case "%":
        result.style = "percent";
        continue;
      case "%x100":
        result.style = "percent";
        result.scale = 100;
        continue;
      case "currency":
        result.style = "currency";
        result.currency = token.options[0];
        continue;
      case "group-off":
      case ",_":
        result.useGrouping = false;
        continue;
      case "precision-integer":
      case ".":
        result.maximumFractionDigits = 0;
        continue;
      case "measure-unit":
      case "unit":
        result.style = "unit";
        result.unit = icuUnitToEcma(token.options[0]);
        continue;
      case "compact-short":
      case "K":
        result.notation = "compact";
        result.compactDisplay = "short";
        continue;
      case "compact-long":
      case "KK":
        result.notation = "compact";
        result.compactDisplay = "long";
        continue;
      case "scientific":
        result = __assign(__assign(__assign({}, result), { notation: "scientific" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "engineering":
        result = __assign(__assign(__assign({}, result), { notation: "engineering" }), token.options.reduce(function(all, opt2) {
          return __assign(__assign({}, all), parseNotationOptions(opt2));
        }, {}));
        continue;
      case "notation-simple":
        result.notation = "standard";
        continue;
      case "unit-width-narrow":
        result.currencyDisplay = "narrowSymbol";
        result.unitDisplay = "narrow";
        continue;
      case "unit-width-short":
        result.currencyDisplay = "code";
        result.unitDisplay = "short";
        continue;
      case "unit-width-full-name":
        result.currencyDisplay = "name";
        result.unitDisplay = "long";
        continue;
      case "unit-width-iso-code":
        result.currencyDisplay = "symbol";
        continue;
      case "scale":
        result.scale = parseFloat(token.options[0]);
        continue;
      case "integer-width":
        if (token.options.length > 1) {
          throw new RangeError("integer-width stems only accept a single optional option");
        }
        token.options[0].replace(INTEGER_WIDTH_REGEX, function(_, g1, g2, g3, g4, g5) {
          if (g1) {
            result.minimumIntegerDigits = g2.length;
          } else if (g3 && g4) {
            throw new Error("We currently do not support maximum integer digits");
          } else if (g5) {
            throw new Error("We currently do not support exact integer digits");
          }
          return "";
        });
        continue;
    }
    if (CONCISE_INTEGER_WIDTH_REGEX.test(token.stem)) {
      result.minimumIntegerDigits = token.stem.length;
      continue;
    }
    if (FRACTION_PRECISION_REGEX.test(token.stem)) {
      if (token.options.length > 1) {
        throw new RangeError("Fraction-precision stems only accept a single optional option");
      }
      token.stem.replace(FRACTION_PRECISION_REGEX, function(_, g1, g2, g3, g4, g5) {
        if (g2 === "*") {
          result.minimumFractionDigits = g1.length;
        } else if (g3 && g3[0] === "#") {
          result.maximumFractionDigits = g3.length;
        } else if (g4 && g5) {
          result.minimumFractionDigits = g4.length;
          result.maximumFractionDigits = g4.length + g5.length;
        } else {
          result.minimumFractionDigits = g1.length;
          result.maximumFractionDigits = g1.length;
        }
        return "";
      });
      var opt = token.options[0];
      if (opt === "w") {
        result = __assign(__assign({}, result), { trailingZeroDisplay: "stripIfInteger" });
      } else if (opt) {
        result = __assign(__assign({}, result), parseSignificantPrecision(opt));
      }
      continue;
    }
    if (SIGNIFICANT_PRECISION_REGEX.test(token.stem)) {
      result = __assign(__assign({}, result), parseSignificantPrecision(token.stem));
      continue;
    }
    var signOpts = parseSign(token.stem);
    if (signOpts) {
      result = __assign(__assign({}, result), signOpts);
    }
    var conciseScientificAndEngineeringOpts = parseConciseScientificAndEngineeringStem(token.stem);
    if (conciseScientificAndEngineeringOpts) {
      result = __assign(__assign({}, result), conciseScientificAndEngineeringOpts);
    }
  }
  return result;
}
var timeData = {
  "AX": [
    "H"
  ],
  "BQ": [
    "H"
  ],
  "CP": [
    "H"
  ],
  "CZ": [
    "H"
  ],
  "DK": [
    "H"
  ],
  "FI": [
    "H"
  ],
  "ID": [
    "H"
  ],
  "IS": [
    "H"
  ],
  "ML": [
    "H"
  ],
  "NE": [
    "H"
  ],
  "RU": [
    "H"
  ],
  "SE": [
    "H"
  ],
  "SJ": [
    "H"
  ],
  "SK": [
    "H"
  ],
  "AS": [
    "h",
    "H"
  ],
  "BT": [
    "h",
    "H"
  ],
  "DJ": [
    "h",
    "H"
  ],
  "ER": [
    "h",
    "H"
  ],
  "GH": [
    "h",
    "H"
  ],
  "IN": [
    "h",
    "H"
  ],
  "LS": [
    "h",
    "H"
  ],
  "PG": [
    "h",
    "H"
  ],
  "PW": [
    "h",
    "H"
  ],
  "SO": [
    "h",
    "H"
  ],
  "TO": [
    "h",
    "H"
  ],
  "VU": [
    "h",
    "H"
  ],
  "WS": [
    "h",
    "H"
  ],
  "001": [
    "H",
    "h"
  ],
  "AL": [
    "h",
    "H",
    "hB"
  ],
  "TD": [
    "h",
    "H",
    "hB"
  ],
  "ca-ES": [
    "H",
    "h",
    "hB"
  ],
  "CF": [
    "H",
    "h",
    "hB"
  ],
  "CM": [
    "H",
    "h",
    "hB"
  ],
  "fr-CA": [
    "H",
    "h",
    "hB"
  ],
  "gl-ES": [
    "H",
    "h",
    "hB"
  ],
  "it-CH": [
    "H",
    "h",
    "hB"
  ],
  "it-IT": [
    "H",
    "h",
    "hB"
  ],
  "LU": [
    "H",
    "h",
    "hB"
  ],
  "NP": [
    "H",
    "h",
    "hB"
  ],
  "PF": [
    "H",
    "h",
    "hB"
  ],
  "SC": [
    "H",
    "h",
    "hB"
  ],
  "SM": [
    "H",
    "h",
    "hB"
  ],
  "SN": [
    "H",
    "h",
    "hB"
  ],
  "TF": [
    "H",
    "h",
    "hB"
  ],
  "VA": [
    "H",
    "h",
    "hB"
  ],
  "CY": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "GR": [
    "h",
    "H",
    "hb",
    "hB"
  ],
  "CO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "DO": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KP": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "KR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "NA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PA": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "PR": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "VE": [
    "h",
    "H",
    "hB",
    "hb"
  ],
  "AC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "AI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "BW": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "BZ": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CC": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "CX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "DG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "FK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GB": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "GI": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IM": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "IO": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "JE": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "LT": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MK": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "MS": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NF": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NG": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NR": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "NU": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "PN": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SH": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "SX": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "TA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "ZA": [
    "H",
    "h",
    "hb",
    "hB"
  ],
  "af-ZA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "AR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CL": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "CU": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "EA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-BO": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-BR": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-EC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-ES": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-GQ": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "es-PE": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "GT": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "HN": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "IC": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KG": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "KM": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "LK": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MA": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "MX": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "NI": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "PY": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "SV": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "UY": [
    "H",
    "h",
    "hB",
    "hb"
  ],
  "JP": [
    "H",
    "h",
    "K"
  ],
  "AD": [
    "H",
    "hB"
  ],
  "AM": [
    "H",
    "hB"
  ],
  "AO": [
    "H",
    "hB"
  ],
  "AT": [
    "H",
    "hB"
  ],
  "AW": [
    "H",
    "hB"
  ],
  "BE": [
    "H",
    "hB"
  ],
  "BF": [
    "H",
    "hB"
  ],
  "BJ": [
    "H",
    "hB"
  ],
  "BL": [
    "H",
    "hB"
  ],
  "BR": [
    "H",
    "hB"
  ],
  "CG": [
    "H",
    "hB"
  ],
  "CI": [
    "H",
    "hB"
  ],
  "CV": [
    "H",
    "hB"
  ],
  "DE": [
    "H",
    "hB"
  ],
  "EE": [
    "H",
    "hB"
  ],
  "FR": [
    "H",
    "hB"
  ],
  "GA": [
    "H",
    "hB"
  ],
  "GF": [
    "H",
    "hB"
  ],
  "GN": [
    "H",
    "hB"
  ],
  "GP": [
    "H",
    "hB"
  ],
  "GW": [
    "H",
    "hB"
  ],
  "HR": [
    "H",
    "hB"
  ],
  "IL": [
    "H",
    "hB"
  ],
  "IT": [
    "H",
    "hB"
  ],
  "KZ": [
    "H",
    "hB"
  ],
  "MC": [
    "H",
    "hB"
  ],
  "MD": [
    "H",
    "hB"
  ],
  "MF": [
    "H",
    "hB"
  ],
  "MQ": [
    "H",
    "hB"
  ],
  "MZ": [
    "H",
    "hB"
  ],
  "NC": [
    "H",
    "hB"
  ],
  "NL": [
    "H",
    "hB"
  ],
  "PM": [
    "H",
    "hB"
  ],
  "PT": [
    "H",
    "hB"
  ],
  "RE": [
    "H",
    "hB"
  ],
  "RO": [
    "H",
    "hB"
  ],
  "SI": [
    "H",
    "hB"
  ],
  "SR": [
    "H",
    "hB"
  ],
  "ST": [
    "H",
    "hB"
  ],
  "TG": [
    "H",
    "hB"
  ],
  "TR": [
    "H",
    "hB"
  ],
  "WF": [
    "H",
    "hB"
  ],
  "YT": [
    "H",
    "hB"
  ],
  "BD": [
    "h",
    "hB",
    "H"
  ],
  "PK": [
    "h",
    "hB",
    "H"
  ],
  "AZ": [
    "H",
    "hB",
    "h"
  ],
  "BA": [
    "H",
    "hB",
    "h"
  ],
  "BG": [
    "H",
    "hB",
    "h"
  ],
  "CH": [
    "H",
    "hB",
    "h"
  ],
  "GE": [
    "H",
    "hB",
    "h"
  ],
  "LI": [
    "H",
    "hB",
    "h"
  ],
  "ME": [
    "H",
    "hB",
    "h"
  ],
  "RS": [
    "H",
    "hB",
    "h"
  ],
  "UA": [
    "H",
    "hB",
    "h"
  ],
  "UZ": [
    "H",
    "hB",
    "h"
  ],
  "XK": [
    "H",
    "hB",
    "h"
  ],
  "AG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "AU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "CA": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "DM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "en-001": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FJ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "FM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GD": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GU": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "GY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "JM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KN": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "KY": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "LR": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MH": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MP": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "MW": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "NZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SB": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SL": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SS": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "SZ": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "TT": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "UM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "US": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VC": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VG": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "VI": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "ZM": [
    "h",
    "hb",
    "H",
    "hB"
  ],
  "BO": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "EC": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "ES": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "GQ": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "PE": [
    "H",
    "hB",
    "h",
    "hb"
  ],
  "AE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "ar-001": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "BH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "DZ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EG": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "EH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "HK": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "IQ": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "JO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "KW": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "LB": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "LY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MO": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "MR": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "OM": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PH": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "PS": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "QA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SA": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SD": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "SY": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "TN": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "YE": [
    "h",
    "hB",
    "hb",
    "H"
  ],
  "AF": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "LA": [
    "H",
    "hb",
    "hB",
    "h"
  ],
  "CN": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "LV": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "TL": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "zu-ZA": [
    "H",
    "hB",
    "hb",
    "h"
  ],
  "CD": [
    "hB",
    "H"
  ],
  "IR": [
    "hB",
    "H"
  ],
  "hi-IN": [
    "hB",
    "h",
    "H"
  ],
  "kn-IN": [
    "hB",
    "h",
    "H"
  ],
  "ml-IN": [
    "hB",
    "h",
    "H"
  ],
  "te-IN": [
    "hB",
    "h",
    "H"
  ],
  "KH": [
    "hB",
    "h",
    "H",
    "hb"
  ],
  "ta-IN": [
    "hB",
    "h",
    "hb",
    "H"
  ],
  "BN": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "MY": [
    "hb",
    "hB",
    "h",
    "H"
  ],
  "ET": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "gu-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "mr-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "pa-IN": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "TW": [
    "hB",
    "hb",
    "h",
    "H"
  ],
  "KE": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "MM": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "TZ": [
    "hB",
    "hb",
    "H",
    "h"
  ],
  "UG": [
    "hB",
    "hb",
    "H",
    "h"
  ]
};
function getBestPattern(skeleton, locale) {
  var skeletonCopy = "";
  for (var patternPos = 0; patternPos < skeleton.length; patternPos++) {
    var patternChar = skeleton.charAt(patternPos);
    if (patternChar === "j") {
      var extraLength = 0;
      while (patternPos + 1 < skeleton.length && skeleton.charAt(patternPos + 1) === patternChar) {
        extraLength++;
        patternPos++;
      }
      var hourLen = 1 + (extraLength & 1);
      var dayPeriodLen = extraLength < 2 ? 1 : 3 + (extraLength >> 1);
      var dayPeriodChar = "a";
      var hourChar = getDefaultHourSymbolFromLocale(locale);
      if (hourChar == "H" || hourChar == "k") {
        dayPeriodLen = 0;
      }
      while (dayPeriodLen-- > 0) {
        skeletonCopy += dayPeriodChar;
      }
      while (hourLen-- > 0) {
        skeletonCopy = hourChar + skeletonCopy;
      }
    } else if (patternChar === "J") {
      skeletonCopy += "H";
    } else {
      skeletonCopy += patternChar;
    }
  }
  return skeletonCopy;
}
function getDefaultHourSymbolFromLocale(locale) {
  var hourCycle = locale.hourCycle;
  if (hourCycle === void 0 && // @ts-ignore hourCycle(s) is not identified yet
  locale.hourCycles && // @ts-ignore
  locale.hourCycles.length) {
    hourCycle = locale.hourCycles[0];
  }
  if (hourCycle) {
    switch (hourCycle) {
      case "h24":
        return "k";
      case "h23":
        return "H";
      case "h12":
        return "h";
      case "h11":
        return "K";
      default:
        throw new Error("Invalid hourCycle");
    }
  }
  var languageTag = locale.language;
  var regionTag;
  if (languageTag !== "root") {
    regionTag = locale.maximize().region;
  }
  var hourCycles = timeData[regionTag || ""] || timeData[languageTag || ""] || timeData["".concat(languageTag, "-001")] || timeData["001"];
  return hourCycles[0];
}
var _a;
var SPACE_SEPARATOR_START_REGEX = new RegExp("^".concat(SPACE_SEPARATOR_REGEX.source, "*"));
var SPACE_SEPARATOR_END_REGEX = new RegExp("".concat(SPACE_SEPARATOR_REGEX.source, "*$"));
function createLocation(start, end) {
  return { start, end };
}
var hasNativeStartsWith = !!String.prototype.startsWith;
var hasNativeFromCodePoint = !!String.fromCodePoint;
var hasNativeFromEntries = !!Object.fromEntries;
var hasNativeCodePointAt = !!String.prototype.codePointAt;
var hasTrimStart = !!String.prototype.trimStart;
var hasTrimEnd = !!String.prototype.trimEnd;
var hasNativeIsSafeInteger = !!Number.isSafeInteger;
var isSafeInteger = hasNativeIsSafeInteger ? Number.isSafeInteger : function(n) {
  return typeof n === "number" && isFinite(n) && Math.floor(n) === n && Math.abs(n) <= 9007199254740991;
};
var REGEX_SUPPORTS_U_AND_Y = true;
try {
  var re = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  REGEX_SUPPORTS_U_AND_Y = ((_a = re.exec("a")) === null || _a === void 0 ? void 0 : _a[0]) === "a";
} catch (_) {
  REGEX_SUPPORTS_U_AND_Y = false;
}
var startsWith = hasNativeStartsWith ? (
  // Native
  function startsWith2(s, search, position) {
    return s.startsWith(search, position);
  }
) : (
  // For IE11
  function startsWith3(s, search, position) {
    return s.slice(position, position + search.length) === search;
  }
);
var fromCodePoint = hasNativeFromCodePoint ? String.fromCodePoint : (
  // IE11
  function fromCodePoint2() {
    var codePoints = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      codePoints[_i] = arguments[_i];
    }
    var elements = "";
    var length = codePoints.length;
    var i = 0;
    var code;
    while (length > i) {
      code = codePoints[i++];
      if (code > 1114111)
        throw RangeError(code + " is not a valid code point");
      elements += code < 65536 ? String.fromCharCode(code) : String.fromCharCode(((code -= 65536) >> 10) + 55296, code % 1024 + 56320);
    }
    return elements;
  }
);
var fromEntries = (
  // native
  hasNativeFromEntries ? Object.fromEntries : (
    // Ponyfill
    function fromEntries2(entries) {
      var obj = {};
      for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
        var _a2 = entries_1[_i], k = _a2[0], v = _a2[1];
        obj[k] = v;
      }
      return obj;
    }
  )
);
var codePointAt = hasNativeCodePointAt ? (
  // Native
  function codePointAt2(s, index) {
    return s.codePointAt(index);
  }
) : (
  // IE 11
  function codePointAt3(s, index) {
    var size = s.length;
    if (index < 0 || index >= size) {
      return void 0;
    }
    var first2 = s.charCodeAt(index);
    var second;
    return first2 < 55296 || first2 > 56319 || index + 1 === size || (second = s.charCodeAt(index + 1)) < 56320 || second > 57343 ? first2 : (first2 - 55296 << 10) + (second - 56320) + 65536;
  }
);
var trimStart = hasTrimStart ? (
  // Native
  function trimStart2(s) {
    return s.trimStart();
  }
) : (
  // Ponyfill
  function trimStart3(s) {
    return s.replace(SPACE_SEPARATOR_START_REGEX, "");
  }
);
var trimEnd = hasTrimEnd ? (
  // Native
  function trimEnd2(s) {
    return s.trimEnd();
  }
) : (
  // Ponyfill
  function trimEnd3(s) {
    return s.replace(SPACE_SEPARATOR_END_REGEX, "");
  }
);
function RE(s, flag) {
  return new RegExp(s, flag);
}
var matchIdentifierAtIndex;
if (REGEX_SUPPORTS_U_AND_Y) {
  var IDENTIFIER_PREFIX_RE_1 = RE("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
    var _a2;
    IDENTIFIER_PREFIX_RE_1.lastIndex = index;
    var match = IDENTIFIER_PREFIX_RE_1.exec(s);
    return (_a2 = match[1]) !== null && _a2 !== void 0 ? _a2 : "";
  };
} else {
  matchIdentifierAtIndex = function matchIdentifierAtIndex2(s, index) {
    var match = [];
    while (true) {
      var c = codePointAt(s, index);
      if (c === void 0 || _isWhiteSpace(c) || _isPatternSyntax(c)) {
        break;
      }
      match.push(c);
      index += c >= 65536 ? 2 : 1;
    }
    return fromCodePoint.apply(void 0, match);
  };
}
var Parser2 = (
  /** @class */
  function() {
    function Parser3(message, options2) {
      if (options2 === void 0) {
        options2 = {};
      }
      this.message = message;
      this.position = { offset: 0, line: 1, column: 1 };
      this.ignoreTag = !!options2.ignoreTag;
      this.locale = options2.locale;
      this.requiresOtherClause = !!options2.requiresOtherClause;
      this.shouldParseSkeletons = !!options2.shouldParseSkeletons;
    }
    Parser3.prototype.parse = function() {
      if (this.offset() !== 0) {
        throw Error("parser can only be used once");
      }
      return this.parseMessage(0, "", false);
    };
    Parser3.prototype.parseMessage = function(nestingLevel, parentArgType, expectingCloseTag) {
      var elements = [];
      while (!this.isEOF()) {
        var char = this.char();
        if (char === 123) {
          var result = this.parseArgument(nestingLevel, expectingCloseTag);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else if (char === 125 && nestingLevel > 0) {
          break;
        } else if (char === 35 && (parentArgType === "plural" || parentArgType === "selectordinal")) {
          var position = this.clonePosition();
          this.bump();
          elements.push({
            type: TYPE.pound,
            location: createLocation(position, this.clonePosition())
          });
        } else if (char === 60 && !this.ignoreTag && this.peek() === 47) {
          if (expectingCloseTag) {
            break;
          } else {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(this.clonePosition(), this.clonePosition()));
          }
        } else if (char === 60 && !this.ignoreTag && _isAlpha(this.peek() || 0)) {
          var result = this.parseTag(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        } else {
          var result = this.parseLiteral(nestingLevel, parentArgType);
          if (result.err) {
            return result;
          }
          elements.push(result.val);
        }
      }
      return { val: elements, err: null };
    };
    Parser3.prototype.parseTag = function(nestingLevel, parentArgType) {
      var startPosition = this.clonePosition();
      this.bump();
      var tagName = this.parseTagName();
      this.bumpSpace();
      if (this.bumpIf("/>")) {
        return {
          val: {
            type: TYPE.literal,
            value: "<".concat(tagName, "/>"),
            location: createLocation(startPosition, this.clonePosition())
          },
          err: null
        };
      } else if (this.bumpIf(">")) {
        var childrenResult = this.parseMessage(nestingLevel + 1, parentArgType, true);
        if (childrenResult.err) {
          return childrenResult;
        }
        var children = childrenResult.val;
        var endTagStartPosition = this.clonePosition();
        if (this.bumpIf("</")) {
          if (this.isEOF() || !_isAlpha(this.char())) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          var closingTagNameStartPosition = this.clonePosition();
          var closingTagName = this.parseTagName();
          if (tagName !== closingTagName) {
            return this.error(ErrorKind.UNMATCHED_CLOSING_TAG, createLocation(closingTagNameStartPosition, this.clonePosition()));
          }
          this.bumpSpace();
          if (!this.bumpIf(">")) {
            return this.error(ErrorKind.INVALID_TAG, createLocation(endTagStartPosition, this.clonePosition()));
          }
          return {
            val: {
              type: TYPE.tag,
              value: tagName,
              children,
              location: createLocation(startPosition, this.clonePosition())
            },
            err: null
          };
        } else {
          return this.error(ErrorKind.UNCLOSED_TAG, createLocation(startPosition, this.clonePosition()));
        }
      } else {
        return this.error(ErrorKind.INVALID_TAG, createLocation(startPosition, this.clonePosition()));
      }
    };
    Parser3.prototype.parseTagName = function() {
      var startOffset = this.offset();
      this.bump();
      while (!this.isEOF() && _isPotentialElementNameChar(this.char())) {
        this.bump();
      }
      return this.message.slice(startOffset, this.offset());
    };
    Parser3.prototype.parseLiteral = function(nestingLevel, parentArgType) {
      var start = this.clonePosition();
      var value = "";
      while (true) {
        var parseQuoteResult = this.tryParseQuote(parentArgType);
        if (parseQuoteResult) {
          value += parseQuoteResult;
          continue;
        }
        var parseUnquotedResult = this.tryParseUnquoted(nestingLevel, parentArgType);
        if (parseUnquotedResult) {
          value += parseUnquotedResult;
          continue;
        }
        var parseLeftAngleResult = this.tryParseLeftAngleBracket();
        if (parseLeftAngleResult) {
          value += parseLeftAngleResult;
          continue;
        }
        break;
      }
      var location = createLocation(start, this.clonePosition());
      return {
        val: { type: TYPE.literal, value, location },
        err: null
      };
    };
    Parser3.prototype.tryParseLeftAngleBracket = function() {
      if (!this.isEOF() && this.char() === 60 && (this.ignoreTag || // If at the opening tag or closing tag position, bail.
      !_isAlphaOrSlash(this.peek() || 0))) {
        this.bump();
        return "<";
      }
      return null;
    };
    Parser3.prototype.tryParseQuote = function(parentArgType) {
      if (this.isEOF() || this.char() !== 39) {
        return null;
      }
      switch (this.peek()) {
        case 39:
          this.bump();
          this.bump();
          return "'";
        case 123:
        case 60:
        case 62:
        case 125:
          break;
        case 35:
          if (parentArgType === "plural" || parentArgType === "selectordinal") {
            break;
          }
          return null;
        default:
          return null;
      }
      this.bump();
      var codePoints = [this.char()];
      this.bump();
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch === 39) {
          if (this.peek() === 39) {
            codePoints.push(39);
            this.bump();
          } else {
            this.bump();
            break;
          }
        } else {
          codePoints.push(ch);
        }
        this.bump();
      }
      return fromCodePoint.apply(void 0, codePoints);
    };
    Parser3.prototype.tryParseUnquoted = function(nestingLevel, parentArgType) {
      if (this.isEOF()) {
        return null;
      }
      var ch = this.char();
      if (ch === 60 || ch === 123 || ch === 35 && (parentArgType === "plural" || parentArgType === "selectordinal") || ch === 125 && nestingLevel > 0) {
        return null;
      } else {
        this.bump();
        return fromCodePoint(ch);
      }
    };
    Parser3.prototype.parseArgument = function(nestingLevel, expectingCloseTag) {
      var openingBracePosition = this.clonePosition();
      this.bump();
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      if (this.char() === 125) {
        this.bump();
        return this.error(ErrorKind.EMPTY_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      var value = this.parseIdentifierIfPossible().value;
      if (!value) {
        return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bumpSpace();
      if (this.isEOF()) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      switch (this.char()) {
        case 125: {
          this.bump();
          return {
            val: {
              type: TYPE.argument,
              // value does not include the opening and closing braces.
              value,
              location: createLocation(openingBracePosition, this.clonePosition())
            },
            err: null
          };
        }
        case 44: {
          this.bump();
          this.bumpSpace();
          if (this.isEOF()) {
            return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
          }
          return this.parseArgumentOptions(nestingLevel, expectingCloseTag, value, openingBracePosition);
        }
        default:
          return this.error(ErrorKind.MALFORMED_ARGUMENT, createLocation(openingBracePosition, this.clonePosition()));
      }
    };
    Parser3.prototype.parseIdentifierIfPossible = function() {
      var startingPosition = this.clonePosition();
      var startOffset = this.offset();
      var value = matchIdentifierAtIndex(this.message, startOffset);
      var endOffset = startOffset + value.length;
      this.bumpTo(endOffset);
      var endPosition = this.clonePosition();
      var location = createLocation(startingPosition, endPosition);
      return { value, location };
    };
    Parser3.prototype.parseArgumentOptions = function(nestingLevel, expectingCloseTag, value, openingBracePosition) {
      var _a2;
      var typeStartPosition = this.clonePosition();
      var argType = this.parseIdentifierIfPossible().value;
      var typeEndPosition = this.clonePosition();
      switch (argType) {
        case "":
          return this.error(ErrorKind.EXPECT_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
        case "number":
        case "date":
        case "time": {
          this.bumpSpace();
          var styleAndLocation = null;
          if (this.bumpIf(",")) {
            this.bumpSpace();
            var styleStartPosition = this.clonePosition();
            var result = this.parseSimpleArgStyleIfPossible();
            if (result.err) {
              return result;
            }
            var style = trimEnd(result.val);
            if (style.length === 0) {
              return this.error(ErrorKind.EXPECT_ARGUMENT_STYLE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            var styleLocation = createLocation(styleStartPosition, this.clonePosition());
            styleAndLocation = { style, styleLocation };
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_1 = createLocation(openingBracePosition, this.clonePosition());
          if (styleAndLocation && startsWith(styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style, "::", 0)) {
            var skeleton = trimStart(styleAndLocation.style.slice(2));
            if (argType === "number") {
              var result = this.parseNumberSkeletonFromString(skeleton, styleAndLocation.styleLocation);
              if (result.err) {
                return result;
              }
              return {
                val: { type: TYPE.number, value, location: location_1, style: result.val },
                err: null
              };
            } else {
              if (skeleton.length === 0) {
                return this.error(ErrorKind.EXPECT_DATE_TIME_SKELETON, location_1);
              }
              var dateTimePattern = skeleton;
              if (this.locale) {
                dateTimePattern = getBestPattern(skeleton, this.locale);
              }
              var style = {
                type: SKELETON_TYPE.dateTime,
                pattern: dateTimePattern,
                location: styleAndLocation.styleLocation,
                parsedOptions: this.shouldParseSkeletons ? parseDateTimeSkeleton(dateTimePattern) : {}
              };
              var type = argType === "date" ? TYPE.date : TYPE.time;
              return {
                val: { type, value, location: location_1, style },
                err: null
              };
            }
          }
          return {
            val: {
              type: argType === "number" ? TYPE.number : argType === "date" ? TYPE.date : TYPE.time,
              value,
              location: location_1,
              style: (_a2 = styleAndLocation === null || styleAndLocation === void 0 ? void 0 : styleAndLocation.style) !== null && _a2 !== void 0 ? _a2 : null
            },
            err: null
          };
        }
        case "plural":
        case "selectordinal":
        case "select": {
          var typeEndPosition_1 = this.clonePosition();
          this.bumpSpace();
          if (!this.bumpIf(",")) {
            return this.error(ErrorKind.EXPECT_SELECT_ARGUMENT_OPTIONS, createLocation(typeEndPosition_1, __assign({}, typeEndPosition_1)));
          }
          this.bumpSpace();
          var identifierAndLocation = this.parseIdentifierIfPossible();
          var pluralOffset = 0;
          if (argType !== "select" && identifierAndLocation.value === "offset") {
            if (!this.bumpIf(":")) {
              return this.error(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, createLocation(this.clonePosition(), this.clonePosition()));
            }
            this.bumpSpace();
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE, ErrorKind.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE);
            if (result.err) {
              return result;
            }
            this.bumpSpace();
            identifierAndLocation = this.parseIdentifierIfPossible();
            pluralOffset = result.val;
          }
          var optionsResult = this.tryParsePluralOrSelectOptions(nestingLevel, argType, expectingCloseTag, identifierAndLocation);
          if (optionsResult.err) {
            return optionsResult;
          }
          var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
          if (argCloseResult.err) {
            return argCloseResult;
          }
          var location_2 = createLocation(openingBracePosition, this.clonePosition());
          if (argType === "select") {
            return {
              val: {
                type: TYPE.select,
                value,
                options: fromEntries(optionsResult.val),
                location: location_2
              },
              err: null
            };
          } else {
            return {
              val: {
                type: TYPE.plural,
                value,
                options: fromEntries(optionsResult.val),
                offset: pluralOffset,
                pluralType: argType === "plural" ? "cardinal" : "ordinal",
                location: location_2
              },
              err: null
            };
          }
        }
        default:
          return this.error(ErrorKind.INVALID_ARGUMENT_TYPE, createLocation(typeStartPosition, typeEndPosition));
      }
    };
    Parser3.prototype.tryParseArgumentClose = function(openingBracePosition) {
      if (this.isEOF() || this.char() !== 125) {
        return this.error(ErrorKind.EXPECT_ARGUMENT_CLOSING_BRACE, createLocation(openingBracePosition, this.clonePosition()));
      }
      this.bump();
      return { val: true, err: null };
    };
    Parser3.prototype.parseSimpleArgStyleIfPossible = function() {
      var nestedBraces = 0;
      var startPosition = this.clonePosition();
      while (!this.isEOF()) {
        var ch = this.char();
        switch (ch) {
          case 39: {
            this.bump();
            var apostrophePosition = this.clonePosition();
            if (!this.bumpUntil("'")) {
              return this.error(ErrorKind.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE, createLocation(apostrophePosition, this.clonePosition()));
            }
            this.bump();
            break;
          }
          case 123: {
            nestedBraces += 1;
            this.bump();
            break;
          }
          case 125: {
            if (nestedBraces > 0) {
              nestedBraces -= 1;
            } else {
              return {
                val: this.message.slice(startPosition.offset, this.offset()),
                err: null
              };
            }
            break;
          }
          default:
            this.bump();
            break;
        }
      }
      return {
        val: this.message.slice(startPosition.offset, this.offset()),
        err: null
      };
    };
    Parser3.prototype.parseNumberSkeletonFromString = function(skeleton, location) {
      var tokens2 = [];
      try {
        tokens2 = parseNumberSkeletonFromString(skeleton);
      } catch (e) {
        return this.error(ErrorKind.INVALID_NUMBER_SKELETON, location);
      }
      return {
        val: {
          type: SKELETON_TYPE.number,
          tokens: tokens2,
          location,
          parsedOptions: this.shouldParseSkeletons ? parseNumberSkeleton(tokens2) : {}
        },
        err: null
      };
    };
    Parser3.prototype.tryParsePluralOrSelectOptions = function(nestingLevel, parentArgType, expectCloseTag, parsedFirstIdentifier) {
      var _a2;
      var hasOtherClause = false;
      var options2 = [];
      var parsedSelectors = /* @__PURE__ */ new Set();
      var selector = parsedFirstIdentifier.value, selectorLocation = parsedFirstIdentifier.location;
      while (true) {
        if (selector.length === 0) {
          var startPosition = this.clonePosition();
          if (parentArgType !== "select" && this.bumpIf("=")) {
            var result = this.tryParseDecimalInteger(ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, ErrorKind.INVALID_PLURAL_ARGUMENT_SELECTOR);
            if (result.err) {
              return result;
            }
            selectorLocation = createLocation(startPosition, this.clonePosition());
            selector = this.message.slice(startPosition.offset, this.offset());
          } else {
            break;
          }
        }
        if (parsedSelectors.has(selector)) {
          return this.error(parentArgType === "select" ? ErrorKind.DUPLICATE_SELECT_ARGUMENT_SELECTOR : ErrorKind.DUPLICATE_PLURAL_ARGUMENT_SELECTOR, selectorLocation);
        }
        if (selector === "other") {
          hasOtherClause = true;
        }
        this.bumpSpace();
        var openingBracePosition = this.clonePosition();
        if (!this.bumpIf("{")) {
          return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT, createLocation(this.clonePosition(), this.clonePosition()));
        }
        var fragmentResult = this.parseMessage(nestingLevel + 1, parentArgType, expectCloseTag);
        if (fragmentResult.err) {
          return fragmentResult;
        }
        var argCloseResult = this.tryParseArgumentClose(openingBracePosition);
        if (argCloseResult.err) {
          return argCloseResult;
        }
        options2.push([
          selector,
          {
            value: fragmentResult.val,
            location: createLocation(openingBracePosition, this.clonePosition())
          }
        ]);
        parsedSelectors.add(selector);
        this.bumpSpace();
        _a2 = this.parseIdentifierIfPossible(), selector = _a2.value, selectorLocation = _a2.location;
      }
      if (options2.length === 0) {
        return this.error(parentArgType === "select" ? ErrorKind.EXPECT_SELECT_ARGUMENT_SELECTOR : ErrorKind.EXPECT_PLURAL_ARGUMENT_SELECTOR, createLocation(this.clonePosition(), this.clonePosition()));
      }
      if (this.requiresOtherClause && !hasOtherClause) {
        return this.error(ErrorKind.MISSING_OTHER_CLAUSE, createLocation(this.clonePosition(), this.clonePosition()));
      }
      return { val: options2, err: null };
    };
    Parser3.prototype.tryParseDecimalInteger = function(expectNumberError, invalidNumberError) {
      var sign = 1;
      var startingPosition = this.clonePosition();
      if (this.bumpIf("+"))
        ;
      else if (this.bumpIf("-")) {
        sign = -1;
      }
      var hasDigits = false;
      var decimal = 0;
      while (!this.isEOF()) {
        var ch = this.char();
        if (ch >= 48 && ch <= 57) {
          hasDigits = true;
          decimal = decimal * 10 + (ch - 48);
          this.bump();
        } else {
          break;
        }
      }
      var location = createLocation(startingPosition, this.clonePosition());
      if (!hasDigits) {
        return this.error(expectNumberError, location);
      }
      decimal *= sign;
      if (!isSafeInteger(decimal)) {
        return this.error(invalidNumberError, location);
      }
      return { val: decimal, err: null };
    };
    Parser3.prototype.offset = function() {
      return this.position.offset;
    };
    Parser3.prototype.isEOF = function() {
      return this.offset() === this.message.length;
    };
    Parser3.prototype.clonePosition = function() {
      return {
        offset: this.position.offset,
        line: this.position.line,
        column: this.position.column
      };
    };
    Parser3.prototype.char = function() {
      var offset = this.position.offset;
      if (offset >= this.message.length) {
        throw Error("out of bound");
      }
      var code = codePointAt(this.message, offset);
      if (code === void 0) {
        throw Error("Offset ".concat(offset, " is at invalid UTF-16 code unit boundary"));
      }
      return code;
    };
    Parser3.prototype.error = function(kind, location) {
      return {
        val: null,
        err: {
          kind,
          message: this.message,
          location
        }
      };
    };
    Parser3.prototype.bump = function() {
      if (this.isEOF()) {
        return;
      }
      var code = this.char();
      if (code === 10) {
        this.position.line += 1;
        this.position.column = 1;
        this.position.offset += 1;
      } else {
        this.position.column += 1;
        this.position.offset += code < 65536 ? 1 : 2;
      }
    };
    Parser3.prototype.bumpIf = function(prefix) {
      if (startsWith(this.message, prefix, this.offset())) {
        for (var i = 0; i < prefix.length; i++) {
          this.bump();
        }
        return true;
      }
      return false;
    };
    Parser3.prototype.bumpUntil = function(pattern) {
      var currentOffset = this.offset();
      var index = this.message.indexOf(pattern, currentOffset);
      if (index >= 0) {
        this.bumpTo(index);
        return true;
      } else {
        this.bumpTo(this.message.length);
        return false;
      }
    };
    Parser3.prototype.bumpTo = function(targetOffset) {
      if (this.offset() > targetOffset) {
        throw Error("targetOffset ".concat(targetOffset, " must be greater than or equal to the current offset ").concat(this.offset()));
      }
      targetOffset = Math.min(targetOffset, this.message.length);
      while (true) {
        var offset = this.offset();
        if (offset === targetOffset) {
          break;
        }
        if (offset > targetOffset) {
          throw Error("targetOffset ".concat(targetOffset, " is at invalid UTF-16 code unit boundary"));
        }
        this.bump();
        if (this.isEOF()) {
          break;
        }
      }
    };
    Parser3.prototype.bumpSpace = function() {
      while (!this.isEOF() && _isWhiteSpace(this.char())) {
        this.bump();
      }
    };
    Parser3.prototype.peek = function() {
      if (this.isEOF()) {
        return null;
      }
      var code = this.char();
      var offset = this.offset();
      var nextCode = this.message.charCodeAt(offset + (code >= 65536 ? 2 : 1));
      return nextCode !== null && nextCode !== void 0 ? nextCode : null;
    };
    return Parser3;
  }()
);
function _isAlpha(codepoint) {
  return codepoint >= 97 && codepoint <= 122 || codepoint >= 65 && codepoint <= 90;
}
function _isAlphaOrSlash(codepoint) {
  return _isAlpha(codepoint) || codepoint === 47;
}
function _isPotentialElementNameChar(c) {
  return c === 45 || c === 46 || c >= 48 && c <= 57 || c === 95 || c >= 97 && c <= 122 || c >= 65 && c <= 90 || c == 183 || c >= 192 && c <= 214 || c >= 216 && c <= 246 || c >= 248 && c <= 893 || c >= 895 && c <= 8191 || c >= 8204 && c <= 8205 || c >= 8255 && c <= 8256 || c >= 8304 && c <= 8591 || c >= 11264 && c <= 12271 || c >= 12289 && c <= 55295 || c >= 63744 && c <= 64975 || c >= 65008 && c <= 65533 || c >= 65536 && c <= 983039;
}
function _isWhiteSpace(c) {
  return c >= 9 && c <= 13 || c === 32 || c === 133 || c >= 8206 && c <= 8207 || c === 8232 || c === 8233;
}
function _isPatternSyntax(c) {
  return c >= 33 && c <= 35 || c === 36 || c >= 37 && c <= 39 || c === 40 || c === 41 || c === 42 || c === 43 || c === 44 || c === 45 || c >= 46 && c <= 47 || c >= 58 && c <= 59 || c >= 60 && c <= 62 || c >= 63 && c <= 64 || c === 91 || c === 92 || c === 93 || c === 94 || c === 96 || c === 123 || c === 124 || c === 125 || c === 126 || c === 161 || c >= 162 && c <= 165 || c === 166 || c === 167 || c === 169 || c === 171 || c === 172 || c === 174 || c === 176 || c === 177 || c === 182 || c === 187 || c === 191 || c === 215 || c === 247 || c >= 8208 && c <= 8213 || c >= 8214 && c <= 8215 || c === 8216 || c === 8217 || c === 8218 || c >= 8219 && c <= 8220 || c === 8221 || c === 8222 || c === 8223 || c >= 8224 && c <= 8231 || c >= 8240 && c <= 8248 || c === 8249 || c === 8250 || c >= 8251 && c <= 8254 || c >= 8257 && c <= 8259 || c === 8260 || c === 8261 || c === 8262 || c >= 8263 && c <= 8273 || c === 8274 || c === 8275 || c >= 8277 && c <= 8286 || c >= 8592 && c <= 8596 || c >= 8597 && c <= 8601 || c >= 8602 && c <= 8603 || c >= 8604 && c <= 8607 || c === 8608 || c >= 8609 && c <= 8610 || c === 8611 || c >= 8612 && c <= 8613 || c === 8614 || c >= 8615 && c <= 8621 || c === 8622 || c >= 8623 && c <= 8653 || c >= 8654 && c <= 8655 || c >= 8656 && c <= 8657 || c === 8658 || c === 8659 || c === 8660 || c >= 8661 && c <= 8691 || c >= 8692 && c <= 8959 || c >= 8960 && c <= 8967 || c === 8968 || c === 8969 || c === 8970 || c === 8971 || c >= 8972 && c <= 8991 || c >= 8992 && c <= 8993 || c >= 8994 && c <= 9e3 || c === 9001 || c === 9002 || c >= 9003 && c <= 9083 || c === 9084 || c >= 9085 && c <= 9114 || c >= 9115 && c <= 9139 || c >= 9140 && c <= 9179 || c >= 9180 && c <= 9185 || c >= 9186 && c <= 9254 || c >= 9255 && c <= 9279 || c >= 9280 && c <= 9290 || c >= 9291 && c <= 9311 || c >= 9472 && c <= 9654 || c === 9655 || c >= 9656 && c <= 9664 || c === 9665 || c >= 9666 && c <= 9719 || c >= 9720 && c <= 9727 || c >= 9728 && c <= 9838 || c === 9839 || c >= 9840 && c <= 10087 || c === 10088 || c === 10089 || c === 10090 || c === 10091 || c === 10092 || c === 10093 || c === 10094 || c === 10095 || c === 10096 || c === 10097 || c === 10098 || c === 10099 || c === 10100 || c === 10101 || c >= 10132 && c <= 10175 || c >= 10176 && c <= 10180 || c === 10181 || c === 10182 || c >= 10183 && c <= 10213 || c === 10214 || c === 10215 || c === 10216 || c === 10217 || c === 10218 || c === 10219 || c === 10220 || c === 10221 || c === 10222 || c === 10223 || c >= 10224 && c <= 10239 || c >= 10240 && c <= 10495 || c >= 10496 && c <= 10626 || c === 10627 || c === 10628 || c === 10629 || c === 10630 || c === 10631 || c === 10632 || c === 10633 || c === 10634 || c === 10635 || c === 10636 || c === 10637 || c === 10638 || c === 10639 || c === 10640 || c === 10641 || c === 10642 || c === 10643 || c === 10644 || c === 10645 || c === 10646 || c === 10647 || c === 10648 || c >= 10649 && c <= 10711 || c === 10712 || c === 10713 || c === 10714 || c === 10715 || c >= 10716 && c <= 10747 || c === 10748 || c === 10749 || c >= 10750 && c <= 11007 || c >= 11008 && c <= 11055 || c >= 11056 && c <= 11076 || c >= 11077 && c <= 11078 || c >= 11079 && c <= 11084 || c >= 11085 && c <= 11123 || c >= 11124 && c <= 11125 || c >= 11126 && c <= 11157 || c === 11158 || c >= 11159 && c <= 11263 || c >= 11776 && c <= 11777 || c === 11778 || c === 11779 || c === 11780 || c === 11781 || c >= 11782 && c <= 11784 || c === 11785 || c === 11786 || c === 11787 || c === 11788 || c === 11789 || c >= 11790 && c <= 11798 || c === 11799 || c >= 11800 && c <= 11801 || c === 11802 || c === 11803 || c === 11804 || c === 11805 || c >= 11806 && c <= 11807 || c === 11808 || c === 11809 || c === 11810 || c === 11811 || c === 11812 || c === 11813 || c === 11814 || c === 11815 || c === 11816 || c === 11817 || c >= 11818 && c <= 11822 || c === 11823 || c >= 11824 && c <= 11833 || c >= 11834 && c <= 11835 || c >= 11836 && c <= 11839 || c === 11840 || c === 11841 || c === 11842 || c >= 11843 && c <= 11855 || c >= 11856 && c <= 11857 || c === 11858 || c >= 11859 && c <= 11903 || c >= 12289 && c <= 12291 || c === 12296 || c === 12297 || c === 12298 || c === 12299 || c === 12300 || c === 12301 || c === 12302 || c === 12303 || c === 12304 || c === 12305 || c >= 12306 && c <= 12307 || c === 12308 || c === 12309 || c === 12310 || c === 12311 || c === 12312 || c === 12313 || c === 12314 || c === 12315 || c === 12316 || c === 12317 || c >= 12318 && c <= 12319 || c === 12320 || c === 12336 || c === 64830 || c === 64831 || c >= 65093 && c <= 65094;
}
function pruneLocation(els) {
  els.forEach(function(el) {
    delete el.location;
    if (isSelectElement(el) || isPluralElement(el)) {
      for (var k in el.options) {
        delete el.options[k].location;
        pruneLocation(el.options[k].value);
      }
    } else if (isNumberElement(el) && isNumberSkeleton(el.style)) {
      delete el.style.location;
    } else if ((isDateElement(el) || isTimeElement(el)) && isDateTimeSkeleton(el.style)) {
      delete el.style.location;
    } else if (isTagElement(el)) {
      pruneLocation(el.children);
    }
  });
}
function parse(message, opts) {
  if (opts === void 0) {
    opts = {};
  }
  opts = __assign({ shouldParseSkeletons: true, requiresOtherClause: true }, opts);
  var result = new Parser2(message, opts).parse();
  if (result.err) {
    var error2 = SyntaxError(ErrorKind[result.err.kind]);
    error2.location = result.err.location;
    error2.originalMessage = result.err.message;
    throw error2;
  }
  if (!(opts === null || opts === void 0 ? void 0 : opts.captureLocation)) {
    pruneLocation(result.val);
  }
  return result.val;
}
function memoize(fn, options2) {
  var cache2 = options2 && options2.cache ? options2.cache : cacheDefault;
  var serializer = options2 && options2.serializer ? options2.serializer : serializerDefault;
  var strategy = options2 && options2.strategy ? options2.strategy : strategyDefault;
  return strategy(fn, {
    cache: cache2,
    serializer
  });
}
function isPrimitive(value) {
  return value == null || typeof value === "number" || typeof value === "boolean";
}
function monadic(fn, cache2, serializer, arg) {
  var cacheKey = isPrimitive(arg) ? arg : serializer(arg);
  var computedValue = cache2.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.call(this, arg);
    cache2.set(cacheKey, computedValue);
  }
  return computedValue;
}
function variadic(fn, cache2, serializer) {
  var args2 = Array.prototype.slice.call(arguments, 3);
  var cacheKey = serializer(args2);
  var computedValue = cache2.get(cacheKey);
  if (typeof computedValue === "undefined") {
    computedValue = fn.apply(this, args2);
    cache2.set(cacheKey, computedValue);
  }
  return computedValue;
}
function assemble(fn, context2, strategy, cache2, serialize) {
  return strategy.bind(context2, fn, cache2, serialize);
}
function strategyDefault(fn, options2) {
  var strategy = fn.length === 1 ? monadic : variadic;
  return assemble(fn, this, strategy, options2.cache.create(), options2.serializer);
}
function strategyVariadic(fn, options2) {
  return assemble(fn, this, variadic, options2.cache.create(), options2.serializer);
}
function strategyMonadic(fn, options2) {
  return assemble(fn, this, monadic, options2.cache.create(), options2.serializer);
}
var serializerDefault = function() {
  return JSON.stringify(arguments);
};
function ObjectWithoutPrototypeCache() {
  this.cache = /* @__PURE__ */ Object.create(null);
}
ObjectWithoutPrototypeCache.prototype.get = function(key) {
  return this.cache[key];
};
ObjectWithoutPrototypeCache.prototype.set = function(key, value) {
  this.cache[key] = value;
};
var cacheDefault = {
  create: function create() {
    return new ObjectWithoutPrototypeCache();
  }
};
var strategies = {
  variadic: strategyVariadic,
  monadic: strategyMonadic
};
var ErrorCode;
(function(ErrorCode2) {
  ErrorCode2["MISSING_VALUE"] = "MISSING_VALUE";
  ErrorCode2["INVALID_VALUE"] = "INVALID_VALUE";
  ErrorCode2["MISSING_INTL_API"] = "MISSING_INTL_API";
})(ErrorCode || (ErrorCode = {}));
var FormatError = (
  /** @class */
  function(_super) {
    __extends$g(FormatError2, _super);
    function FormatError2(msg, code, originalMessage) {
      var _this = _super.call(this, msg) || this;
      _this.code = code;
      _this.originalMessage = originalMessage;
      return _this;
    }
    FormatError2.prototype.toString = function() {
      return "[formatjs Error: ".concat(this.code, "] ").concat(this.message);
    };
    return FormatError2;
  }(Error)
);
var InvalidValueError = (
  /** @class */
  function(_super) {
    __extends$g(InvalidValueError2, _super);
    function InvalidValueError2(variableId, value, options2, originalMessage) {
      return _super.call(this, 'Invalid values for "'.concat(variableId, '": "').concat(value, '". Options are "').concat(Object.keys(options2).join('", "'), '"'), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueError2;
  }(FormatError)
);
var InvalidValueTypeError = (
  /** @class */
  function(_super) {
    __extends$g(InvalidValueTypeError2, _super);
    function InvalidValueTypeError2(value, type, originalMessage) {
      return _super.call(this, 'Value for "'.concat(value, '" must be of type ').concat(type), ErrorCode.INVALID_VALUE, originalMessage) || this;
    }
    return InvalidValueTypeError2;
  }(FormatError)
);
var MissingValueError = (
  /** @class */
  function(_super) {
    __extends$g(MissingValueError2, _super);
    function MissingValueError2(variableId, originalMessage) {
      return _super.call(this, 'The intl string context variable "'.concat(variableId, '" was not provided to the string "').concat(originalMessage, '"'), ErrorCode.MISSING_VALUE, originalMessage) || this;
    }
    return MissingValueError2;
  }(FormatError)
);
var PART_TYPE;
(function(PART_TYPE2) {
  PART_TYPE2[PART_TYPE2["literal"] = 0] = "literal";
  PART_TYPE2[PART_TYPE2["object"] = 1] = "object";
})(PART_TYPE || (PART_TYPE = {}));
function mergeLiteral(parts) {
  if (parts.length < 2) {
    return parts;
  }
  return parts.reduce(function(all, part) {
    var lastPart = all[all.length - 1];
    if (!lastPart || lastPart.type !== PART_TYPE.literal || part.type !== PART_TYPE.literal) {
      all.push(part);
    } else {
      lastPart.value += part.value;
    }
    return all;
  }, []);
}
function isFormatXMLElementFn(el) {
  return typeof el === "function";
}
function formatToParts(els, locales, formatters, formats, values2, currentPluralValue, originalMessage) {
  if (els.length === 1 && isLiteralElement(els[0])) {
    return [
      {
        type: PART_TYPE.literal,
        value: els[0].value
      }
    ];
  }
  var result = [];
  for (var _i = 0, els_1 = els; _i < els_1.length; _i++) {
    var el = els_1[_i];
    if (isLiteralElement(el)) {
      result.push({
        type: PART_TYPE.literal,
        value: el.value
      });
      continue;
    }
    if (isPoundElement(el)) {
      if (typeof currentPluralValue === "number") {
        result.push({
          type: PART_TYPE.literal,
          value: formatters.getNumberFormat(locales).format(currentPluralValue)
        });
      }
      continue;
    }
    var varName = el.value;
    if (!(values2 && varName in values2)) {
      throw new MissingValueError(varName, originalMessage);
    }
    var value = values2[varName];
    if (isArgumentElement(el)) {
      if (!value || typeof value === "string" || typeof value === "number") {
        value = typeof value === "string" || typeof value === "number" ? String(value) : "";
      }
      result.push({
        type: typeof value === "string" ? PART_TYPE.literal : PART_TYPE.object,
        value
      });
      continue;
    }
    if (isDateElement(el)) {
      var style = typeof el.style === "string" ? formats.date[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : void 0;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTimeElement(el)) {
      var style = typeof el.style === "string" ? formats.time[el.style] : isDateTimeSkeleton(el.style) ? el.style.parsedOptions : formats.time.medium;
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getDateTimeFormat(locales, style).format(value)
      });
      continue;
    }
    if (isNumberElement(el)) {
      var style = typeof el.style === "string" ? formats.number[el.style] : isNumberSkeleton(el.style) ? el.style.parsedOptions : void 0;
      if (style && style.scale) {
        value = value * (style.scale || 1);
      }
      result.push({
        type: PART_TYPE.literal,
        value: formatters.getNumberFormat(locales, style).format(value)
      });
      continue;
    }
    if (isTagElement(el)) {
      var children = el.children, value_1 = el.value;
      var formatFn = values2[value_1];
      if (!isFormatXMLElementFn(formatFn)) {
        throw new InvalidValueTypeError(value_1, "function", originalMessage);
      }
      var parts = formatToParts(children, locales, formatters, formats, values2, currentPluralValue);
      var chunks = formatFn(parts.map(function(p) {
        return p.value;
      }));
      if (!Array.isArray(chunks)) {
        chunks = [chunks];
      }
      result.push.apply(result, chunks.map(function(c) {
        return {
          type: typeof c === "string" ? PART_TYPE.literal : PART_TYPE.object,
          value: c
        };
      }));
    }
    if (isSelectElement(el)) {
      var opt = el.options[value] || el.options.other;
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values2));
      continue;
    }
    if (isPluralElement(el)) {
      var opt = el.options["=".concat(value)];
      if (!opt) {
        if (!Intl.PluralRules) {
          throw new FormatError('Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n', ErrorCode.MISSING_INTL_API, originalMessage);
        }
        var rule = formatters.getPluralRules(locales, { type: el.pluralType }).select(value - (el.offset || 0));
        opt = el.options[rule] || el.options.other;
      }
      if (!opt) {
        throw new InvalidValueError(el.value, value, Object.keys(el.options), originalMessage);
      }
      result.push.apply(result, formatToParts(opt.value, locales, formatters, formats, values2, value - (el.offset || 0)));
      continue;
    }
  }
  return mergeLiteral(result);
}
function mergeConfig(c1, c2) {
  if (!c2) {
    return c1;
  }
  return __assign(__assign(__assign({}, c1 || {}), c2 || {}), Object.keys(c1).reduce(function(all, k) {
    all[k] = __assign(__assign({}, c1[k]), c2[k] || {});
    return all;
  }, {}));
}
function mergeConfigs(defaultConfig, configs) {
  if (!configs) {
    return defaultConfig;
  }
  return Object.keys(defaultConfig).reduce(function(all, k) {
    all[k] = mergeConfig(defaultConfig[k], configs[k]);
    return all;
  }, __assign({}, defaultConfig));
}
function createFastMemoizeCache(store) {
  return {
    create: function() {
      return {
        get: function(key) {
          return store[key];
        },
        set: function(key, value) {
          store[key] = value;
        }
      };
    }
  };
}
function createDefaultFormatters(cache2) {
  if (cache2 === void 0) {
    cache2 = {
      number: {},
      dateTime: {},
      pluralRules: {}
    };
  }
  return {
    getNumberFormat: memoize(function() {
      var _a2;
      var args2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args2[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.NumberFormat).bind.apply(_a2, __spreadArray$i([void 0], args2, false)))();
    }, {
      cache: createFastMemoizeCache(cache2.number),
      strategy: strategies.variadic
    }),
    getDateTimeFormat: memoize(function() {
      var _a2;
      var args2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args2[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.DateTimeFormat).bind.apply(_a2, __spreadArray$i([void 0], args2, false)))();
    }, {
      cache: createFastMemoizeCache(cache2.dateTime),
      strategy: strategies.variadic
    }),
    getPluralRules: memoize(function() {
      var _a2;
      var args2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args2[_i] = arguments[_i];
      }
      return new ((_a2 = Intl.PluralRules).bind.apply(_a2, __spreadArray$i([void 0], args2, false)))();
    }, {
      cache: createFastMemoizeCache(cache2.pluralRules),
      strategy: strategies.variadic
    })
  };
}
var IntlMessageFormat = (
  /** @class */
  function() {
    function IntlMessageFormat2(message, locales, overrideFormats, opts) {
      var _this = this;
      if (locales === void 0) {
        locales = IntlMessageFormat2.defaultLocale;
      }
      this.formatterCache = {
        number: {},
        dateTime: {},
        pluralRules: {}
      };
      this.format = function(values2) {
        var parts = _this.formatToParts(values2);
        if (parts.length === 1) {
          return parts[0].value;
        }
        var result = parts.reduce(function(all, part) {
          if (!all.length || part.type !== PART_TYPE.literal || typeof all[all.length - 1] !== "string") {
            all.push(part.value);
          } else {
            all[all.length - 1] += part.value;
          }
          return all;
        }, []);
        if (result.length <= 1) {
          return result[0] || "";
        }
        return result;
      };
      this.formatToParts = function(values2) {
        return formatToParts(_this.ast, _this.locales, _this.formatters, _this.formats, values2, void 0, _this.message);
      };
      this.resolvedOptions = function() {
        return {
          locale: _this.resolvedLocale.toString()
        };
      };
      this.getAst = function() {
        return _this.ast;
      };
      this.locales = locales;
      this.resolvedLocale = IntlMessageFormat2.resolveLocale(locales);
      if (typeof message === "string") {
        this.message = message;
        if (!IntlMessageFormat2.__parse) {
          throw new TypeError("IntlMessageFormat.__parse must be set to process `message` of type `string`");
        }
        this.ast = IntlMessageFormat2.__parse(message, {
          ignoreTag: opts === null || opts === void 0 ? void 0 : opts.ignoreTag,
          locale: this.resolvedLocale
        });
      } else {
        this.ast = message;
      }
      if (!Array.isArray(this.ast)) {
        throw new TypeError("A message must be provided as a String or AST.");
      }
      this.formats = mergeConfigs(IntlMessageFormat2.formats, overrideFormats);
      this.formatters = opts && opts.formatters || createDefaultFormatters(this.formatterCache);
    }
    Object.defineProperty(IntlMessageFormat2, "defaultLocale", {
      get: function() {
        if (!IntlMessageFormat2.memoizedDefaultLocale) {
          IntlMessageFormat2.memoizedDefaultLocale = new Intl.NumberFormat().resolvedOptions().locale;
        }
        return IntlMessageFormat2.memoizedDefaultLocale;
      },
      enumerable: false,
      configurable: true
    });
    IntlMessageFormat2.memoizedDefaultLocale = null;
    IntlMessageFormat2.resolveLocale = function(locales) {
      var supportedLocales = Intl.NumberFormat.supportedLocalesOf(locales);
      if (supportedLocales.length > 0) {
        return new Intl.Locale(supportedLocales[0]);
      }
      return new Intl.Locale(typeof locales === "string" ? locales : locales[0]);
    };
    IntlMessageFormat2.__parse = parse;
    IntlMessageFormat2.formats = {
      number: {
        integer: {
          maximumFractionDigits: 0
        },
        currency: {
          style: "currency"
        },
        percent: {
          style: "percent"
        }
      },
      date: {
        short: {
          month: "numeric",
          day: "numeric",
          year: "2-digit"
        },
        medium: {
          month: "short",
          day: "numeric",
          year: "numeric"
        },
        long: {
          month: "long",
          day: "numeric",
          year: "numeric"
        },
        full: {
          weekday: "long",
          month: "long",
          day: "numeric",
          year: "numeric"
        }
      },
      time: {
        short: {
          hour: "numeric",
          minute: "numeric"
        },
        medium: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric"
        },
        long: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        },
        full: {
          hour: "numeric",
          minute: "numeric",
          second: "numeric",
          timeZoneName: "short"
        }
      }
    };
    return IntlMessageFormat2;
  }()
);
function delve(obj, fullKey) {
  if (fullKey == null)
    return void 0;
  if (fullKey in obj) {
    return obj[fullKey];
  }
  const keys2 = fullKey.split(".");
  let result = obj;
  for (let p = 0; p < keys2.length; p++) {
    if (typeof result === "object") {
      if (p > 0) {
        const partialKey = keys2.slice(p, keys2.length).join(".");
        if (partialKey in result) {
          result = result[partialKey];
          break;
        }
      }
      result = result[keys2[p]];
    } else {
      result = void 0;
    }
  }
  return result;
}
const lookupCache = {};
const addToCache = (path, locale, message) => {
  if (!message)
    return message;
  if (!(locale in lookupCache))
    lookupCache[locale] = {};
  if (!(path in lookupCache[locale]))
    lookupCache[locale][path] = message;
  return message;
};
const lookup = (path, refLocale) => {
  if (refLocale == null)
    return void 0;
  if (refLocale in lookupCache && path in lookupCache[refLocale]) {
    return lookupCache[refLocale][path];
  }
  const locales = getPossibleLocales(refLocale);
  for (let i = 0; i < locales.length; i++) {
    const locale = locales[i];
    const message = getMessageFromDictionary(locale, path);
    if (message) {
      return addToCache(path, refLocale, message);
    }
  }
  return void 0;
};
let dictionary;
const $dictionary = writable({});
function getLocaleDictionary(locale) {
  return dictionary[locale] || null;
}
function hasLocaleDictionary(locale) {
  return locale in dictionary;
}
function getMessageFromDictionary(locale, id) {
  if (!hasLocaleDictionary(locale)) {
    return null;
  }
  const localeDictionary = getLocaleDictionary(locale);
  const match = delve(localeDictionary, id);
  return match;
}
function getClosestAvailableLocale(refLocale) {
  if (refLocale == null)
    return void 0;
  const relatedLocales = getPossibleLocales(refLocale);
  for (let i = 0; i < relatedLocales.length; i++) {
    const locale = relatedLocales[i];
    if (hasLocaleDictionary(locale)) {
      return locale;
    }
  }
  return void 0;
}
function addMessages(locale, ...partials) {
  delete lookupCache[locale];
  $dictionary.update((d) => {
    d[locale] = deepmerge$1.all([d[locale] || {}, ...partials]);
    return d;
  });
}
derived(
  [$dictionary],
  ([dictionary2]) => Object.keys(dictionary2)
);
$dictionary.subscribe((newDictionary) => dictionary = newDictionary);
const queue = {};
function removeLoaderFromQueue(locale, loader) {
  queue[locale].delete(loader);
  if (queue[locale].size === 0) {
    delete queue[locale];
  }
}
function getLocaleQueue(locale) {
  return queue[locale];
}
function getLocalesQueues(locale) {
  return getPossibleLocales(locale).map((localeItem) => {
    const localeQueue = getLocaleQueue(localeItem);
    return [localeItem, localeQueue ? [...localeQueue] : []];
  }).filter(([, localeQueue]) => localeQueue.length > 0);
}
function hasLocaleQueue(locale) {
  if (locale == null)
    return false;
  return getPossibleLocales(locale).some(
    (localeQueue) => {
      var _a2;
      return (_a2 = getLocaleQueue(localeQueue)) == null ? void 0 : _a2.size;
    }
  );
}
function loadLocaleQueue(locale, localeQueue) {
  const allLoadersPromise = Promise.all(
    localeQueue.map((loader) => {
      removeLoaderFromQueue(locale, loader);
      return loader().then((partial) => partial.default || partial);
    })
  );
  return allLoadersPromise.then((partials) => addMessages(locale, ...partials));
}
const activeFlushes = {};
function flush(locale) {
  if (!hasLocaleQueue(locale)) {
    if (locale in activeFlushes) {
      return activeFlushes[locale];
    }
    return Promise.resolve();
  }
  const queues = getLocalesQueues(locale);
  activeFlushes[locale] = Promise.all(
    queues.map(
      ([localeName, localeQueue]) => loadLocaleQueue(localeName, localeQueue)
    )
  ).then(() => {
    if (hasLocaleQueue(locale)) {
      return flush(locale);
    }
    delete activeFlushes[locale];
  });
  return activeFlushes[locale];
}
const defaultFormats = {
  number: {
    scientific: { notation: "scientific" },
    engineering: { notation: "engineering" },
    compactLong: { notation: "compact", compactDisplay: "long" },
    compactShort: { notation: "compact", compactDisplay: "short" }
  },
  date: {
    short: { month: "numeric", day: "numeric", year: "2-digit" },
    medium: { month: "short", day: "numeric", year: "numeric" },
    long: { month: "long", day: "numeric", year: "numeric" },
    full: { weekday: "long", month: "long", day: "numeric", year: "numeric" }
  },
  time: {
    short: { hour: "numeric", minute: "numeric" },
    medium: { hour: "numeric", minute: "numeric", second: "numeric" },
    long: {
      hour: "numeric",
      minute: "numeric",
      second: "numeric",
      timeZoneName: "short"
    },
    full: {
      hour: "numeric",
      minute: "numeric",
      second: "numeric",
      timeZoneName: "short"
    }
  }
};
const defaultOptions = {
  fallbackLocale: null,
  loadingDelay: 200,
  formats: defaultFormats,
  warnOnMissingMessages: true,
  handleMissingMessage: void 0,
  ignoreTag: true
};
const options = defaultOptions;
function getOptions() {
  return options;
}
const $isLoading = writable(false);
var __defProp$1 = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;
var __hasOwnProp$1 = Object.prototype.hasOwnProperty;
var __propIsEnum$1 = Object.prototype.propertyIsEnumerable;
var __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues$1 = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp$1.call(b, prop))
      __defNormalProp$1(a, prop, b[prop]);
  if (__getOwnPropSymbols$1)
    for (var prop of __getOwnPropSymbols$1(b)) {
      if (__propIsEnum$1.call(b, prop))
        __defNormalProp$1(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
let current;
const internalLocale = writable(null);
function getSubLocales(refLocale) {
  return refLocale.split("-").map((_, i, arr) => arr.slice(0, i + 1).join("-")).reverse();
}
function getPossibleLocales(refLocale, fallbackLocale = getOptions().fallbackLocale) {
  const locales = getSubLocales(refLocale);
  if (fallbackLocale) {
    return [.../* @__PURE__ */ new Set([...locales, ...getSubLocales(fallbackLocale)])];
  }
  return locales;
}
function getCurrentLocale() {
  return current != null ? current : void 0;
}
internalLocale.subscribe((newLocale) => {
  current = newLocale != null ? newLocale : void 0;
  if (typeof window !== "undefined" && newLocale != null) {
    document.documentElement.setAttribute("lang", newLocale);
  }
});
const set = (newLocale) => {
  if (newLocale && getClosestAvailableLocale(newLocale) && hasLocaleQueue(newLocale)) {
    const { loadingDelay } = getOptions();
    let loadingTimer;
    if (typeof window !== "undefined" && getCurrentLocale() != null && loadingDelay) {
      loadingTimer = window.setTimeout(
        () => $isLoading.set(true),
        loadingDelay
      );
    } else {
      $isLoading.set(true);
    }
    return flush(newLocale).then(() => {
      internalLocale.set(newLocale);
    }).finally(() => {
      clearTimeout(loadingTimer);
      $isLoading.set(false);
    });
  }
  return internalLocale.set(newLocale);
};
const $locale = __spreadProps(__spreadValues$1({}, internalLocale), {
  set
});
const monadicMemoize = (fn) => {
  const cache2 = /* @__PURE__ */ Object.create(null);
  const memoizedFn = (arg) => {
    const cacheKey = JSON.stringify(arg);
    if (cacheKey in cache2) {
      return cache2[cacheKey];
    }
    return cache2[cacheKey] = fn(arg);
  };
  return memoizedFn;
};
var __defProp = Object.defineProperty;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
const getIntlFormatterOptions = (type, name2) => {
  const { formats } = getOptions();
  if (type in formats && name2 in formats[type]) {
    return formats[type][name2];
  }
  throw new Error(`[svelte-i18n] Unknown "${name2}" ${type} format.`);
};
const createNumberFormatter = monadicMemoize(
  (_a2) => {
    var _b = _a2, { locale, format } = _b, options2 = __objRest(_b, ["locale", "format"]);
    if (locale == null) {
      throw new Error('[svelte-i18n] A "locale" must be set to format numbers');
    }
    if (format) {
      options2 = getIntlFormatterOptions("number", format);
    }
    return new Intl.NumberFormat(locale, options2);
  }
);
const createDateFormatter = monadicMemoize(
  (_c) => {
    var _d = _c, { locale, format } = _d, options2 = __objRest(_d, ["locale", "format"]);
    if (locale == null) {
      throw new Error('[svelte-i18n] A "locale" must be set to format dates');
    }
    if (format) {
      options2 = getIntlFormatterOptions("date", format);
    } else if (Object.keys(options2).length === 0) {
      options2 = getIntlFormatterOptions("date", "short");
    }
    return new Intl.DateTimeFormat(locale, options2);
  }
);
const createTimeFormatter = monadicMemoize(
  (_e) => {
    var _f = _e, { locale, format } = _f, options2 = __objRest(_f, ["locale", "format"]);
    if (locale == null) {
      throw new Error(
        '[svelte-i18n] A "locale" must be set to format time values'
      );
    }
    if (format) {
      options2 = getIntlFormatterOptions("time", format);
    } else if (Object.keys(options2).length === 0) {
      options2 = getIntlFormatterOptions("time", "short");
    }
    return new Intl.DateTimeFormat(locale, options2);
  }
);
const getNumberFormatter = (_g = {}) => {
  var _h = _g, {
    locale = getCurrentLocale()
  } = _h, args2 = __objRest(_h, [
    "locale"
  ]);
  return createNumberFormatter(__spreadValues({ locale }, args2));
};
const getDateFormatter = (_i = {}) => {
  var _j = _i, {
    locale = getCurrentLocale()
  } = _j, args2 = __objRest(_j, [
    "locale"
  ]);
  return createDateFormatter(__spreadValues({ locale }, args2));
};
const getTimeFormatter = (_k = {}) => {
  var _l = _k, {
    locale = getCurrentLocale()
  } = _l, args2 = __objRest(_l, [
    "locale"
  ]);
  return createTimeFormatter(__spreadValues({ locale }, args2));
};
const getMessageFormatter = monadicMemoize(
  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
  (message, locale = getCurrentLocale()) => new IntlMessageFormat(message, locale, getOptions().formats, {
    ignoreTag: getOptions().ignoreTag
  })
);
const formatMessage = (id, options2 = {}) => {
  var _a2, _b, _c, _d;
  let messageObj = options2;
  if (typeof id === "object") {
    messageObj = id;
    id = messageObj.id;
  }
  const {
    values: values2,
    locale = getCurrentLocale(),
    default: defaultValue
  } = messageObj;
  if (locale == null) {
    throw new Error(
      "[svelte-i18n] Cannot format a message without first setting the initial locale."
    );
  }
  let message = lookup(id, locale);
  if (!message) {
    message = (_d = (_c = (_b = (_a2 = getOptions()).handleMissingMessage) == null ? void 0 : _b.call(_a2, { locale, id, defaultValue })) != null ? _c : defaultValue) != null ? _d : id;
  } else if (typeof message !== "string") {
    console.warn(
      `[svelte-i18n] Message with id "${id}" must be of type "string", found: "${typeof message}". Gettin its value through the "$format" method is deprecated; use the "json" method instead.`
    );
    return message;
  }
  if (!values2) {
    return message;
  }
  let result = message;
  try {
    result = getMessageFormatter(message, locale).format(values2);
  } catch (e) {
    if (e instanceof Error) {
      console.warn(
        `[svelte-i18n] Message "${id}" has syntax error:`,
        e.message
      );
    }
  }
  return result;
};
const formatTime = (t, options2) => {
  return getTimeFormatter(options2).format(t);
};
const formatDate = (d, options2) => {
  return getDateFormatter(options2).format(d);
};
const formatNumber = (n, options2) => {
  return getNumberFormatter(options2).format(n);
};
const getJSON = (id, locale = getCurrentLocale()) => {
  return lookup(id, locale);
};
derived([$locale, $dictionary], () => formatMessage);
derived([$locale], () => formatTime);
derived([$locale], () => formatDate);
derived([$locale], () => formatNumber);
derived([$locale, $dictionary], () => getJSON);
var error = { exports: {} };
var stringify = function(...args2) {
  try {
    return JSON.stringify(...args2);
  } catch (err) {
    return "[Cannot display object: " + err.message + "]";
  }
};
(function(module, exports) {
  const Stringify = stringify;
  module.exports = class extends Error {
    constructor(args2) {
      const msgs = args2.filter((arg) => arg !== "").map((arg) => {
        return typeof arg === "string" ? arg : arg instanceof Error ? arg.message : Stringify(arg);
      });
      super(msgs.join(" ") || "Unknown error");
      if (typeof Error.captureStackTrace === "function") {
        Error.captureStackTrace(this, exports.assert);
      }
    }
  };
})(error, error.exports);
var errorExports = error.exports;
const AssertError = errorExports;
var assert = function(condition, ...args2) {
  if (condition) {
    return;
  }
  if (args2.length === 1 && args2[0] instanceof Error) {
    throw args2[0];
  }
  throw new AssertError(args2);
};
const Assert$5 = assert;
const internals$9 = {};
var reach = function(obj, chain, options2) {
  if (chain === false || chain === null || chain === void 0) {
    return obj;
  }
  options2 = options2 || {};
  if (typeof options2 === "string") {
    options2 = { separator: options2 };
  }
  const isChainArray = Array.isArray(chain);
  Assert$5(!isChainArray || !options2.separator, "Separator option is not valid for array-based chain");
  const path = isChainArray ? chain : chain.split(options2.separator || ".");
  let ref2 = obj;
  for (let i = 0; i < path.length; ++i) {
    let key = path[i];
    const type = options2.iterables && internals$9.iterables(ref2);
    if (Array.isArray(ref2) || type === "set") {
      const number2 = Number(key);
      if (Number.isInteger(number2)) {
        key = number2 < 0 ? ref2.length + number2 : number2;
      }
    }
    if (!ref2 || typeof ref2 === "function" && options2.functions === false || // Defaults to true
    !type && ref2[key] === void 0) {
      Assert$5(!options2.strict || i + 1 === path.length, "Missing segment", key, "in reach path ", chain);
      Assert$5(typeof ref2 === "object" || options2.functions === true || typeof ref2 !== "function", "Invalid segment", key, "in reach path ", chain);
      ref2 = options2.default;
      break;
    }
    if (!type) {
      ref2 = ref2[key];
    } else if (type === "set") {
      ref2 = [...ref2][key];
    } else {
      ref2 = ref2.get(key);
    }
  }
  return ref2;
};
internals$9.iterables = function(ref2) {
  if (ref2 instanceof Set) {
    return "set";
  }
  if (ref2 instanceof Map) {
    return "map";
  }
};
var types$1 = { exports: {} };
(function(module, exports) {
  const internals2 = {};
  exports = module.exports = {
    array: Array.prototype,
    buffer: Buffer && Buffer.prototype,
    // $lab:coverage:ignore$
    date: Date.prototype,
    error: Error.prototype,
    generic: Object.prototype,
    map: Map.prototype,
    promise: Promise.prototype,
    regex: RegExp.prototype,
    set: Set.prototype,
    weakMap: WeakMap.prototype,
    weakSet: WeakSet.prototype
  };
  internals2.typeMap = /* @__PURE__ */ new Map([
    ["[object Error]", exports.error],
    ["[object Map]", exports.map],
    ["[object Promise]", exports.promise],
    ["[object Set]", exports.set],
    ["[object WeakMap]", exports.weakMap],
    ["[object WeakSet]", exports.weakSet]
  ]);
  exports.getInternalProto = function(obj) {
    if (Array.isArray(obj)) {
      return exports.array;
    }
    if (Buffer && obj instanceof Buffer) {
      return exports.buffer;
    }
    if (obj instanceof Date) {
      return exports.date;
    }
    if (obj instanceof RegExp) {
      return exports.regex;
    }
    if (obj instanceof Error) {
      return exports.error;
    }
    const objName = Object.prototype.toString.call(obj);
    return internals2.typeMap.get(objName) || exports.generic;
  };
})(types$1, types$1.exports);
var typesExports = types$1.exports;
var utils = {};
utils.keys = function(obj, options2 = {}) {
  return options2.symbols !== false ? Reflect.ownKeys(obj) : Object.getOwnPropertyNames(obj);
};
const Reach$1 = reach;
const Types$1 = typesExports;
const Utils$1 = utils;
const internals$8 = {
  needsProtoHack: /* @__PURE__ */ new Set([Types$1.set, Types$1.map, Types$1.weakSet, Types$1.weakMap])
};
var clone = internals$8.clone = function(obj, options2 = {}, _seen = null) {
  if (typeof obj !== "object" || obj === null) {
    return obj;
  }
  let clone2 = internals$8.clone;
  let seen = _seen;
  if (options2.shallow) {
    if (options2.shallow !== true) {
      return internals$8.cloneWithShallow(obj, options2);
    }
    clone2 = (value) => value;
  } else if (seen) {
    const lookup2 = seen.get(obj);
    if (lookup2) {
      return lookup2;
    }
  } else {
    seen = /* @__PURE__ */ new Map();
  }
  const baseProto = Types$1.getInternalProto(obj);
  if (baseProto === Types$1.buffer) {
    return Buffer && Buffer.from(obj);
  }
  if (baseProto === Types$1.date) {
    return new Date(obj.getTime());
  }
  if (baseProto === Types$1.regex) {
    return new RegExp(obj);
  }
  const newObj = internals$8.base(obj, baseProto, options2);
  if (newObj === obj) {
    return obj;
  }
  if (seen) {
    seen.set(obj, newObj);
  }
  if (baseProto === Types$1.set) {
    for (const value of obj) {
      newObj.add(clone2(value, options2, seen));
    }
  } else if (baseProto === Types$1.map) {
    for (const [key, value] of obj) {
      newObj.set(key, clone2(value, options2, seen));
    }
  }
  const keys2 = Utils$1.keys(obj, options2);
  for (const key of keys2) {
    if (key === "__proto__") {
      continue;
    }
    if (baseProto === Types$1.array && key === "length") {
      newObj.length = obj.length;
      continue;
    }
    const descriptor = Object.getOwnPropertyDescriptor(obj, key);
    if (descriptor) {
      if (descriptor.get || descriptor.set) {
        Object.defineProperty(newObj, key, descriptor);
      } else if (descriptor.enumerable) {
        newObj[key] = clone2(obj[key], options2, seen);
      } else {
        Object.defineProperty(newObj, key, { enumerable: false, writable: true, configurable: true, value: clone2(obj[key], options2, seen) });
      }
    } else {
      Object.defineProperty(newObj, key, {
        enumerable: true,
        writable: true,
        configurable: true,
        value: clone2(obj[key], options2, seen)
      });
    }
  }
  return newObj;
};
internals$8.cloneWithShallow = function(source, options2) {
  const keys2 = options2.shallow;
  options2 = Object.assign({}, options2);
  options2.shallow = false;
  const seen = /* @__PURE__ */ new Map();
  for (const key of keys2) {
    const ref2 = Reach$1(source, key);
    if (typeof ref2 === "object" || typeof ref2 === "function") {
      seen.set(ref2, ref2);
    }
  }
  return internals$8.clone(source, options2, seen);
};
internals$8.base = function(obj, baseProto, options2) {
  if (options2.prototype === false) {
    if (internals$8.needsProtoHack.has(baseProto)) {
      return new baseProto.constructor();
    }
    return baseProto === Types$1.array ? [] : {};
  }
  const proto = Object.getPrototypeOf(obj);
  if (proto && proto.isImmutable) {
    return obj;
  }
  if (baseProto === Types$1.array) {
    const newObj = [];
    if (proto !== baseProto) {
      Object.setPrototypeOf(newObj, proto);
    }
    return newObj;
  }
  if (internals$8.needsProtoHack.has(baseProto)) {
    const newObj = new proto.constructor();
    if (proto !== baseProto) {
      Object.setPrototypeOf(newObj, proto);
    }
    return newObj;
  }
  return Object.create(proto);
};
var cache = {};
var common = {};
const name = "joi";
const description = "Object schema validation";
const version = "17.9.1";
const repository = "git://github.com/hapijs/joi";
const main = "lib/index.js";
const types = "lib/index.d.ts";
const browser = "dist/joi-browser.min.js";
const files = [
  "lib/**/*",
  "dist/*"
];
const keywords = [
  "schema",
  "validation"
];
const dependencies = {
  "@hapi/hoek": "^9.0.0",
  "@hapi/topo": "^5.0.0",
  "@sideway/address": "^4.1.3",
  "@sideway/formula": "^3.0.1",
  "@sideway/pinpoint": "^2.0.0"
};
const devDependencies = {
  "@hapi/bourne": "2.x.x",
  "@hapi/code": "8.x.x",
  "@hapi/joi-legacy-test": "npm:@hapi/joi@15.x.x",
  "@hapi/lab": "^25.0.1",
  "@types/node": "^14.18.24",
  typescript: "4.3.x"
};
const scripts = {
  prepublishOnly: "cd browser && npm install && npm run build",
  test: "lab -t 100 -a @hapi/code -L -Y",
  "test-cov-html": "lab -r html -o coverage.html -a @hapi/code"
};
const license = "BSD-3-Clause";
const require$$2 = {
  name,
  description,
  version,
  repository,
  main,
  types,
  browser,
  files,
  keywords,
  dependencies,
  devDependencies,
  scripts,
  license
};
var schemas = {};
var hasRequiredSchemas;
function requireSchemas() {
  if (hasRequiredSchemas)
    return schemas;
  hasRequiredSchemas = 1;
  const Joi2 = requireLib();
  const internals2 = {};
  internals2.wrap = Joi2.string().min(1).max(2).allow(false);
  schemas.preferences = Joi2.object({
    allowUnknown: Joi2.boolean(),
    abortEarly: Joi2.boolean(),
    artifacts: Joi2.boolean(),
    cache: Joi2.boolean(),
    context: Joi2.object(),
    convert: Joi2.boolean(),
    dateFormat: Joi2.valid("date", "iso", "string", "time", "utc"),
    debug: Joi2.boolean(),
    errors: {
      escapeHtml: Joi2.boolean(),
      label: Joi2.valid("path", "key", false),
      language: [
        Joi2.string(),
        Joi2.object().ref()
      ],
      render: Joi2.boolean(),
      stack: Joi2.boolean(),
      wrap: {
        label: internals2.wrap,
        array: internals2.wrap,
        string: internals2.wrap
      }
    },
    externals: Joi2.boolean(),
    messages: Joi2.object(),
    noDefaults: Joi2.boolean(),
    nonEnumerables: Joi2.boolean(),
    presence: Joi2.valid("required", "optional", "forbidden"),
    skipFunctions: Joi2.boolean(),
    stripUnknown: Joi2.object({
      arrays: Joi2.boolean(),
      objects: Joi2.boolean()
    }).or("arrays", "objects").allow(true, false),
    warnings: Joi2.boolean()
  }).strict();
  internals2.nameRx = /^[a-zA-Z0-9]\w*$/;
  internals2.rule = Joi2.object({
    alias: Joi2.array().items(Joi2.string().pattern(internals2.nameRx)).single(),
    args: Joi2.array().items(
      Joi2.string(),
      Joi2.object({
        name: Joi2.string().pattern(internals2.nameRx).required(),
        ref: Joi2.boolean(),
        assert: Joi2.alternatives([
          Joi2.function(),
          Joi2.object().schema()
        ]).conditional("ref", { is: true, then: Joi2.required() }),
        normalize: Joi2.function(),
        message: Joi2.string().when("assert", { is: Joi2.function(), then: Joi2.required() })
      })
    ),
    convert: Joi2.boolean(),
    manifest: Joi2.boolean(),
    method: Joi2.function().allow(false),
    multi: Joi2.boolean(),
    validate: Joi2.function()
  });
  schemas.extension = Joi2.object({
    type: Joi2.alternatives([
      Joi2.string(),
      Joi2.object().regex()
    ]).required(),
    args: Joi2.function(),
    cast: Joi2.object().pattern(internals2.nameRx, Joi2.object({
      from: Joi2.function().maxArity(1).required(),
      to: Joi2.function().minArity(1).maxArity(2).required()
    })),
    base: Joi2.object().schema().when("type", { is: Joi2.object().regex(), then: Joi2.forbidden() }),
    coerce: [
      Joi2.function().maxArity(3),
      Joi2.object({ method: Joi2.function().maxArity(3).required(), from: Joi2.array().items(Joi2.string()).single() })
    ],
    flags: Joi2.object().pattern(internals2.nameRx, Joi2.object({
      setter: Joi2.string(),
      default: Joi2.any()
    })),
    manifest: {
      build: Joi2.function().arity(2)
    },
    messages: [Joi2.object(), Joi2.string()],
    modifiers: Joi2.object().pattern(internals2.nameRx, Joi2.function().minArity(1).maxArity(2)),
    overrides: Joi2.object().pattern(internals2.nameRx, Joi2.function()),
    prepare: Joi2.function().maxArity(3),
    rebuild: Joi2.function().arity(1),
    rules: Joi2.object().pattern(internals2.nameRx, internals2.rule),
    terms: Joi2.object().pattern(internals2.nameRx, Joi2.object({
      init: Joi2.array().allow(null).required(),
      manifest: Joi2.object().pattern(/.+/, [
        Joi2.valid("schema", "single"),
        Joi2.object({
          mapped: Joi2.object({
            from: Joi2.string().required(),
            to: Joi2.string().required()
          }).required()
        })
      ])
    })),
    validate: Joi2.function().maxArity(3)
  }).strict();
  schemas.extensions = Joi2.array().items(Joi2.object(), Joi2.function().arity(1)).strict();
  internals2.desc = {
    buffer: Joi2.object({
      buffer: Joi2.string()
    }),
    func: Joi2.object({
      function: Joi2.function().required(),
      options: {
        literal: true
      }
    }),
    override: Joi2.object({
      override: true
    }),
    ref: Joi2.object({
      ref: Joi2.object({
        type: Joi2.valid("value", "global", "local"),
        path: Joi2.array().required(),
        separator: Joi2.string().length(1).allow(false),
        ancestor: Joi2.number().min(0).integer().allow("root"),
        map: Joi2.array().items(Joi2.array().length(2)).min(1),
        adjust: Joi2.function(),
        iterables: Joi2.boolean(),
        in: Joi2.boolean(),
        render: Joi2.boolean()
      }).required()
    }),
    regex: Joi2.object({
      regex: Joi2.string().min(3)
    }),
    special: Joi2.object({
      special: Joi2.valid("deep").required()
    }),
    template: Joi2.object({
      template: Joi2.string().required(),
      options: Joi2.object()
    }),
    value: Joi2.object({
      value: Joi2.alternatives([Joi2.object(), Joi2.array()]).required()
    })
  };
  internals2.desc.entity = Joi2.alternatives([
    Joi2.array().items(Joi2.link("...")),
    Joi2.boolean(),
    Joi2.function(),
    Joi2.number(),
    Joi2.string(),
    internals2.desc.buffer,
    internals2.desc.func,
    internals2.desc.ref,
    internals2.desc.regex,
    internals2.desc.special,
    internals2.desc.template,
    internals2.desc.value,
    Joi2.link("/")
  ]);
  internals2.desc.values = Joi2.array().items(
    null,
    Joi2.boolean(),
    Joi2.function(),
    Joi2.number().allow(Infinity, -Infinity),
    Joi2.string().allow(""),
    Joi2.symbol(),
    internals2.desc.buffer,
    internals2.desc.func,
    internals2.desc.override,
    internals2.desc.ref,
    internals2.desc.regex,
    internals2.desc.template,
    internals2.desc.value
  );
  internals2.desc.messages = Joi2.object().pattern(/.+/, [
    Joi2.string(),
    internals2.desc.template,
    Joi2.object().pattern(/.+/, [Joi2.string(), internals2.desc.template])
  ]);
  schemas.description = Joi2.object({
    type: Joi2.string().required(),
    flags: Joi2.object({
      cast: Joi2.string(),
      default: Joi2.any(),
      description: Joi2.string(),
      empty: Joi2.link("/"),
      failover: internals2.desc.entity,
      id: Joi2.string(),
      label: Joi2.string(),
      only: true,
      presence: ["optional", "required", "forbidden"],
      result: ["raw", "strip"],
      strip: Joi2.boolean(),
      unit: Joi2.string()
    }).unknown(),
    preferences: {
      allowUnknown: Joi2.boolean(),
      abortEarly: Joi2.boolean(),
      artifacts: Joi2.boolean(),
      cache: Joi2.boolean(),
      convert: Joi2.boolean(),
      dateFormat: ["date", "iso", "string", "time", "utc"],
      errors: {
        escapeHtml: Joi2.boolean(),
        label: ["path", "key"],
        language: [
          Joi2.string(),
          internals2.desc.ref
        ],
        wrap: {
          label: internals2.wrap,
          array: internals2.wrap
        }
      },
      externals: Joi2.boolean(),
      messages: internals2.desc.messages,
      noDefaults: Joi2.boolean(),
      nonEnumerables: Joi2.boolean(),
      presence: ["required", "optional", "forbidden"],
      skipFunctions: Joi2.boolean(),
      stripUnknown: Joi2.object({
        arrays: Joi2.boolean(),
        objects: Joi2.boolean()
      }).or("arrays", "objects").allow(true, false),
      warnings: Joi2.boolean()
    },
    allow: internals2.desc.values,
    invalid: internals2.desc.values,
    rules: Joi2.array().min(1).items({
      name: Joi2.string().required(),
      args: Joi2.object().min(1),
      keep: Joi2.boolean(),
      message: [
        Joi2.string(),
        internals2.desc.messages
      ],
      warn: Joi2.boolean()
    }),
    // Terms
    keys: Joi2.object().pattern(/.*/, Joi2.link("/")),
    link: internals2.desc.ref
  }).pattern(/^[a-z]\w*$/, Joi2.any());
  return schemas;
}
var messages = {};
var template = { exports: {} };
const internals$7 = {};
var escapeHtml = function(input) {
  if (!input) {
    return "";
  }
  let escaped = "";
  for (let i = 0; i < input.length; ++i) {
    const charCode = input.charCodeAt(i);
    if (internals$7.isSafe(charCode)) {
      escaped += input[i];
    } else {
      escaped += internals$7.escapeHtmlChar(charCode);
    }
  }
  return escaped;
};
internals$7.escapeHtmlChar = function(charCode) {
  const namedEscape = internals$7.namedHtml.get(charCode);
  if (namedEscape) {
    return namedEscape;
  }
  if (charCode >= 256) {
    return "&#" + charCode + ";";
  }
  const hexValue = charCode.toString(16).padStart(2, "0");
  return `&#x${hexValue};`;
};
internals$7.isSafe = function(charCode) {
  return internals$7.safeCharCodes.has(charCode);
};
internals$7.namedHtml = /* @__PURE__ */ new Map([
  [38, "&amp;"],
  [60, "&lt;"],
  [62, "&gt;"],
  [34, "&quot;"],
  [160, "&nbsp;"],
  [162, "&cent;"],
  [163, "&pound;"],
  [164, "&curren;"],
  [169, "&copy;"],
  [174, "&reg;"]
]);
internals$7.safeCharCodes = function() {
  const safe = /* @__PURE__ */ new Set();
  for (let i = 32; i < 123; ++i) {
    if (i >= 97 || // a-z
    i >= 65 && i <= 90 || // A-Z
    i >= 48 && i <= 57 || // 0-9
    i === 32 || // space
    i === 46 || // .
    i === 44 || // ,
    i === 45 || // -
    i === 58 || // :
    i === 95) {
      safe.add(i);
    }
  }
  return safe;
}();
var lib$3 = {};
(function(exports) {
  const internals2 = {
    operators: ["!", "^", "*", "/", "%", "+", "-", "<", "<=", ">", ">=", "==", "!=", "&&", "||", "??"],
    operatorCharacters: ["!", "^", "*", "/", "%", "+", "-", "<", "=", ">", "&", "|", "?"],
    operatorsOrder: [["^"], ["*", "/", "%"], ["+", "-"], ["<", "<=", ">", ">="], ["==", "!="], ["&&"], ["||", "??"]],
    operatorsPrefix: ["!", "n"],
    literals: {
      '"': '"',
      "`": "`",
      "'": "'",
      "[": "]"
    },
    numberRx: /^(?:[0-9]*(\.[0-9]*)?){1}$/,
    tokenRx: /^[\w\$\#\.\@\:\{\}]+$/,
    symbol: Symbol("formula"),
    settings: Symbol("settings")
  };
  exports.Parser = class {
    constructor(string2, options2 = {}) {
      if (!options2[internals2.settings] && options2.constants) {
        for (const constant in options2.constants) {
          const value = options2.constants[constant];
          if (value !== null && !["boolean", "number", "string"].includes(typeof value)) {
            throw new Error(`Formula constant ${constant} contains invalid ${typeof value} value type`);
          }
        }
      }
      this.settings = options2[internals2.settings] ? options2 : Object.assign({ [internals2.settings]: true, constants: {}, functions: {} }, options2);
      this.single = null;
      this._parts = null;
      this._parse(string2);
    }
    _parse(string2) {
      let parts = [];
      let current2 = "";
      let parenthesis = 0;
      let literal = false;
      const flush2 = (inner) => {
        if (parenthesis) {
          throw new Error("Formula missing closing parenthesis");
        }
        const last2 = parts.length ? parts[parts.length - 1] : null;
        if (!literal && !current2 && !inner) {
          return;
        }
        if (last2 && last2.type === "reference" && inner === ")") {
          last2.type = "function";
          last2.value = this._subFormula(current2, last2.value);
          current2 = "";
          return;
        }
        if (inner === ")") {
          const sub = new exports.Parser(current2, this.settings);
          parts.push({ type: "segment", value: sub });
        } else if (literal) {
          if (literal === "]") {
            parts.push({ type: "reference", value: current2 });
            current2 = "";
            return;
          }
          parts.push({ type: "literal", value: current2 });
        } else if (internals2.operatorCharacters.includes(current2)) {
          if (last2 && last2.type === "operator" && internals2.operators.includes(last2.value + current2)) {
            last2.value += current2;
          } else {
            parts.push({ type: "operator", value: current2 });
          }
        } else if (current2.match(internals2.numberRx)) {
          parts.push({ type: "constant", value: parseFloat(current2) });
        } else if (this.settings.constants[current2] !== void 0) {
          parts.push({ type: "constant", value: this.settings.constants[current2] });
        } else {
          if (!current2.match(internals2.tokenRx)) {
            throw new Error(`Formula contains invalid token: ${current2}`);
          }
          parts.push({ type: "reference", value: current2 });
        }
        current2 = "";
      };
      for (const c of string2) {
        if (literal) {
          if (c === literal) {
            flush2();
            literal = false;
          } else {
            current2 += c;
          }
        } else if (parenthesis) {
          if (c === "(") {
            current2 += c;
            ++parenthesis;
          } else if (c === ")") {
            --parenthesis;
            if (!parenthesis) {
              flush2(c);
            } else {
              current2 += c;
            }
          } else {
            current2 += c;
          }
        } else if (c in internals2.literals) {
          literal = internals2.literals[c];
        } else if (c === "(") {
          flush2();
          ++parenthesis;
        } else if (internals2.operatorCharacters.includes(c)) {
          flush2();
          current2 = c;
          flush2();
        } else if (c !== " ") {
          current2 += c;
        } else {
          flush2();
        }
      }
      flush2();
      parts = parts.map((part, i) => {
        if (part.type !== "operator" || part.value !== "-" || i && parts[i - 1].type !== "operator") {
          return part;
        }
        return { type: "operator", value: "n" };
      });
      let operator = false;
      for (const part of parts) {
        if (part.type === "operator") {
          if (internals2.operatorsPrefix.includes(part.value)) {
            continue;
          }
          if (!operator) {
            throw new Error("Formula contains an operator in invalid position");
          }
          if (!internals2.operators.includes(part.value)) {
            throw new Error(`Formula contains an unknown operator ${part.value}`);
          }
        } else if (operator) {
          throw new Error("Formula missing expected operator");
        }
        operator = !operator;
      }
      if (!operator) {
        throw new Error("Formula contains invalid trailing operator");
      }
      if (parts.length === 1 && ["reference", "literal", "constant"].includes(parts[0].type)) {
        this.single = { type: parts[0].type === "reference" ? "reference" : "value", value: parts[0].value };
      }
      this._parts = parts.map((part) => {
        if (part.type === "operator") {
          return internals2.operatorsPrefix.includes(part.value) ? part : part.value;
        }
        if (part.type !== "reference") {
          return part.value;
        }
        if (this.settings.tokenRx && !this.settings.tokenRx.test(part.value)) {
          throw new Error(`Formula contains invalid reference ${part.value}`);
        }
        if (this.settings.reference) {
          return this.settings.reference(part.value);
        }
        return internals2.reference(part.value);
      });
    }
    _subFormula(string2, name2) {
      const method = this.settings.functions[name2];
      if (typeof method !== "function") {
        throw new Error(`Formula contains unknown function ${name2}`);
      }
      let args2 = [];
      if (string2) {
        let current2 = "";
        let parenthesis = 0;
        let literal = false;
        const flush2 = () => {
          if (!current2) {
            throw new Error(`Formula contains function ${name2} with invalid arguments ${string2}`);
          }
          args2.push(current2);
          current2 = "";
        };
        for (let i = 0; i < string2.length; ++i) {
          const c = string2[i];
          if (literal) {
            current2 += c;
            if (c === literal) {
              literal = false;
            }
          } else if (c in internals2.literals && !parenthesis) {
            current2 += c;
            literal = internals2.literals[c];
          } else if (c === "," && !parenthesis) {
            flush2();
          } else {
            current2 += c;
            if (c === "(") {
              ++parenthesis;
            } else if (c === ")") {
              --parenthesis;
            }
          }
        }
        flush2();
      }
      args2 = args2.map((arg) => new exports.Parser(arg, this.settings));
      return function(context2) {
        const innerValues = [];
        for (const arg of args2) {
          innerValues.push(arg.evaluate(context2));
        }
        return method.call(context2, ...innerValues);
      };
    }
    evaluate(context2) {
      const parts = this._parts.slice();
      for (let i = parts.length - 2; i >= 0; --i) {
        const part = parts[i];
        if (part && part.type === "operator") {
          const current2 = parts[i + 1];
          parts.splice(i + 1, 1);
          const value = internals2.evaluate(current2, context2);
          parts[i] = internals2.single(part.value, value);
        }
      }
      internals2.operatorsOrder.forEach((set2) => {
        for (let i = 1; i < parts.length - 1; ) {
          if (set2.includes(parts[i])) {
            const operator = parts[i];
            const left = internals2.evaluate(parts[i - 1], context2);
            const right = internals2.evaluate(parts[i + 1], context2);
            parts.splice(i, 2);
            const result = internals2.calculate(operator, left, right);
            parts[i - 1] = result === 0 ? 0 : result;
          } else {
            i += 2;
          }
        }
      });
      return internals2.evaluate(parts[0], context2);
    }
  };
  exports.Parser.prototype[internals2.symbol] = true;
  internals2.reference = function(name2) {
    return function(context2) {
      return context2 && context2[name2] !== void 0 ? context2[name2] : null;
    };
  };
  internals2.evaluate = function(part, context2) {
    if (part === null) {
      return null;
    }
    if (typeof part === "function") {
      return part(context2);
    }
    if (part[internals2.symbol]) {
      return part.evaluate(context2);
    }
    return part;
  };
  internals2.single = function(operator, value) {
    if (operator === "!") {
      return value ? false : true;
    }
    const negative = -value;
    if (negative === 0) {
      return 0;
    }
    return negative;
  };
  internals2.calculate = function(operator, left, right) {
    if (operator === "??") {
      return internals2.exists(left) ? left : right;
    }
    if (typeof left === "string" || typeof right === "string") {
      if (operator === "+") {
        left = internals2.exists(left) ? left : "";
        right = internals2.exists(right) ? right : "";
        return left + right;
      }
    } else {
      switch (operator) {
        case "^":
          return Math.pow(left, right);
        case "*":
          return left * right;
        case "/":
          return left / right;
        case "%":
          return left % right;
        case "+":
          return left + right;
        case "-":
          return left - right;
      }
    }
    switch (operator) {
      case "<":
        return left < right;
      case "<=":
        return left <= right;
      case ">":
        return left > right;
      case ">=":
        return left >= right;
      case "==":
        return left === right;
      case "!=":
        return left !== right;
      case "&&":
        return left && right;
      case "||":
        return left || right;
    }
    return null;
  };
  internals2.exists = function(value) {
    return value !== null && value !== void 0;
  };
})(lib$3);
var errors$1 = {};
var annotate = {};
var hasRequiredAnnotate;
function requireAnnotate() {
  if (hasRequiredAnnotate)
    return annotate;
  hasRequiredAnnotate = 1;
  const Clone2 = clone;
  const Common = requireCommon();
  const internals2 = {
    annotations: Symbol("annotations")
  };
  annotate.error = function(stripColorCodes) {
    if (!this._original || typeof this._original !== "object") {
      return this.details[0].message;
    }
    const redFgEscape = stripColorCodes ? "" : "\x1B[31m";
    const redBgEscape = stripColorCodes ? "" : "\x1B[41m";
    const endColor = stripColorCodes ? "" : "\x1B[0m";
    const obj = Clone2(this._original);
    for (let i = this.details.length - 1; i >= 0; --i) {
      const pos = i + 1;
      const error2 = this.details[i];
      const path = error2.path;
      let node = obj;
      for (let j = 0; ; ++j) {
        const seg = path[j];
        if (Common.isSchema(node)) {
          node = node.clone();
        }
        if (j + 1 < path.length && typeof node[seg] !== "string") {
          node = node[seg];
        } else {
          const refAnnotations = node[internals2.annotations] || { errors: {}, missing: {} };
          node[internals2.annotations] = refAnnotations;
          const cacheKey = seg || error2.context.key;
          if (node[seg] !== void 0) {
            refAnnotations.errors[cacheKey] = refAnnotations.errors[cacheKey] || [];
            refAnnotations.errors[cacheKey].push(pos);
          } else {
            refAnnotations.missing[cacheKey] = pos;
          }
          break;
        }
      }
    }
    const replacers = {
      key: /_\$key\$_([, \d]+)_\$end\$_"/g,
      missing: /"_\$miss\$_([^|]+)\|(\d+)_\$end\$_": "__missing__"/g,
      arrayIndex: /\s*"_\$idx\$_([, \d]+)_\$end\$_",?\n(.*)/g,
      specials: /"\[(NaN|Symbol.*|-?Infinity|function.*|\(.*)]"/g
    };
    let message = internals2.safeStringify(obj, 2).replace(replacers.key, ($0, $1) => `" ${redFgEscape}[${$1}]${endColor}`).replace(replacers.missing, ($0, $1, $2) => `${redBgEscape}"${$1}"${endColor}${redFgEscape} [${$2}]: -- missing --${endColor}`).replace(replacers.arrayIndex, ($0, $1, $2) => `
${$2} ${redFgEscape}[${$1}]${endColor}`).replace(replacers.specials, ($0, $1) => $1);
    message = `${message}
${redFgEscape}`;
    for (let i = 0; i < this.details.length; ++i) {
      const pos = i + 1;
      message = `${message}
[${pos}] ${this.details[i].message}`;
    }
    message = message + endColor;
    return message;
  };
  internals2.safeStringify = function(obj, spaces) {
    return JSON.stringify(obj, internals2.serializer(), spaces);
  };
  internals2.serializer = function() {
    const keys2 = [];
    const stack = [];
    const cycleReplacer = (key, value) => {
      if (stack[0] === value) {
        return "[Circular ~]";
      }
      return "[Circular ~." + keys2.slice(0, stack.indexOf(value)).join(".") + "]";
    };
    return function(key, value) {
      if (stack.length > 0) {
        const thisPos = stack.indexOf(this);
        if (~thisPos) {
          stack.length = thisPos + 1;
          keys2.length = thisPos + 1;
          keys2[thisPos] = key;
        } else {
          stack.push(this);
          keys2.push(key);
        }
        if (~stack.indexOf(value)) {
          value = cycleReplacer.call(this, key, value);
        }
      } else {
        stack.push(value);
      }
      if (value) {
        const annotations = value[internals2.annotations];
        if (annotations) {
          if (Array.isArray(value)) {
            const annotated = [];
            for (let i = 0; i < value.length; ++i) {
              if (annotations.errors[i]) {
                annotated.push(`_$idx$_${annotations.errors[i].sort().join(", ")}_$end$_`);
              }
              annotated.push(value[i]);
            }
            value = annotated;
          } else {
            for (const errorKey in annotations.errors) {
              value[`${errorKey}_$key$_${annotations.errors[errorKey].sort().join(", ")}_$end$_`] = value[errorKey];
              value[errorKey] = void 0;
            }
            for (const missingKey in annotations.missing) {
              value[`_$miss$_${missingKey}|${annotations.missing[missingKey]}_$end$_`] = "__missing__";
            }
          }
          return value;
        }
      }
      if (value === Infinity || value === -Infinity || Number.isNaN(value) || typeof value === "function" || typeof value === "symbol") {
        return "[" + value.toString() + "]";
      }
      return value;
    };
  };
  return annotate;
}
var hasRequiredErrors;
function requireErrors() {
  if (hasRequiredErrors)
    return errors$1;
  hasRequiredErrors = 1;
  (function(exports) {
    const Annotate = requireAnnotate();
    const Common = requireCommon();
    const Template = requireTemplate();
    exports.Report = class {
      constructor(code, value, local, flags, messages2, state2, prefs) {
        this.code = code;
        this.flags = flags;
        this.messages = messages2;
        this.path = state2.path;
        this.prefs = prefs;
        this.state = state2;
        this.value = value;
        this.message = null;
        this.template = null;
        this.local = local || {};
        this.local.label = exports.label(this.flags, this.state, this.prefs, this.messages);
        if (this.value !== void 0 && !this.local.hasOwnProperty("value")) {
          this.local.value = this.value;
        }
        if (this.path.length) {
          const key = this.path[this.path.length - 1];
          if (typeof key !== "object") {
            this.local.key = key;
          }
        }
      }
      _setTemplate(template2) {
        this.template = template2;
        if (!this.flags.label && this.path.length === 0) {
          const localized = this._template(this.template, "root");
          if (localized) {
            this.local.label = localized;
          }
        }
      }
      toString() {
        if (this.message) {
          return this.message;
        }
        const code = this.code;
        if (!this.prefs.errors.render) {
          return this.code;
        }
        const template2 = this._template(this.template) || this._template(this.prefs.messages) || this._template(this.messages);
        if (template2 === void 0) {
          return `Error code "${code}" is not defined, your custom type is missing the correct messages definition`;
        }
        this.message = template2.render(this.value, this.state, this.prefs, this.local, { errors: this.prefs.errors, messages: [this.prefs.messages, this.messages] });
        if (!this.prefs.errors.label) {
          this.message = this.message.replace(/^"" /, "").trim();
        }
        return this.message;
      }
      _template(messages2, code) {
        return exports.template(this.value, messages2, code || this.code, this.state, this.prefs);
      }
    };
    exports.path = function(path) {
      let label = "";
      for (const segment of path) {
        if (typeof segment === "object") {
          continue;
        }
        if (typeof segment === "string") {
          if (label) {
            label += ".";
          }
          label += segment;
        } else {
          label += `[${segment}]`;
        }
      }
      return label;
    };
    exports.template = function(value, messages2, code, state2, prefs) {
      if (!messages2) {
        return;
      }
      if (Template.isTemplate(messages2)) {
        return code !== "root" ? messages2 : null;
      }
      let lang = prefs.errors.language;
      if (Common.isResolvable(lang)) {
        lang = lang.resolve(value, state2, prefs);
      }
      if (lang && messages2[lang]) {
        if (messages2[lang][code] !== void 0) {
          return messages2[lang][code];
        }
        if (messages2[lang]["*"] !== void 0) {
          return messages2[lang]["*"];
        }
      }
      if (!messages2[code]) {
        return messages2["*"];
      }
      return messages2[code];
    };
    exports.label = function(flags, state2, prefs, messages2) {
      if (flags.label) {
        return flags.label;
      }
      if (!prefs.errors.label) {
        return "";
      }
      let path = state2.path;
      if (prefs.errors.label === "key" && state2.path.length > 1) {
        path = state2.path.slice(-1);
      }
      const normalized = exports.path(path);
      if (normalized) {
        return normalized;
      }
      return exports.template(null, prefs.messages, "root", state2, prefs) || messages2 && exports.template(null, messages2, "root", state2, prefs) || "value";
    };
    exports.process = function(errors2, original, prefs) {
      if (!errors2) {
        return null;
      }
      const { override, message, details } = exports.details(errors2);
      if (override) {
        return override;
      }
      if (prefs.errors.stack) {
        return new exports.ValidationError(message, details, original);
      }
      const limit = Error.stackTraceLimit;
      Error.stackTraceLimit = 0;
      const validationError = new exports.ValidationError(message, details, original);
      Error.stackTraceLimit = limit;
      return validationError;
    };
    exports.details = function(errors2, options2 = {}) {
      let messages2 = [];
      const details = [];
      for (const item of errors2) {
        if (item instanceof Error) {
          if (options2.override !== false) {
            return { override: item };
          }
          const message2 = item.toString();
          messages2.push(message2);
          details.push({
            message: message2,
            type: "override",
            context: { error: item }
          });
          continue;
        }
        const message = item.toString();
        messages2.push(message);
        details.push({
          message,
          path: item.path.filter((v) => typeof v !== "object"),
          type: item.code,
          context: item.local
        });
      }
      if (messages2.length > 1) {
        messages2 = [...new Set(messages2)];
      }
      return { message: messages2.join(". "), details };
    };
    exports.ValidationError = class extends Error {
      constructor(message, details, original) {
        super(message);
        this._original = original;
        this.details = details;
      }
      static isError(err) {
        return err instanceof exports.ValidationError;
      }
    };
    exports.ValidationError.prototype.isJoi = true;
    exports.ValidationError.prototype.name = "ValidationError";
    exports.ValidationError.prototype.annotate = Annotate.error;
  })(errors$1);
  return errors$1;
}
var ref = {};
var hasRequiredRef;
function requireRef() {
  if (hasRequiredRef)
    return ref;
  hasRequiredRef = 1;
  (function(exports) {
    const Assert2 = assert;
    const Clone2 = clone;
    const Reach2 = reach;
    const Common = requireCommon();
    let Template;
    const internals2 = {
      symbol: Symbol("ref"),
      // Used to internally identify references (shared with other joi versions)
      defaults: {
        adjust: null,
        in: false,
        iterables: null,
        map: null,
        separator: ".",
        type: "value"
      }
    };
    exports.create = function(key, options2 = {}) {
      Assert2(typeof key === "string", "Invalid reference key:", key);
      Common.assertOptions(options2, ["adjust", "ancestor", "in", "iterables", "map", "prefix", "render", "separator"]);
      Assert2(!options2.prefix || typeof options2.prefix === "object", "options.prefix must be of type object");
      const ref2 = Object.assign({}, internals2.defaults, options2);
      delete ref2.prefix;
      const separator = ref2.separator;
      const context2 = internals2.context(key, separator, options2.prefix);
      ref2.type = context2.type;
      key = context2.key;
      if (ref2.type === "value") {
        if (context2.root) {
          Assert2(!separator || key[0] !== separator, "Cannot specify relative path with root prefix");
          ref2.ancestor = "root";
          if (!key) {
            key = null;
          }
        }
        if (separator && separator === key) {
          key = null;
          ref2.ancestor = 0;
        } else {
          if (ref2.ancestor !== void 0) {
            Assert2(!separator || !key || key[0] !== separator, "Cannot combine prefix with ancestor option");
          } else {
            const [ancestor, slice] = internals2.ancestor(key, separator);
            if (slice) {
              key = key.slice(slice);
              if (key === "") {
                key = null;
              }
            }
            ref2.ancestor = ancestor;
          }
        }
      }
      ref2.path = separator ? key === null ? [] : key.split(separator) : [key];
      return new internals2.Ref(ref2);
    };
    exports.in = function(key, options2 = {}) {
      return exports.create(key, { ...options2, in: true });
    };
    exports.isRef = function(ref2) {
      return ref2 ? !!ref2[Common.symbols.ref] : false;
    };
    internals2.Ref = class {
      constructor(options2) {
        Assert2(typeof options2 === "object", "Invalid reference construction");
        Common.assertOptions(options2, [
          "adjust",
          "ancestor",
          "in",
          "iterables",
          "map",
          "path",
          "render",
          "separator",
          "type",
          // Copied
          "depth",
          "key",
          "root",
          "display"
          // Overridden
        ]);
        Assert2([false, void 0].includes(options2.separator) || typeof options2.separator === "string" && options2.separator.length === 1, "Invalid separator");
        Assert2(!options2.adjust || typeof options2.adjust === "function", "options.adjust must be a function");
        Assert2(!options2.map || Array.isArray(options2.map), "options.map must be an array");
        Assert2(!options2.map || !options2.adjust, "Cannot set both map and adjust options");
        Object.assign(this, internals2.defaults, options2);
        Assert2(this.type === "value" || this.ancestor === void 0, "Non-value references cannot reference ancestors");
        if (Array.isArray(this.map)) {
          this.map = new Map(this.map);
        }
        this.depth = this.path.length;
        this.key = this.path.length ? this.path.join(this.separator) : null;
        this.root = this.path[0];
        this.updateDisplay();
      }
      resolve(value, state2, prefs, local, options2 = {}) {
        Assert2(!this.in || options2.in, "Invalid in() reference usage");
        if (this.type === "global") {
          return this._resolve(prefs.context, state2, options2);
        }
        if (this.type === "local") {
          return this._resolve(local, state2, options2);
        }
        if (!this.ancestor) {
          return this._resolve(value, state2, options2);
        }
        if (this.ancestor === "root") {
          return this._resolve(state2.ancestors[state2.ancestors.length - 1], state2, options2);
        }
        Assert2(this.ancestor <= state2.ancestors.length, "Invalid reference exceeds the schema root:", this.display);
        return this._resolve(state2.ancestors[this.ancestor - 1], state2, options2);
      }
      _resolve(target, state2, options2) {
        let resolved2;
        if (this.type === "value" && state2.mainstay.shadow && options2.shadow !== false) {
          resolved2 = state2.mainstay.shadow.get(this.absolute(state2));
        }
        if (resolved2 === void 0) {
          resolved2 = Reach2(target, this.path, { iterables: this.iterables, functions: true });
        }
        if (this.adjust) {
          resolved2 = this.adjust(resolved2);
        }
        if (this.map) {
          const mapped = this.map.get(resolved2);
          if (mapped !== void 0) {
            resolved2 = mapped;
          }
        }
        if (state2.mainstay) {
          state2.mainstay.tracer.resolve(state2, this, resolved2);
        }
        return resolved2;
      }
      toString() {
        return this.display;
      }
      absolute(state2) {
        return [...state2.path.slice(0, -this.ancestor), ...this.path];
      }
      clone() {
        return new internals2.Ref(this);
      }
      describe() {
        const ref2 = { path: this.path };
        if (this.type !== "value") {
          ref2.type = this.type;
        }
        if (this.separator !== ".") {
          ref2.separator = this.separator;
        }
        if (this.type === "value" && this.ancestor !== 1) {
          ref2.ancestor = this.ancestor;
        }
        if (this.map) {
          ref2.map = [...this.map];
        }
        for (const key of ["adjust", "iterables", "render"]) {
          if (this[key] !== null && this[key] !== void 0) {
            ref2[key] = this[key];
          }
        }
        if (this.in !== false) {
          ref2.in = true;
        }
        return { ref: ref2 };
      }
      updateDisplay() {
        const key = this.key !== null ? this.key : "";
        if (this.type !== "value") {
          this.display = `ref:${this.type}:${key}`;
          return;
        }
        if (!this.separator) {
          this.display = `ref:${key}`;
          return;
        }
        if (!this.ancestor) {
          this.display = `ref:${this.separator}${key}`;
          return;
        }
        if (this.ancestor === "root") {
          this.display = `ref:root:${key}`;
          return;
        }
        if (this.ancestor === 1) {
          this.display = `ref:${key || ".."}`;
          return;
        }
        const lead = new Array(this.ancestor + 1).fill(this.separator).join("");
        this.display = `ref:${lead}${key || ""}`;
      }
    };
    internals2.Ref.prototype[Common.symbols.ref] = true;
    exports.build = function(desc) {
      desc = Object.assign({}, internals2.defaults, desc);
      if (desc.type === "value" && desc.ancestor === void 0) {
        desc.ancestor = 1;
      }
      return new internals2.Ref(desc);
    };
    internals2.context = function(key, separator, prefix = {}) {
      key = key.trim();
      if (prefix) {
        const globalp = prefix.global === void 0 ? "$" : prefix.global;
        if (globalp !== separator && key.startsWith(globalp)) {
          return { key: key.slice(globalp.length), type: "global" };
        }
        const local = prefix.local === void 0 ? "#" : prefix.local;
        if (local !== separator && key.startsWith(local)) {
          return { key: key.slice(local.length), type: "local" };
        }
        const root = prefix.root === void 0 ? "/" : prefix.root;
        if (root !== separator && key.startsWith(root)) {
          return { key: key.slice(root.length), type: "value", root: true };
        }
      }
      return { key, type: "value" };
    };
    internals2.ancestor = function(key, separator) {
      if (!separator) {
        return [1, 0];
      }
      if (key[0] !== separator) {
        return [1, 0];
      }
      if (key[1] !== separator) {
        return [0, 1];
      }
      let i = 2;
      while (key[i] === separator) {
        ++i;
      }
      return [i - 1, i];
    };
    exports.toSibling = 0;
    exports.toParent = 1;
    exports.Manager = class {
      constructor() {
        this.refs = [];
      }
      register(source, target) {
        if (!source) {
          return;
        }
        target = target === void 0 ? exports.toParent : target;
        if (Array.isArray(source)) {
          for (const ref2 of source) {
            this.register(ref2, target);
          }
          return;
        }
        if (Common.isSchema(source)) {
          for (const item of source._refs.refs) {
            if (item.ancestor - target >= 0) {
              this.refs.push({ ancestor: item.ancestor - target, root: item.root });
            }
          }
          return;
        }
        if (exports.isRef(source) && source.type === "value" && source.ancestor - target >= 0) {
          this.refs.push({ ancestor: source.ancestor - target, root: source.root });
        }
        Template = Template || requireTemplate();
        if (Template.isTemplate(source)) {
          this.register(source.refs(), target);
        }
      }
      get length() {
        return this.refs.length;
      }
      clone() {
        const copy = new exports.Manager();
        copy.refs = Clone2(this.refs);
        return copy;
      }
      reset() {
        this.refs = [];
      }
      roots() {
        return this.refs.filter((ref2) => !ref2.ancestor).map((ref2) => ref2.root);
      }
    };
  })(ref);
  return ref;
}
var hasRequiredTemplate;
function requireTemplate() {
  if (hasRequiredTemplate)
    return template.exports;
  hasRequiredTemplate = 1;
  (function(module, exports) {
    const Assert2 = assert;
    const Clone2 = clone;
    const EscapeHtml = escapeHtml;
    const Formula = lib$3;
    const Common = requireCommon();
    const Errors2 = requireErrors();
    const Ref = requireRef();
    const internals2 = {
      symbol: Symbol("template"),
      opens: new Array(1e3).join("\0"),
      closes: new Array(1e3).join(""),
      dateFormat: {
        date: Date.prototype.toDateString,
        iso: Date.prototype.toISOString,
        string: Date.prototype.toString,
        time: Date.prototype.toTimeString,
        utc: Date.prototype.toUTCString
      }
    };
    module.exports = internals2.Template = class {
      constructor(source, options2) {
        Assert2(typeof source === "string", "Template source must be a string");
        Assert2(!source.includes("\0") && !source.includes(""), "Template source cannot contain reserved control characters");
        this.source = source;
        this.rendered = source;
        this._template = null;
        this._settings = Clone2(options2);
        this._parse();
      }
      _parse() {
        if (!this.source.includes("{")) {
          return;
        }
        const encoded = internals2.encode(this.source);
        const parts = internals2.split(encoded);
        let refs = false;
        const processed = [];
        const head = parts.shift();
        if (head) {
          processed.push(head);
        }
        for (const part of parts) {
          const raw = part[0] !== "{";
          const ender = raw ? "}" : "}}";
          const end = part.indexOf(ender);
          if (end === -1 || // Ignore non-matching closing
          part[1] === "{") {
            processed.push(`{${internals2.decode(part)}`);
            continue;
          }
          let variable = part.slice(raw ? 0 : 1, end);
          const wrapped = variable[0] === ":";
          if (wrapped) {
            variable = variable.slice(1);
          }
          const dynamic = this._ref(internals2.decode(variable), { raw, wrapped });
          processed.push(dynamic);
          if (typeof dynamic !== "string") {
            refs = true;
          }
          const rest = part.slice(end + ender.length);
          if (rest) {
            processed.push(internals2.decode(rest));
          }
        }
        if (!refs) {
          this.rendered = processed.join("");
          return;
        }
        this._template = processed;
      }
      static date(date2, prefs) {
        return internals2.dateFormat[prefs.dateFormat].call(date2);
      }
      describe(options2 = {}) {
        if (!this._settings && options2.compact) {
          return this.source;
        }
        const desc = { template: this.source };
        if (this._settings) {
          desc.options = this._settings;
        }
        return desc;
      }
      static build(desc) {
        return new internals2.Template(desc.template, desc.options);
      }
      isDynamic() {
        return !!this._template;
      }
      static isTemplate(template2) {
        return template2 ? !!template2[Common.symbols.template] : false;
      }
      refs() {
        if (!this._template) {
          return;
        }
        const refs = [];
        for (const part of this._template) {
          if (typeof part !== "string") {
            refs.push(...part.refs);
          }
        }
        return refs;
      }
      resolve(value, state2, prefs, local) {
        if (this._template && this._template.length === 1) {
          return this._part(
            this._template[0],
            /* context -> [*/
            value,
            state2,
            prefs,
            local,
            {}
            /*] */
          );
        }
        return this.render(value, state2, prefs, local);
      }
      _part(part, ...args2) {
        if (part.ref) {
          return part.ref.resolve(...args2);
        }
        return part.formula.evaluate(args2);
      }
      render(value, state2, prefs, local, options2 = {}) {
        if (!this.isDynamic()) {
          return this.rendered;
        }
        const parts = [];
        for (const part of this._template) {
          if (typeof part === "string") {
            parts.push(part);
          } else {
            const rendered = this._part(
              part,
              /* context -> [*/
              value,
              state2,
              prefs,
              local,
              options2
              /*] */
            );
            const string2 = internals2.stringify(rendered, value, state2, prefs, local, options2);
            if (string2 !== void 0) {
              const result = part.raw || (options2.errors && options2.errors.escapeHtml) === false ? string2 : EscapeHtml(string2);
              parts.push(internals2.wrap(result, part.wrapped && prefs.errors.wrap.label));
            }
          }
        }
        return parts.join("");
      }
      _ref(content, { raw, wrapped }) {
        const refs = [];
        const reference = (variable) => {
          const ref2 = Ref.create(variable, this._settings);
          refs.push(ref2);
          return (context2) => ref2.resolve(...context2);
        };
        try {
          var formula = new Formula.Parser(content, { reference, functions: internals2.functions, constants: internals2.constants });
        } catch (err) {
          err.message = `Invalid template variable "${content}" fails due to: ${err.message}`;
          throw err;
        }
        if (formula.single) {
          if (formula.single.type === "reference") {
            const ref2 = refs[0];
            return { ref: ref2, raw, refs, wrapped: wrapped || ref2.type === "local" && ref2.key === "label" };
          }
          return internals2.stringify(formula.single.value);
        }
        return { formula, raw, refs };
      }
      toString() {
        return this.source;
      }
    };
    internals2.Template.prototype[Common.symbols.template] = true;
    internals2.Template.prototype.isImmutable = true;
    internals2.encode = function(string2) {
      return string2.replace(/\\(\{+)/g, ($0, $1) => {
        return internals2.opens.slice(0, $1.length);
      }).replace(/\\(\}+)/g, ($0, $1) => {
        return internals2.closes.slice(0, $1.length);
      });
    };
    internals2.decode = function(string2) {
      return string2.replace(/\u0000/g, "{").replace(/\u0001/g, "}");
    };
    internals2.split = function(string2) {
      const parts = [];
      let current2 = "";
      for (let i = 0; i < string2.length; ++i) {
        const char = string2[i];
        if (char === "{") {
          let next = "";
          while (i + 1 < string2.length && string2[i + 1] === "{") {
            next += "{";
            ++i;
          }
          parts.push(current2);
          current2 = next;
        } else {
          current2 += char;
        }
      }
      parts.push(current2);
      return parts;
    };
    internals2.wrap = function(value, ends) {
      if (!ends) {
        return value;
      }
      if (ends.length === 1) {
        return `${ends}${value}${ends}`;
      }
      return `${ends[0]}${value}${ends[1]}`;
    };
    internals2.stringify = function(value, original, state2, prefs, local, options2 = {}) {
      const type = typeof value;
      const wrap = prefs && prefs.errors && prefs.errors.wrap || {};
      let skipWrap = false;
      if (Ref.isRef(value) && value.render) {
        skipWrap = value.in;
        value = value.resolve(original, state2, prefs, local, { in: value.in, ...options2 });
      }
      if (value === null) {
        return "null";
      }
      if (type === "string") {
        return internals2.wrap(value, options2.arrayItems && wrap.string);
      }
      if (type === "number" || type === "function" || type === "symbol") {
        return value.toString();
      }
      if (type !== "object") {
        return JSON.stringify(value);
      }
      if (value instanceof Date) {
        return internals2.Template.date(value, prefs);
      }
      if (value instanceof Map) {
        const pairs2 = [];
        for (const [key, sym] of value.entries()) {
          pairs2.push(`${key.toString()} -> ${sym.toString()}`);
        }
        value = pairs2;
      }
      if (!Array.isArray(value)) {
        return value.toString();
      }
      const values2 = [];
      for (const item of value) {
        values2.push(internals2.stringify(item, original, state2, prefs, local, { arrayItems: true, ...options2 }));
      }
      return internals2.wrap(values2.join(", "), !skipWrap && wrap.array);
    };
    internals2.constants = {
      true: true,
      false: false,
      null: null,
      second: 1e3,
      minute: 60 * 1e3,
      hour: 60 * 60 * 1e3,
      day: 24 * 60 * 60 * 1e3
    };
    internals2.functions = {
      if(condition, then, otherwise) {
        return condition ? then : otherwise;
      },
      length(item) {
        if (typeof item === "string") {
          return item.length;
        }
        if (!item || typeof item !== "object") {
          return null;
        }
        if (Array.isArray(item)) {
          return item.length;
        }
        return Object.keys(item).length;
      },
      msg(code) {
        const [value, state2, prefs, local, options2] = this;
        const messages2 = options2.messages;
        if (!messages2) {
          return "";
        }
        const template2 = Errors2.template(value, messages2[0], code, state2, prefs) || Errors2.template(value, messages2[1], code, state2, prefs);
        if (!template2) {
          return "";
        }
        return template2.render(value, state2, prefs, local, options2);
      },
      number(value) {
        if (typeof value === "number") {
          return value;
        }
        if (typeof value === "string") {
          return parseFloat(value);
        }
        if (typeof value === "boolean") {
          return value ? 1 : 0;
        }
        if (value instanceof Date) {
          return value.getTime();
        }
        return null;
      }
    };
  })(template);
  return template.exports;
}
var hasRequiredMessages;
function requireMessages() {
  if (hasRequiredMessages)
    return messages;
  hasRequiredMessages = 1;
  (function(exports) {
    const Assert2 = assert;
    const Clone2 = clone;
    const Template = requireTemplate();
    exports.compile = function(messages2, target) {
      if (typeof messages2 === "string") {
        Assert2(!target, "Cannot set single message string");
        return new Template(messages2);
      }
      if (Template.isTemplate(messages2)) {
        Assert2(!target, "Cannot set single message template");
        return messages2;
      }
      Assert2(typeof messages2 === "object" && !Array.isArray(messages2), "Invalid message options");
      target = target ? Clone2(target) : {};
      for (let code in messages2) {
        const message = messages2[code];
        if (code === "root" || Template.isTemplate(message)) {
          target[code] = message;
          continue;
        }
        if (typeof message === "string") {
          target[code] = new Template(message);
          continue;
        }
        Assert2(typeof message === "object" && !Array.isArray(message), "Invalid message for", code);
        const language = code;
        target[language] = target[language] || {};
        for (code in message) {
          const localized = message[code];
          if (code === "root" || Template.isTemplate(localized)) {
            target[language][code] = localized;
            continue;
          }
          Assert2(typeof localized === "string", "Invalid message for", code, "in", language);
          target[language][code] = new Template(localized);
        }
      }
      return target;
    };
    exports.decompile = function(messages2) {
      const target = {};
      for (let code in messages2) {
        const message = messages2[code];
        if (code === "root") {
          target.root = message;
          continue;
        }
        if (Template.isTemplate(message)) {
          target[code] = message.describe({ compact: true });
          continue;
        }
        const language = code;
        target[language] = {};
        for (code in message) {
          const localized = message[code];
          if (code === "root") {
            target[language].root = localized;
            continue;
          }
          target[language][code] = localized.describe({ compact: true });
        }
      }
      return target;
    };
    exports.merge = function(base2, extended) {
      if (!base2) {
        return exports.compile(extended);
      }
      if (!extended) {
        return base2;
      }
      if (typeof extended === "string") {
        return new Template(extended);
      }
      if (Template.isTemplate(extended)) {
        return extended;
      }
      const target = Clone2(base2);
      for (let code in extended) {
        const message = extended[code];
        if (code === "root" || Template.isTemplate(message)) {
          target[code] = message;
          continue;
        }
        if (typeof message === "string") {
          target[code] = new Template(message);
          continue;
        }
        Assert2(typeof message === "object" && !Array.isArray(message), "Invalid message for", code);
        const language = code;
        target[language] = target[language] || {};
        for (code in message) {
          const localized = message[code];
          if (code === "root" || Template.isTemplate(localized)) {
            target[language][code] = localized;
            continue;
          }
          Assert2(typeof localized === "string", "Invalid message for", code, "in", language);
          target[language][code] = new Template(localized);
        }
      }
      return target;
    };
  })(messages);
  return messages;
}
var hasRequiredCommon;
function requireCommon() {
  if (hasRequiredCommon)
    return common;
  hasRequiredCommon = 1;
  (function(exports) {
    const Assert2 = assert;
    const AssertError2 = errorExports;
    const Pkg = require$$2;
    let Messages;
    let Schemas;
    const internals2 = {
      isoDate: /^(?:[-+]\d{2})?(?:\d{4}(?!\d{2}\b))(?:(-?)(?:(?:0[1-9]|1[0-2])(?:\1(?:[12]\d|0[1-9]|3[01]))?|W(?:[0-4]\d|5[0-2])(?:-?[1-7])?|(?:00[1-9]|0[1-9]\d|[12]\d{2}|3(?:[0-5]\d|6[1-6])))(?![T]$|[T][\d]+Z$)(?:[T\s](?:(?:(?:[01]\d|2[0-3])(?:(:?)[0-5]\d)?|24\:?00)(?:[.,]\d+(?!:))?)(?:\2[0-5]\d(?:[.,]\d+)?)?(?:[Z]|(?:[+-])(?:[01]\d|2[0-3])(?::?[0-5]\d)?)?)?)?$/
    };
    exports.version = Pkg.version;
    exports.defaults = {
      abortEarly: true,
      allowUnknown: false,
      artifacts: false,
      cache: true,
      context: null,
      convert: true,
      dateFormat: "iso",
      errors: {
        escapeHtml: false,
        label: "path",
        language: null,
        render: true,
        stack: false,
        wrap: {
          label: '"',
          array: "[]"
        }
      },
      externals: true,
      messages: {},
      nonEnumerables: false,
      noDefaults: false,
      presence: "optional",
      skipFunctions: false,
      stripUnknown: false,
      warnings: false
    };
    exports.symbols = {
      any: Symbol.for("@hapi/joi/schema"),
      // Used to internally identify any-based types (shared with other joi versions)
      arraySingle: Symbol("arraySingle"),
      deepDefault: Symbol("deepDefault"),
      errors: Symbol("errors"),
      literal: Symbol("literal"),
      override: Symbol("override"),
      parent: Symbol("parent"),
      prefs: Symbol("prefs"),
      ref: Symbol("ref"),
      template: Symbol("template"),
      values: Symbol("values")
    };
    exports.assertOptions = function(options2, keys2, name2 = "Options") {
      Assert2(options2 && typeof options2 === "object" && !Array.isArray(options2), "Options must be of type object");
      const unknownKeys = Object.keys(options2).filter((k) => !keys2.includes(k));
      Assert2(unknownKeys.length === 0, `${name2} contain unknown keys: ${unknownKeys}`);
    };
    exports.checkPreferences = function(prefs) {
      Schemas = Schemas || requireSchemas();
      const result = Schemas.preferences.validate(prefs);
      if (result.error) {
        throw new AssertError2([result.error.details[0].message]);
      }
    };
    exports.compare = function(a, b, operator) {
      switch (operator) {
        case "=":
          return a === b;
        case ">":
          return a > b;
        case "<":
          return a < b;
        case ">=":
          return a >= b;
        case "<=":
          return a <= b;
      }
    };
    exports.default = function(value, defaultValue) {
      return value === void 0 ? defaultValue : value;
    };
    exports.isIsoDate = function(date2) {
      return internals2.isoDate.test(date2);
    };
    exports.isNumber = function(value) {
      return typeof value === "number" && !isNaN(value);
    };
    exports.isResolvable = function(obj) {
      if (!obj) {
        return false;
      }
      return obj[exports.symbols.ref] || obj[exports.symbols.template];
    };
    exports.isSchema = function(schema, options2 = {}) {
      const any2 = schema && schema[exports.symbols.any];
      if (!any2) {
        return false;
      }
      Assert2(options2.legacy || any2.version === exports.version, "Cannot mix different versions of joi schemas");
      return true;
    };
    exports.isValues = function(obj) {
      return obj[exports.symbols.values];
    };
    exports.limit = function(value) {
      return Number.isSafeInteger(value) && value >= 0;
    };
    exports.preferences = function(target, source) {
      Messages = Messages || requireMessages();
      target = target || {};
      source = source || {};
      const merged = Object.assign({}, target, source);
      if (source.errors && target.errors) {
        merged.errors = Object.assign({}, target.errors, source.errors);
        merged.errors.wrap = Object.assign({}, target.errors.wrap, source.errors.wrap);
      }
      if (source.messages) {
        merged.messages = Messages.compile(source.messages, target.messages);
      }
      delete merged[exports.symbols.prefs];
      return merged;
    };
    exports.tryWithPath = function(fn, key, options2 = {}) {
      try {
        return fn();
      } catch (err) {
        if (err.path !== void 0) {
          err.path = key + "." + err.path;
        } else {
          err.path = key;
        }
        if (options2.append) {
          err.message = `${err.message} (${err.path})`;
        }
        throw err;
      }
    };
    exports.validateArg = function(value, label, { assert: assert2, message }) {
      if (exports.isSchema(assert2)) {
        const result = assert2.validate(value);
        if (!result.error) {
          return;
        }
        return result.error.message;
      } else if (!assert2(value)) {
        return label ? `${label} ${message}` : message;
      }
    };
    exports.verifyFlat = function(args2, method) {
      for (const arg of args2) {
        Assert2(!Array.isArray(arg), "Method no longer accepts array arguments:", method);
      }
    };
  })(common);
  return common;
}
var hasRequiredCache;
function requireCache() {
  if (hasRequiredCache)
    return cache;
  hasRequiredCache = 1;
  const Assert2 = assert;
  const Clone2 = clone;
  const Common = requireCommon();
  const internals2 = {
    max: 1e3,
    supported: /* @__PURE__ */ new Set(["undefined", "boolean", "number", "string"])
  };
  cache.provider = {
    provision(options2) {
      return new internals2.Cache(options2);
    }
  };
  internals2.Cache = class {
    constructor(options2 = {}) {
      Common.assertOptions(options2, ["max"]);
      Assert2(options2.max === void 0 || options2.max && options2.max > 0 && isFinite(options2.max), "Invalid max cache size");
      this._max = options2.max || internals2.max;
      this._map = /* @__PURE__ */ new Map();
      this._list = new internals2.List();
    }
    get length() {
      return this._map.size;
    }
    set(key, value) {
      if (key !== null && !internals2.supported.has(typeof key)) {
        return;
      }
      let node = this._map.get(key);
      if (node) {
        node.value = value;
        this._list.first(node);
        return;
      }
      node = this._list.unshift({ key, value });
      this._map.set(key, node);
      this._compact();
    }
    get(key) {
      const node = this._map.get(key);
      if (node) {
        this._list.first(node);
        return Clone2(node.value);
      }
    }
    _compact() {
      if (this._map.size > this._max) {
        const node = this._list.pop();
        this._map.delete(node.key);
      }
    }
  };
  internals2.List = class {
    constructor() {
      this.tail = null;
      this.head = null;
    }
    unshift(node) {
      node.next = null;
      node.prev = this.head;
      if (this.head) {
        this.head.next = node;
      }
      this.head = node;
      if (!this.tail) {
        this.tail = node;
      }
      return node;
    }
    first(node) {
      if (node === this.head) {
        return;
      }
      this._remove(node);
      this.unshift(node);
    }
    pop() {
      return this._remove(this.tail);
    }
    _remove(node) {
      const { next, prev } = node;
      next.prev = prev;
      if (prev) {
        prev.next = next;
      }
      if (node === this.tail) {
        this.tail = next;
      }
      node.prev = null;
      node.next = null;
      return node;
    }
  };
  return cache;
}
var compile = {};
var hasRequiredCompile;
function requireCompile() {
  if (hasRequiredCompile)
    return compile;
  hasRequiredCompile = 1;
  (function(exports) {
    const Assert2 = assert;
    const Common = requireCommon();
    const Ref = requireRef();
    const internals2 = {};
    exports.schema = function(Joi2, config2, options2 = {}) {
      Common.assertOptions(options2, ["appendPath", "override"]);
      try {
        return internals2.schema(Joi2, config2, options2);
      } catch (err) {
        if (options2.appendPath && err.path !== void 0) {
          err.message = `${err.message} (${err.path})`;
        }
        throw err;
      }
    };
    internals2.schema = function(Joi2, config2, options2) {
      Assert2(config2 !== void 0, "Invalid undefined schema");
      if (Array.isArray(config2)) {
        Assert2(config2.length, "Invalid empty array schema");
        if (config2.length === 1) {
          config2 = config2[0];
        }
      }
      const valid = (base2, ...values2) => {
        if (options2.override !== false) {
          return base2.valid(Joi2.override, ...values2);
        }
        return base2.valid(...values2);
      };
      if (internals2.simple(config2)) {
        return valid(Joi2, config2);
      }
      if (typeof config2 === "function") {
        return Joi2.custom(config2);
      }
      Assert2(typeof config2 === "object", "Invalid schema content:", typeof config2);
      if (Common.isResolvable(config2)) {
        return valid(Joi2, config2);
      }
      if (Common.isSchema(config2)) {
        return config2;
      }
      if (Array.isArray(config2)) {
        for (const item of config2) {
          if (!internals2.simple(item)) {
            return Joi2.alternatives().try(...config2);
          }
        }
        return valid(Joi2, ...config2);
      }
      if (config2 instanceof RegExp) {
        return Joi2.string().regex(config2);
      }
      if (config2 instanceof Date) {
        return valid(Joi2.date(), config2);
      }
      Assert2(Object.getPrototypeOf(config2) === Object.getPrototypeOf({}), "Schema can only contain plain objects");
      return Joi2.object().keys(config2);
    };
    exports.ref = function(id, options2) {
      return Ref.isRef(id) ? id : Ref.create(id, options2);
    };
    exports.compile = function(root, schema, options2 = {}) {
      Common.assertOptions(options2, ["legacy"]);
      const any2 = schema && schema[Common.symbols.any];
      if (any2) {
        Assert2(options2.legacy || any2.version === Common.version, "Cannot mix different versions of joi schemas:", any2.version, Common.version);
        return schema;
      }
      if (typeof schema !== "object" || !options2.legacy) {
        return exports.schema(root, schema, { appendPath: true });
      }
      const compiler = internals2.walk(schema);
      if (!compiler) {
        return exports.schema(root, schema, { appendPath: true });
      }
      return compiler.compile(compiler.root, schema);
    };
    internals2.walk = function(schema) {
      if (typeof schema !== "object") {
        return null;
      }
      if (Array.isArray(schema)) {
        for (const item of schema) {
          const compiler = internals2.walk(item);
          if (compiler) {
            return compiler;
          }
        }
        return null;
      }
      const any2 = schema[Common.symbols.any];
      if (any2) {
        return { root: schema[any2.root], compile: any2.compile };
      }
      Assert2(Object.getPrototypeOf(schema) === Object.getPrototypeOf({}), "Schema can only contain plain objects");
      for (const key in schema) {
        const compiler = internals2.walk(schema[key]);
        if (compiler) {
          return compiler;
        }
      }
      return null;
    };
    internals2.simple = function(value) {
      return value === null || ["boolean", "string", "number"].includes(typeof value);
    };
    exports.when = function(schema, condition, options2) {
      if (options2 === void 0) {
        Assert2(condition && typeof condition === "object", "Missing options");
        options2 = condition;
        condition = Ref.create(".");
      }
      if (Array.isArray(options2)) {
        options2 = { switch: options2 };
      }
      Common.assertOptions(options2, ["is", "not", "then", "otherwise", "switch", "break"]);
      if (Common.isSchema(condition)) {
        Assert2(options2.is === void 0, '"is" can not be used with a schema condition');
        Assert2(options2.not === void 0, '"not" can not be used with a schema condition');
        Assert2(options2.switch === void 0, '"switch" can not be used with a schema condition');
        return internals2.condition(schema, { is: condition, then: options2.then, otherwise: options2.otherwise, break: options2.break });
      }
      Assert2(Ref.isRef(condition) || typeof condition === "string", "Invalid condition:", condition);
      Assert2(options2.not === void 0 || options2.is === void 0, 'Cannot combine "is" with "not"');
      if (options2.switch === void 0) {
        let rule2 = options2;
        if (options2.not !== void 0) {
          rule2 = { is: options2.not, then: options2.otherwise, otherwise: options2.then, break: options2.break };
        }
        let is = rule2.is !== void 0 ? schema.$_compile(rule2.is) : schema.$_root.invalid(null, false, 0, "").required();
        Assert2(rule2.then !== void 0 || rule2.otherwise !== void 0, 'options must have at least one of "then", "otherwise", or "switch"');
        Assert2(rule2.break === void 0 || rule2.then === void 0 || rule2.otherwise === void 0, "Cannot specify then, otherwise, and break all together");
        if (options2.is !== void 0 && !Ref.isRef(options2.is) && !Common.isSchema(options2.is)) {
          is = is.required();
        }
        return internals2.condition(schema, { ref: exports.ref(condition), is, then: rule2.then, otherwise: rule2.otherwise, break: rule2.break });
      }
      Assert2(Array.isArray(options2.switch), '"switch" must be an array');
      Assert2(options2.is === void 0, 'Cannot combine "switch" with "is"');
      Assert2(options2.not === void 0, 'Cannot combine "switch" with "not"');
      Assert2(options2.then === void 0, 'Cannot combine "switch" with "then"');
      const rule = {
        ref: exports.ref(condition),
        switch: [],
        break: options2.break
      };
      for (let i = 0; i < options2.switch.length; ++i) {
        const test = options2.switch[i];
        const last2 = i === options2.switch.length - 1;
        Common.assertOptions(test, last2 ? ["is", "then", "otherwise"] : ["is", "then"]);
        Assert2(test.is !== void 0, 'Switch statement missing "is"');
        Assert2(test.then !== void 0, 'Switch statement missing "then"');
        const item = {
          is: schema.$_compile(test.is),
          then: schema.$_compile(test.then)
        };
        if (!Ref.isRef(test.is) && !Common.isSchema(test.is)) {
          item.is = item.is.required();
        }
        if (last2) {
          Assert2(options2.otherwise === void 0 || test.otherwise === void 0, 'Cannot specify "otherwise" inside and outside a "switch"');
          const otherwise = options2.otherwise !== void 0 ? options2.otherwise : test.otherwise;
          if (otherwise !== void 0) {
            Assert2(rule.break === void 0, "Cannot specify both otherwise and break");
            item.otherwise = schema.$_compile(otherwise);
          }
        }
        rule.switch.push(item);
      }
      return rule;
    };
    internals2.condition = function(schema, condition) {
      for (const key of ["then", "otherwise"]) {
        if (condition[key] === void 0) {
          delete condition[key];
        } else {
          condition[key] = schema.$_compile(condition[key]);
        }
      }
      return condition;
    };
  })(compile);
  return compile;
}
var extend = {};
var hasRequiredExtend;
function requireExtend() {
  if (hasRequiredExtend)
    return extend;
  hasRequiredExtend = 1;
  const Assert2 = assert;
  const Clone2 = clone;
  const Common = requireCommon();
  const Messages = requireMessages();
  const internals2 = {};
  extend.type = function(from2, options2) {
    const base2 = Object.getPrototypeOf(from2);
    const prototype = Clone2(base2);
    const schema = from2._assign(Object.create(prototype));
    const def = Object.assign({}, options2);
    delete def.base;
    prototype._definition = def;
    const parent = base2._definition || {};
    def.messages = Messages.merge(parent.messages, def.messages);
    def.properties = Object.assign({}, parent.properties, def.properties);
    schema.type = def.type;
    def.flags = Object.assign({}, parent.flags, def.flags);
    const terms = Object.assign({}, parent.terms);
    if (def.terms) {
      for (const name2 in def.terms) {
        const term = def.terms[name2];
        Assert2(schema.$_terms[name2] === void 0, "Invalid term override for", def.type, name2);
        schema.$_terms[name2] = term.init;
        terms[name2] = term;
      }
    }
    def.terms = terms;
    if (!def.args) {
      def.args = parent.args;
    }
    def.prepare = internals2.prepare(def.prepare, parent.prepare);
    if (def.coerce) {
      if (typeof def.coerce === "function") {
        def.coerce = { method: def.coerce };
      }
      if (def.coerce.from && !Array.isArray(def.coerce.from)) {
        def.coerce = { method: def.coerce.method, from: [].concat(def.coerce.from) };
      }
    }
    def.coerce = internals2.coerce(def.coerce, parent.coerce);
    def.validate = internals2.validate(def.validate, parent.validate);
    const rules = Object.assign({}, parent.rules);
    if (def.rules) {
      for (const name2 in def.rules) {
        const rule = def.rules[name2];
        Assert2(typeof rule === "object", "Invalid rule definition for", def.type, name2);
        let method = rule.method;
        if (method === void 0) {
          method = function() {
            return this.$_addRule(name2);
          };
        }
        if (method) {
          Assert2(!prototype[name2], "Rule conflict in", def.type, name2);
          prototype[name2] = method;
        }
        Assert2(!rules[name2], "Rule conflict in", def.type, name2);
        rules[name2] = rule;
        if (rule.alias) {
          const aliases = [].concat(rule.alias);
          for (const alias of aliases) {
            prototype[alias] = rule.method;
          }
        }
        if (rule.args) {
          rule.argsByName = /* @__PURE__ */ new Map();
          rule.args = rule.args.map((arg) => {
            if (typeof arg === "string") {
              arg = { name: arg };
            }
            Assert2(!rule.argsByName.has(arg.name), "Duplicated argument name", arg.name);
            if (Common.isSchema(arg.assert)) {
              arg.assert = arg.assert.strict().label(arg.name);
            }
            rule.argsByName.set(arg.name, arg);
            return arg;
          });
        }
      }
    }
    def.rules = rules;
    const modifiers = Object.assign({}, parent.modifiers);
    if (def.modifiers) {
      for (const name2 in def.modifiers) {
        Assert2(!prototype[name2], "Rule conflict in", def.type, name2);
        const modifier = def.modifiers[name2];
        Assert2(typeof modifier === "function", "Invalid modifier definition for", def.type, name2);
        const method = function(arg) {
          return this.rule({ [name2]: arg });
        };
        prototype[name2] = method;
        modifiers[name2] = modifier;
      }
    }
    def.modifiers = modifiers;
    if (def.overrides) {
      prototype._super = base2;
      schema.$_super = {};
      for (const override in def.overrides) {
        Assert2(base2[override], "Cannot override missing", override);
        def.overrides[override][Common.symbols.parent] = base2[override];
        schema.$_super[override] = base2[override].bind(schema);
      }
      Object.assign(prototype, def.overrides);
    }
    def.cast = Object.assign({}, parent.cast, def.cast);
    const manifest2 = Object.assign({}, parent.manifest, def.manifest);
    manifest2.build = internals2.build(def.manifest && def.manifest.build, parent.manifest && parent.manifest.build);
    def.manifest = manifest2;
    def.rebuild = internals2.rebuild(def.rebuild, parent.rebuild);
    return schema;
  };
  internals2.build = function(child, parent) {
    if (!child || !parent) {
      return child || parent;
    }
    return function(obj, desc) {
      return parent(child(obj, desc), desc);
    };
  };
  internals2.coerce = function(child, parent) {
    if (!child || !parent) {
      return child || parent;
    }
    return {
      from: child.from && parent.from ? [.../* @__PURE__ */ new Set([...child.from, ...parent.from])] : null,
      method(value, helpers) {
        let coerced;
        if (!parent.from || parent.from.includes(typeof value)) {
          coerced = parent.method(value, helpers);
          if (coerced) {
            if (coerced.errors || coerced.value === void 0) {
              return coerced;
            }
            value = coerced.value;
          }
        }
        if (!child.from || child.from.includes(typeof value)) {
          const own = child.method(value, helpers);
          if (own) {
            return own;
          }
        }
        return coerced;
      }
    };
  };
  internals2.prepare = function(child, parent) {
    if (!child || !parent) {
      return child || parent;
    }
    return function(value, helpers) {
      const prepared = child(value, helpers);
      if (prepared) {
        if (prepared.errors || prepared.value === void 0) {
          return prepared;
        }
        value = prepared.value;
      }
      return parent(value, helpers) || prepared;
    };
  };
  internals2.rebuild = function(child, parent) {
    if (!child || !parent) {
      return child || parent;
    }
    return function(schema) {
      parent(schema);
      child(schema);
    };
  };
  internals2.validate = function(child, parent) {
    if (!child || !parent) {
      return child || parent;
    }
    return function(value, helpers) {
      const result = parent(value, helpers);
      if (result) {
        if (result.errors && (!Array.isArray(result.errors) || result.errors.length)) {
          return result;
        }
        value = result.value;
      }
      return child(value, helpers) || result;
    };
  };
  return extend;
}
var manifest = {};
var hasRequiredManifest;
function requireManifest() {
  if (hasRequiredManifest)
    return manifest;
  hasRequiredManifest = 1;
  const Assert2 = assert;
  const Clone2 = clone;
  const Common = requireCommon();
  const Messages = requireMessages();
  const Ref = requireRef();
  const Template = requireTemplate();
  let Schemas;
  const internals2 = {};
  manifest.describe = function(schema) {
    const def = schema._definition;
    const desc = {
      type: schema.type,
      flags: {},
      rules: []
    };
    for (const flag in schema._flags) {
      if (flag[0] !== "_") {
        desc.flags[flag] = internals2.describe(schema._flags[flag]);
      }
    }
    if (!Object.keys(desc.flags).length) {
      delete desc.flags;
    }
    if (schema._preferences) {
      desc.preferences = Clone2(schema._preferences, { shallow: ["messages"] });
      delete desc.preferences[Common.symbols.prefs];
      if (desc.preferences.messages) {
        desc.preferences.messages = Messages.decompile(desc.preferences.messages);
      }
    }
    if (schema._valids) {
      desc.allow = schema._valids.describe();
    }
    if (schema._invalids) {
      desc.invalid = schema._invalids.describe();
    }
    for (const rule of schema._rules) {
      const ruleDef = def.rules[rule.name];
      if (ruleDef.manifest === false) {
        continue;
      }
      const item = { name: rule.name };
      for (const custom in def.modifiers) {
        if (rule[custom] !== void 0) {
          item[custom] = internals2.describe(rule[custom]);
        }
      }
      if (rule.args) {
        item.args = {};
        for (const key in rule.args) {
          const arg = rule.args[key];
          if (key === "options" && !Object.keys(arg).length) {
            continue;
          }
          item.args[key] = internals2.describe(arg, { assign: key });
        }
        if (!Object.keys(item.args).length) {
          delete item.args;
        }
      }
      desc.rules.push(item);
    }
    if (!desc.rules.length) {
      delete desc.rules;
    }
    for (const term in schema.$_terms) {
      if (term[0] === "_") {
        continue;
      }
      Assert2(!desc[term], "Cannot describe schema due to internal name conflict with", term);
      const items = schema.$_terms[term];
      if (!items) {
        continue;
      }
      if (items instanceof Map) {
        if (items.size) {
          desc[term] = [...items.entries()];
        }
        continue;
      }
      if (Common.isValues(items)) {
        desc[term] = items.describe();
        continue;
      }
      Assert2(def.terms[term], "Term", term, "missing configuration");
      const manifest2 = def.terms[term].manifest;
      const mapped = typeof manifest2 === "object";
      if (!items.length && !mapped) {
        continue;
      }
      const normalized = [];
      for (const item of items) {
        normalized.push(internals2.describe(item));
      }
      if (mapped) {
        const { from: from2, to } = manifest2.mapped;
        desc[term] = {};
        for (const item of normalized) {
          desc[term][item[to]] = item[from2];
        }
        continue;
      }
      if (manifest2 === "single") {
        Assert2(normalized.length === 1, "Term", term, "contains more than one item");
        desc[term] = normalized[0];
        continue;
      }
      desc[term] = normalized;
    }
    internals2.validate(schema.$_root, desc);
    return desc;
  };
  internals2.describe = function(item, options2 = {}) {
    if (Array.isArray(item)) {
      return item.map(internals2.describe);
    }
    if (item === Common.symbols.deepDefault) {
      return { special: "deep" };
    }
    if (typeof item !== "object" || item === null) {
      return item;
    }
    if (options2.assign === "options") {
      return Clone2(item);
    }
    if (Buffer && Buffer.isBuffer(item)) {
      return { buffer: item.toString("binary") };
    }
    if (item instanceof Date) {
      return item.toISOString();
    }
    if (item instanceof Error) {
      return item;
    }
    if (item instanceof RegExp) {
      if (options2.assign === "regex") {
        return item.toString();
      }
      return { regex: item.toString() };
    }
    if (item[Common.symbols.literal]) {
      return { function: item.literal };
    }
    if (typeof item.describe === "function") {
      if (options2.assign === "ref") {
        return item.describe().ref;
      }
      return item.describe();
    }
    const normalized = {};
    for (const key in item) {
      const value = item[key];
      if (value === void 0) {
        continue;
      }
      normalized[key] = internals2.describe(value, { assign: key });
    }
    return normalized;
  };
  manifest.build = function(joi, desc) {
    const builder = new internals2.Builder(joi);
    return builder.parse(desc);
  };
  internals2.Builder = class {
    constructor(joi) {
      this.joi = joi;
    }
    parse(desc) {
      internals2.validate(this.joi, desc);
      let schema = this.joi[desc.type]()._bare();
      const def = schema._definition;
      if (desc.flags) {
        for (const flag in desc.flags) {
          const setter = def.flags[flag] && def.flags[flag].setter || flag;
          Assert2(typeof schema[setter] === "function", "Invalid flag", flag, "for type", desc.type);
          schema = schema[setter](this.build(desc.flags[flag]));
        }
      }
      if (desc.preferences) {
        schema = schema.preferences(this.build(desc.preferences));
      }
      if (desc.allow) {
        schema = schema.allow(...this.build(desc.allow));
      }
      if (desc.invalid) {
        schema = schema.invalid(...this.build(desc.invalid));
      }
      if (desc.rules) {
        for (const rule of desc.rules) {
          Assert2(typeof schema[rule.name] === "function", "Invalid rule", rule.name, "for type", desc.type);
          const args2 = [];
          if (rule.args) {
            const built = {};
            for (const key in rule.args) {
              built[key] = this.build(rule.args[key], { assign: key });
            }
            const keys2 = Object.keys(built);
            const definition = def.rules[rule.name].args;
            if (definition) {
              Assert2(keys2.length <= definition.length, "Invalid number of arguments for", desc.type, rule.name, "(expected up to", definition.length, ", found", keys2.length, ")");
              for (const { name: name2 } of definition) {
                args2.push(built[name2]);
              }
            } else {
              Assert2(keys2.length === 1, "Invalid number of arguments for", desc.type, rule.name, "(expected up to 1, found", keys2.length, ")");
              args2.push(built[keys2[0]]);
            }
          }
          schema = schema[rule.name](...args2);
          const options2 = {};
          for (const custom in def.modifiers) {
            if (rule[custom] !== void 0) {
              options2[custom] = this.build(rule[custom]);
            }
          }
          if (Object.keys(options2).length) {
            schema = schema.rule(options2);
          }
        }
      }
      const terms = {};
      for (const key in desc) {
        if (["allow", "flags", "invalid", "whens", "preferences", "rules", "type"].includes(key)) {
          continue;
        }
        Assert2(def.terms[key], "Term", key, "missing configuration");
        const manifest2 = def.terms[key].manifest;
        if (manifest2 === "schema") {
          terms[key] = desc[key].map((item) => this.parse(item));
          continue;
        }
        if (manifest2 === "values") {
          terms[key] = desc[key].map((item) => this.build(item));
          continue;
        }
        if (manifest2 === "single") {
          terms[key] = this.build(desc[key]);
          continue;
        }
        if (typeof manifest2 === "object") {
          terms[key] = {};
          for (const name2 in desc[key]) {
            const value = desc[key][name2];
            terms[key][name2] = this.parse(value);
          }
          continue;
        }
        terms[key] = this.build(desc[key]);
      }
      if (desc.whens) {
        terms.whens = desc.whens.map((when) => this.build(when));
      }
      schema = def.manifest.build(schema, terms);
      schema.$_temp.ruleset = false;
      return schema;
    }
    build(desc, options2 = {}) {
      if (desc === null) {
        return null;
      }
      if (Array.isArray(desc)) {
        return desc.map((item) => this.build(item));
      }
      if (desc instanceof Error) {
        return desc;
      }
      if (options2.assign === "options") {
        return Clone2(desc);
      }
      if (options2.assign === "regex") {
        return internals2.regex(desc);
      }
      if (options2.assign === "ref") {
        return Ref.build(desc);
      }
      if (typeof desc !== "object") {
        return desc;
      }
      if (Object.keys(desc).length === 1) {
        if (desc.buffer) {
          Assert2(Buffer, "Buffers are not supported");
          return Buffer && Buffer.from(desc.buffer, "binary");
        }
        if (desc.function) {
          return { [Common.symbols.literal]: true, literal: desc.function };
        }
        if (desc.override) {
          return Common.symbols.override;
        }
        if (desc.ref) {
          return Ref.build(desc.ref);
        }
        if (desc.regex) {
          return internals2.regex(desc.regex);
        }
        if (desc.special) {
          Assert2(["deep"].includes(desc.special), "Unknown special value", desc.special);
          return Common.symbols.deepDefault;
        }
        if (desc.value) {
          return Clone2(desc.value);
        }
      }
      if (desc.type) {
        return this.parse(desc);
      }
      if (desc.template) {
        return Template.build(desc);
      }
      const normalized = {};
      for (const key in desc) {
        normalized[key] = this.build(desc[key], { assign: key });
      }
      return normalized;
    }
  };
  internals2.regex = function(string2) {
    const end = string2.lastIndexOf("/");
    const exp = string2.slice(1, end);
    const flags = string2.slice(end + 1);
    return new RegExp(exp, flags);
  };
  internals2.validate = function(joi, desc) {
    Schemas = Schemas || requireSchemas();
    joi.assert(desc, Schemas.description);
  };
  return manifest;
}
var trace = {};
const Types = typesExports;
const internals$6 = {
  mismatched: null
};
var deepEqual = function(obj, ref2, options2) {
  options2 = Object.assign({ prototype: true }, options2);
  return !!internals$6.isDeepEqual(obj, ref2, options2, []);
};
internals$6.isDeepEqual = function(obj, ref2, options2, seen) {
  if (obj === ref2) {
    return obj !== 0 || 1 / obj === 1 / ref2;
  }
  const type = typeof obj;
  if (type !== typeof ref2) {
    return false;
  }
  if (obj === null || ref2 === null) {
    return false;
  }
  if (type === "function") {
    if (!options2.deepFunction || obj.toString() !== ref2.toString()) {
      return false;
    }
  } else if (type !== "object") {
    return obj !== obj && ref2 !== ref2;
  }
  const instanceType = internals$6.getSharedType(obj, ref2, !!options2.prototype);
  switch (instanceType) {
    case Types.buffer:
      return Buffer && Buffer.prototype.equals.call(obj, ref2);
    case Types.promise:
      return obj === ref2;
    case Types.regex:
      return obj.toString() === ref2.toString();
    case internals$6.mismatched:
      return false;
  }
  for (let i = seen.length - 1; i >= 0; --i) {
    if (seen[i].isSame(obj, ref2)) {
      return true;
    }
  }
  seen.push(new internals$6.SeenEntry(obj, ref2));
  try {
    return !!internals$6.isDeepEqualObj(instanceType, obj, ref2, options2, seen);
  } finally {
    seen.pop();
  }
};
internals$6.getSharedType = function(obj, ref2, checkPrototype) {
  if (checkPrototype) {
    if (Object.getPrototypeOf(obj) !== Object.getPrototypeOf(ref2)) {
      return internals$6.mismatched;
    }
    return Types.getInternalProto(obj);
  }
  const type = Types.getInternalProto(obj);
  if (type !== Types.getInternalProto(ref2)) {
    return internals$6.mismatched;
  }
  return type;
};
internals$6.valueOf = function(obj) {
  const objValueOf = obj.valueOf;
  if (objValueOf === void 0) {
    return obj;
  }
  try {
    return objValueOf.call(obj);
  } catch (err) {
    return err;
  }
};
internals$6.hasOwnEnumerableProperty = function(obj, key) {
  return Object.prototype.propertyIsEnumerable.call(obj, key);
};
internals$6.isSetSimpleEqual = function(obj, ref2) {
  for (const entry of Set.prototype.values.call(obj)) {
    if (!Set.prototype.has.call(ref2, entry)) {
      return false;
    }
  }
  return true;
};
internals$6.isDeepEqualObj = function(instanceType, obj, ref2, options2, seen) {
  const { isDeepEqual, valueOf, hasOwnEnumerableProperty } = internals$6;
  const { keys: keys2, getOwnPropertySymbols } = Object;
  if (instanceType === Types.array) {
    if (options2.part) {
      for (const objValue of obj) {
        for (const refValue of ref2) {
          if (isDeepEqual(objValue, refValue, options2, seen)) {
            return true;
          }
        }
      }
    } else {
      if (obj.length !== ref2.length) {
        return false;
      }
      for (let i = 0; i < obj.length; ++i) {
        if (!isDeepEqual(obj[i], ref2[i], options2, seen)) {
          return false;
        }
      }
      return true;
    }
  } else if (instanceType === Types.set) {
    if (obj.size !== ref2.size) {
      return false;
    }
    if (!internals$6.isSetSimpleEqual(obj, ref2)) {
      const ref22 = new Set(Set.prototype.values.call(ref2));
      for (const objEntry of Set.prototype.values.call(obj)) {
        if (ref22.delete(objEntry)) {
          continue;
        }
        let found = false;
        for (const refEntry of ref22) {
          if (isDeepEqual(objEntry, refEntry, options2, seen)) {
            ref22.delete(refEntry);
            found = true;
            break;
          }
        }
        if (!found) {
          return false;
        }
      }
    }
  } else if (instanceType === Types.map) {
    if (obj.size !== ref2.size) {
      return false;
    }
    for (const [key, value] of Map.prototype.entries.call(obj)) {
      if (value === void 0 && !Map.prototype.has.call(ref2, key)) {
        return false;
      }
      if (!isDeepEqual(value, Map.prototype.get.call(ref2, key), options2, seen)) {
        return false;
      }
    }
  } else if (instanceType === Types.error) {
    if (obj.name !== ref2.name || obj.message !== ref2.message) {
      return false;
    }
  }
  const valueOfObj = valueOf(obj);
  const valueOfRef = valueOf(ref2);
  if ((obj !== valueOfObj || ref2 !== valueOfRef) && !isDeepEqual(valueOfObj, valueOfRef, options2, seen)) {
    return false;
  }
  const objKeys = keys2(obj);
  if (!options2.part && objKeys.length !== keys2(ref2).length && !options2.skip) {
    return false;
  }
  let skipped = 0;
  for (const key of objKeys) {
    if (options2.skip && options2.skip.includes(key)) {
      if (ref2[key] === void 0) {
        ++skipped;
      }
      continue;
    }
    if (!hasOwnEnumerableProperty(ref2, key)) {
      return false;
    }
    if (!isDeepEqual(obj[key], ref2[key], options2, seen)) {
      return false;
    }
  }
  if (!options2.part && objKeys.length - skipped !== keys2(ref2).length) {
    return false;
  }
  if (options2.symbols !== false) {
    const objSymbols = getOwnPropertySymbols(obj);
    const refSymbols = new Set(getOwnPropertySymbols(ref2));
    for (const key of objSymbols) {
      if (!options2.skip || !options2.skip.includes(key)) {
        if (hasOwnEnumerableProperty(obj, key)) {
          if (!hasOwnEnumerableProperty(ref2, key)) {
            return false;
          }
          if (!isDeepEqual(obj[key], ref2[key], options2, seen)) {
            return false;
          }
        } else if (hasOwnEnumerableProperty(ref2, key)) {
          return false;
        }
      }
      refSymbols.delete(key);
    }
    for (const key of refSymbols) {
      if (hasOwnEnumerableProperty(ref2, key)) {
        return false;
      }
    }
  }
  return true;
};
internals$6.SeenEntry = class {
  constructor(obj, ref2) {
    this.obj = obj;
    this.ref = ref2;
  }
  isSame(obj, ref2) {
    return this.obj === obj && this.ref === ref2;
  }
};
var lib$2 = {};
lib$2.location = function(depth = 0) {
  const orig = Error.prepareStackTrace;
  Error.prepareStackTrace = (ignore2, stack) => stack;
  const capture = {};
  Error.captureStackTrace(capture, this);
  const line = capture.stack[depth + 1];
  Error.prepareStackTrace = orig;
  return {
    filename: line.getFileName(),
    line: line.getLineNumber()
  };
};
var hasRequiredTrace;
function requireTrace() {
  if (hasRequiredTrace)
    return trace;
  hasRequiredTrace = 1;
  const DeepEqual = deepEqual;
  const Pinpoint = lib$2;
  const Errors2 = requireErrors();
  const internals2 = {
    codes: {
      error: 1,
      pass: 2,
      full: 3
    },
    labels: {
      0: "never used",
      1: "always error",
      2: "always pass"
    }
  };
  trace.setup = function(root) {
    const trace2 = function() {
      root._tracer = root._tracer || new internals2.Tracer();
      return root._tracer;
    };
    root.trace = trace2;
    root[Symbol.for("@hapi/lab/coverage/initialize")] = trace2;
    root.untrace = () => {
      root._tracer = null;
    };
  };
  trace.location = function(schema) {
    return schema.$_setFlag("_tracerLocation", Pinpoint.location(2));
  };
  internals2.Tracer = class {
    constructor() {
      this.name = "Joi";
      this._schemas = /* @__PURE__ */ new Map();
    }
    _register(schema) {
      const existing = this._schemas.get(schema);
      if (existing) {
        return existing.store;
      }
      const store = new internals2.Store(schema);
      const { filename, line } = schema._flags._tracerLocation || Pinpoint.location(5);
      this._schemas.set(schema, { filename, line, store });
      return store;
    }
    _combine(merged, sources) {
      for (const { store } of this._schemas.values()) {
        store._combine(merged, sources);
      }
    }
    report(file) {
      const coverage = [];
      for (const { filename, line, store } of this._schemas.values()) {
        if (file && file !== filename) {
          continue;
        }
        const missing = [];
        const skipped = [];
        for (const [schema, log] of store._sources.entries()) {
          if (internals2.sub(log.paths, skipped)) {
            continue;
          }
          if (!log.entry) {
            missing.push({
              status: "never reached",
              paths: [...log.paths]
            });
            skipped.push(...log.paths);
            continue;
          }
          for (const type of ["valid", "invalid"]) {
            const set2 = schema[`_${type}s`];
            if (!set2) {
              continue;
            }
            const values2 = new Set(set2._values);
            const refs = new Set(set2._refs);
            for (const { value, ref: ref2 } of log[type]) {
              values2.delete(value);
              refs.delete(ref2);
            }
            if (values2.size || refs.size) {
              missing.push({
                status: [...values2, ...[...refs].map((ref2) => ref2.display)],
                rule: `${type}s`
              });
            }
          }
          const rules = schema._rules.map((rule) => rule.name);
          for (const type of ["default", "failover"]) {
            if (schema._flags[type] !== void 0) {
              rules.push(type);
            }
          }
          for (const name2 of rules) {
            const status = internals2.labels[log.rule[name2] || 0];
            if (status) {
              const report = { rule: name2, status };
              if (log.paths.size) {
                report.paths = [...log.paths];
              }
              missing.push(report);
            }
          }
        }
        if (missing.length) {
          coverage.push({
            filename,
            line,
            missing,
            severity: "error",
            message: `Schema missing tests for ${missing.map(internals2.message).join(", ")}`
          });
        }
      }
      return coverage.length ? coverage : null;
    }
  };
  internals2.Store = class {
    constructor(schema) {
      this.active = true;
      this._sources = /* @__PURE__ */ new Map();
      this._combos = /* @__PURE__ */ new Map();
      this._scan(schema);
    }
    debug(state2, source, name2, result) {
      state2.mainstay.debug && state2.mainstay.debug.push({ type: source, name: name2, result, path: state2.path });
    }
    entry(schema, state2) {
      internals2.debug(state2, { type: "entry" });
      this._record(schema, (log) => {
        log.entry = true;
      });
    }
    filter(schema, state2, source, value) {
      internals2.debug(state2, { type: source, ...value });
      this._record(schema, (log) => {
        log[source].add(value);
      });
    }
    log(schema, state2, source, name2, result) {
      internals2.debug(state2, { type: source, name: name2, result: result === "full" ? "pass" : result });
      this._record(schema, (log) => {
        log[source][name2] = log[source][name2] || 0;
        log[source][name2] |= internals2.codes[result];
      });
    }
    resolve(state2, ref2, to) {
      if (!state2.mainstay.debug) {
        return;
      }
      const log = { type: "resolve", ref: ref2.display, to, path: state2.path };
      state2.mainstay.debug.push(log);
    }
    value(state2, by, from2, to, name2) {
      if (!state2.mainstay.debug || DeepEqual(from2, to)) {
        return;
      }
      const log = { type: "value", by, from: from2, to, path: state2.path };
      if (name2) {
        log.name = name2;
      }
      state2.mainstay.debug.push(log);
    }
    _record(schema, each) {
      const log = this._sources.get(schema);
      if (log) {
        each(log);
        return;
      }
      const sources = this._combos.get(schema);
      for (const source of sources) {
        this._record(source, each);
      }
    }
    _scan(schema, _path) {
      const path = _path || [];
      let log = this._sources.get(schema);
      if (!log) {
        log = {
          paths: /* @__PURE__ */ new Set(),
          entry: false,
          rule: {},
          valid: /* @__PURE__ */ new Set(),
          invalid: /* @__PURE__ */ new Set()
        };
        this._sources.set(schema, log);
      }
      if (path.length) {
        log.paths.add(path);
      }
      const each = (sub, source) => {
        const subId = internals2.id(sub, source);
        this._scan(sub, path.concat(subId));
      };
      schema.$_modify({ each, ref: false });
    }
    _combine(merged, sources) {
      this._combos.set(merged, sources);
    }
  };
  internals2.message = function(item) {
    const path = item.paths ? Errors2.path(item.paths[0]) + (item.rule ? ":" : "") : "";
    return `${path}${item.rule || ""} (${item.status})`;
  };
  internals2.id = function(schema, { source, name: name2, path, key }) {
    if (schema._flags.id) {
      return schema._flags.id;
    }
    if (key) {
      return key;
    }
    name2 = `@${name2}`;
    if (source === "terms") {
      return [name2, path[Math.min(path.length - 1, 1)]];
    }
    return name2;
  };
  internals2.sub = function(paths, skipped) {
    for (const path of paths) {
      for (const skip2 of skipped) {
        if (DeepEqual(path.slice(0, skip2.length), skip2)) {
          return true;
        }
      }
    }
    return false;
  };
  internals2.debug = function(state2, event) {
    if (state2.mainstay.debug) {
      event.path = state2.debug ? [...state2.path, state2.debug] : state2.path;
      state2.mainstay.debug.push(event);
    }
  };
  return trace;
}
const Assert$4 = assert;
const Clone$1 = clone;
const Utils2 = utils;
const internals$5 = {};
var merge = internals$5.merge = function(target, source, options2) {
  Assert$4(target && typeof target === "object", "Invalid target value: must be an object");
  Assert$4(source === null || source === void 0 || typeof source === "object", "Invalid source value: must be null, undefined, or an object");
  if (!source) {
    return target;
  }
  options2 = Object.assign({ nullOverride: true, mergeArrays: true }, options2);
  if (Array.isArray(source)) {
    Assert$4(Array.isArray(target), "Cannot merge array onto an object");
    if (!options2.mergeArrays) {
      target.length = 0;
    }
    for (let i = 0; i < source.length; ++i) {
      target.push(Clone$1(source[i], { symbols: options2.symbols }));
    }
    return target;
  }
  const keys2 = Utils2.keys(source, options2);
  for (let i = 0; i < keys2.length; ++i) {
    const key = keys2[i];
    if (key === "__proto__" || !Object.prototype.propertyIsEnumerable.call(source, key)) {
      continue;
    }
    const value = source[key];
    if (value && typeof value === "object") {
      if (target[key] === value) {
        continue;
      }
      if (!target[key] || typeof target[key] !== "object" || Array.isArray(target[key]) !== Array.isArray(value) || value instanceof Date || Buffer && Buffer.isBuffer(value) || // $lab:coverage:ignore$
      value instanceof RegExp) {
        target[key] = Clone$1(value, { symbols: options2.symbols });
      } else {
        internals$5.merge(target[key], value, options2);
      }
    } else {
      if (value !== null && value !== void 0) {
        target[key] = value;
      } else if (options2.nullOverride) {
        target[key] = value;
      }
    }
  }
  return target;
};
var modify = {};
var hasRequiredModify;
function requireModify() {
  if (hasRequiredModify)
    return modify;
  hasRequiredModify = 1;
  (function(exports) {
    const Assert2 = assert;
    const Common = requireCommon();
    const Ref = requireRef();
    const internals2 = {};
    exports.Ids = internals2.Ids = class {
      constructor() {
        this._byId = /* @__PURE__ */ new Map();
        this._byKey = /* @__PURE__ */ new Map();
        this._schemaChain = false;
      }
      clone() {
        const clone2 = new internals2.Ids();
        clone2._byId = new Map(this._byId);
        clone2._byKey = new Map(this._byKey);
        clone2._schemaChain = this._schemaChain;
        return clone2;
      }
      concat(source) {
        if (source._schemaChain) {
          this._schemaChain = true;
        }
        for (const [id, value] of source._byId.entries()) {
          Assert2(!this._byKey.has(id), "Schema id conflicts with existing key:", id);
          this._byId.set(id, value);
        }
        for (const [key, value] of source._byKey.entries()) {
          Assert2(!this._byId.has(key), "Schema key conflicts with existing id:", key);
          this._byKey.set(key, value);
        }
      }
      fork(path, adjuster, root) {
        const chain = this._collect(path);
        chain.push({ schema: root });
        const tail = chain.shift();
        let adjusted = { id: tail.id, schema: adjuster(tail.schema) };
        Assert2(Common.isSchema(adjusted.schema), "adjuster function failed to return a joi schema type");
        for (const node of chain) {
          adjusted = { id: node.id, schema: internals2.fork(node.schema, adjusted.id, adjusted.schema) };
        }
        return adjusted.schema;
      }
      labels(path, behind = []) {
        const current2 = path[0];
        const node = this._get(current2);
        if (!node) {
          return [...behind, ...path].join(".");
        }
        const forward = path.slice(1);
        behind = [...behind, node.schema._flags.label || current2];
        if (!forward.length) {
          return behind.join(".");
        }
        return node.schema._ids.labels(forward, behind);
      }
      reach(path, behind = []) {
        const current2 = path[0];
        const node = this._get(current2);
        Assert2(node, "Schema does not contain path", [...behind, ...path].join("."));
        const forward = path.slice(1);
        if (!forward.length) {
          return node.schema;
        }
        return node.schema._ids.reach(forward, [...behind, current2]);
      }
      register(schema, { key } = {}) {
        if (!schema || !Common.isSchema(schema)) {
          return;
        }
        if (schema.$_property("schemaChain") || schema._ids._schemaChain) {
          this._schemaChain = true;
        }
        const id = schema._flags.id;
        if (id) {
          const existing = this._byId.get(id);
          Assert2(!existing || existing.schema === schema, "Cannot add different schemas with the same id:", id);
          Assert2(!this._byKey.has(id), "Schema id conflicts with existing key:", id);
          this._byId.set(id, { schema, id });
        }
        if (key) {
          Assert2(!this._byKey.has(key), "Schema already contains key:", key);
          Assert2(!this._byId.has(key), "Schema key conflicts with existing id:", key);
          this._byKey.set(key, { schema, id: key });
        }
      }
      reset() {
        this._byId = /* @__PURE__ */ new Map();
        this._byKey = /* @__PURE__ */ new Map();
        this._schemaChain = false;
      }
      _collect(path, behind = [], nodes = []) {
        const current2 = path[0];
        const node = this._get(current2);
        Assert2(node, "Schema does not contain path", [...behind, ...path].join("."));
        nodes = [node, ...nodes];
        const forward = path.slice(1);
        if (!forward.length) {
          return nodes;
        }
        return node.schema._ids._collect(forward, [...behind, current2], nodes);
      }
      _get(id) {
        return this._byId.get(id) || this._byKey.get(id);
      }
    };
    internals2.fork = function(schema, id, replacement) {
      const each = (item, { key }) => {
        if (id === (item._flags.id || key)) {
          return replacement;
        }
      };
      const obj = exports.schema(schema, { each, ref: false });
      return obj ? obj.$_mutateRebuild() : schema;
    };
    exports.schema = function(schema, options2) {
      let obj;
      for (const name2 in schema._flags) {
        if (name2[0] === "_") {
          continue;
        }
        const result = internals2.scan(schema._flags[name2], { source: "flags", name: name2 }, options2);
        if (result !== void 0) {
          obj = obj || schema.clone();
          obj._flags[name2] = result;
        }
      }
      for (let i = 0; i < schema._rules.length; ++i) {
        const rule = schema._rules[i];
        const result = internals2.scan(rule.args, { source: "rules", name: rule.name }, options2);
        if (result !== void 0) {
          obj = obj || schema.clone();
          const clone2 = Object.assign({}, rule);
          clone2.args = result;
          obj._rules[i] = clone2;
          const existingUnique = obj._singleRules.get(rule.name);
          if (existingUnique === rule) {
            obj._singleRules.set(rule.name, clone2);
          }
        }
      }
      for (const name2 in schema.$_terms) {
        if (name2[0] === "_") {
          continue;
        }
        const result = internals2.scan(schema.$_terms[name2], { source: "terms", name: name2 }, options2);
        if (result !== void 0) {
          obj = obj || schema.clone();
          obj.$_terms[name2] = result;
        }
      }
      return obj;
    };
    internals2.scan = function(item, source, options2, _path, _key) {
      const path = _path || [];
      if (item === null || typeof item !== "object") {
        return;
      }
      let clone2;
      if (Array.isArray(item)) {
        for (let i = 0; i < item.length; ++i) {
          const key = source.source === "terms" && source.name === "keys" && item[i].key;
          const result = internals2.scan(item[i], source, options2, [i, ...path], key);
          if (result !== void 0) {
            clone2 = clone2 || item.slice();
            clone2[i] = result;
          }
        }
        return clone2;
      }
      if (options2.schema !== false && Common.isSchema(item) || options2.ref !== false && Ref.isRef(item)) {
        const result = options2.each(item, { ...source, path, key: _key });
        if (result === item) {
          return;
        }
        return result;
      }
      for (const key in item) {
        if (key[0] === "_") {
          continue;
        }
        const result = internals2.scan(item[key], source, options2, [key, ...path], _key);
        if (result !== void 0) {
          clone2 = clone2 || Object.assign({}, item);
          clone2[key] = result;
        }
      }
      return clone2;
    };
  })(modify);
  return modify;
}
var validator = {};
var ignore = function() {
};
var state;
var hasRequiredState;
function requireState() {
  if (hasRequiredState)
    return state;
  hasRequiredState = 1;
  const Clone2 = clone;
  const Reach2 = reach;
  const Common = requireCommon();
  const internals2 = {
    value: Symbol("value")
  };
  state = internals2.State = class {
    constructor(path, ancestors, state2) {
      this.path = path;
      this.ancestors = ancestors;
      this.mainstay = state2.mainstay;
      this.schemas = state2.schemas;
      this.debug = null;
    }
    localize(path, ancestors = null, schema = null) {
      const state2 = new internals2.State(path, ancestors, this);
      if (schema && state2.schemas) {
        state2.schemas = [internals2.schemas(schema), ...state2.schemas];
      }
      return state2;
    }
    nest(schema, debug) {
      const state2 = new internals2.State(this.path, this.ancestors, this);
      state2.schemas = state2.schemas && [internals2.schemas(schema), ...state2.schemas];
      state2.debug = debug;
      return state2;
    }
    shadow(value, reason) {
      this.mainstay.shadow = this.mainstay.shadow || new internals2.Shadow();
      this.mainstay.shadow.set(this.path, value, reason);
    }
    snapshot() {
      if (this.mainstay.shadow) {
        this._snapshot = Clone2(this.mainstay.shadow.node(this.path));
      }
      this.mainstay.snapshot();
    }
    restore() {
      if (this.mainstay.shadow) {
        this.mainstay.shadow.override(this.path, this._snapshot);
        this._snapshot = void 0;
      }
      this.mainstay.restore();
    }
  };
  internals2.schemas = function(schema) {
    if (Common.isSchema(schema)) {
      return { schema };
    }
    return schema;
  };
  internals2.Shadow = class {
    constructor() {
      this._values = null;
    }
    set(path, value, reason) {
      if (!path.length) {
        return;
      }
      if (reason === "strip" && typeof path[path.length - 1] === "number") {
        return;
      }
      this._values = this._values || /* @__PURE__ */ new Map();
      let node = this._values;
      for (let i = 0; i < path.length; ++i) {
        const segment = path[i];
        let next = node.get(segment);
        if (!next) {
          next = /* @__PURE__ */ new Map();
          node.set(segment, next);
        }
        node = next;
      }
      node[internals2.value] = value;
    }
    get(path) {
      const node = this.node(path);
      if (node) {
        return node[internals2.value];
      }
    }
    node(path) {
      if (!this._values) {
        return;
      }
      return Reach2(this._values, path, { iterables: true });
    }
    override(path, node) {
      if (!this._values) {
        return;
      }
      const parents = path.slice(0, -1);
      const own = path[path.length - 1];
      const parent = Reach2(this._values, parents, { iterables: true });
      if (node) {
        parent.set(own, node);
        return;
      }
      if (parent) {
        parent.delete(own);
      }
    }
  };
  return state;
}
var hasRequiredValidator;
function requireValidator() {
  if (hasRequiredValidator)
    return validator;
  hasRequiredValidator = 1;
  (function(exports) {
    const Assert2 = assert;
    const Clone2 = clone;
    const Ignore = ignore;
    const Reach2 = reach;
    const Common = requireCommon();
    const Errors2 = requireErrors();
    const State = requireState();
    const internals2 = {
      result: Symbol("result")
    };
    exports.entry = function(value, schema, prefs) {
      let settings = Common.defaults;
      if (prefs) {
        Assert2(prefs.warnings === void 0, "Cannot override warnings preference in synchronous validation");
        Assert2(prefs.artifacts === void 0, "Cannot override artifacts preference in synchronous validation");
        settings = Common.preferences(Common.defaults, prefs);
      }
      const result = internals2.entry(value, schema, settings);
      Assert2(!result.mainstay.externals.length, "Schema with external rules must use validateAsync()");
      const outcome = { value: result.value };
      if (result.error) {
        outcome.error = result.error;
      }
      if (result.mainstay.warnings.length) {
        outcome.warning = Errors2.details(result.mainstay.warnings);
      }
      if (result.mainstay.debug) {
        outcome.debug = result.mainstay.debug;
      }
      if (result.mainstay.artifacts) {
        outcome.artifacts = result.mainstay.artifacts;
      }
      return outcome;
    };
    exports.entryAsync = async function(value, schema, prefs) {
      let settings = Common.defaults;
      if (prefs) {
        settings = Common.preferences(Common.defaults, prefs);
      }
      const result = internals2.entry(value, schema, settings);
      const mainstay = result.mainstay;
      if (result.error) {
        if (mainstay.debug) {
          result.error.debug = mainstay.debug;
        }
        throw result.error;
      }
      if (mainstay.externals.length) {
        let root = result.value;
        const errors2 = [];
        for (const external of mainstay.externals) {
          const path = external.state.path;
          const linked = external.schema.type === "link" ? mainstay.links.get(external.schema) : null;
          let node = root;
          let key;
          let parent;
          const ancestors = path.length ? [root] : [];
          const original = path.length ? Reach2(value, path) : value;
          if (path.length) {
            key = path[path.length - 1];
            let current2 = root;
            for (const segment of path.slice(0, -1)) {
              current2 = current2[segment];
              ancestors.unshift(current2);
            }
            parent = ancestors[0];
            node = parent[key];
          }
          try {
            const createError = (code, local) => (linked || external.schema).$_createError(code, node, local, external.state, settings);
            const output = await external.method(node, {
              schema: external.schema,
              linked,
              state: external.state,
              prefs,
              original,
              error: createError,
              errorsArray: internals2.errorsArray,
              warn: (code, local) => mainstay.warnings.push((linked || external.schema).$_createError(code, node, local, external.state, settings)),
              message: (messages2, local) => (linked || external.schema).$_createError("external", node, local, external.state, settings, { messages: messages2 })
            });
            if (output === void 0 || output === node) {
              continue;
            }
            if (output instanceof Errors2.Report) {
              mainstay.tracer.log(external.schema, external.state, "rule", "external", "error");
              errors2.push(output);
              if (settings.abortEarly) {
                break;
              }
              continue;
            }
            if (Array.isArray(output) && output[Common.symbols.errors]) {
              mainstay.tracer.log(external.schema, external.state, "rule", "external", "error");
              errors2.push(...output);
              if (settings.abortEarly) {
                break;
              }
              continue;
            }
            if (parent) {
              mainstay.tracer.value(external.state, "rule", node, output, "external");
              parent[key] = output;
            } else {
              mainstay.tracer.value(external.state, "rule", root, output, "external");
              root = output;
            }
          } catch (err) {
            if (settings.errors.label) {
              err.message += ` (${external.label})`;
            }
            throw err;
          }
        }
        result.value = root;
        if (errors2.length) {
          result.error = Errors2.process(errors2, value, settings);
          if (mainstay.debug) {
            result.error.debug = mainstay.debug;
          }
          throw result.error;
        }
      }
      if (!settings.warnings && !settings.debug && !settings.artifacts) {
        return result.value;
      }
      const outcome = { value: result.value };
      if (mainstay.warnings.length) {
        outcome.warning = Errors2.details(mainstay.warnings);
      }
      if (mainstay.debug) {
        outcome.debug = mainstay.debug;
      }
      if (mainstay.artifacts) {
        outcome.artifacts = mainstay.artifacts;
      }
      return outcome;
    };
    internals2.Mainstay = class {
      constructor(tracer, debug, links) {
        this.externals = [];
        this.warnings = [];
        this.tracer = tracer;
        this.debug = debug;
        this.links = links;
        this.shadow = null;
        this.artifacts = null;
        this._snapshots = [];
      }
      snapshot() {
        this._snapshots.push({
          externals: this.externals.slice(),
          warnings: this.warnings.slice()
        });
      }
      restore() {
        const snapshot = this._snapshots.pop();
        this.externals = snapshot.externals;
        this.warnings = snapshot.warnings;
      }
    };
    internals2.entry = function(value, schema, prefs) {
      const { tracer, cleanup } = internals2.tracer(schema, prefs);
      const debug = prefs.debug ? [] : null;
      const links = schema._ids._schemaChain ? /* @__PURE__ */ new Map() : null;
      const mainstay = new internals2.Mainstay(tracer, debug, links);
      const schemas2 = schema._ids._schemaChain ? [{ schema }] : null;
      const state2 = new State([], [], { mainstay, schemas: schemas2 });
      const result = exports.validate(value, schema, state2, prefs);
      if (cleanup) {
        schema.$_root.untrace();
      }
      const error2 = Errors2.process(result.errors, value, prefs);
      return { value: result.value, error: error2, mainstay };
    };
    internals2.tracer = function(schema, prefs) {
      if (schema.$_root._tracer) {
        return { tracer: schema.$_root._tracer._register(schema) };
      }
      if (prefs.debug) {
        Assert2(schema.$_root.trace, "Debug mode not supported");
        return { tracer: schema.$_root.trace()._register(schema), cleanup: true };
      }
      return { tracer: internals2.ignore };
    };
    exports.validate = function(value, schema, state2, prefs, overrides = {}) {
      if (schema.$_terms.whens) {
        schema = schema._generate(value, state2, prefs).schema;
      }
      if (schema._preferences) {
        prefs = internals2.prefs(schema, prefs);
      }
      if (schema._cache && prefs.cache) {
        const result = schema._cache.get(value);
        state2.mainstay.tracer.debug(state2, "validate", "cached", !!result);
        if (result) {
          return result;
        }
      }
      const createError = (code, local, localState) => schema.$_createError(code, value, local, localState || state2, prefs);
      const helpers = {
        original: value,
        prefs,
        schema,
        state: state2,
        error: createError,
        errorsArray: internals2.errorsArray,
        warn: (code, local, localState) => state2.mainstay.warnings.push(createError(code, local, localState)),
        message: (messages2, local) => schema.$_createError("custom", value, local, state2, prefs, { messages: messages2 })
      };
      state2.mainstay.tracer.entry(schema, state2);
      const def = schema._definition;
      if (def.prepare && value !== void 0 && prefs.convert) {
        const prepared = def.prepare(value, helpers);
        if (prepared) {
          state2.mainstay.tracer.value(state2, "prepare", value, prepared.value);
          if (prepared.errors) {
            return internals2.finalize(prepared.value, [].concat(prepared.errors), helpers);
          }
          value = prepared.value;
        }
      }
      if (def.coerce && value !== void 0 && prefs.convert && (!def.coerce.from || def.coerce.from.includes(typeof value))) {
        const coerced = def.coerce.method(value, helpers);
        if (coerced) {
          state2.mainstay.tracer.value(state2, "coerced", value, coerced.value);
          if (coerced.errors) {
            return internals2.finalize(coerced.value, [].concat(coerced.errors), helpers);
          }
          value = coerced.value;
        }
      }
      const empty2 = schema._flags.empty;
      if (empty2 && empty2.$_match(internals2.trim(value, schema), state2.nest(empty2), Common.defaults)) {
        state2.mainstay.tracer.value(state2, "empty", value, void 0);
        value = void 0;
      }
      const presence = overrides.presence || schema._flags.presence || (schema._flags._endedSwitch ? null : prefs.presence);
      if (value === void 0) {
        if (presence === "forbidden") {
          return internals2.finalize(value, null, helpers);
        }
        if (presence === "required") {
          return internals2.finalize(value, [schema.$_createError("any.required", value, null, state2, prefs)], helpers);
        }
        if (presence === "optional") {
          if (schema._flags.default !== Common.symbols.deepDefault) {
            return internals2.finalize(value, null, helpers);
          }
          state2.mainstay.tracer.value(state2, "default", value, {});
          value = {};
        }
      } else if (presence === "forbidden") {
        return internals2.finalize(value, [schema.$_createError("any.unknown", value, null, state2, prefs)], helpers);
      }
      const errors2 = [];
      if (schema._valids) {
        const match = schema._valids.get(value, state2, prefs, schema._flags.insensitive);
        if (match) {
          if (prefs.convert) {
            state2.mainstay.tracer.value(state2, "valids", value, match.value);
            value = match.value;
          }
          state2.mainstay.tracer.filter(schema, state2, "valid", match);
          return internals2.finalize(value, null, helpers);
        }
        if (schema._flags.only) {
          const report = schema.$_createError("any.only", value, { valids: schema._valids.values({ display: true }) }, state2, prefs);
          if (prefs.abortEarly) {
            return internals2.finalize(value, [report], helpers);
          }
          errors2.push(report);
        }
      }
      if (schema._invalids) {
        const match = schema._invalids.get(value, state2, prefs, schema._flags.insensitive);
        if (match) {
          state2.mainstay.tracer.filter(schema, state2, "invalid", match);
          const report = schema.$_createError("any.invalid", value, { invalids: schema._invalids.values({ display: true }) }, state2, prefs);
          if (prefs.abortEarly) {
            return internals2.finalize(value, [report], helpers);
          }
          errors2.push(report);
        }
      }
      if (def.validate) {
        const base2 = def.validate(value, helpers);
        if (base2) {
          state2.mainstay.tracer.value(state2, "base", value, base2.value);
          value = base2.value;
          if (base2.errors) {
            if (!Array.isArray(base2.errors)) {
              errors2.push(base2.errors);
              return internals2.finalize(value, errors2, helpers);
            }
            if (base2.errors.length) {
              errors2.push(...base2.errors);
              return internals2.finalize(value, errors2, helpers);
            }
          }
        }
      }
      if (!schema._rules.length) {
        return internals2.finalize(value, errors2, helpers);
      }
      return internals2.rules(value, errors2, helpers);
    };
    internals2.rules = function(value, errors2, helpers) {
      const { schema, state: state2, prefs } = helpers;
      for (const rule of schema._rules) {
        const definition = schema._definition.rules[rule.method];
        if (definition.convert && prefs.convert) {
          state2.mainstay.tracer.log(schema, state2, "rule", rule.name, "full");
          continue;
        }
        let ret;
        let args2 = rule.args;
        if (rule._resolve.length) {
          args2 = Object.assign({}, args2);
          for (const key of rule._resolve) {
            const resolver = definition.argsByName.get(key);
            const resolved2 = args2[key].resolve(value, state2, prefs);
            const normalized = resolver.normalize ? resolver.normalize(resolved2) : resolved2;
            const invalid = Common.validateArg(normalized, null, resolver);
            if (invalid) {
              ret = schema.$_createError("any.ref", resolved2, { arg: key, ref: args2[key], reason: invalid }, state2, prefs);
              break;
            }
            args2[key] = normalized;
          }
        }
        ret = ret || definition.validate(value, helpers, args2, rule);
        const result = internals2.rule(ret, rule);
        if (result.errors) {
          state2.mainstay.tracer.log(schema, state2, "rule", rule.name, "error");
          if (rule.warn) {
            state2.mainstay.warnings.push(...result.errors);
            continue;
          }
          if (prefs.abortEarly) {
            return internals2.finalize(value, result.errors, helpers);
          }
          errors2.push(...result.errors);
        } else {
          state2.mainstay.tracer.log(schema, state2, "rule", rule.name, "pass");
          state2.mainstay.tracer.value(state2, "rule", value, result.value, rule.name);
          value = result.value;
        }
      }
      return internals2.finalize(value, errors2, helpers);
    };
    internals2.rule = function(ret, rule) {
      if (ret instanceof Errors2.Report) {
        internals2.error(ret, rule);
        return { errors: [ret], value: null };
      }
      if (Array.isArray(ret) && ret[Common.symbols.errors]) {
        ret.forEach((report) => internals2.error(report, rule));
        return { errors: ret, value: null };
      }
      return { errors: null, value: ret };
    };
    internals2.error = function(report, rule) {
      if (rule.message) {
        report._setTemplate(rule.message);
      }
      return report;
    };
    internals2.finalize = function(value, errors2, helpers) {
      errors2 = errors2 || [];
      const { schema, state: state2, prefs } = helpers;
      if (errors2.length) {
        const failover = internals2.default("failover", void 0, errors2, helpers);
        if (failover !== void 0) {
          state2.mainstay.tracer.value(state2, "failover", value, failover);
          value = failover;
          errors2 = [];
        }
      }
      if (errors2.length && schema._flags.error) {
        if (typeof schema._flags.error === "function") {
          errors2 = schema._flags.error(errors2);
          if (!Array.isArray(errors2)) {
            errors2 = [errors2];
          }
          for (const error2 of errors2) {
            Assert2(error2 instanceof Error || error2 instanceof Errors2.Report, "error() must return an Error object");
          }
        } else {
          errors2 = [schema._flags.error];
        }
      }
      if (value === void 0) {
        const defaulted = internals2.default("default", value, errors2, helpers);
        state2.mainstay.tracer.value(state2, "default", value, defaulted);
        value = defaulted;
      }
      if (schema._flags.cast && value !== void 0) {
        const caster = schema._definition.cast[schema._flags.cast];
        if (caster.from(value)) {
          const casted = caster.to(value, helpers);
          state2.mainstay.tracer.value(state2, "cast", value, casted, schema._flags.cast);
          value = casted;
        }
      }
      if (schema.$_terms.externals && prefs.externals && prefs._externals !== false) {
        for (const { method } of schema.$_terms.externals) {
          state2.mainstay.externals.push({ method, schema, state: state2, label: Errors2.label(schema._flags, state2, prefs) });
        }
      }
      const result = { value, errors: errors2.length ? errors2 : null };
      if (schema._flags.result) {
        result.value = schema._flags.result === "strip" ? void 0 : (
          /* raw */
          helpers.original
        );
        state2.mainstay.tracer.value(state2, schema._flags.result, value, result.value);
        state2.shadow(value, schema._flags.result);
      }
      if (schema._cache && prefs.cache !== false && !schema._refs.length) {
        schema._cache.set(helpers.original, result);
      }
      if (value !== void 0 && !result.errors && schema._flags.artifact !== void 0) {
        state2.mainstay.artifacts = state2.mainstay.artifacts || /* @__PURE__ */ new Map();
        if (!state2.mainstay.artifacts.has(schema._flags.artifact)) {
          state2.mainstay.artifacts.set(schema._flags.artifact, []);
        }
        state2.mainstay.artifacts.get(schema._flags.artifact).push(state2.path);
      }
      return result;
    };
    internals2.prefs = function(schema, prefs) {
      const isDefaultOptions = prefs === Common.defaults;
      if (isDefaultOptions && schema._preferences[Common.symbols.prefs]) {
        return schema._preferences[Common.symbols.prefs];
      }
      prefs = Common.preferences(prefs, schema._preferences);
      if (isDefaultOptions) {
        schema._preferences[Common.symbols.prefs] = prefs;
      }
      return prefs;
    };
    internals2.default = function(flag, value, errors2, helpers) {
      const { schema, state: state2, prefs } = helpers;
      const source = schema._flags[flag];
      if (prefs.noDefaults || source === void 0) {
        return value;
      }
      state2.mainstay.tracer.log(schema, state2, "rule", flag, "full");
      if (!source) {
        return source;
      }
      if (typeof source === "function") {
        const args2 = source.length ? [Clone2(state2.ancestors[0]), helpers] : [];
        try {
          return source(...args2);
        } catch (err) {
          errors2.push(schema.$_createError(`any.${flag}`, null, { error: err }, state2, prefs));
          return;
        }
      }
      if (typeof source !== "object") {
        return source;
      }
      if (source[Common.symbols.literal]) {
        return source.literal;
      }
      if (Common.isResolvable(source)) {
        return source.resolve(value, state2, prefs);
      }
      return Clone2(source);
    };
    internals2.trim = function(value, schema) {
      if (typeof value !== "string") {
        return value;
      }
      const trim = schema.$_getRule("trim");
      if (!trim || !trim.args.enabled) {
        return value;
      }
      return value.trim();
    };
    internals2.ignore = {
      active: false,
      debug: Ignore,
      entry: Ignore,
      filter: Ignore,
      log: Ignore,
      resolve: Ignore,
      value: Ignore
    };
    internals2.errorsArray = function() {
      const errors2 = [];
      errors2[Common.symbols.errors] = true;
      return errors2;
    };
  })(validator);
  return validator;
}
var values;
var hasRequiredValues;
function requireValues() {
  if (hasRequiredValues)
    return values;
  hasRequiredValues = 1;
  const Assert2 = assert;
  const DeepEqual = deepEqual;
  const Common = requireCommon();
  const internals2 = {};
  values = internals2.Values = class {
    constructor(values2, refs) {
      this._values = new Set(values2);
      this._refs = new Set(refs);
      this._lowercase = internals2.lowercases(values2);
      this._override = false;
    }
    get length() {
      return this._values.size + this._refs.size;
    }
    add(value, refs) {
      if (Common.isResolvable(value)) {
        if (!this._refs.has(value)) {
          this._refs.add(value);
          if (refs) {
            refs.register(value);
          }
        }
        return;
      }
      if (!this.has(value, null, null, false)) {
        this._values.add(value);
        if (typeof value === "string") {
          this._lowercase.set(value.toLowerCase(), value);
        }
      }
    }
    static merge(target, source, remove) {
      target = target || new internals2.Values();
      if (source) {
        if (source._override) {
          return source.clone();
        }
        for (const item of [...source._values, ...source._refs]) {
          target.add(item);
        }
      }
      if (remove) {
        for (const item of [...remove._values, ...remove._refs]) {
          target.remove(item);
        }
      }
      return target.length ? target : null;
    }
    remove(value) {
      if (Common.isResolvable(value)) {
        this._refs.delete(value);
        return;
      }
      this._values.delete(value);
      if (typeof value === "string") {
        this._lowercase.delete(value.toLowerCase());
      }
    }
    has(value, state2, prefs, insensitive) {
      return !!this.get(value, state2, prefs, insensitive);
    }
    get(value, state2, prefs, insensitive) {
      if (!this.length) {
        return false;
      }
      if (this._values.has(value)) {
        return { value };
      }
      if (typeof value === "string" && value && insensitive) {
        const found = this._lowercase.get(value.toLowerCase());
        if (found) {
          return { value: found };
        }
      }
      if (!this._refs.size && typeof value !== "object") {
        return false;
      }
      if (typeof value === "object") {
        for (const item of this._values) {
          if (DeepEqual(item, value)) {
            return { value: item };
          }
        }
      }
      if (state2) {
        for (const ref2 of this._refs) {
          const resolved2 = ref2.resolve(value, state2, prefs, null, { in: true });
          if (resolved2 === void 0) {
            continue;
          }
          const items = !ref2.in || typeof resolved2 !== "object" ? [resolved2] : Array.isArray(resolved2) ? resolved2 : Object.keys(resolved2);
          for (const item of items) {
            if (typeof item !== typeof value) {
              continue;
            }
            if (insensitive && value && typeof value === "string") {
              if (item.toLowerCase() === value.toLowerCase()) {
                return { value: item, ref: ref2 };
              }
            } else {
              if (DeepEqual(item, value)) {
                return { value: item, ref: ref2 };
              }
            }
          }
        }
      }
      return false;
    }
    override() {
      this._override = true;
    }
    values(options2) {
      if (options2 && options2.display) {
        const values2 = [];
        for (const item of [...this._values, ...this._refs]) {
          if (item !== void 0) {
            values2.push(item);
          }
        }
        return values2;
      }
      return Array.from([...this._values, ...this._refs]);
    }
    clone() {
      const set2 = new internals2.Values(this._values, this._refs);
      set2._override = this._override;
      return set2;
    }
    concat(source) {
      Assert2(!source._override, "Cannot concat override set of values");
      const set2 = new internals2.Values([...this._values, ...source._values], [...this._refs, ...source._refs]);
      set2._override = this._override;
      return set2;
    }
    describe() {
      const normalized = [];
      if (this._override) {
        normalized.push({ override: true });
      }
      for (const value of this._values.values()) {
        normalized.push(value && typeof value === "object" ? { value } : value);
      }
      for (const value of this._refs.values()) {
        normalized.push(value.describe());
      }
      return normalized;
    }
  };
  internals2.Values.prototype[Common.symbols.values] = true;
  internals2.Values.prototype.slice = internals2.Values.prototype.clone;
  internals2.lowercases = function(from2) {
    const map2 = /* @__PURE__ */ new Map();
    if (from2) {
      for (const value of from2) {
        if (typeof value === "string") {
          map2.set(value.toLowerCase(), value);
        }
      }
    }
    return map2;
  };
  return values;
}
var base;
var hasRequiredBase;
function requireBase() {
  if (hasRequiredBase)
    return base;
  hasRequiredBase = 1;
  const Assert2 = assert;
  const Clone2 = clone;
  const DeepEqual = deepEqual;
  const Merge2 = merge;
  const Cache = requireCache();
  const Common = requireCommon();
  const Compile = requireCompile();
  const Errors2 = requireErrors();
  const Extend = requireExtend();
  const Manifest = requireManifest();
  const Messages = requireMessages();
  const Modify = requireModify();
  const Ref = requireRef();
  const Trace = requireTrace();
  const Validator = requireValidator();
  const Values = requireValues();
  const internals2 = {};
  internals2.Base = class {
    constructor(type) {
      this.type = type;
      this.$_root = null;
      this._definition = {};
      this._reset();
    }
    _reset() {
      this._ids = new Modify.Ids();
      this._preferences = null;
      this._refs = new Ref.Manager();
      this._cache = null;
      this._valids = null;
      this._invalids = null;
      this._flags = {};
      this._rules = [];
      this._singleRules = /* @__PURE__ */ new Map();
      this.$_terms = {};
      this.$_temp = {
        // Runtime state (not cloned)
        ruleset: null,
        // null: use last, false: error, number: start position
        whens: {}
        // Runtime cache of generated whens
      };
    }
    // Manifest
    describe() {
      Assert2(typeof Manifest.describe === "function", "Manifest functionality disabled");
      return Manifest.describe(this);
    }
    // Rules
    allow(...values2) {
      Common.verifyFlat(values2, "allow");
      return this._values(values2, "_valids");
    }
    alter(targets) {
      Assert2(targets && typeof targets === "object" && !Array.isArray(targets), "Invalid targets argument");
      Assert2(!this._inRuleset(), "Cannot set alterations inside a ruleset");
      const obj = this.clone();
      obj.$_terms.alterations = obj.$_terms.alterations || [];
      for (const target in targets) {
        const adjuster = targets[target];
        Assert2(typeof adjuster === "function", "Alteration adjuster for", target, "must be a function");
        obj.$_terms.alterations.push({ target, adjuster });
      }
      obj.$_temp.ruleset = false;
      return obj;
    }
    artifact(id) {
      Assert2(id !== void 0, "Artifact cannot be undefined");
      Assert2(!this._cache, "Cannot set an artifact with a rule cache");
      return this.$_setFlag("artifact", id);
    }
    cast(to) {
      Assert2(to === false || typeof to === "string", "Invalid to value");
      Assert2(to === false || this._definition.cast[to], "Type", this.type, "does not support casting to", to);
      return this.$_setFlag("cast", to === false ? void 0 : to);
    }
    default(value, options2) {
      return this._default("default", value, options2);
    }
    description(desc) {
      Assert2(desc && typeof desc === "string", "Description must be a non-empty string");
      return this.$_setFlag("description", desc);
    }
    empty(schema) {
      const obj = this.clone();
      if (schema !== void 0) {
        schema = obj.$_compile(schema, { override: false });
      }
      return obj.$_setFlag("empty", schema, { clone: false });
    }
    error(err) {
      Assert2(err, "Missing error");
      Assert2(err instanceof Error || typeof err === "function", "Must provide a valid Error object or a function");
      return this.$_setFlag("error", err);
    }
    example(example, options2 = {}) {
      Assert2(example !== void 0, "Missing example");
      Common.assertOptions(options2, ["override"]);
      return this._inner("examples", example, { single: true, override: options2.override });
    }
    external(method, description2) {
      if (typeof method === "object") {
        Assert2(!description2, "Cannot combine options with description");
        description2 = method.description;
        method = method.method;
      }
      Assert2(typeof method === "function", "Method must be a function");
      Assert2(description2 === void 0 || description2 && typeof description2 === "string", "Description must be a non-empty string");
      return this._inner("externals", { method, description: description2 }, { single: true });
    }
    failover(value, options2) {
      return this._default("failover", value, options2);
    }
    forbidden() {
      return this.presence("forbidden");
    }
    id(id) {
      if (!id) {
        return this.$_setFlag("id", void 0);
      }
      Assert2(typeof id === "string", "id must be a non-empty string");
      Assert2(/^[^\.]+$/.test(id), "id cannot contain period character");
      return this.$_setFlag("id", id);
    }
    invalid(...values2) {
      return this._values(values2, "_invalids");
    }
    label(name2) {
      Assert2(name2 && typeof name2 === "string", "Label name must be a non-empty string");
      return this.$_setFlag("label", name2);
    }
    meta(meta) {
      Assert2(meta !== void 0, "Meta cannot be undefined");
      return this._inner("metas", meta, { single: true });
    }
    note(...notes) {
      Assert2(notes.length, "Missing notes");
      for (const note of notes) {
        Assert2(note && typeof note === "string", "Notes must be non-empty strings");
      }
      return this._inner("notes", notes);
    }
    only(mode = true) {
      Assert2(typeof mode === "boolean", "Invalid mode:", mode);
      return this.$_setFlag("only", mode);
    }
    optional() {
      return this.presence("optional");
    }
    prefs(prefs) {
      Assert2(prefs, "Missing preferences");
      Assert2(prefs.context === void 0, "Cannot override context");
      Assert2(prefs.externals === void 0, "Cannot override externals");
      Assert2(prefs.warnings === void 0, "Cannot override warnings");
      Assert2(prefs.debug === void 0, "Cannot override debug");
      Common.checkPreferences(prefs);
      const obj = this.clone();
      obj._preferences = Common.preferences(obj._preferences, prefs);
      return obj;
    }
    presence(mode) {
      Assert2(["optional", "required", "forbidden"].includes(mode), "Unknown presence mode", mode);
      return this.$_setFlag("presence", mode);
    }
    raw(enabled = true) {
      return this.$_setFlag("result", enabled ? "raw" : void 0);
    }
    result(mode) {
      Assert2(["raw", "strip"].includes(mode), "Unknown result mode", mode);
      return this.$_setFlag("result", mode);
    }
    required() {
      return this.presence("required");
    }
    strict(enabled) {
      const obj = this.clone();
      const convert = enabled === void 0 ? false : !enabled;
      obj._preferences = Common.preferences(obj._preferences, { convert });
      return obj;
    }
    strip(enabled = true) {
      return this.$_setFlag("result", enabled ? "strip" : void 0);
    }
    tag(...tags) {
      Assert2(tags.length, "Missing tags");
      for (const tag of tags) {
        Assert2(tag && typeof tag === "string", "Tags must be non-empty strings");
      }
      return this._inner("tags", tags);
    }
    unit(name2) {
      Assert2(name2 && typeof name2 === "string", "Unit name must be a non-empty string");
      return this.$_setFlag("unit", name2);
    }
    valid(...values2) {
      Common.verifyFlat(values2, "valid");
      const obj = this.allow(...values2);
      obj.$_setFlag("only", !!obj._valids, { clone: false });
      return obj;
    }
    when(condition, options2) {
      const obj = this.clone();
      if (!obj.$_terms.whens) {
        obj.$_terms.whens = [];
      }
      const when = Compile.when(obj, condition, options2);
      if (!["any", "link"].includes(obj.type)) {
        const conditions = when.is ? [when] : when.switch;
        for (const item of conditions) {
          Assert2(!item.then || item.then.type === "any" || item.then.type === obj.type, "Cannot combine", obj.type, "with", item.then && item.then.type);
          Assert2(!item.otherwise || item.otherwise.type === "any" || item.otherwise.type === obj.type, "Cannot combine", obj.type, "with", item.otherwise && item.otherwise.type);
        }
      }
      obj.$_terms.whens.push(when);
      return obj.$_mutateRebuild();
    }
    // Helpers
    cache(cache2) {
      Assert2(!this._inRuleset(), "Cannot set caching inside a ruleset");
      Assert2(!this._cache, "Cannot override schema cache");
      Assert2(this._flags.artifact === void 0, "Cannot cache a rule with an artifact");
      const obj = this.clone();
      obj._cache = cache2 || Cache.provider.provision();
      obj.$_temp.ruleset = false;
      return obj;
    }
    clone() {
      const obj = Object.create(Object.getPrototypeOf(this));
      return this._assign(obj);
    }
    concat(source) {
      Assert2(Common.isSchema(source), "Invalid schema object");
      Assert2(this.type === "any" || source.type === "any" || source.type === this.type, "Cannot merge type", this.type, "with another type:", source.type);
      Assert2(!this._inRuleset(), "Cannot concatenate onto a schema with open ruleset");
      Assert2(!source._inRuleset(), "Cannot concatenate a schema with open ruleset");
      let obj = this.clone();
      if (this.type === "any" && source.type !== "any") {
        const tmpObj = source.clone();
        for (const key of Object.keys(obj)) {
          if (key !== "type") {
            tmpObj[key] = obj[key];
          }
        }
        obj = tmpObj;
      }
      obj._ids.concat(source._ids);
      obj._refs.register(source, Ref.toSibling);
      obj._preferences = obj._preferences ? Common.preferences(obj._preferences, source._preferences) : source._preferences;
      obj._valids = Values.merge(obj._valids, source._valids, source._invalids);
      obj._invalids = Values.merge(obj._invalids, source._invalids, source._valids);
      for (const name2 of source._singleRules.keys()) {
        if (obj._singleRules.has(name2)) {
          obj._rules = obj._rules.filter((target) => target.keep || target.name !== name2);
          obj._singleRules.delete(name2);
        }
      }
      for (const test of source._rules) {
        if (!source._definition.rules[test.method].multi) {
          obj._singleRules.set(test.name, test);
        }
        obj._rules.push(test);
      }
      if (obj._flags.empty && source._flags.empty) {
        obj._flags.empty = obj._flags.empty.concat(source._flags.empty);
        const flags = Object.assign({}, source._flags);
        delete flags.empty;
        Merge2(obj._flags, flags);
      } else if (source._flags.empty) {
        obj._flags.empty = source._flags.empty;
        const flags = Object.assign({}, source._flags);
        delete flags.empty;
        Merge2(obj._flags, flags);
      } else {
        Merge2(obj._flags, source._flags);
      }
      for (const key in source.$_terms) {
        const terms = source.$_terms[key];
        if (!terms) {
          if (!obj.$_terms[key]) {
            obj.$_terms[key] = terms;
          }
          continue;
        }
        if (!obj.$_terms[key]) {
          obj.$_terms[key] = terms.slice();
          continue;
        }
        obj.$_terms[key] = obj.$_terms[key].concat(terms);
      }
      if (this.$_root._tracer) {
        this.$_root._tracer._combine(obj, [this, source]);
      }
      return obj.$_mutateRebuild();
    }
    extend(options2) {
      Assert2(!options2.base, "Cannot extend type with another base");
      return Extend.type(this, options2);
    }
    extract(path) {
      path = Array.isArray(path) ? path : path.split(".");
      return this._ids.reach(path);
    }
    fork(paths, adjuster) {
      Assert2(!this._inRuleset(), "Cannot fork inside a ruleset");
      let obj = this;
      for (let path of [].concat(paths)) {
        path = Array.isArray(path) ? path : path.split(".");
        obj = obj._ids.fork(path, adjuster, obj);
      }
      obj.$_temp.ruleset = false;
      return obj;
    }
    rule(options2) {
      const def = this._definition;
      Common.assertOptions(options2, Object.keys(def.modifiers));
      Assert2(this.$_temp.ruleset !== false, "Cannot apply rules to empty ruleset or the last rule added does not support rule properties");
      const start = this.$_temp.ruleset === null ? this._rules.length - 1 : this.$_temp.ruleset;
      Assert2(start >= 0 && start < this._rules.length, "Cannot apply rules to empty ruleset");
      const obj = this.clone();
      for (let i = start; i < obj._rules.length; ++i) {
        const original = obj._rules[i];
        const rule = Clone2(original);
        for (const name2 in options2) {
          def.modifiers[name2](rule, options2[name2]);
          Assert2(rule.name === original.name, "Cannot change rule name");
        }
        obj._rules[i] = rule;
        if (obj._singleRules.get(rule.name) === original) {
          obj._singleRules.set(rule.name, rule);
        }
      }
      obj.$_temp.ruleset = false;
      return obj.$_mutateRebuild();
    }
    get ruleset() {
      Assert2(!this._inRuleset(), "Cannot start a new ruleset without closing the previous one");
      const obj = this.clone();
      obj.$_temp.ruleset = obj._rules.length;
      return obj;
    }
    get $() {
      return this.ruleset;
    }
    tailor(targets) {
      targets = [].concat(targets);
      Assert2(!this._inRuleset(), "Cannot tailor inside a ruleset");
      let obj = this;
      if (this.$_terms.alterations) {
        for (const { target, adjuster } of this.$_terms.alterations) {
          if (targets.includes(target)) {
            obj = adjuster(obj);
            Assert2(Common.isSchema(obj), "Alteration adjuster for", target, "failed to return a schema object");
          }
        }
      }
      obj = obj.$_modify({ each: (item) => item.tailor(targets), ref: false });
      obj.$_temp.ruleset = false;
      return obj.$_mutateRebuild();
    }
    tracer() {
      return Trace.location ? Trace.location(this) : this;
    }
    validate(value, options2) {
      return Validator.entry(value, this, options2);
    }
    validateAsync(value, options2) {
      return Validator.entryAsync(value, this, options2);
    }
    // Extensions
    $_addRule(options2) {
      if (typeof options2 === "string") {
        options2 = { name: options2 };
      }
      Assert2(options2 && typeof options2 === "object", "Invalid options");
      Assert2(options2.name && typeof options2.name === "string", "Invalid rule name");
      for (const key in options2) {
        Assert2(key[0] !== "_", "Cannot set private rule properties");
      }
      const rule = Object.assign({}, options2);
      rule._resolve = [];
      rule.method = rule.method || rule.name;
      const definition = this._definition.rules[rule.method];
      const args2 = rule.args;
      Assert2(definition, "Unknown rule", rule.method);
      const obj = this.clone();
      if (args2) {
        Assert2(Object.keys(args2).length === 1 || Object.keys(args2).length === this._definition.rules[rule.name].args.length, "Invalid rule definition for", this.type, rule.name);
        for (const key in args2) {
          let arg = args2[key];
          if (definition.argsByName) {
            const resolver = definition.argsByName.get(key);
            if (resolver.ref && Common.isResolvable(arg)) {
              rule._resolve.push(key);
              obj.$_mutateRegister(arg);
            } else {
              if (resolver.normalize) {
                arg = resolver.normalize(arg);
                args2[key] = arg;
              }
              if (resolver.assert) {
                const error2 = Common.validateArg(arg, key, resolver);
                Assert2(!error2, error2, "or reference");
              }
            }
          }
          if (arg === void 0) {
            delete args2[key];
            continue;
          }
          args2[key] = arg;
        }
      }
      if (!definition.multi) {
        obj._ruleRemove(rule.name, { clone: false });
        obj._singleRules.set(rule.name, rule);
      }
      if (obj.$_temp.ruleset === false) {
        obj.$_temp.ruleset = null;
      }
      if (definition.priority) {
        obj._rules.unshift(rule);
      } else {
        obj._rules.push(rule);
      }
      return obj;
    }
    $_compile(schema, options2) {
      return Compile.schema(this.$_root, schema, options2);
    }
    $_createError(code, value, local, state2, prefs, options2 = {}) {
      const flags = options2.flags !== false ? this._flags : {};
      const messages2 = options2.messages ? Messages.merge(this._definition.messages, options2.messages) : this._definition.messages;
      return new Errors2.Report(code, value, local, flags, messages2, state2, prefs);
    }
    $_getFlag(name2) {
      return this._flags[name2];
    }
    $_getRule(name2) {
      return this._singleRules.get(name2);
    }
    $_mapLabels(path) {
      path = Array.isArray(path) ? path : path.split(".");
      return this._ids.labels(path);
    }
    $_match(value, state2, prefs, overrides) {
      prefs = Object.assign({}, prefs);
      prefs.abortEarly = true;
      prefs._externals = false;
      state2.snapshot();
      const result = !Validator.validate(value, this, state2, prefs, overrides).errors;
      state2.restore();
      return result;
    }
    $_modify(options2) {
      Common.assertOptions(options2, ["each", "once", "ref", "schema"]);
      return Modify.schema(this, options2) || this;
    }
    $_mutateRebuild() {
      Assert2(!this._inRuleset(), "Cannot add this rule inside a ruleset");
      this._refs.reset();
      this._ids.reset();
      const each = (item, { source, name: name2, path, key }) => {
        const family = this._definition[source][name2] && this._definition[source][name2].register;
        if (family !== false) {
          this.$_mutateRegister(item, { family, key });
        }
      };
      this.$_modify({ each });
      if (this._definition.rebuild) {
        this._definition.rebuild(this);
      }
      this.$_temp.ruleset = false;
      return this;
    }
    $_mutateRegister(schema, { family, key } = {}) {
      this._refs.register(schema, family);
      this._ids.register(schema, { key });
    }
    $_property(name2) {
      return this._definition.properties[name2];
    }
    $_reach(path) {
      return this._ids.reach(path);
    }
    $_rootReferences() {
      return this._refs.roots();
    }
    $_setFlag(name2, value, options2 = {}) {
      Assert2(name2[0] === "_" || !this._inRuleset(), "Cannot set flag inside a ruleset");
      const flag = this._definition.flags[name2] || {};
      if (DeepEqual(value, flag.default)) {
        value = void 0;
      }
      if (DeepEqual(value, this._flags[name2])) {
        return this;
      }
      const obj = options2.clone !== false ? this.clone() : this;
      if (value !== void 0) {
        obj._flags[name2] = value;
        obj.$_mutateRegister(value);
      } else {
        delete obj._flags[name2];
      }
      if (name2[0] !== "_") {
        obj.$_temp.ruleset = false;
      }
      return obj;
    }
    $_parent(method, ...args2) {
      return this[method][Common.symbols.parent].call(this, ...args2);
    }
    $_validate(value, state2, prefs) {
      return Validator.validate(value, this, state2, prefs);
    }
    // Internals
    _assign(target) {
      target.type = this.type;
      target.$_root = this.$_root;
      target.$_temp = Object.assign({}, this.$_temp);
      target.$_temp.whens = {};
      target._ids = this._ids.clone();
      target._preferences = this._preferences;
      target._valids = this._valids && this._valids.clone();
      target._invalids = this._invalids && this._invalids.clone();
      target._rules = this._rules.slice();
      target._singleRules = Clone2(this._singleRules, { shallow: true });
      target._refs = this._refs.clone();
      target._flags = Object.assign({}, this._flags);
      target._cache = null;
      target.$_terms = {};
      for (const key in this.$_terms) {
        target.$_terms[key] = this.$_terms[key] ? this.$_terms[key].slice() : null;
      }
      target.$_super = {};
      for (const override in this.$_super) {
        target.$_super[override] = this._super[override].bind(target);
      }
      return target;
    }
    _bare() {
      const obj = this.clone();
      obj._reset();
      const terms = obj._definition.terms;
      for (const name2 in terms) {
        const term = terms[name2];
        obj.$_terms[name2] = term.init;
      }
      return obj.$_mutateRebuild();
    }
    _default(flag, value, options2 = {}) {
      Common.assertOptions(options2, "literal");
      Assert2(value !== void 0, "Missing", flag, "value");
      Assert2(typeof value === "function" || !options2.literal, "Only function value supports literal option");
      if (typeof value === "function" && options2.literal) {
        value = {
          [Common.symbols.literal]: true,
          literal: value
        };
      }
      const obj = this.$_setFlag(flag, value);
      return obj;
    }
    _generate(value, state2, prefs) {
      if (!this.$_terms.whens) {
        return { schema: this };
      }
      const whens = [];
      const ids = [];
      for (let i = 0; i < this.$_terms.whens.length; ++i) {
        const when = this.$_terms.whens[i];
        if (when.concat) {
          whens.push(when.concat);
          ids.push(`${i}.concat`);
          continue;
        }
        const input = when.ref ? when.ref.resolve(value, state2, prefs) : value;
        const tests = when.is ? [when] : when.switch;
        const before = ids.length;
        for (let j = 0; j < tests.length; ++j) {
          const { is, then, otherwise } = tests[j];
          const baseId = `${i}${when.switch ? "." + j : ""}`;
          if (is.$_match(input, state2.nest(is, `${baseId}.is`), prefs)) {
            if (then) {
              const localState = state2.localize([...state2.path, `${baseId}.then`], state2.ancestors, state2.schemas);
              const { schema: generated, id: id2 } = then._generate(value, localState, prefs);
              whens.push(generated);
              ids.push(`${baseId}.then${id2 ? `(${id2})` : ""}`);
              break;
            }
          } else if (otherwise) {
            const localState = state2.localize([...state2.path, `${baseId}.otherwise`], state2.ancestors, state2.schemas);
            const { schema: generated, id: id2 } = otherwise._generate(value, localState, prefs);
            whens.push(generated);
            ids.push(`${baseId}.otherwise${id2 ? `(${id2})` : ""}`);
            break;
          }
        }
        if (when.break && ids.length > before) {
          break;
        }
      }
      const id = ids.join(", ");
      state2.mainstay.tracer.debug(state2, "rule", "when", id);
      if (!id) {
        return { schema: this };
      }
      if (!state2.mainstay.tracer.active && this.$_temp.whens[id]) {
        return { schema: this.$_temp.whens[id], id };
      }
      let obj = this;
      if (this._definition.generate) {
        obj = this._definition.generate(this, value, state2, prefs);
      }
      for (const when of whens) {
        obj = obj.concat(when);
      }
      if (this.$_root._tracer) {
        this.$_root._tracer._combine(obj, [this, ...whens]);
      }
      this.$_temp.whens[id] = obj;
      return { schema: obj, id };
    }
    _inner(type, values2, options2 = {}) {
      Assert2(!this._inRuleset(), `Cannot set ${type} inside a ruleset`);
      const obj = this.clone();
      if (!obj.$_terms[type] || options2.override) {
        obj.$_terms[type] = [];
      }
      if (options2.single) {
        obj.$_terms[type].push(values2);
      } else {
        obj.$_terms[type].push(...values2);
      }
      obj.$_temp.ruleset = false;
      return obj;
    }
    _inRuleset() {
      return this.$_temp.ruleset !== null && this.$_temp.ruleset !== false;
    }
    _ruleRemove(name2, options2 = {}) {
      if (!this._singleRules.has(name2)) {
        return this;
      }
      const obj = options2.clone !== false ? this.clone() : this;
      obj._singleRules.delete(name2);
      const filtered = [];
      for (let i = 0; i < obj._rules.length; ++i) {
        const test = obj._rules[i];
        if (test.name === name2 && !test.keep) {
          if (obj._inRuleset() && i < obj.$_temp.ruleset) {
            --obj.$_temp.ruleset;
          }
          continue;
        }
        filtered.push(test);
      }
      obj._rules = filtered;
      return obj;
    }
    _values(values2, key) {
      Common.verifyFlat(values2, key.slice(1, -1));
      const obj = this.clone();
      const override = values2[0] === Common.symbols.override;
      if (override) {
        values2 = values2.slice(1);
      }
      if (!obj[key] && values2.length) {
        obj[key] = new Values();
      } else if (override) {
        obj[key] = values2.length ? new Values() : null;
        obj.$_mutateRebuild();
      }
      if (!obj[key]) {
        return obj;
      }
      if (override) {
        obj[key].override();
      }
      for (const value of values2) {
        Assert2(value !== void 0, "Cannot call allow/valid/invalid with undefined");
        Assert2(value !== Common.symbols.override, "Override must be the first value");
        const other = key === "_invalids" ? "_valids" : "_invalids";
        if (obj[other]) {
          obj[other].remove(value);
          if (!obj[other].length) {
            Assert2(key === "_valids" || !obj._flags.only, "Setting invalid value", value, "leaves schema rejecting all values due to previous valid rule");
            obj[other] = null;
          }
        }
        obj[key].add(value, obj._refs);
      }
      return obj;
    }
  };
  internals2.Base.prototype[Common.symbols.any] = {
    version: Common.version,
    compile: Compile.compile,
    root: "$_root"
  };
  internals2.Base.prototype.isImmutable = true;
  internals2.Base.prototype.deny = internals2.Base.prototype.invalid;
  internals2.Base.prototype.disallow = internals2.Base.prototype.invalid;
  internals2.Base.prototype.equal = internals2.Base.prototype.valid;
  internals2.Base.prototype.exist = internals2.Base.prototype.required;
  internals2.Base.prototype.not = internals2.Base.prototype.invalid;
  internals2.Base.prototype.options = internals2.Base.prototype.prefs;
  internals2.Base.prototype.preferences = internals2.Base.prototype.prefs;
  base = new internals2.Base();
  return base;
}
var any;
var hasRequiredAny;
function requireAny() {
  if (hasRequiredAny)
    return any;
  hasRequiredAny = 1;
  const Assert2 = assert;
  const Base = requireBase();
  const Common = requireCommon();
  const Messages = requireMessages();
  any = Base.extend({
    type: "any",
    flags: {
      only: { default: false }
    },
    terms: {
      alterations: { init: null },
      examples: { init: null },
      externals: { init: null },
      metas: { init: [] },
      notes: { init: [] },
      shared: { init: null },
      tags: { init: [] },
      whens: { init: null }
    },
    rules: {
      custom: {
        method(method, description2) {
          Assert2(typeof method === "function", "Method must be a function");
          Assert2(description2 === void 0 || description2 && typeof description2 === "string", "Description must be a non-empty string");
          return this.$_addRule({ name: "custom", args: { method, description: description2 } });
        },
        validate(value, helpers, { method }) {
          try {
            return method(value, helpers);
          } catch (err) {
            return helpers.error("any.custom", { error: err });
          }
        },
        args: ["method", "description"],
        multi: true
      },
      messages: {
        method(messages2) {
          return this.prefs({ messages: messages2 });
        }
      },
      shared: {
        method(schema) {
          Assert2(Common.isSchema(schema) && schema._flags.id, "Schema must be a schema with an id");
          const obj = this.clone();
          obj.$_terms.shared = obj.$_terms.shared || [];
          obj.$_terms.shared.push(schema);
          obj.$_mutateRegister(schema);
          return obj;
        }
      },
      warning: {
        method(code, local) {
          Assert2(code && typeof code === "string", "Invalid warning code");
          return this.$_addRule({ name: "warning", args: { code, local }, warn: true });
        },
        validate(value, helpers, { code, local }) {
          return helpers.error(code, local);
        },
        args: ["code", "local"],
        multi: true
      }
    },
    modifiers: {
      keep(rule, enabled = true) {
        rule.keep = enabled;
      },
      message(rule, message) {
        rule.message = Messages.compile(message);
      },
      warn(rule, enabled = true) {
        rule.warn = enabled;
      }
    },
    manifest: {
      build(obj, desc) {
        for (const key in desc) {
          const values2 = desc[key];
          if (["examples", "externals", "metas", "notes", "tags"].includes(key)) {
            for (const value of values2) {
              obj = obj[key.slice(0, -1)](value);
            }
            continue;
          }
          if (key === "alterations") {
            const alter = {};
            for (const { target, adjuster } of values2) {
              alter[target] = adjuster;
            }
            obj = obj.alter(alter);
            continue;
          }
          if (key === "whens") {
            for (const value of values2) {
              const { ref: ref2, is, not: not2, then, otherwise, concat: concat2 } = value;
              if (concat2) {
                obj = obj.concat(concat2);
              } else if (ref2) {
                obj = obj.when(ref2, { is, not: not2, then, otherwise, switch: value.switch, break: value.break });
              } else {
                obj = obj.when(is, { then, otherwise, break: value.break });
              }
            }
            continue;
          }
          if (key === "shared") {
            for (const value of values2) {
              obj = obj.shared(value);
            }
          }
        }
        return obj;
      }
    },
    messages: {
      "any.custom": "{{#label}} failed custom validation because {{#error.message}}",
      "any.default": "{{#label}} threw an error when running default method",
      "any.failover": "{{#label}} threw an error when running failover method",
      "any.invalid": "{{#label}} contains an invalid value",
      "any.only": '{{#label}} must be {if(#valids.length == 1, "", "one of ")}{{#valids}}',
      "any.ref": "{{#label}} {{#arg}} references {{:#ref}} which {{#reason}}",
      "any.required": "{{#label}} is required",
      "any.unknown": "{{#label}} is not allowed"
    }
  });
  return any;
}
var alternatives;
var hasRequiredAlternatives;
function requireAlternatives() {
  if (hasRequiredAlternatives)
    return alternatives;
  hasRequiredAlternatives = 1;
  const Assert2 = assert;
  const Merge2 = merge;
  const Any = requireAny();
  const Common = requireCommon();
  const Compile = requireCompile();
  const Errors2 = requireErrors();
  const Ref = requireRef();
  const internals2 = {};
  alternatives = Any.extend({
    type: "alternatives",
    flags: {
      match: { default: "any" }
      // 'any', 'one', 'all'
    },
    terms: {
      matches: { init: [], register: Ref.toSibling }
    },
    args(schema, ...schemas2) {
      if (schemas2.length === 1) {
        if (Array.isArray(schemas2[0])) {
          return schema.try(...schemas2[0]);
        }
      }
      return schema.try(...schemas2);
    },
    validate(value, helpers) {
      const { schema, error: error2, state: state2, prefs } = helpers;
      if (schema._flags.match) {
        const matched = [];
        const failed = [];
        for (let i = 0; i < schema.$_terms.matches.length; ++i) {
          const item = schema.$_terms.matches[i];
          const localState = state2.nest(item.schema, `match.${i}`);
          localState.snapshot();
          const result = item.schema.$_validate(value, localState, prefs);
          if (!result.errors) {
            matched.push(result.value);
          } else {
            failed.push(result.errors);
            localState.restore();
          }
        }
        if (matched.length === 0) {
          const context2 = {
            details: failed.map((f) => Errors2.details(f, { override: false }))
          };
          return { errors: error2("alternatives.any", context2) };
        }
        if (schema._flags.match === "one") {
          return matched.length === 1 ? { value: matched[0] } : { errors: error2("alternatives.one") };
        }
        if (matched.length !== schema.$_terms.matches.length) {
          const context2 = {
            details: failed.map((f) => Errors2.details(f, { override: false }))
          };
          return { errors: error2("alternatives.all", context2) };
        }
        const isAnyObj = (alternative) => {
          return alternative.$_terms.matches.some((v) => {
            return v.schema.type === "object" || v.schema.type === "alternatives" && isAnyObj(v.schema);
          });
        };
        return isAnyObj(schema) ? { value: matched.reduce((acc, v) => Merge2(acc, v, { mergeArrays: false })) } : { value: matched[matched.length - 1] };
      }
      const errors2 = [];
      for (let i = 0; i < schema.$_terms.matches.length; ++i) {
        const item = schema.$_terms.matches[i];
        if (item.schema) {
          const localState = state2.nest(item.schema, `match.${i}`);
          localState.snapshot();
          const result = item.schema.$_validate(value, localState, prefs);
          if (!result.errors) {
            return result;
          }
          localState.restore();
          errors2.push({ schema: item.schema, reports: result.errors });
          continue;
        }
        const input = item.ref ? item.ref.resolve(value, state2, prefs) : value;
        const tests = item.is ? [item] : item.switch;
        for (let j = 0; j < tests.length; ++j) {
          const test = tests[j];
          const { is, then, otherwise } = test;
          const id = `match.${i}${item.switch ? "." + j : ""}`;
          if (!is.$_match(input, state2.nest(is, `${id}.is`), prefs)) {
            if (otherwise) {
              return otherwise.$_validate(value, state2.nest(otherwise, `${id}.otherwise`), prefs);
            }
          } else if (then) {
            return then.$_validate(value, state2.nest(then, `${id}.then`), prefs);
          }
        }
      }
      return internals2.errors(errors2, helpers);
    },
    rules: {
      conditional: {
        method(condition, options2) {
          Assert2(!this._flags._endedSwitch, "Unreachable condition");
          Assert2(!this._flags.match, "Cannot combine match mode", this._flags.match, "with conditional rule");
          Assert2(options2.break === void 0, "Cannot use break option with alternatives conditional");
          const obj = this.clone();
          const match = Compile.when(obj, condition, options2);
          const conditions = match.is ? [match] : match.switch;
          for (const item of conditions) {
            if (item.then && item.otherwise) {
              obj.$_setFlag("_endedSwitch", true, { clone: false });
              break;
            }
          }
          obj.$_terms.matches.push(match);
          return obj.$_mutateRebuild();
        }
      },
      match: {
        method(mode) {
          Assert2(["any", "one", "all"].includes(mode), "Invalid alternatives match mode", mode);
          if (mode !== "any") {
            for (const match of this.$_terms.matches) {
              Assert2(match.schema, "Cannot combine match mode", mode, "with conditional rules");
            }
          }
          return this.$_setFlag("match", mode);
        }
      },
      try: {
        method(...schemas2) {
          Assert2(schemas2.length, "Missing alternative schemas");
          Common.verifyFlat(schemas2, "try");
          Assert2(!this._flags._endedSwitch, "Unreachable condition");
          const obj = this.clone();
          for (const schema of schemas2) {
            obj.$_terms.matches.push({ schema: obj.$_compile(schema) });
          }
          return obj.$_mutateRebuild();
        }
      }
    },
    overrides: {
      label(name2) {
        const obj = this.$_parent("label", name2);
        const each = (item, source) => source.path[0] !== "is" ? item.label(name2) : void 0;
        return obj.$_modify({ each, ref: false });
      }
    },
    rebuild(schema) {
      const each = (item) => {
        if (Common.isSchema(item) && item.type === "array") {
          schema.$_setFlag("_arrayItems", true, { clone: false });
        }
      };
      schema.$_modify({ each });
    },
    manifest: {
      build(obj, desc) {
        if (desc.matches) {
          for (const match of desc.matches) {
            const { schema, ref: ref2, is, not: not2, then, otherwise } = match;
            if (schema) {
              obj = obj.try(schema);
            } else if (ref2) {
              obj = obj.conditional(ref2, { is, then, not: not2, otherwise, switch: match.switch });
            } else {
              obj = obj.conditional(is, { then, otherwise });
            }
          }
        }
        return obj;
      }
    },
    messages: {
      "alternatives.all": "{{#label}} does not match all of the required types",
      "alternatives.any": "{{#label}} does not match any of the allowed types",
      "alternatives.match": "{{#label}} does not match any of the allowed types",
      "alternatives.one": "{{#label}} matches more than one allowed type",
      "alternatives.types": "{{#label}} must be one of {{#types}}"
    }
  });
  internals2.errors = function(failures, { error: error2, state: state2 }) {
    if (!failures.length) {
      return { errors: error2("alternatives.any") };
    }
    if (failures.length === 1) {
      return { errors: failures[0].reports };
    }
    const valids = /* @__PURE__ */ new Set();
    const complex = [];
    for (const { reports, schema } of failures) {
      if (reports.length > 1) {
        return internals2.unmatched(failures, error2);
      }
      const report = reports[0];
      if (report instanceof Errors2.Report === false) {
        return internals2.unmatched(failures, error2);
      }
      if (report.state.path.length !== state2.path.length) {
        complex.push({ type: schema.type, report });
        continue;
      }
      if (report.code === "any.only") {
        for (const valid of report.local.valids) {
          valids.add(valid);
        }
        continue;
      }
      const [type, code] = report.code.split(".");
      if (code !== "base") {
        complex.push({ type: schema.type, report });
        continue;
      }
      valids.add(type);
    }
    if (!complex.length) {
      return { errors: error2("alternatives.types", { types: [...valids] }) };
    }
    if (complex.length === 1) {
      return { errors: complex[0].report };
    }
    return internals2.unmatched(failures, error2);
  };
  internals2.unmatched = function(failures, error2) {
    const errors2 = [];
    for (const failure of failures) {
      errors2.push(...failure.reports);
    }
    return { errors: error2("alternatives.match", Errors2.details(errors2, { override: false })) };
  };
  return alternatives;
}
var array;
var hasRequiredArray;
function requireArray() {
  if (hasRequiredArray)
    return array;
  hasRequiredArray = 1;
  const Assert2 = assert;
  const DeepEqual = deepEqual;
  const Reach2 = reach;
  const Any = requireAny();
  const Common = requireCommon();
  const Compile = requireCompile();
  const internals2 = {};
  array = Any.extend({
    type: "array",
    flags: {
      single: { default: false },
      sparse: { default: false }
    },
    terms: {
      items: { init: [], manifest: "schema" },
      ordered: { init: [], manifest: "schema" },
      _exclusions: { init: [] },
      _inclusions: { init: [] },
      _requireds: { init: [] }
    },
    coerce: {
      from: "object",
      method(value, { schema, state: state2, prefs }) {
        if (!Array.isArray(value)) {
          return;
        }
        const sort = schema.$_getRule("sort");
        if (!sort) {
          return;
        }
        return internals2.sort(schema, value, sort.args.options, state2, prefs);
      }
    },
    validate(value, { schema, error: error2 }) {
      if (!Array.isArray(value)) {
        if (schema._flags.single) {
          const single2 = [value];
          single2[Common.symbols.arraySingle] = true;
          return { value: single2 };
        }
        return { errors: error2("array.base") };
      }
      if (!schema.$_getRule("items") && !schema.$_terms.externals) {
        return;
      }
      return { value: value.slice() };
    },
    rules: {
      has: {
        method(schema) {
          schema = this.$_compile(schema, { appendPath: true });
          const obj = this.$_addRule({ name: "has", args: { schema } });
          obj.$_mutateRegister(schema);
          return obj;
        },
        validate(value, { state: state2, prefs, error: error2 }, { schema: has }) {
          const ancestors = [value, ...state2.ancestors];
          for (let i = 0; i < value.length; ++i) {
            const localState = state2.localize([...state2.path, i], ancestors, has);
            if (has.$_match(value[i], localState, prefs)) {
              return value;
            }
          }
          const patternLabel = has._flags.label;
          if (patternLabel) {
            return error2("array.hasKnown", { patternLabel });
          }
          return error2("array.hasUnknown", null);
        },
        multi: true
      },
      items: {
        method(...schemas2) {
          Common.verifyFlat(schemas2, "items");
          const obj = this.$_addRule("items");
          for (let i = 0; i < schemas2.length; ++i) {
            const type = Common.tryWithPath(() => this.$_compile(schemas2[i]), i, { append: true });
            obj.$_terms.items.push(type);
          }
          return obj.$_mutateRebuild();
        },
        validate(value, { schema, error: error2, state: state2, prefs, errorsArray }) {
          const requireds = schema.$_terms._requireds.slice();
          const ordereds = schema.$_terms.ordered.slice();
          const inclusions = [...schema.$_terms._inclusions, ...requireds];
          const wasArray = !value[Common.symbols.arraySingle];
          delete value[Common.symbols.arraySingle];
          const errors2 = errorsArray();
          let il = value.length;
          for (let i = 0; i < il; ++i) {
            const item = value[i];
            let errored = false;
            let isValid = false;
            const key = wasArray ? i : new Number(i);
            const path = [...state2.path, key];
            if (!schema._flags.sparse && item === void 0) {
              errors2.push(error2("array.sparse", { key, path, pos: i, value: void 0 }, state2.localize(path)));
              if (prefs.abortEarly) {
                return errors2;
              }
              ordereds.shift();
              continue;
            }
            const ancestors = [value, ...state2.ancestors];
            for (const exclusion of schema.$_terms._exclusions) {
              if (!exclusion.$_match(item, state2.localize(path, ancestors, exclusion), prefs, { presence: "ignore" })) {
                continue;
              }
              errors2.push(error2("array.excludes", { pos: i, value: item }, state2.localize(path)));
              if (prefs.abortEarly) {
                return errors2;
              }
              errored = true;
              ordereds.shift();
              break;
            }
            if (errored) {
              continue;
            }
            if (schema.$_terms.ordered.length) {
              if (ordereds.length) {
                const ordered = ordereds.shift();
                const res = ordered.$_validate(item, state2.localize(path, ancestors, ordered), prefs);
                if (!res.errors) {
                  if (ordered._flags.result === "strip") {
                    internals2.fastSplice(value, i);
                    --i;
                    --il;
                  } else if (!schema._flags.sparse && res.value === void 0) {
                    errors2.push(error2("array.sparse", { key, path, pos: i, value: void 0 }, state2.localize(path)));
                    if (prefs.abortEarly) {
                      return errors2;
                    }
                    continue;
                  } else {
                    value[i] = res.value;
                  }
                } else {
                  errors2.push(...res.errors);
                  if (prefs.abortEarly) {
                    return errors2;
                  }
                }
                continue;
              } else if (!schema.$_terms.items.length) {
                errors2.push(error2("array.orderedLength", { pos: i, limit: schema.$_terms.ordered.length }));
                if (prefs.abortEarly) {
                  return errors2;
                }
                break;
              }
            }
            const requiredChecks = [];
            let jl = requireds.length;
            for (let j = 0; j < jl; ++j) {
              const localState = state2.localize(path, ancestors, requireds[j]);
              localState.snapshot();
              const res = requireds[j].$_validate(item, localState, prefs);
              requiredChecks[j] = res;
              if (!res.errors) {
                value[i] = res.value;
                isValid = true;
                internals2.fastSplice(requireds, j);
                --j;
                --jl;
                if (!schema._flags.sparse && res.value === void 0) {
                  errors2.push(error2("array.sparse", { key, path, pos: i, value: void 0 }, state2.localize(path)));
                  if (prefs.abortEarly) {
                    return errors2;
                  }
                }
                break;
              }
              localState.restore();
            }
            if (isValid) {
              continue;
            }
            const stripUnknown = prefs.stripUnknown && !!prefs.stripUnknown.arrays || false;
            jl = inclusions.length;
            for (const inclusion of inclusions) {
              let res;
              const previousCheck = requireds.indexOf(inclusion);
              if (previousCheck !== -1) {
                res = requiredChecks[previousCheck];
              } else {
                const localState = state2.localize(path, ancestors, inclusion);
                localState.snapshot();
                res = inclusion.$_validate(item, localState, prefs);
                if (!res.errors) {
                  if (inclusion._flags.result === "strip") {
                    internals2.fastSplice(value, i);
                    --i;
                    --il;
                  } else if (!schema._flags.sparse && res.value === void 0) {
                    errors2.push(error2("array.sparse", { key, path, pos: i, value: void 0 }, state2.localize(path)));
                    errored = true;
                  } else {
                    value[i] = res.value;
                  }
                  isValid = true;
                  break;
                }
                localState.restore();
              }
              if (jl === 1) {
                if (stripUnknown) {
                  internals2.fastSplice(value, i);
                  --i;
                  --il;
                  isValid = true;
                  break;
                }
                errors2.push(...res.errors);
                if (prefs.abortEarly) {
                  return errors2;
                }
                errored = true;
                break;
              }
            }
            if (errored) {
              continue;
            }
            if ((schema.$_terms._inclusions.length || schema.$_terms._requireds.length) && !isValid) {
              if (stripUnknown) {
                internals2.fastSplice(value, i);
                --i;
                --il;
                continue;
              }
              errors2.push(error2("array.includes", { pos: i, value: item }, state2.localize(path)));
              if (prefs.abortEarly) {
                return errors2;
              }
            }
          }
          if (requireds.length) {
            internals2.fillMissedErrors(schema, errors2, requireds, value, state2, prefs);
          }
          if (ordereds.length) {
            internals2.fillOrderedErrors(schema, errors2, ordereds, value, state2, prefs);
            if (!errors2.length) {
              internals2.fillDefault(ordereds, value, state2, prefs);
            }
          }
          return errors2.length ? errors2 : value;
        },
        priority: true,
        manifest: false
      },
      length: {
        method(limit) {
          return this.$_addRule({ name: "length", args: { limit }, operator: "=" });
        },
        validate(value, helpers, { limit }, { name: name2, operator, args: args2 }) {
          if (Common.compare(value.length, limit, operator)) {
            return value;
          }
          return helpers.error("array." + name2, { limit: args2.limit, value });
        },
        args: [
          {
            name: "limit",
            ref: true,
            assert: Common.limit,
            message: "must be a positive integer"
          }
        ]
      },
      max: {
        method(limit) {
          return this.$_addRule({ name: "max", method: "length", args: { limit }, operator: "<=" });
        }
      },
      min: {
        method(limit) {
          return this.$_addRule({ name: "min", method: "length", args: { limit }, operator: ">=" });
        }
      },
      ordered: {
        method(...schemas2) {
          Common.verifyFlat(schemas2, "ordered");
          const obj = this.$_addRule("items");
          for (let i = 0; i < schemas2.length; ++i) {
            const type = Common.tryWithPath(() => this.$_compile(schemas2[i]), i, { append: true });
            internals2.validateSingle(type, obj);
            obj.$_mutateRegister(type);
            obj.$_terms.ordered.push(type);
          }
          return obj.$_mutateRebuild();
        }
      },
      single: {
        method(enabled) {
          const value = enabled === void 0 ? true : !!enabled;
          Assert2(!value || !this._flags._arrayItems, "Cannot specify single rule when array has array items");
          return this.$_setFlag("single", value);
        }
      },
      sort: {
        method(options2 = {}) {
          Common.assertOptions(options2, ["by", "order"]);
          const settings = {
            order: options2.order || "ascending"
          };
          if (options2.by) {
            settings.by = Compile.ref(options2.by, { ancestor: 0 });
            Assert2(!settings.by.ancestor, "Cannot sort by ancestor");
          }
          return this.$_addRule({ name: "sort", args: { options: settings } });
        },
        validate(value, { error: error2, state: state2, prefs, schema }, { options: options2 }) {
          const { value: sorted, errors: errors2 } = internals2.sort(schema, value, options2, state2, prefs);
          if (errors2) {
            return errors2;
          }
          for (let i = 0; i < value.length; ++i) {
            if (value[i] !== sorted[i]) {
              return error2("array.sort", { order: options2.order, by: options2.by ? options2.by.key : "value" });
            }
          }
          return value;
        },
        convert: true
      },
      sparse: {
        method(enabled) {
          const value = enabled === void 0 ? true : !!enabled;
          if (this._flags.sparse === value) {
            return this;
          }
          const obj = value ? this.clone() : this.$_addRule("items");
          return obj.$_setFlag("sparse", value, { clone: false });
        }
      },
      unique: {
        method(comparator, options2 = {}) {
          Assert2(!comparator || typeof comparator === "function" || typeof comparator === "string", "comparator must be a function or a string");
          Common.assertOptions(options2, ["ignoreUndefined", "separator"]);
          const rule = { name: "unique", args: { options: options2, comparator } };
          if (comparator) {
            if (typeof comparator === "string") {
              const separator = Common.default(options2.separator, ".");
              rule.path = separator ? comparator.split(separator) : [comparator];
            } else {
              rule.comparator = comparator;
            }
          }
          return this.$_addRule(rule);
        },
        validate(value, { state: state2, error: error2, schema }, { comparator: raw, options: options2 }, { comparator, path }) {
          const found = {
            string: /* @__PURE__ */ Object.create(null),
            number: /* @__PURE__ */ Object.create(null),
            undefined: /* @__PURE__ */ Object.create(null),
            boolean: /* @__PURE__ */ Object.create(null),
            object: /* @__PURE__ */ new Map(),
            function: /* @__PURE__ */ new Map(),
            custom: /* @__PURE__ */ new Map()
          };
          const compare = comparator || DeepEqual;
          const ignoreUndefined = options2.ignoreUndefined;
          for (let i = 0; i < value.length; ++i) {
            const item = path ? Reach2(value[i], path) : value[i];
            const records = comparator ? found.custom : found[typeof item];
            Assert2(records, "Failed to find unique map container for type", typeof item);
            if (records instanceof Map) {
              const entries = records.entries();
              let current2;
              while (!(current2 = entries.next()).done) {
                if (compare(current2.value[0], item)) {
                  const localState = state2.localize([...state2.path, i], [value, ...state2.ancestors]);
                  const context2 = {
                    pos: i,
                    value: value[i],
                    dupePos: current2.value[1],
                    dupeValue: value[current2.value[1]]
                  };
                  if (path) {
                    context2.path = raw;
                  }
                  return error2("array.unique", context2, localState);
                }
              }
              records.set(item, i);
            } else {
              if ((!ignoreUndefined || item !== void 0) && records[item] !== void 0) {
                const context2 = {
                  pos: i,
                  value: value[i],
                  dupePos: records[item],
                  dupeValue: value[records[item]]
                };
                if (path) {
                  context2.path = raw;
                }
                const localState = state2.localize([...state2.path, i], [value, ...state2.ancestors]);
                return error2("array.unique", context2, localState);
              }
              records[item] = i;
            }
          }
          return value;
        },
        args: ["comparator", "options"],
        multi: true
      }
    },
    cast: {
      set: {
        from: Array.isArray,
        to(value, helpers) {
          return new Set(value);
        }
      }
    },
    rebuild(schema) {
      schema.$_terms._inclusions = [];
      schema.$_terms._exclusions = [];
      schema.$_terms._requireds = [];
      for (const type of schema.$_terms.items) {
        internals2.validateSingle(type, schema);
        if (type._flags.presence === "required") {
          schema.$_terms._requireds.push(type);
        } else if (type._flags.presence === "forbidden") {
          schema.$_terms._exclusions.push(type);
        } else {
          schema.$_terms._inclusions.push(type);
        }
      }
      for (const type of schema.$_terms.ordered) {
        internals2.validateSingle(type, schema);
      }
    },
    manifest: {
      build(obj, desc) {
        if (desc.items) {
          obj = obj.items(...desc.items);
        }
        if (desc.ordered) {
          obj = obj.ordered(...desc.ordered);
        }
        return obj;
      }
    },
    messages: {
      "array.base": "{{#label}} must be an array",
      "array.excludes": "{{#label}} contains an excluded value",
      "array.hasKnown": "{{#label}} does not contain at least one required match for type {:#patternLabel}",
      "array.hasUnknown": "{{#label}} does not contain at least one required match",
      "array.includes": "{{#label}} does not match any of the allowed types",
      "array.includesRequiredBoth": "{{#label}} does not contain {{#knownMisses}} and {{#unknownMisses}} other required value(s)",
      "array.includesRequiredKnowns": "{{#label}} does not contain {{#knownMisses}}",
      "array.includesRequiredUnknowns": "{{#label}} does not contain {{#unknownMisses}} required value(s)",
      "array.length": "{{#label}} must contain {{#limit}} items",
      "array.max": "{{#label}} must contain less than or equal to {{#limit}} items",
      "array.min": "{{#label}} must contain at least {{#limit}} items",
      "array.orderedLength": "{{#label}} must contain at most {{#limit}} items",
      "array.sort": "{{#label}} must be sorted in {#order} order by {{#by}}",
      "array.sort.mismatching": "{{#label}} cannot be sorted due to mismatching types",
      "array.sort.unsupported": "{{#label}} cannot be sorted due to unsupported type {#type}",
      "array.sparse": "{{#label}} must not be a sparse array item",
      "array.unique": "{{#label}} contains a duplicate value"
    }
  });
  internals2.fillMissedErrors = function(schema, errors2, requireds, value, state2, prefs) {
    const knownMisses = [];
    let unknownMisses = 0;
    for (const required of requireds) {
      const label = required._flags.label;
      if (label) {
        knownMisses.push(label);
      } else {
        ++unknownMisses;
      }
    }
    if (knownMisses.length) {
      if (unknownMisses) {
        errors2.push(schema.$_createError("array.includesRequiredBoth", value, { knownMisses, unknownMisses }, state2, prefs));
      } else {
        errors2.push(schema.$_createError("array.includesRequiredKnowns", value, { knownMisses }, state2, prefs));
      }
    } else {
      errors2.push(schema.$_createError("array.includesRequiredUnknowns", value, { unknownMisses }, state2, prefs));
    }
  };
  internals2.fillOrderedErrors = function(schema, errors2, ordereds, value, state2, prefs) {
    const requiredOrdereds = [];
    for (const ordered of ordereds) {
      if (ordered._flags.presence === "required") {
        requiredOrdereds.push(ordered);
      }
    }
    if (requiredOrdereds.length) {
      internals2.fillMissedErrors(schema, errors2, requiredOrdereds, value, state2, prefs);
    }
  };
  internals2.fillDefault = function(ordereds, value, state2, prefs) {
    const overrides = [];
    let trailingUndefined = true;
    for (let i = ordereds.length - 1; i >= 0; --i) {
      const ordered = ordereds[i];
      const ancestors = [value, ...state2.ancestors];
      const override = ordered.$_validate(void 0, state2.localize(state2.path, ancestors, ordered), prefs).value;
      if (trailingUndefined) {
        if (override === void 0) {
          continue;
        }
        trailingUndefined = false;
      }
      overrides.unshift(override);
    }
    if (overrides.length) {
      value.push(...overrides);
    }
  };
  internals2.fastSplice = function(arr, i) {
    let pos = i;
    while (pos < arr.length) {
      arr[pos++] = arr[pos];
    }
    --arr.length;
  };
  internals2.validateSingle = function(type, obj) {
    if (type.type === "array" || type._flags._arrayItems) {
      Assert2(!obj._flags.single, "Cannot specify array item with single rule enabled");
      obj.$_setFlag("_arrayItems", true, { clone: false });
    }
  };
  internals2.sort = function(schema, value, settings, state2, prefs) {
    const order = settings.order === "ascending" ? 1 : -1;
    const aFirst = -1 * order;
    const bFirst = order;
    const sort = (a, b) => {
      let compare = internals2.compare(a, b, aFirst, bFirst);
      if (compare !== null) {
        return compare;
      }
      if (settings.by) {
        a = settings.by.resolve(a, state2, prefs);
        b = settings.by.resolve(b, state2, prefs);
      }
      compare = internals2.compare(a, b, aFirst, bFirst);
      if (compare !== null) {
        return compare;
      }
      const type = typeof a;
      if (type !== typeof b) {
        throw schema.$_createError("array.sort.mismatching", value, null, state2, prefs);
      }
      if (type !== "number" && type !== "string") {
        throw schema.$_createError("array.sort.unsupported", value, { type }, state2, prefs);
      }
      if (type === "number") {
        return (a - b) * order;
      }
      return a < b ? aFirst : bFirst;
    };
    try {
      return { value: value.slice().sort(sort) };
    } catch (err) {
      return { errors: err };
    }
  };
  internals2.compare = function(a, b, aFirst, bFirst) {
    if (a === b) {
      return 0;
    }
    if (a === void 0) {
      return 1;
    }
    if (b === void 0) {
      return -1;
    }
    if (a === null) {
      return bFirst;
    }
    if (b === null) {
      return aFirst;
    }
    return null;
  };
  return array;
}
var boolean;
var hasRequiredBoolean;
function requireBoolean() {
  if (hasRequiredBoolean)
    return boolean;
  hasRequiredBoolean = 1;
  const Assert2 = assert;
  const Any = requireAny();
  const Common = requireCommon();
  const Values = requireValues();
  const internals2 = {};
  internals2.isBool = function(value) {
    return typeof value === "boolean";
  };
  boolean = Any.extend({
    type: "boolean",
    flags: {
      sensitive: { default: false }
    },
    terms: {
      falsy: {
        init: null,
        manifest: "values"
      },
      truthy: {
        init: null,
        manifest: "values"
      }
    },
    coerce(value, { schema }) {
      if (typeof value === "boolean") {
        return;
      }
      if (typeof value === "string") {
        const normalized = schema._flags.sensitive ? value : value.toLowerCase();
        value = normalized === "true" ? true : normalized === "false" ? false : value;
      }
      if (typeof value !== "boolean") {
        value = schema.$_terms.truthy && schema.$_terms.truthy.has(value, null, null, !schema._flags.sensitive) || (schema.$_terms.falsy && schema.$_terms.falsy.has(value, null, null, !schema._flags.sensitive) ? false : value);
      }
      return { value };
    },
    validate(value, { error: error2 }) {
      if (typeof value !== "boolean") {
        return { value, errors: error2("boolean.base") };
      }
    },
    rules: {
      truthy: {
        method(...values2) {
          Common.verifyFlat(values2, "truthy");
          const obj = this.clone();
          obj.$_terms.truthy = obj.$_terms.truthy || new Values();
          for (let i = 0; i < values2.length; ++i) {
            const value = values2[i];
            Assert2(value !== void 0, "Cannot call truthy with undefined");
            obj.$_terms.truthy.add(value);
          }
          return obj;
        }
      },
      falsy: {
        method(...values2) {
          Common.verifyFlat(values2, "falsy");
          const obj = this.clone();
          obj.$_terms.falsy = obj.$_terms.falsy || new Values();
          for (let i = 0; i < values2.length; ++i) {
            const value = values2[i];
            Assert2(value !== void 0, "Cannot call falsy with undefined");
            obj.$_terms.falsy.add(value);
          }
          return obj;
        }
      },
      sensitive: {
        method(enabled = true) {
          return this.$_setFlag("sensitive", enabled);
        }
      }
    },
    cast: {
      number: {
        from: internals2.isBool,
        to(value, helpers) {
          return value ? 1 : 0;
        }
      },
      string: {
        from: internals2.isBool,
        to(value, helpers) {
          return value ? "true" : "false";
        }
      }
    },
    manifest: {
      build(obj, desc) {
        if (desc.truthy) {
          obj = obj.truthy(...desc.truthy);
        }
        if (desc.falsy) {
          obj = obj.falsy(...desc.falsy);
        }
        return obj;
      }
    },
    messages: {
      "boolean.base": "{{#label}} must be a boolean"
    }
  });
  return boolean;
}
var date;
var hasRequiredDate;
function requireDate() {
  if (hasRequiredDate)
    return date;
  hasRequiredDate = 1;
  const Assert2 = assert;
  const Any = requireAny();
  const Common = requireCommon();
  const Template = requireTemplate();
  const internals2 = {};
  internals2.isDate = function(value) {
    return value instanceof Date;
  };
  date = Any.extend({
    type: "date",
    coerce: {
      from: ["number", "string"],
      method(value, { schema }) {
        return { value: internals2.parse(value, schema._flags.format) || value };
      }
    },
    validate(value, { schema, error: error2, prefs }) {
      if (value instanceof Date && !isNaN(value.getTime())) {
        return;
      }
      const format = schema._flags.format;
      if (!prefs.convert || !format || typeof value !== "string") {
        return { value, errors: error2("date.base") };
      }
      return { value, errors: error2("date.format", { format }) };
    },
    rules: {
      compare: {
        method: false,
        validate(value, helpers, { date: date2 }, { name: name2, operator, args: args2 }) {
          const to = date2 === "now" ? Date.now() : date2.getTime();
          if (Common.compare(value.getTime(), to, operator)) {
            return value;
          }
          return helpers.error("date." + name2, { limit: args2.date, value });
        },
        args: [
          {
            name: "date",
            ref: true,
            normalize: (date2) => {
              return date2 === "now" ? date2 : internals2.parse(date2);
            },
            assert: (date2) => date2 !== null,
            message: "must have a valid date format"
          }
        ]
      },
      format: {
        method(format) {
          Assert2(["iso", "javascript", "unix"].includes(format), "Unknown date format", format);
          return this.$_setFlag("format", format);
        }
      },
      greater: {
        method(date2) {
          return this.$_addRule({ name: "greater", method: "compare", args: { date: date2 }, operator: ">" });
        }
      },
      iso: {
        method() {
          return this.format("iso");
        }
      },
      less: {
        method(date2) {
          return this.$_addRule({ name: "less", method: "compare", args: { date: date2 }, operator: "<" });
        }
      },
      max: {
        method(date2) {
          return this.$_addRule({ name: "max", method: "compare", args: { date: date2 }, operator: "<=" });
        }
      },
      min: {
        method(date2) {
          return this.$_addRule({ name: "min", method: "compare", args: { date: date2 }, operator: ">=" });
        }
      },
      timestamp: {
        method(type = "javascript") {
          Assert2(["javascript", "unix"].includes(type), '"type" must be one of "javascript, unix"');
          return this.format(type);
        }
      }
    },
    cast: {
      number: {
        from: internals2.isDate,
        to(value, helpers) {
          return value.getTime();
        }
      },
      string: {
        from: internals2.isDate,
        to(value, { prefs }) {
          return Template.date(value, prefs);
        }
      }
    },
    messages: {
      "date.base": "{{#label}} must be a valid date",
      "date.format": '{{#label}} must be in {msg("date.format." + #format) || #format} format',
      "date.greater": "{{#label}} must be greater than {{:#limit}}",
      "date.less": "{{#label}} must be less than {{:#limit}}",
      "date.max": "{{#label}} must be less than or equal to {{:#limit}}",
      "date.min": "{{#label}} must be greater than or equal to {{:#limit}}",
      // Messages used in date.format
      "date.format.iso": "ISO 8601 date",
      "date.format.javascript": "timestamp or number of milliseconds",
      "date.format.unix": "timestamp or number of seconds"
    }
  });
  internals2.parse = function(value, format) {
    if (value instanceof Date) {
      return value;
    }
    if (typeof value !== "string" && (isNaN(value) || !isFinite(value))) {
      return null;
    }
    if (/^\s*$/.test(value)) {
      return null;
    }
    if (format === "iso") {
      if (!Common.isIsoDate(value)) {
        return null;
      }
      return internals2.date(value.toString());
    }
    const original = value;
    if (typeof value === "string" && /^[+-]?\d+(\.\d+)?$/.test(value)) {
      value = parseFloat(value);
    }
    if (format) {
      if (format === "javascript") {
        return internals2.date(1 * value);
      }
      if (format === "unix") {
        return internals2.date(1e3 * value);
      }
      if (typeof original === "string") {
        return null;
      }
    }
    return internals2.date(value);
  };
  internals2.date = function(value) {
    const date2 = new Date(value);
    if (!isNaN(date2.getTime())) {
      return date2;
    }
    return null;
  };
  return date;
}
const Assert$3 = assert;
const Clone = clone;
const Merge = merge;
const Reach = reach;
const internals$4 = {};
var applyToDefaults = function(defaults, source, options2 = {}) {
  Assert$3(defaults && typeof defaults === "object", "Invalid defaults value: must be an object");
  Assert$3(!source || source === true || typeof source === "object", "Invalid source value: must be true, falsy or an object");
  Assert$3(typeof options2 === "object", "Invalid options: must be an object");
  if (!source) {
    return null;
  }
  if (options2.shallow) {
    return internals$4.applyToDefaultsWithShallow(defaults, source, options2);
  }
  const copy = Clone(defaults);
  if (source === true) {
    return copy;
  }
  const nullOverride = options2.nullOverride !== void 0 ? options2.nullOverride : false;
  return Merge(copy, source, { nullOverride, mergeArrays: false });
};
internals$4.applyToDefaultsWithShallow = function(defaults, source, options2) {
  const keys2 = options2.shallow;
  Assert$3(Array.isArray(keys2), "Invalid keys");
  const seen = /* @__PURE__ */ new Map();
  const merge2 = source === true ? null : /* @__PURE__ */ new Set();
  for (let key of keys2) {
    key = Array.isArray(key) ? key : key.split(".");
    const ref2 = Reach(defaults, key);
    if (ref2 && typeof ref2 === "object") {
      seen.set(ref2, merge2 && Reach(source, key) || ref2);
    } else if (merge2) {
      merge2.add(key);
    }
  }
  const copy = Clone(defaults, {}, seen);
  if (!merge2) {
    return copy;
  }
  for (const key of merge2) {
    internals$4.reachCopy(copy, source, key);
  }
  const nullOverride = options2.nullOverride !== void 0 ? options2.nullOverride : false;
  return Merge(copy, source, { nullOverride, mergeArrays: false });
};
internals$4.reachCopy = function(dst, src, path) {
  for (const segment of path) {
    if (!(segment in src)) {
      return;
    }
    const val = src[segment];
    if (typeof val !== "object" || val === null) {
      return;
    }
    src = val;
  }
  const value = src;
  let ref2 = dst;
  for (let i = 0; i < path.length - 1; ++i) {
    const segment = path[i];
    if (typeof ref2[segment] !== "object") {
      ref2[segment] = {};
    }
    ref2 = ref2[segment];
  }
  ref2[path[path.length - 1]] = value;
};
var lib$1 = {};
const Assert$2 = assert;
const internals$3 = {};
lib$1.Sorter = class {
  constructor() {
    this._items = [];
    this.nodes = [];
  }
  add(nodes, options2) {
    options2 = options2 || {};
    const before = [].concat(options2.before || []);
    const after = [].concat(options2.after || []);
    const group = options2.group || "?";
    const sort = options2.sort || 0;
    Assert$2(!before.includes(group), `Item cannot come before itself: ${group}`);
    Assert$2(!before.includes("?"), "Item cannot come before unassociated items");
    Assert$2(!after.includes(group), `Item cannot come after itself: ${group}`);
    Assert$2(!after.includes("?"), "Item cannot come after unassociated items");
    if (!Array.isArray(nodes)) {
      nodes = [nodes];
    }
    for (const node of nodes) {
      const item = {
        seq: this._items.length,
        sort,
        before,
        after,
        group,
        node
      };
      this._items.push(item);
    }
    if (!options2.manual) {
      const valid = this._sort();
      Assert$2(valid, "item", group !== "?" ? `added into group ${group}` : "", "created a dependencies error");
    }
    return this.nodes;
  }
  merge(others) {
    if (!Array.isArray(others)) {
      others = [others];
    }
    for (const other of others) {
      if (other) {
        for (const item of other._items) {
          this._items.push(Object.assign({}, item));
        }
      }
    }
    this._items.sort(internals$3.mergeSort);
    for (let i = 0; i < this._items.length; ++i) {
      this._items[i].seq = i;
    }
    const valid = this._sort();
    Assert$2(valid, "merge created a dependencies error");
    return this.nodes;
  }
  sort() {
    const valid = this._sort();
    Assert$2(valid, "sort created a dependencies error");
    return this.nodes;
  }
  _sort() {
    const graph = {};
    const graphAfters = /* @__PURE__ */ Object.create(null);
    const groups = /* @__PURE__ */ Object.create(null);
    for (const item of this._items) {
      const seq = item.seq;
      const group = item.group;
      groups[group] = groups[group] || [];
      groups[group].push(seq);
      graph[seq] = item.before;
      for (const after of item.after) {
        graphAfters[after] = graphAfters[after] || [];
        graphAfters[after].push(seq);
      }
    }
    for (const node in graph) {
      const expandedGroups = [];
      for (const graphNodeItem in graph[node]) {
        const group = graph[node][graphNodeItem];
        groups[group] = groups[group] || [];
        expandedGroups.push(...groups[group]);
      }
      graph[node] = expandedGroups;
    }
    for (const group in graphAfters) {
      if (groups[group]) {
        for (const node of groups[group]) {
          graph[node].push(...graphAfters[group]);
        }
      }
    }
    const ancestors = {};
    for (const node in graph) {
      const children = graph[node];
      for (const child of children) {
        ancestors[child] = ancestors[child] || [];
        ancestors[child].push(node);
      }
    }
    const visited = {};
    const sorted = [];
    for (let i = 0; i < this._items.length; ++i) {
      let next = i;
      if (ancestors[i]) {
        next = null;
        for (let j = 0; j < this._items.length; ++j) {
          if (visited[j] === true) {
            continue;
          }
          if (!ancestors[j]) {
            ancestors[j] = [];
          }
          const shouldSeeCount = ancestors[j].length;
          let seenCount = 0;
          for (let k = 0; k < shouldSeeCount; ++k) {
            if (visited[ancestors[j][k]]) {
              ++seenCount;
            }
          }
          if (seenCount === shouldSeeCount) {
            next = j;
            break;
          }
        }
      }
      if (next !== null) {
        visited[next] = true;
        sorted.push(next);
      }
    }
    if (sorted.length !== this._items.length) {
      return false;
    }
    const seqIndex = {};
    for (const item of this._items) {
      seqIndex[item.seq] = item;
    }
    this._items = [];
    this.nodes = [];
    for (const value of sorted) {
      const sortedItem = seqIndex[value];
      this.nodes.push(sortedItem.node);
      this._items.push(sortedItem);
    }
    return true;
  }
};
internals$3.mergeSort = (a, b) => {
  return a.sort === b.sort ? 0 : a.sort < b.sort ? -1 : 1;
};
var keys;
var hasRequiredKeys;
function requireKeys() {
  if (hasRequiredKeys)
    return keys;
  hasRequiredKeys = 1;
  const ApplyToDefaults = applyToDefaults;
  const Assert2 = assert;
  const Clone2 = clone;
  const Topo = lib$1;
  const Any = requireAny();
  const Common = requireCommon();
  const Compile = requireCompile();
  const Errors2 = requireErrors();
  const Ref = requireRef();
  const Template = requireTemplate();
  const internals2 = {
    renameDefaults: {
      alias: false,
      // Keep old value in place
      multiple: false,
      // Allow renaming multiple keys into the same target
      override: false
      // Overrides an existing key
    }
  };
  keys = Any.extend({
    type: "_keys",
    properties: {
      typeof: "object"
    },
    flags: {
      unknown: { default: false }
    },
    terms: {
      dependencies: { init: null },
      keys: { init: null, manifest: { mapped: { from: "schema", to: "key" } } },
      patterns: { init: null },
      renames: { init: null }
    },
    args(schema, keys2) {
      return schema.keys(keys2);
    },
    validate(value, { schema, error: error2, state: state2, prefs }) {
      if (!value || typeof value !== schema.$_property("typeof") || Array.isArray(value)) {
        return { value, errors: error2("object.base", { type: schema.$_property("typeof") }) };
      }
      if (!schema.$_terms.renames && !schema.$_terms.dependencies && !schema.$_terms.keys && // null allows any keys
      !schema.$_terms.patterns && !schema.$_terms.externals) {
        return;
      }
      value = internals2.clone(value, prefs);
      const errors2 = [];
      if (schema.$_terms.renames && !internals2.rename(schema, value, state2, prefs, errors2)) {
        return { value, errors: errors2 };
      }
      if (!schema.$_terms.keys && // null allows any keys
      !schema.$_terms.patterns && !schema.$_terms.dependencies) {
        return { value, errors: errors2 };
      }
      const unprocessed = new Set(Object.keys(value));
      if (schema.$_terms.keys) {
        const ancestors = [value, ...state2.ancestors];
        for (const child of schema.$_terms.keys) {
          const key = child.key;
          const item = value[key];
          unprocessed.delete(key);
          const localState = state2.localize([...state2.path, key], ancestors, child);
          const result = child.schema.$_validate(item, localState, prefs);
          if (result.errors) {
            if (prefs.abortEarly) {
              return { value, errors: result.errors };
            }
            if (result.value !== void 0) {
              value[key] = result.value;
            }
            errors2.push(...result.errors);
          } else if (child.schema._flags.result === "strip" || result.value === void 0 && item !== void 0) {
            delete value[key];
          } else if (result.value !== void 0) {
            value[key] = result.value;
          }
        }
      }
      if (unprocessed.size || schema._flags._hasPatternMatch) {
        const early = internals2.unknown(schema, value, unprocessed, errors2, state2, prefs);
        if (early) {
          return early;
        }
      }
      if (schema.$_terms.dependencies) {
        for (const dep of schema.$_terms.dependencies) {
          if (dep.key !== null && internals2.isPresent(dep.options)(dep.key.resolve(value, state2, prefs, null, { shadow: false })) === false) {
            continue;
          }
          const failed = internals2.dependencies[dep.rel](schema, dep, value, state2, prefs);
          if (failed) {
            const report = schema.$_createError(failed.code, value, failed.context, state2, prefs);
            if (prefs.abortEarly) {
              return { value, errors: report };
            }
            errors2.push(report);
          }
        }
      }
      return { value, errors: errors2 };
    },
    rules: {
      and: {
        method(...peers) {
          Common.verifyFlat(peers, "and");
          return internals2.dependency(this, "and", null, peers);
        }
      },
      append: {
        method(schema) {
          if (schema === null || schema === void 0 || Object.keys(schema).length === 0) {
            return this;
          }
          return this.keys(schema);
        }
      },
      assert: {
        method(subject, schema, message) {
          if (!Template.isTemplate(subject)) {
            subject = Compile.ref(subject);
          }
          Assert2(message === void 0 || typeof message === "string", "Message must be a string");
          schema = this.$_compile(schema, { appendPath: true });
          const obj = this.$_addRule({ name: "assert", args: { subject, schema, message } });
          obj.$_mutateRegister(subject);
          obj.$_mutateRegister(schema);
          return obj;
        },
        validate(value, { error: error2, prefs, state: state2 }, { subject, schema, message }) {
          const about = subject.resolve(value, state2, prefs);
          const path = Ref.isRef(subject) ? subject.absolute(state2) : [];
          if (schema.$_match(about, state2.localize(path, [value, ...state2.ancestors], schema), prefs)) {
            return value;
          }
          return error2("object.assert", { subject, message });
        },
        args: ["subject", "schema", "message"],
        multi: true
      },
      instance: {
        method(constructor, name2) {
          Assert2(typeof constructor === "function", "constructor must be a function");
          name2 = name2 || constructor.name;
          return this.$_addRule({ name: "instance", args: { constructor, name: name2 } });
        },
        validate(value, helpers, { constructor, name: name2 }) {
          if (value instanceof constructor) {
            return value;
          }
          return helpers.error("object.instance", { type: name2, value });
        },
        args: ["constructor", "name"]
      },
      keys: {
        method(schema) {
          Assert2(schema === void 0 || typeof schema === "object", "Object schema must be a valid object");
          Assert2(!Common.isSchema(schema), "Object schema cannot be a joi schema");
          const obj = this.clone();
          if (!schema) {
            obj.$_terms.keys = null;
          } else if (!Object.keys(schema).length) {
            obj.$_terms.keys = new internals2.Keys();
          } else {
            obj.$_terms.keys = obj.$_terms.keys ? obj.$_terms.keys.filter((child) => !schema.hasOwnProperty(child.key)) : new internals2.Keys();
            for (const key in schema) {
              Common.tryWithPath(() => obj.$_terms.keys.push({ key, schema: this.$_compile(schema[key]) }), key);
            }
          }
          return obj.$_mutateRebuild();
        }
      },
      length: {
        method(limit) {
          return this.$_addRule({ name: "length", args: { limit }, operator: "=" });
        },
        validate(value, helpers, { limit }, { name: name2, operator, args: args2 }) {
          if (Common.compare(Object.keys(value).length, limit, operator)) {
            return value;
          }
          return helpers.error("object." + name2, { limit: args2.limit, value });
        },
        args: [
          {
            name: "limit",
            ref: true,
            assert: Common.limit,
            message: "must be a positive integer"
          }
        ]
      },
      max: {
        method(limit) {
          return this.$_addRule({ name: "max", method: "length", args: { limit }, operator: "<=" });
        }
      },
      min: {
        method(limit) {
          return this.$_addRule({ name: "min", method: "length", args: { limit }, operator: ">=" });
        }
      },
      nand: {
        method(...peers) {
          Common.verifyFlat(peers, "nand");
          return internals2.dependency(this, "nand", null, peers);
        }
      },
      or: {
        method(...peers) {
          Common.verifyFlat(peers, "or");
          return internals2.dependency(this, "or", null, peers);
        }
      },
      oxor: {
        method(...peers) {
          return internals2.dependency(this, "oxor", null, peers);
        }
      },
      pattern: {
        method(pattern, schema, options2 = {}) {
          const isRegExp = pattern instanceof RegExp;
          if (!isRegExp) {
            pattern = this.$_compile(pattern, { appendPath: true });
          }
          Assert2(schema !== void 0, "Invalid rule");
          Common.assertOptions(options2, ["fallthrough", "matches"]);
          if (isRegExp) {
            Assert2(!pattern.flags.includes("g") && !pattern.flags.includes("y"), "pattern should not use global or sticky mode");
          }
          schema = this.$_compile(schema, { appendPath: true });
          const obj = this.clone();
          obj.$_terms.patterns = obj.$_terms.patterns || [];
          const config2 = { [isRegExp ? "regex" : "schema"]: pattern, rule: schema };
          if (options2.matches) {
            config2.matches = this.$_compile(options2.matches);
            if (config2.matches.type !== "array") {
              config2.matches = config2.matches.$_root.array().items(config2.matches);
            }
            obj.$_mutateRegister(config2.matches);
            obj.$_setFlag("_hasPatternMatch", true, { clone: false });
          }
          if (options2.fallthrough) {
            config2.fallthrough = true;
          }
          obj.$_terms.patterns.push(config2);
          obj.$_mutateRegister(schema);
          return obj;
        }
      },
      ref: {
        method() {
          return this.$_addRule("ref");
        },
        validate(value, helpers) {
          if (Ref.isRef(value)) {
            return value;
          }
          return helpers.error("object.refType", { value });
        }
      },
      regex: {
        method() {
          return this.$_addRule("regex");
        },
        validate(value, helpers) {
          if (value instanceof RegExp) {
            return value;
          }
          return helpers.error("object.regex", { value });
        }
      },
      rename: {
        method(from2, to, options2 = {}) {
          Assert2(typeof from2 === "string" || from2 instanceof RegExp, "Rename missing the from argument");
          Assert2(typeof to === "string" || to instanceof Template, "Invalid rename to argument");
          Assert2(to !== from2, "Cannot rename key to same name:", from2);
          Common.assertOptions(options2, ["alias", "ignoreUndefined", "override", "multiple"]);
          const obj = this.clone();
          obj.$_terms.renames = obj.$_terms.renames || [];
          for (const rename of obj.$_terms.renames) {
            Assert2(rename.from !== from2, "Cannot rename the same key multiple times");
          }
          if (to instanceof Template) {
            obj.$_mutateRegister(to);
          }
          obj.$_terms.renames.push({
            from: from2,
            to,
            options: ApplyToDefaults(internals2.renameDefaults, options2)
          });
          return obj;
        }
      },
      schema: {
        method(type = "any") {
          return this.$_addRule({ name: "schema", args: { type } });
        },
        validate(value, helpers, { type }) {
          if (Common.isSchema(value) && (type === "any" || value.type === type)) {
            return value;
          }
          return helpers.error("object.schema", { type });
        }
      },
      unknown: {
        method(allow) {
          return this.$_setFlag("unknown", allow !== false);
        }
      },
      with: {
        method(key, peers, options2 = {}) {
          return internals2.dependency(this, "with", key, peers, options2);
        }
      },
      without: {
        method(key, peers, options2 = {}) {
          return internals2.dependency(this, "without", key, peers, options2);
        }
      },
      xor: {
        method(...peers) {
          Common.verifyFlat(peers, "xor");
          return internals2.dependency(this, "xor", null, peers);
        }
      }
    },
    overrides: {
      default(value, options2) {
        if (value === void 0) {
          value = Common.symbols.deepDefault;
        }
        return this.$_parent("default", value, options2);
      }
    },
    rebuild(schema) {
      if (schema.$_terms.keys) {
        const topo = new Topo.Sorter();
        for (const child of schema.$_terms.keys) {
          Common.tryWithPath(() => topo.add(child, { after: child.schema.$_rootReferences(), group: child.key }), child.key);
        }
        schema.$_terms.keys = new internals2.Keys(...topo.nodes);
      }
    },
    manifest: {
      build(obj, desc) {
        if (desc.keys) {
          obj = obj.keys(desc.keys);
        }
        if (desc.dependencies) {
          for (const { rel, key = null, peers, options: options2 } of desc.dependencies) {
            obj = internals2.dependency(obj, rel, key, peers, options2);
          }
        }
        if (desc.patterns) {
          for (const { regex, schema, rule, fallthrough, matches } of desc.patterns) {
            obj = obj.pattern(regex || schema, rule, { fallthrough, matches });
          }
        }
        if (desc.renames) {
          for (const { from: from2, to, options: options2 } of desc.renames) {
            obj = obj.rename(from2, to, options2);
          }
        }
        return obj;
      }
    },
    messages: {
      "object.and": "{{#label}} contains {{#presentWithLabels}} without its required peers {{#missingWithLabels}}",
      "object.assert": '{{#label}} is invalid because {if(#subject.key, `"` + #subject.key + `" failed to ` + (#message || "pass the assertion test"), #message || "the assertion failed")}',
      "object.base": "{{#label}} must be of type {{#type}}",
      "object.instance": "{{#label}} must be an instance of {{:#type}}",
      "object.length": '{{#label}} must have {{#limit}} key{if(#limit == 1, "", "s")}',
      "object.max": '{{#label}} must have less than or equal to {{#limit}} key{if(#limit == 1, "", "s")}',
      "object.min": '{{#label}} must have at least {{#limit}} key{if(#limit == 1, "", "s")}',
      "object.missing": "{{#label}} must contain at least one of {{#peersWithLabels}}",
      "object.nand": "{{:#mainWithLabel}} must not exist simultaneously with {{#peersWithLabels}}",
      "object.oxor": "{{#label}} contains a conflict between optional exclusive peers {{#peersWithLabels}}",
      "object.pattern.match": "{{#label}} keys failed to match pattern requirements",
      "object.refType": "{{#label}} must be a Joi reference",
      "object.regex": "{{#label}} must be a RegExp object",
      "object.rename.multiple": "{{#label}} cannot rename {{:#from}} because multiple renames are disabled and another key was already renamed to {{:#to}}",
      "object.rename.override": "{{#label}} cannot rename {{:#from}} because override is disabled and target {{:#to}} exists",
      "object.schema": "{{#label}} must be a Joi schema of {{#type}} type",
      "object.unknown": "{{#label}} is not allowed",
      "object.with": "{{:#mainWithLabel}} missing required peer {{:#peerWithLabel}}",
      "object.without": "{{:#mainWithLabel}} conflict with forbidden peer {{:#peerWithLabel}}",
      "object.xor": "{{#label}} contains a conflict between exclusive peers {{#peersWithLabels}}"
    }
  });
  internals2.clone = function(value, prefs) {
    if (typeof value === "object") {
      if (prefs.nonEnumerables) {
        return Clone2(value, { shallow: true });
      }
      const clone3 = Object.create(Object.getPrototypeOf(value));
      Object.assign(clone3, value);
      return clone3;
    }
    const clone2 = function(...args2) {
      return value.apply(this, args2);
    };
    clone2.prototype = Clone2(value.prototype);
    Object.defineProperty(clone2, "name", { value: value.name, writable: false });
    Object.defineProperty(clone2, "length", { value: value.length, writable: false });
    Object.assign(clone2, value);
    return clone2;
  };
  internals2.dependency = function(schema, rel, key, peers, options2) {
    Assert2(key === null || typeof key === "string", rel, "key must be a strings");
    if (!options2) {
      options2 = peers.length > 1 && typeof peers[peers.length - 1] === "object" ? peers.pop() : {};
    }
    Common.assertOptions(options2, ["separator", "isPresent"]);
    peers = [].concat(peers);
    const separator = Common.default(options2.separator, ".");
    const paths = [];
    for (const peer of peers) {
      Assert2(typeof peer === "string", rel, "peers must be strings");
      paths.push(Compile.ref(peer, { separator, ancestor: 0, prefix: false }));
    }
    if (key !== null) {
      key = Compile.ref(key, { separator, ancestor: 0, prefix: false });
    }
    const obj = schema.clone();
    obj.$_terms.dependencies = obj.$_terms.dependencies || [];
    obj.$_terms.dependencies.push(new internals2.Dependency(rel, key, paths, peers, options2));
    return obj;
  };
  internals2.dependencies = {
    and(schema, dep, value, state2, prefs) {
      const missing = [];
      const present = [];
      const count2 = dep.peers.length;
      const isPresent = internals2.isPresent(dep.options);
      for (const peer of dep.peers) {
        if (isPresent(peer.resolve(value, state2, prefs, null, { shadow: false })) === false) {
          missing.push(peer.key);
        } else {
          present.push(peer.key);
        }
      }
      if (missing.length !== count2 && present.length !== count2) {
        return {
          code: "object.and",
          context: {
            present,
            presentWithLabels: internals2.keysToLabels(schema, present),
            missing,
            missingWithLabels: internals2.keysToLabels(schema, missing)
          }
        };
      }
    },
    nand(schema, dep, value, state2, prefs) {
      const present = [];
      const isPresent = internals2.isPresent(dep.options);
      for (const peer of dep.peers) {
        if (isPresent(peer.resolve(value, state2, prefs, null, { shadow: false }))) {
          present.push(peer.key);
        }
      }
      if (present.length !== dep.peers.length) {
        return;
      }
      const main2 = dep.paths[0];
      const values2 = dep.paths.slice(1);
      return {
        code: "object.nand",
        context: {
          main: main2,
          mainWithLabel: internals2.keysToLabels(schema, main2),
          peers: values2,
          peersWithLabels: internals2.keysToLabels(schema, values2)
        }
      };
    },
    or(schema, dep, value, state2, prefs) {
      const isPresent = internals2.isPresent(dep.options);
      for (const peer of dep.peers) {
        if (isPresent(peer.resolve(value, state2, prefs, null, { shadow: false }))) {
          return;
        }
      }
      return {
        code: "object.missing",
        context: {
          peers: dep.paths,
          peersWithLabels: internals2.keysToLabels(schema, dep.paths)
        }
      };
    },
    oxor(schema, dep, value, state2, prefs) {
      const present = [];
      const isPresent = internals2.isPresent(dep.options);
      for (const peer of dep.peers) {
        if (isPresent(peer.resolve(value, state2, prefs, null, { shadow: false }))) {
          present.push(peer.key);
        }
      }
      if (!present.length || present.length === 1) {
        return;
      }
      const context2 = { peers: dep.paths, peersWithLabels: internals2.keysToLabels(schema, dep.paths) };
      context2.present = present;
      context2.presentWithLabels = internals2.keysToLabels(schema, present);
      return { code: "object.oxor", context: context2 };
    },
    with(schema, dep, value, state2, prefs) {
      const isPresent = internals2.isPresent(dep.options);
      for (const peer of dep.peers) {
        if (isPresent(peer.resolve(value, state2, prefs, null, { shadow: false })) === false) {
          return {
            code: "object.with",
            context: {
              main: dep.key.key,
              mainWithLabel: internals2.keysToLabels(schema, dep.key.key),
              peer: peer.key,
              peerWithLabel: internals2.keysToLabels(schema, peer.key)
            }
          };
        }
      }
    },
    without(schema, dep, value, state2, prefs) {
      const isPresent = internals2.isPresent(dep.options);
      for (const peer of dep.peers) {
        if (isPresent(peer.resolve(value, state2, prefs, null, { shadow: false }))) {
          return {
            code: "object.without",
            context: {
              main: dep.key.key,
              mainWithLabel: internals2.keysToLabels(schema, dep.key.key),
              peer: peer.key,
              peerWithLabel: internals2.keysToLabels(schema, peer.key)
            }
          };
        }
      }
    },
    xor(schema, dep, value, state2, prefs) {
      const present = [];
      const isPresent = internals2.isPresent(dep.options);
      for (const peer of dep.peers) {
        if (isPresent(peer.resolve(value, state2, prefs, null, { shadow: false }))) {
          present.push(peer.key);
        }
      }
      if (present.length === 1) {
        return;
      }
      const context2 = { peers: dep.paths, peersWithLabels: internals2.keysToLabels(schema, dep.paths) };
      if (present.length === 0) {
        return { code: "object.missing", context: context2 };
      }
      context2.present = present;
      context2.presentWithLabels = internals2.keysToLabels(schema, present);
      return { code: "object.xor", context: context2 };
    }
  };
  internals2.keysToLabels = function(schema, keys2) {
    if (Array.isArray(keys2)) {
      return keys2.map((key) => schema.$_mapLabels(key));
    }
    return schema.$_mapLabels(keys2);
  };
  internals2.isPresent = function(options2) {
    return typeof options2.isPresent === "function" ? options2.isPresent : (resolved2) => resolved2 !== void 0;
  };
  internals2.rename = function(schema, value, state2, prefs, errors2) {
    const renamed = {};
    for (const rename of schema.$_terms.renames) {
      const matches = [];
      const pattern = typeof rename.from !== "string";
      if (!pattern) {
        if (Object.prototype.hasOwnProperty.call(value, rename.from) && (value[rename.from] !== void 0 || !rename.options.ignoreUndefined)) {
          matches.push(rename);
        }
      } else {
        for (const from2 in value) {
          if (value[from2] === void 0 && rename.options.ignoreUndefined) {
            continue;
          }
          if (from2 === rename.to) {
            continue;
          }
          const match = rename.from.exec(from2);
          if (!match) {
            continue;
          }
          matches.push({ from: from2, to: rename.to, match });
        }
      }
      for (const match of matches) {
        const from2 = match.from;
        let to = match.to;
        if (to instanceof Template) {
          to = to.render(value, state2, prefs, match.match);
        }
        if (from2 === to) {
          continue;
        }
        if (!rename.options.multiple && renamed[to]) {
          errors2.push(schema.$_createError("object.rename.multiple", value, { from: from2, to, pattern }, state2, prefs));
          if (prefs.abortEarly) {
            return false;
          }
        }
        if (Object.prototype.hasOwnProperty.call(value, to) && !rename.options.override && !renamed[to]) {
          errors2.push(schema.$_createError("object.rename.override", value, { from: from2, to, pattern }, state2, prefs));
          if (prefs.abortEarly) {
            return false;
          }
        }
        if (value[from2] === void 0) {
          delete value[to];
        } else {
          value[to] = value[from2];
        }
        renamed[to] = true;
        if (!rename.options.alias) {
          delete value[from2];
        }
      }
    }
    return true;
  };
  internals2.unknown = function(schema, value, unprocessed, errors2, state2, prefs) {
    if (schema.$_terms.patterns) {
      let hasMatches = false;
      const matches = schema.$_terms.patterns.map((pattern) => {
        if (pattern.matches) {
          hasMatches = true;
          return [];
        }
      });
      const ancestors = [value, ...state2.ancestors];
      for (const key of unprocessed) {
        const item = value[key];
        const path = [...state2.path, key];
        for (let i = 0; i < schema.$_terms.patterns.length; ++i) {
          const pattern = schema.$_terms.patterns[i];
          if (pattern.regex) {
            const match = pattern.regex.test(key);
            state2.mainstay.tracer.debug(state2, "rule", `pattern.${i}`, match ? "pass" : "error");
            if (!match) {
              continue;
            }
          } else {
            if (!pattern.schema.$_match(key, state2.nest(pattern.schema, `pattern.${i}`), prefs)) {
              continue;
            }
          }
          unprocessed.delete(key);
          const localState = state2.localize(path, ancestors, { schema: pattern.rule, key });
          const result = pattern.rule.$_validate(item, localState, prefs);
          if (result.errors) {
            if (prefs.abortEarly) {
              return { value, errors: result.errors };
            }
            errors2.push(...result.errors);
          }
          if (pattern.matches) {
            matches[i].push(key);
          }
          value[key] = result.value;
          if (!pattern.fallthrough) {
            break;
          }
        }
      }
      if (hasMatches) {
        for (let i = 0; i < matches.length; ++i) {
          const match = matches[i];
          if (!match) {
            continue;
          }
          const stpm = schema.$_terms.patterns[i].matches;
          const localState = state2.localize(state2.path, ancestors, stpm);
          const result = stpm.$_validate(match, localState, prefs);
          if (result.errors) {
            const details = Errors2.details(result.errors, { override: false });
            details.matches = match;
            const report = schema.$_createError("object.pattern.match", value, details, state2, prefs);
            if (prefs.abortEarly) {
              return { value, errors: report };
            }
            errors2.push(report);
          }
        }
      }
    }
    if (!unprocessed.size || !schema.$_terms.keys && !schema.$_terms.patterns) {
      return;
    }
    if (prefs.stripUnknown && !schema._flags.unknown || prefs.skipFunctions) {
      const stripUnknown = prefs.stripUnknown ? prefs.stripUnknown === true ? true : !!prefs.stripUnknown.objects : false;
      for (const key of unprocessed) {
        if (stripUnknown) {
          delete value[key];
          unprocessed.delete(key);
        } else if (typeof value[key] === "function") {
          unprocessed.delete(key);
        }
      }
    }
    const forbidUnknown = !Common.default(schema._flags.unknown, prefs.allowUnknown);
    if (forbidUnknown) {
      for (const unprocessedKey of unprocessed) {
        const localState = state2.localize([...state2.path, unprocessedKey], []);
        const report = schema.$_createError("object.unknown", value[unprocessedKey], { child: unprocessedKey }, localState, prefs, { flags: false });
        if (prefs.abortEarly) {
          return { value, errors: report };
        }
        errors2.push(report);
      }
    }
  };
  internals2.Dependency = class {
    constructor(rel, key, peers, paths, options2) {
      this.rel = rel;
      this.key = key;
      this.peers = peers;
      this.paths = paths;
      this.options = options2;
    }
    describe() {
      const desc = {
        rel: this.rel,
        peers: this.paths
      };
      if (this.key !== null) {
        desc.key = this.key.key;
      }
      if (this.peers[0].separator !== ".") {
        desc.options = { ...desc.options, separator: this.peers[0].separator };
      }
      if (this.options.isPresent) {
        desc.options = { ...desc.options, isPresent: this.options.isPresent };
      }
      return desc;
    }
  };
  internals2.Keys = class extends Array {
    concat(source) {
      const result = this.slice();
      const keys2 = /* @__PURE__ */ new Map();
      for (let i = 0; i < result.length; ++i) {
        keys2.set(result[i].key, i);
      }
      for (const item of source) {
        const key = item.key;
        const pos = keys2.get(key);
        if (pos !== void 0) {
          result[pos] = { key, schema: result[pos].schema.concat(item.schema) };
        } else {
          result.push(item);
        }
      }
      return result;
    }
  };
  return keys;
}
var _function;
var hasRequired_function;
function require_function() {
  if (hasRequired_function)
    return _function;
  hasRequired_function = 1;
  const Assert2 = assert;
  const Keys = requireKeys();
  _function = Keys.extend({
    type: "function",
    properties: {
      typeof: "function"
    },
    rules: {
      arity: {
        method(n) {
          Assert2(Number.isSafeInteger(n) && n >= 0, "n must be a positive integer");
          return this.$_addRule({ name: "arity", args: { n } });
        },
        validate(value, helpers, { n }) {
          if (value.length === n) {
            return value;
          }
          return helpers.error("function.arity", { n });
        }
      },
      class: {
        method() {
          return this.$_addRule("class");
        },
        validate(value, helpers) {
          if (/^\s*class\s/.test(value.toString())) {
            return value;
          }
          return helpers.error("function.class", { value });
        }
      },
      minArity: {
        method(n) {
          Assert2(Number.isSafeInteger(n) && n > 0, "n must be a strict positive integer");
          return this.$_addRule({ name: "minArity", args: { n } });
        },
        validate(value, helpers, { n }) {
          if (value.length >= n) {
            return value;
          }
          return helpers.error("function.minArity", { n });
        }
      },
      maxArity: {
        method(n) {
          Assert2(Number.isSafeInteger(n) && n >= 0, "n must be a positive integer");
          return this.$_addRule({ name: "maxArity", args: { n } });
        },
        validate(value, helpers, { n }) {
          if (value.length <= n) {
            return value;
          }
          return helpers.error("function.maxArity", { n });
        }
      }
    },
    messages: {
      "function.arity": "{{#label}} must have an arity of {{#n}}",
      "function.class": "{{#label}} must be a class",
      "function.maxArity": "{{#label}} must have an arity lesser or equal to {{#n}}",
      "function.minArity": "{{#label}} must have an arity greater or equal to {{#n}}"
    }
  });
  return _function;
}
var link;
var hasRequiredLink;
function requireLink() {
  if (hasRequiredLink)
    return link;
  hasRequiredLink = 1;
  const Assert2 = assert;
  const Any = requireAny();
  const Common = requireCommon();
  const Compile = requireCompile();
  const Errors2 = requireErrors();
  const internals2 = {};
  link = Any.extend({
    type: "link",
    properties: {
      schemaChain: true
    },
    terms: {
      link: { init: null, manifest: "single", register: false }
    },
    args(schema, ref2) {
      return schema.ref(ref2);
    },
    validate(value, { schema, state: state2, prefs }) {
      Assert2(schema.$_terms.link, "Uninitialized link schema");
      const linked = internals2.generate(schema, value, state2, prefs);
      const ref2 = schema.$_terms.link[0].ref;
      return linked.$_validate(value, state2.nest(linked, `link:${ref2.display}:${linked.type}`), prefs);
    },
    generate(schema, value, state2, prefs) {
      return internals2.generate(schema, value, state2, prefs);
    },
    rules: {
      ref: {
        method(ref2) {
          Assert2(!this.$_terms.link, "Cannot reinitialize schema");
          ref2 = Compile.ref(ref2);
          Assert2(ref2.type === "value" || ref2.type === "local", "Invalid reference type:", ref2.type);
          Assert2(ref2.type === "local" || ref2.ancestor === "root" || ref2.ancestor > 0, "Link cannot reference itself");
          const obj = this.clone();
          obj.$_terms.link = [{ ref: ref2 }];
          return obj;
        }
      },
      relative: {
        method(enabled = true) {
          return this.$_setFlag("relative", enabled);
        }
      }
    },
    overrides: {
      concat(source) {
        Assert2(this.$_terms.link, "Uninitialized link schema");
        Assert2(Common.isSchema(source), "Invalid schema object");
        Assert2(source.type !== "link", "Cannot merge type link with another link");
        const obj = this.clone();
        if (!obj.$_terms.whens) {
          obj.$_terms.whens = [];
        }
        obj.$_terms.whens.push({ concat: source });
        return obj.$_mutateRebuild();
      }
    },
    manifest: {
      build(obj, desc) {
        Assert2(desc.link, "Invalid link description missing link");
        return obj.ref(desc.link);
      }
    }
  });
  internals2.generate = function(schema, value, state2, prefs) {
    let linked = state2.mainstay.links.get(schema);
    if (linked) {
      return linked._generate(value, state2, prefs).schema;
    }
    const ref2 = schema.$_terms.link[0].ref;
    const { perspective, path } = internals2.perspective(ref2, state2);
    internals2.assert(perspective, "which is outside of schema boundaries", ref2, schema, state2, prefs);
    try {
      linked = path.length ? perspective.$_reach(path) : perspective;
    } catch (ignoreErr) {
      internals2.assert(false, "to non-existing schema", ref2, schema, state2, prefs);
    }
    internals2.assert(linked.type !== "link", "which is another link", ref2, schema, state2, prefs);
    if (!schema._flags.relative) {
      state2.mainstay.links.set(schema, linked);
    }
    return linked._generate(value, state2, prefs).schema;
  };
  internals2.perspective = function(ref2, state2) {
    if (ref2.type === "local") {
      for (const { schema, key } of state2.schemas) {
        const id = schema._flags.id || key;
        if (id === ref2.path[0]) {
          return { perspective: schema, path: ref2.path.slice(1) };
        }
        if (schema.$_terms.shared) {
          for (const shared of schema.$_terms.shared) {
            if (shared._flags.id === ref2.path[0]) {
              return { perspective: shared, path: ref2.path.slice(1) };
            }
          }
        }
      }
      return { perspective: null, path: null };
    }
    if (ref2.ancestor === "root") {
      return { perspective: state2.schemas[state2.schemas.length - 1].schema, path: ref2.path };
    }
    return { perspective: state2.schemas[ref2.ancestor] && state2.schemas[ref2.ancestor].schema, path: ref2.path };
  };
  internals2.assert = function(condition, message, ref2, schema, state2, prefs) {
    if (condition) {
      return;
    }
    Assert2(false, `"${Errors2.label(schema._flags, state2, prefs)}" contains link reference "${ref2.display}" ${message}`);
  };
  return link;
}
var number;
var hasRequiredNumber;
function requireNumber() {
  if (hasRequiredNumber)
    return number;
  hasRequiredNumber = 1;
  const Assert2 = assert;
  const Any = requireAny();
  const Common = requireCommon();
  const internals2 = {
    numberRx: /^\s*[+-]?(?:(?:\d+(?:\.\d*)?)|(?:\.\d+))(?:e([+-]?\d+))?\s*$/i,
    precisionRx: /(?:\.(\d+))?(?:[eE]([+-]?\d+))?$/,
    exponentialPartRegex: /[eE][+-]?\d+$/,
    leadingSignAndZerosRegex: /^[+-]?(0*)?/,
    dotRegex: /\./,
    trailingZerosRegex: /0+$/
  };
  number = Any.extend({
    type: "number",
    flags: {
      unsafe: { default: false }
    },
    coerce: {
      from: "string",
      method(value, { schema, error: error2 }) {
        const matches = value.match(internals2.numberRx);
        if (!matches) {
          return;
        }
        value = value.trim();
        const result = { value: parseFloat(value) };
        if (result.value === 0) {
          result.value = 0;
        }
        if (!schema._flags.unsafe) {
          if (value.match(/e/i)) {
            if (internals2.extractSignificantDigits(value) !== internals2.extractSignificantDigits(String(result.value))) {
              result.errors = error2("number.unsafe");
              return result;
            }
          } else {
            const string2 = result.value.toString();
            if (string2.match(/e/i)) {
              return result;
            }
            if (string2 !== internals2.normalizeDecimal(value)) {
              result.errors = error2("number.unsafe");
              return result;
            }
          }
        }
        return result;
      }
    },
    validate(value, { schema, error: error2, prefs }) {
      if (value === Infinity || value === -Infinity) {
        return { value, errors: error2("number.infinity") };
      }
      if (!Common.isNumber(value)) {
        return { value, errors: error2("number.base") };
      }
      const result = { value };
      if (prefs.convert) {
        const rule = schema.$_getRule("precision");
        if (rule) {
          const precision = Math.pow(10, rule.args.limit);
          result.value = Math.round(result.value * precision) / precision;
        }
      }
      if (result.value === 0) {
        result.value = 0;
      }
      if (!schema._flags.unsafe && (value > Number.MAX_SAFE_INTEGER || value < Number.MIN_SAFE_INTEGER)) {
        result.errors = error2("number.unsafe");
      }
      return result;
    },
    rules: {
      compare: {
        method: false,
        validate(value, helpers, { limit }, { name: name2, operator, args: args2 }) {
          if (Common.compare(value, limit, operator)) {
            return value;
          }
          return helpers.error("number." + name2, { limit: args2.limit, value });
        },
        args: [
          {
            name: "limit",
            ref: true,
            assert: Common.isNumber,
            message: "must be a number"
          }
        ]
      },
      greater: {
        method(limit) {
          return this.$_addRule({ name: "greater", method: "compare", args: { limit }, operator: ">" });
        }
      },
      integer: {
        method() {
          return this.$_addRule("integer");
        },
        validate(value, helpers) {
          if (Math.trunc(value) - value === 0) {
            return value;
          }
          return helpers.error("number.integer");
        }
      },
      less: {
        method(limit) {
          return this.$_addRule({ name: "less", method: "compare", args: { limit }, operator: "<" });
        }
      },
      max: {
        method(limit) {
          return this.$_addRule({ name: "max", method: "compare", args: { limit }, operator: "<=" });
        }
      },
      min: {
        method(limit) {
          return this.$_addRule({ name: "min", method: "compare", args: { limit }, operator: ">=" });
        }
      },
      multiple: {
        method(base2) {
          return this.$_addRule({ name: "multiple", args: { base: base2 } });
        },
        validate(value, helpers, { base: base2 }, options2) {
          if (value * (1 / base2) % 1 === 0) {
            return value;
          }
          return helpers.error("number.multiple", { multiple: options2.args.base, value });
        },
        args: [
          {
            name: "base",
            ref: true,
            assert: (value) => typeof value === "number" && isFinite(value) && value > 0,
            message: "must be a positive number"
          }
        ],
        multi: true
      },
      negative: {
        method() {
          return this.sign("negative");
        }
      },
      port: {
        method() {
          return this.$_addRule("port");
        },
        validate(value, helpers) {
          if (Number.isSafeInteger(value) && value >= 0 && value <= 65535) {
            return value;
          }
          return helpers.error("number.port");
        }
      },
      positive: {
        method() {
          return this.sign("positive");
        }
      },
      precision: {
        method(limit) {
          Assert2(Number.isSafeInteger(limit), "limit must be an integer");
          return this.$_addRule({ name: "precision", args: { limit } });
        },
        validate(value, helpers, { limit }) {
          const places = value.toString().match(internals2.precisionRx);
          const decimals = Math.max((places[1] ? places[1].length : 0) - (places[2] ? parseInt(places[2], 10) : 0), 0);
          if (decimals <= limit) {
            return value;
          }
          return helpers.error("number.precision", { limit, value });
        },
        convert: true
      },
      sign: {
        method(sign) {
          Assert2(["negative", "positive"].includes(sign), "Invalid sign", sign);
          return this.$_addRule({ name: "sign", args: { sign } });
        },
        validate(value, helpers, { sign }) {
          if (sign === "negative" && value < 0 || sign === "positive" && value > 0) {
            return value;
          }
          return helpers.error(`number.${sign}`);
        }
      },
      unsafe: {
        method(enabled = true) {
          Assert2(typeof enabled === "boolean", "enabled must be a boolean");
          return this.$_setFlag("unsafe", enabled);
        }
      }
    },
    cast: {
      string: {
        from: (value) => typeof value === "number",
        to(value, helpers) {
          return value.toString();
        }
      }
    },
    messages: {
      "number.base": "{{#label}} must be a number",
      "number.greater": "{{#label}} must be greater than {{#limit}}",
      "number.infinity": "{{#label}} cannot be infinity",
      "number.integer": "{{#label}} must be an integer",
      "number.less": "{{#label}} must be less than {{#limit}}",
      "number.max": "{{#label}} must be less than or equal to {{#limit}}",
      "number.min": "{{#label}} must be greater than or equal to {{#limit}}",
      "number.multiple": "{{#label}} must be a multiple of {{#multiple}}",
      "number.negative": "{{#label}} must be a negative number",
      "number.port": "{{#label}} must be a valid port",
      "number.positive": "{{#label}} must be a positive number",
      "number.precision": "{{#label}} must have no more than {{#limit}} decimal places",
      "number.unsafe": "{{#label}} must be a safe number"
    }
  });
  internals2.extractSignificantDigits = function(value) {
    return value.replace(internals2.exponentialPartRegex, "").replace(internals2.dotRegex, "").replace(internals2.trailingZerosRegex, "").replace(internals2.leadingSignAndZerosRegex, "");
  };
  internals2.normalizeDecimal = function(str) {
    str = str.replace(/^\+/, "").replace(/\.0*$/, "").replace(/^(-?)\.([^\.]*)$/, "$10.$2").replace(/^(-?)0+([0-9])/, "$1$2");
    if (str.includes(".") && str.endsWith("0")) {
      str = str.replace(/0+$/, "");
    }
    if (str === "-0") {
      return "0";
    }
    return str;
  };
  return number;
}
var object;
var hasRequiredObject;
function requireObject() {
  if (hasRequiredObject)
    return object;
  hasRequiredObject = 1;
  const Keys = requireKeys();
  object = Keys.extend({
    type: "object",
    cast: {
      map: {
        from: (value) => value && typeof value === "object",
        to(value, helpers) {
          return new Map(Object.entries(value));
        }
      }
    }
  });
  return object;
}
var domain = {};
var errors = {};
(function(exports) {
  exports.codes = {
    EMPTY_STRING: "Address must be a non-empty string",
    FORBIDDEN_UNICODE: "Address contains forbidden Unicode characters",
    MULTIPLE_AT_CHAR: "Address cannot contain more than one @ character",
    MISSING_AT_CHAR: "Address must contain one @ character",
    EMPTY_LOCAL: "Address local part cannot be empty",
    ADDRESS_TOO_LONG: "Address too long",
    LOCAL_TOO_LONG: "Address local part too long",
    EMPTY_LOCAL_SEGMENT: "Address local part contains empty dot-separated segment",
    INVALID_LOCAL_CHARS: "Address local part contains invalid character",
    DOMAIN_NON_EMPTY_STRING: "Domain must be a non-empty string",
    DOMAIN_TOO_LONG: "Domain too long",
    DOMAIN_INVALID_UNICODE_CHARS: "Domain contains forbidden Unicode characters",
    DOMAIN_INVALID_CHARS: "Domain contains invalid character",
    DOMAIN_INVALID_TLDS_CHARS: "Domain contains invalid tld character",
    DOMAIN_SEGMENTS_COUNT: "Domain lacks the minimum required number of segments",
    DOMAIN_SEGMENTS_COUNT_MAX: "Domain contains too many segments",
    DOMAIN_FORBIDDEN_TLDS: "Domain uses forbidden TLD",
    DOMAIN_EMPTY_SEGMENT: "Domain contains empty dot-separated segment",
    DOMAIN_LONG_SEGMENT: "Domain contains dot-separated segment that is too long"
  };
  exports.code = function(code) {
    return { code, error: exports.codes[code] };
  };
})(errors);
(function(exports) {
  const Url = require$$0;
  const Errors2 = errors;
  const internals2 = {
    minDomainSegments: 2,
    nonAsciiRx: /[^\x00-\x7f]/,
    domainControlRx: /[\x00-\x20@\:\/\\#!\$&\'\(\)\*\+,;=\?]/,
    // Control + space + separators
    tldSegmentRx: /^[a-zA-Z](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/,
    domainSegmentRx: /^[a-zA-Z0-9](?:[a-zA-Z0-9\-]*[a-zA-Z0-9])?$/,
    URL: Url.URL || URL
    // $lab:coverage:ignore$
  };
  exports.analyze = function(domain2, options2 = {}) {
    if (!domain2) {
      return Errors2.code("DOMAIN_NON_EMPTY_STRING");
    }
    if (typeof domain2 !== "string") {
      throw new Error("Invalid input: domain must be a string");
    }
    if (domain2.length > 256) {
      return Errors2.code("DOMAIN_TOO_LONG");
    }
    const ascii = !internals2.nonAsciiRx.test(domain2);
    if (!ascii) {
      if (options2.allowUnicode === false) {
        return Errors2.code("DOMAIN_INVALID_UNICODE_CHARS");
      }
      domain2 = domain2.normalize("NFC");
    }
    if (internals2.domainControlRx.test(domain2)) {
      return Errors2.code("DOMAIN_INVALID_CHARS");
    }
    domain2 = internals2.punycode(domain2);
    if (options2.allowFullyQualified && domain2[domain2.length - 1] === ".") {
      domain2 = domain2.slice(0, -1);
    }
    const minDomainSegments = options2.minDomainSegments || internals2.minDomainSegments;
    const segments = domain2.split(".");
    if (segments.length < minDomainSegments) {
      return Errors2.code("DOMAIN_SEGMENTS_COUNT");
    }
    if (options2.maxDomainSegments) {
      if (segments.length > options2.maxDomainSegments) {
        return Errors2.code("DOMAIN_SEGMENTS_COUNT_MAX");
      }
    }
    const tlds2 = options2.tlds;
    if (tlds2) {
      const tld = segments[segments.length - 1].toLowerCase();
      if (tlds2.deny && tlds2.deny.has(tld) || tlds2.allow && !tlds2.allow.has(tld)) {
        return Errors2.code("DOMAIN_FORBIDDEN_TLDS");
      }
    }
    for (let i = 0; i < segments.length; ++i) {
      const segment = segments[i];
      if (!segment.length) {
        return Errors2.code("DOMAIN_EMPTY_SEGMENT");
      }
      if (segment.length > 63) {
        return Errors2.code("DOMAIN_LONG_SEGMENT");
      }
      if (i < segments.length - 1) {
        if (!internals2.domainSegmentRx.test(segment)) {
          return Errors2.code("DOMAIN_INVALID_CHARS");
        }
      } else {
        if (!internals2.tldSegmentRx.test(segment)) {
          return Errors2.code("DOMAIN_INVALID_TLDS_CHARS");
        }
      }
    }
    return null;
  };
  exports.isValid = function(domain2, options2) {
    return !exports.analyze(domain2, options2);
  };
  internals2.punycode = function(domain2) {
    if (domain2.includes("%")) {
      domain2 = domain2.replace(/%/g, "%25");
    }
    try {
      return new internals2.URL(`http://${domain2}`).host;
    } catch (err) {
      return domain2;
    }
  };
})(domain);
var email = {};
const Util = require$$0$1;
const Domain = domain;
const Errors = errors;
const internals$2 = {
  nonAsciiRx: /[^\x00-\x7f]/,
  encoder: new (Util.TextEncoder || TextEncoder)()
  // $lab:coverage:ignore$
};
email.analyze = function(email2, options2) {
  return internals$2.email(email2, options2);
};
email.isValid = function(email2, options2) {
  return !internals$2.email(email2, options2);
};
internals$2.email = function(email2, options2 = {}) {
  if (typeof email2 !== "string") {
    throw new Error("Invalid input: email must be a string");
  }
  if (!email2) {
    return Errors.code("EMPTY_STRING");
  }
  const ascii = !internals$2.nonAsciiRx.test(email2);
  if (!ascii) {
    if (options2.allowUnicode === false) {
      return Errors.code("FORBIDDEN_UNICODE");
    }
    email2 = email2.normalize("NFC");
  }
  const parts = email2.split("@");
  if (parts.length !== 2) {
    return parts.length > 2 ? Errors.code("MULTIPLE_AT_CHAR") : Errors.code("MISSING_AT_CHAR");
  }
  const [local, domain2] = parts;
  if (!local) {
    return Errors.code("EMPTY_LOCAL");
  }
  if (!options2.ignoreLength) {
    if (email2.length > 254) {
      return Errors.code("ADDRESS_TOO_LONG");
    }
    if (internals$2.encoder.encode(local).length > 64) {
      return Errors.code("LOCAL_TOO_LONG");
    }
  }
  return internals$2.local(local, ascii) || Domain.analyze(domain2, options2);
};
internals$2.local = function(local, ascii) {
  const segments = local.split(".");
  for (const segment of segments) {
    if (!segment.length) {
      return Errors.code("EMPTY_LOCAL_SEGMENT");
    }
    if (ascii) {
      if (!internals$2.atextRx.test(segment)) {
        return Errors.code("INVALID_LOCAL_CHARS");
      }
      continue;
    }
    for (const char of segment) {
      if (internals$2.atextRx.test(char)) {
        continue;
      }
      const binary2 = internals$2.binary(char);
      if (!internals$2.atomRx.test(binary2)) {
        return Errors.code("INVALID_LOCAL_CHARS");
      }
    }
  }
};
internals$2.binary = function(char) {
  return Array.from(internals$2.encoder.encode(char)).map((v) => String.fromCharCode(v)).join("");
};
internals$2.atextRx = /^[\w!#\$%&'\*\+\-/=\?\^`\{\|\}~]+$/;
internals$2.atomRx = new RegExp([
  //  %xC2-DF UTF8-tail
  "(?:[\\xc2-\\xdf][\\x80-\\xbf])",
  //  %xE0 %xA0-BF UTF8-tail              %xE1-EC 2( UTF8-tail )            %xED %x80-9F UTF8-tail              %xEE-EF 2( UTF8-tail )
  "(?:\\xe0[\\xa0-\\xbf][\\x80-\\xbf])|(?:[\\xe1-\\xec][\\x80-\\xbf]{2})|(?:\\xed[\\x80-\\x9f][\\x80-\\xbf])|(?:[\\xee-\\xef][\\x80-\\xbf]{2})",
  //  %xF0 %x90-BF 2( UTF8-tail )            %xF1-F3 3( UTF8-tail )            %xF4 %x80-8F 2( UTF8-tail )
  "(?:\\xf0[\\x90-\\xbf][\\x80-\\xbf]{2})|(?:[\\xf1-\\xf3][\\x80-\\xbf]{3})|(?:\\xf4[\\x80-\\x8f][\\x80-\\xbf]{2})"
].join("|"));
var ip = {};
var uri = {};
var escapeRegex = function(string2) {
  return string2.replace(/[\^\$\.\*\+\-\?\=\!\:\|\\\/\(\)\[\]\{\}\,]/g, "\\$&");
};
const Assert$1 = assert;
const EscapeRegex = escapeRegex;
const internals$1 = {};
internals$1.generate = function() {
  const rfc3986 = {};
  const hexDigit = "\\dA-Fa-f";
  const hexDigitOnly = "[" + hexDigit + "]";
  const unreserved = "\\w-\\.~";
  const subDelims = "!\\$&'\\(\\)\\*\\+,;=";
  const pctEncoded = "%" + hexDigit;
  const pchar = unreserved + pctEncoded + subDelims + ":@";
  const pcharOnly = "[" + pchar + "]";
  const decOctect = "(?:0{0,2}\\d|0?[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])";
  rfc3986.ipv4address = "(?:" + decOctect + "\\.){3}" + decOctect;
  const h16 = hexDigitOnly + "{1,4}";
  const ls32 = "(?:" + h16 + ":" + h16 + "|" + rfc3986.ipv4address + ")";
  const IPv6SixHex = "(?:" + h16 + ":){6}" + ls32;
  const IPv6FiveHex = "::(?:" + h16 + ":){5}" + ls32;
  const IPv6FourHex = "(?:" + h16 + ")?::(?:" + h16 + ":){4}" + ls32;
  const IPv6ThreeHex = "(?:(?:" + h16 + ":){0,1}" + h16 + ")?::(?:" + h16 + ":){3}" + ls32;
  const IPv6TwoHex = "(?:(?:" + h16 + ":){0,2}" + h16 + ")?::(?:" + h16 + ":){2}" + ls32;
  const IPv6OneHex = "(?:(?:" + h16 + ":){0,3}" + h16 + ")?::" + h16 + ":" + ls32;
  const IPv6NoneHex = "(?:(?:" + h16 + ":){0,4}" + h16 + ")?::" + ls32;
  const IPv6NoneHex2 = "(?:(?:" + h16 + ":){0,5}" + h16 + ")?::" + h16;
  const IPv6NoneHex3 = "(?:(?:" + h16 + ":){0,6}" + h16 + ")?::";
  rfc3986.ipv4Cidr = "(?:\\d|[1-2]\\d|3[0-2])";
  rfc3986.ipv6Cidr = "(?:0{0,2}\\d|0?[1-9]\\d|1[01]\\d|12[0-8])";
  rfc3986.ipv6address = "(?:" + IPv6SixHex + "|" + IPv6FiveHex + "|" + IPv6FourHex + "|" + IPv6ThreeHex + "|" + IPv6TwoHex + "|" + IPv6OneHex + "|" + IPv6NoneHex + "|" + IPv6NoneHex2 + "|" + IPv6NoneHex3 + ")";
  rfc3986.ipvFuture = "v" + hexDigitOnly + "+\\.[" + unreserved + subDelims + ":]+";
  rfc3986.scheme = "[a-zA-Z][a-zA-Z\\d+-\\.]*";
  rfc3986.schemeRegex = new RegExp(rfc3986.scheme);
  const userinfo = "[" + unreserved + pctEncoded + subDelims + ":]*";
  const IPLiteral = "\\[(?:" + rfc3986.ipv6address + "|" + rfc3986.ipvFuture + ")\\]";
  const regName = "[" + unreserved + pctEncoded + subDelims + "]{1,255}";
  const host = "(?:" + IPLiteral + "|" + rfc3986.ipv4address + "|" + regName + ")";
  const port = "\\d*";
  const authority = "(?:" + userinfo + "@)?" + host + "(?::" + port + ")?";
  const authorityCapture = "(?:" + userinfo + "@)?(" + host + ")(?::" + port + ")?";
  const segment = pcharOnly + "*";
  const segmentNz = pcharOnly + "+";
  const segmentNzNc = "[" + unreserved + pctEncoded + subDelims + "@]+";
  const pathEmpty = "";
  const pathAbEmpty = "(?:\\/" + segment + ")*";
  const pathAbsolute = "\\/(?:" + segmentNz + pathAbEmpty + ")?";
  const pathRootless = segmentNz + pathAbEmpty;
  const pathNoScheme = segmentNzNc + pathAbEmpty;
  const pathAbNoAuthority = "(?:\\/\\/\\/" + segment + pathAbEmpty + ")";
  rfc3986.hierPart = "(?:(?:\\/\\/" + authority + pathAbEmpty + ")|" + pathAbsolute + "|" + pathRootless + "|" + pathAbNoAuthority + ")";
  rfc3986.hierPartCapture = "(?:(?:\\/\\/" + authorityCapture + pathAbEmpty + ")|" + pathAbsolute + "|" + pathRootless + ")";
  rfc3986.relativeRef = "(?:(?:\\/\\/" + authority + pathAbEmpty + ")|" + pathAbsolute + "|" + pathNoScheme + "|" + pathEmpty + ")";
  rfc3986.relativeRefCapture = "(?:(?:\\/\\/" + authorityCapture + pathAbEmpty + ")|" + pathAbsolute + "|" + pathNoScheme + "|" + pathEmpty + ")";
  rfc3986.query = "[" + pchar + "\\/\\?]*(?=#|$)";
  rfc3986.queryWithSquareBrackets = "[" + pchar + "\\[\\]\\/\\?]*(?=#|$)";
  rfc3986.fragment = "[" + pchar + "\\/\\?]*";
  return rfc3986;
};
internals$1.rfc3986 = internals$1.generate();
uri.ip = {
  v4Cidr: internals$1.rfc3986.ipv4Cidr,
  v6Cidr: internals$1.rfc3986.ipv6Cidr,
  ipv4: internals$1.rfc3986.ipv4address,
  ipv6: internals$1.rfc3986.ipv6address,
  ipvfuture: internals$1.rfc3986.ipvFuture
};
internals$1.createRegex = function(options2) {
  const rfc = internals$1.rfc3986;
  const query = options2.allowQuerySquareBrackets ? rfc.queryWithSquareBrackets : rfc.query;
  const suffix = "(?:\\?" + query + ")?(?:#" + rfc.fragment + ")?";
  const relative = options2.domain ? rfc.relativeRefCapture : rfc.relativeRef;
  if (options2.relativeOnly) {
    return internals$1.wrap(relative + suffix);
  }
  let customScheme = "";
  if (options2.scheme) {
    Assert$1(options2.scheme instanceof RegExp || typeof options2.scheme === "string" || Array.isArray(options2.scheme), "scheme must be a RegExp, String, or Array");
    const schemes = [].concat(options2.scheme);
    Assert$1(schemes.length >= 1, "scheme must have at least 1 scheme specified");
    const selections = [];
    for (let i = 0; i < schemes.length; ++i) {
      const scheme2 = schemes[i];
      Assert$1(scheme2 instanceof RegExp || typeof scheme2 === "string", "scheme at position " + i + " must be a RegExp or String");
      if (scheme2 instanceof RegExp) {
        selections.push(scheme2.source.toString());
      } else {
        Assert$1(rfc.schemeRegex.test(scheme2), "scheme at position " + i + " must be a valid scheme");
        selections.push(EscapeRegex(scheme2));
      }
    }
    customScheme = selections.join("|");
  }
  const scheme = customScheme ? "(?:" + customScheme + ")" : rfc.scheme;
  const absolute = "(?:" + scheme + ":" + (options2.domain ? rfc.hierPartCapture : rfc.hierPart) + ")";
  const prefix = options2.allowRelative ? "(?:" + absolute + "|" + relative + ")" : absolute;
  return internals$1.wrap(prefix + suffix, customScheme);
};
internals$1.wrap = function(raw, scheme) {
  raw = `(?=.)(?!https?:/(?:$|[^/]))(?!https?:///)(?!https?:[^/])${raw}`;
  return {
    raw,
    regex: new RegExp(`^${raw}$`),
    scheme
  };
};
internals$1.uriRegex = internals$1.createRegex({});
uri.regex = function(options2 = {}) {
  if (options2.scheme || options2.allowRelative || options2.relativeOnly || options2.allowQuerySquareBrackets || options2.domain) {
    return internals$1.createRegex(options2);
  }
  return internals$1.uriRegex;
};
const Assert = assert;
const Uri = uri;
ip.regex = function(options2 = {}) {
  Assert(options2.cidr === void 0 || typeof options2.cidr === "string", "options.cidr must be a string");
  const cidr = options2.cidr ? options2.cidr.toLowerCase() : "optional";
  Assert(["required", "optional", "forbidden"].includes(cidr), "options.cidr must be one of required, optional, forbidden");
  Assert(options2.version === void 0 || typeof options2.version === "string" || Array.isArray(options2.version), "options.version must be a string or an array of string");
  let versions = options2.version || ["ipv4", "ipv6", "ipvfuture"];
  if (!Array.isArray(versions)) {
    versions = [versions];
  }
  Assert(versions.length >= 1, "options.version must have at least 1 version specified");
  for (let i = 0; i < versions.length; ++i) {
    Assert(typeof versions[i] === "string", "options.version must only contain strings");
    versions[i] = versions[i].toLowerCase();
    Assert(["ipv4", "ipv6", "ipvfuture"].includes(versions[i]), "options.version contains unknown version " + versions[i] + " - must be one of ipv4, ipv6, ipvfuture");
  }
  versions = Array.from(new Set(versions));
  const parts = versions.map((version2) => {
    if (cidr === "forbidden") {
      return Uri.ip[version2];
    }
    const cidrpart = `\\/${version2 === "ipv4" ? Uri.ip.v4Cidr : Uri.ip.v6Cidr}`;
    if (cidr === "required") {
      return `${Uri.ip[version2]}${cidrpart}`;
    }
    return `${Uri.ip[version2]}(?:${cidrpart})?`;
  });
  const raw = `(?:${parts.join("|")})`;
  const regex = new RegExp(`^${raw}$`);
  return { cidr, versions, regex, raw };
};
const internals = {};
internals.tlds = [
  "AAA",
  "AARP",
  "ABB",
  "ABBOTT",
  "ABBVIE",
  "ABC",
  "ABLE",
  "ABOGADO",
  "ABUDHABI",
  "AC",
  "ACADEMY",
  "ACCENTURE",
  "ACCOUNTANT",
  "ACCOUNTANTS",
  "ACO",
  "ACTOR",
  "AD",
  "ADS",
  "ADULT",
  "AE",
  "AEG",
  "AERO",
  "AETNA",
  "AF",
  "AFL",
  "AFRICA",
  "AG",
  "AGAKHAN",
  "AGENCY",
  "AI",
  "AIG",
  "AIRBUS",
  "AIRFORCE",
  "AIRTEL",
  "AKDN",
  "AL",
  "ALIBABA",
  "ALIPAY",
  "ALLFINANZ",
  "ALLSTATE",
  "ALLY",
  "ALSACE",
  "ALSTOM",
  "AM",
  "AMAZON",
  "AMERICANEXPRESS",
  "AMERICANFAMILY",
  "AMEX",
  "AMFAM",
  "AMICA",
  "AMSTERDAM",
  "ANALYTICS",
  "ANDROID",
  "ANQUAN",
  "ANZ",
  "AO",
  "AOL",
  "APARTMENTS",
  "APP",
  "APPLE",
  "AQ",
  "AQUARELLE",
  "AR",
  "ARAB",
  "ARAMCO",
  "ARCHI",
  "ARMY",
  "ARPA",
  "ART",
  "ARTE",
  "AS",
  "ASDA",
  "ASIA",
  "ASSOCIATES",
  "AT",
  "ATHLETA",
  "ATTORNEY",
  "AU",
  "AUCTION",
  "AUDI",
  "AUDIBLE",
  "AUDIO",
  "AUSPOST",
  "AUTHOR",
  "AUTO",
  "AUTOS",
  "AVIANCA",
  "AW",
  "AWS",
  "AX",
  "AXA",
  "AZ",
  "AZURE",
  "BA",
  "BABY",
  "BAIDU",
  "BANAMEX",
  "BAND",
  "BANK",
  "BAR",
  "BARCELONA",
  "BARCLAYCARD",
  "BARCLAYS",
  "BAREFOOT",
  "BARGAINS",
  "BASEBALL",
  "BASKETBALL",
  "BAUHAUS",
  "BAYERN",
  "BB",
  "BBC",
  "BBT",
  "BBVA",
  "BCG",
  "BCN",
  "BD",
  "BE",
  "BEATS",
  "BEAUTY",
  "BEER",
  "BENTLEY",
  "BERLIN",
  "BEST",
  "BESTBUY",
  "BET",
  "BF",
  "BG",
  "BH",
  "BHARTI",
  "BI",
  "BIBLE",
  "BID",
  "BIKE",
  "BING",
  "BINGO",
  "BIO",
  "BIZ",
  "BJ",
  "BLACK",
  "BLACKFRIDAY",
  "BLOCKBUSTER",
  "BLOG",
  "BLOOMBERG",
  "BLUE",
  "BM",
  "BMS",
  "BMW",
  "BN",
  "BNPPARIBAS",
  "BO",
  "BOATS",
  "BOEHRINGER",
  "BOFA",
  "BOM",
  "BOND",
  "BOO",
  "BOOK",
  "BOOKING",
  "BOSCH",
  "BOSTIK",
  "BOSTON",
  "BOT",
  "BOUTIQUE",
  "BOX",
  "BR",
  "BRADESCO",
  "BRIDGESTONE",
  "BROADWAY",
  "BROKER",
  "BROTHER",
  "BRUSSELS",
  "BS",
  "BT",
  "BUILD",
  "BUILDERS",
  "BUSINESS",
  "BUY",
  "BUZZ",
  "BV",
  "BW",
  "BY",
  "BZ",
  "BZH",
  "CA",
  "CAB",
  "CAFE",
  "CAL",
  "CALL",
  "CALVINKLEIN",
  "CAM",
  "CAMERA",
  "CAMP",
  "CANON",
  "CAPETOWN",
  "CAPITAL",
  "CAPITALONE",
  "CAR",
  "CARAVAN",
  "CARDS",
  "CARE",
  "CAREER",
  "CAREERS",
  "CARS",
  "CASA",
  "CASE",
  "CASH",
  "CASINO",
  "CAT",
  "CATERING",
  "CATHOLIC",
  "CBA",
  "CBN",
  "CBRE",
  "CC",
  "CD",
  "CENTER",
  "CEO",
  "CERN",
  "CF",
  "CFA",
  "CFD",
  "CG",
  "CH",
  "CHANEL",
  "CHANNEL",
  "CHARITY",
  "CHASE",
  "CHAT",
  "CHEAP",
  "CHINTAI",
  "CHRISTMAS",
  "CHROME",
  "CHURCH",
  "CI",
  "CIPRIANI",
  "CIRCLE",
  "CISCO",
  "CITADEL",
  "CITI",
  "CITIC",
  "CITY",
  "CK",
  "CL",
  "CLAIMS",
  "CLEANING",
  "CLICK",
  "CLINIC",
  "CLINIQUE",
  "CLOTHING",
  "CLOUD",
  "CLUB",
  "CLUBMED",
  "CM",
  "CN",
  "CO",
  "COACH",
  "CODES",
  "COFFEE",
  "COLLEGE",
  "COLOGNE",
  "COM",
  "COMCAST",
  "COMMBANK",
  "COMMUNITY",
  "COMPANY",
  "COMPARE",
  "COMPUTER",
  "COMSEC",
  "CONDOS",
  "CONSTRUCTION",
  "CONSULTING",
  "CONTACT",
  "CONTRACTORS",
  "COOKING",
  "COOL",
  "COOP",
  "CORSICA",
  "COUNTRY",
  "COUPON",
  "COUPONS",
  "COURSES",
  "CPA",
  "CR",
  "CREDIT",
  "CREDITCARD",
  "CREDITUNION",
  "CRICKET",
  "CROWN",
  "CRS",
  "CRUISE",
  "CRUISES",
  "CU",
  "CUISINELLA",
  "CV",
  "CW",
  "CX",
  "CY",
  "CYMRU",
  "CYOU",
  "CZ",
  "DABUR",
  "DAD",
  "DANCE",
  "DATA",
  "DATE",
  "DATING",
  "DATSUN",
  "DAY",
  "DCLK",
  "DDS",
  "DE",
  "DEAL",
  "DEALER",
  "DEALS",
  "DEGREE",
  "DELIVERY",
  "DELL",
  "DELOITTE",
  "DELTA",
  "DEMOCRAT",
  "DENTAL",
  "DENTIST",
  "DESI",
  "DESIGN",
  "DEV",
  "DHL",
  "DIAMONDS",
  "DIET",
  "DIGITAL",
  "DIRECT",
  "DIRECTORY",
  "DISCOUNT",
  "DISCOVER",
  "DISH",
  "DIY",
  "DJ",
  "DK",
  "DM",
  "DNP",
  "DO",
  "DOCS",
  "DOCTOR",
  "DOG",
  "DOMAINS",
  "DOT",
  "DOWNLOAD",
  "DRIVE",
  "DTV",
  "DUBAI",
  "DUNLOP",
  "DUPONT",
  "DURBAN",
  "DVAG",
  "DVR",
  "DZ",
  "EARTH",
  "EAT",
  "EC",
  "ECO",
  "EDEKA",
  "EDU",
  "EDUCATION",
  "EE",
  "EG",
  "EMAIL",
  "EMERCK",
  "ENERGY",
  "ENGINEER",
  "ENGINEERING",
  "ENTERPRISES",
  "EPSON",
  "EQUIPMENT",
  "ER",
  "ERICSSON",
  "ERNI",
  "ES",
  "ESQ",
  "ESTATE",
  "ET",
  "EU",
  "EUROVISION",
  "EUS",
  "EVENTS",
  "EXCHANGE",
  "EXPERT",
  "EXPOSED",
  "EXPRESS",
  "EXTRASPACE",
  "FAGE",
  "FAIL",
  "FAIRWINDS",
  "FAITH",
  "FAMILY",
  "FAN",
  "FANS",
  "FARM",
  "FARMERS",
  "FASHION",
  "FAST",
  "FEDEX",
  "FEEDBACK",
  "FERRARI",
  "FERRERO",
  "FI",
  "FIDELITY",
  "FIDO",
  "FILM",
  "FINAL",
  "FINANCE",
  "FINANCIAL",
  "FIRE",
  "FIRESTONE",
  "FIRMDALE",
  "FISH",
  "FISHING",
  "FIT",
  "FITNESS",
  "FJ",
  "FK",
  "FLICKR",
  "FLIGHTS",
  "FLIR",
  "FLORIST",
  "FLOWERS",
  "FLY",
  "FM",
  "FO",
  "FOO",
  "FOOD",
  "FOOTBALL",
  "FORD",
  "FOREX",
  "FORSALE",
  "FORUM",
  "FOUNDATION",
  "FOX",
  "FR",
  "FREE",
  "FRESENIUS",
  "FRL",
  "FROGANS",
  "FRONTIER",
  "FTR",
  "FUJITSU",
  "FUN",
  "FUND",
  "FURNITURE",
  "FUTBOL",
  "FYI",
  "GA",
  "GAL",
  "GALLERY",
  "GALLO",
  "GALLUP",
  "GAME",
  "GAMES",
  "GAP",
  "GARDEN",
  "GAY",
  "GB",
  "GBIZ",
  "GD",
  "GDN",
  "GE",
  "GEA",
  "GENT",
  "GENTING",
  "GEORGE",
  "GF",
  "GG",
  "GGEE",
  "GH",
  "GI",
  "GIFT",
  "GIFTS",
  "GIVES",
  "GIVING",
  "GL",
  "GLASS",
  "GLE",
  "GLOBAL",
  "GLOBO",
  "GM",
  "GMAIL",
  "GMBH",
  "GMO",
  "GMX",
  "GN",
  "GODADDY",
  "GOLD",
  "GOLDPOINT",
  "GOLF",
  "GOO",
  "GOODYEAR",
  "GOOG",
  "GOOGLE",
  "GOP",
  "GOT",
  "GOV",
  "GP",
  "GQ",
  "GR",
  "GRAINGER",
  "GRAPHICS",
  "GRATIS",
  "GREEN",
  "GRIPE",
  "GROCERY",
  "GROUP",
  "GS",
  "GT",
  "GU",
  "GUARDIAN",
  "GUCCI",
  "GUGE",
  "GUIDE",
  "GUITARS",
  "GURU",
  "GW",
  "GY",
  "HAIR",
  "HAMBURG",
  "HANGOUT",
  "HAUS",
  "HBO",
  "HDFC",
  "HDFCBANK",
  "HEALTH",
  "HEALTHCARE",
  "HELP",
  "HELSINKI",
  "HERE",
  "HERMES",
  "HIPHOP",
  "HISAMITSU",
  "HITACHI",
  "HIV",
  "HK",
  "HKT",
  "HM",
  "HN",
  "HOCKEY",
  "HOLDINGS",
  "HOLIDAY",
  "HOMEDEPOT",
  "HOMEGOODS",
  "HOMES",
  "HOMESENSE",
  "HONDA",
  "HORSE",
  "HOSPITAL",
  "HOST",
  "HOSTING",
  "HOT",
  "HOTELS",
  "HOTMAIL",
  "HOUSE",
  "HOW",
  "HR",
  "HSBC",
  "HT",
  "HU",
  "HUGHES",
  "HYATT",
  "HYUNDAI",
  "IBM",
  "ICBC",
  "ICE",
  "ICU",
  "ID",
  "IE",
  "IEEE",
  "IFM",
  "IKANO",
  "IL",
  "IM",
  "IMAMAT",
  "IMDB",
  "IMMO",
  "IMMOBILIEN",
  "IN",
  "INC",
  "INDUSTRIES",
  "INFINITI",
  "INFO",
  "ING",
  "INK",
  "INSTITUTE",
  "INSURANCE",
  "INSURE",
  "INT",
  "INTERNATIONAL",
  "INTUIT",
  "INVESTMENTS",
  "IO",
  "IPIRANGA",
  "IQ",
  "IR",
  "IRISH",
  "IS",
  "ISMAILI",
  "IST",
  "ISTANBUL",
  "IT",
  "ITAU",
  "ITV",
  "JAGUAR",
  "JAVA",
  "JCB",
  "JE",
  "JEEP",
  "JETZT",
  "JEWELRY",
  "JIO",
  "JLL",
  "JM",
  "JMP",
  "JNJ",
  "JO",
  "JOBS",
  "JOBURG",
  "JOT",
  "JOY",
  "JP",
  "JPMORGAN",
  "JPRS",
  "JUEGOS",
  "JUNIPER",
  "KAUFEN",
  "KDDI",
  "KE",
  "KERRYHOTELS",
  "KERRYLOGISTICS",
  "KERRYPROPERTIES",
  "KFH",
  "KG",
  "KH",
  "KI",
  "KIA",
  "KIDS",
  "KIM",
  "KINDLE",
  "KITCHEN",
  "KIWI",
  "KM",
  "KN",
  "KOELN",
  "KOMATSU",
  "KOSHER",
  "KP",
  "KPMG",
  "KPN",
  "KR",
  "KRD",
  "KRED",
  "KUOKGROUP",
  "KW",
  "KY",
  "KYOTO",
  "KZ",
  "LA",
  "LACAIXA",
  "LAMBORGHINI",
  "LAMER",
  "LANCASTER",
  "LAND",
  "LANDROVER",
  "LANXESS",
  "LASALLE",
  "LAT",
  "LATINO",
  "LATROBE",
  "LAW",
  "LAWYER",
  "LB",
  "LC",
  "LDS",
  "LEASE",
  "LECLERC",
  "LEFRAK",
  "LEGAL",
  "LEGO",
  "LEXUS",
  "LGBT",
  "LI",
  "LIDL",
  "LIFE",
  "LIFEINSURANCE",
  "LIFESTYLE",
  "LIGHTING",
  "LIKE",
  "LILLY",
  "LIMITED",
  "LIMO",
  "LINCOLN",
  "LINK",
  "LIPSY",
  "LIVE",
  "LIVING",
  "LK",
  "LLC",
  "LLP",
  "LOAN",
  "LOANS",
  "LOCKER",
  "LOCUS",
  "LOL",
  "LONDON",
  "LOTTE",
  "LOTTO",
  "LOVE",
  "LPL",
  "LPLFINANCIAL",
  "LR",
  "LS",
  "LT",
  "LTD",
  "LTDA",
  "LU",
  "LUNDBECK",
  "LUXE",
  "LUXURY",
  "LV",
  "LY",
  "MA",
  "MADRID",
  "MAIF",
  "MAISON",
  "MAKEUP",
  "MAN",
  "MANAGEMENT",
  "MANGO",
  "MAP",
  "MARKET",
  "MARKETING",
  "MARKETS",
  "MARRIOTT",
  "MARSHALLS",
  "MATTEL",
  "MBA",
  "MC",
  "MCKINSEY",
  "MD",
  "ME",
  "MED",
  "MEDIA",
  "MEET",
  "MELBOURNE",
  "MEME",
  "MEMORIAL",
  "MEN",
  "MENU",
  "MERCKMSD",
  "MG",
  "MH",
  "MIAMI",
  "MICROSOFT",
  "MIL",
  "MINI",
  "MINT",
  "MIT",
  "MITSUBISHI",
  "MK",
  "ML",
  "MLB",
  "MLS",
  "MM",
  "MMA",
  "MN",
  "MO",
  "MOBI",
  "MOBILE",
  "MODA",
  "MOE",
  "MOI",
  "MOM",
  "MONASH",
  "MONEY",
  "MONSTER",
  "MORMON",
  "MORTGAGE",
  "MOSCOW",
  "MOTO",
  "MOTORCYCLES",
  "MOV",
  "MOVIE",
  "MP",
  "MQ",
  "MR",
  "MS",
  "MSD",
  "MT",
  "MTN",
  "MTR",
  "MU",
  "MUSEUM",
  "MUSIC",
  "MV",
  "MW",
  "MX",
  "MY",
  "MZ",
  "NA",
  "NAB",
  "NAGOYA",
  "NAME",
  "NATURA",
  "NAVY",
  "NBA",
  "NC",
  "NE",
  "NEC",
  "NET",
  "NETBANK",
  "NETFLIX",
  "NETWORK",
  "NEUSTAR",
  "NEW",
  "NEWS",
  "NEXT",
  "NEXTDIRECT",
  "NEXUS",
  "NF",
  "NFL",
  "NG",
  "NGO",
  "NHK",
  "NI",
  "NICO",
  "NIKE",
  "NIKON",
  "NINJA",
  "NISSAN",
  "NISSAY",
  "NL",
  "NO",
  "NOKIA",
  "NORTON",
  "NOW",
  "NOWRUZ",
  "NOWTV",
  "NP",
  "NR",
  "NRA",
  "NRW",
  "NTT",
  "NU",
  "NYC",
  "NZ",
  "OBI",
  "OBSERVER",
  "OFFICE",
  "OKINAWA",
  "OLAYAN",
  "OLAYANGROUP",
  "OLLO",
  "OM",
  "OMEGA",
  "ONE",
  "ONG",
  "ONL",
  "ONLINE",
  "OOO",
  "OPEN",
  "ORACLE",
  "ORANGE",
  "ORG",
  "ORGANIC",
  "ORIGINS",
  "OSAKA",
  "OTSUKA",
  "OTT",
  "OVH",
  "PA",
  "PAGE",
  "PANASONIC",
  "PARIS",
  "PARS",
  "PARTNERS",
  "PARTS",
  "PARTY",
  "PAY",
  "PCCW",
  "PE",
  "PET",
  "PF",
  "PFIZER",
  "PG",
  "PH",
  "PHARMACY",
  "PHD",
  "PHILIPS",
  "PHONE",
  "PHOTO",
  "PHOTOGRAPHY",
  "PHOTOS",
  "PHYSIO",
  "PICS",
  "PICTET",
  "PICTURES",
  "PID",
  "PIN",
  "PING",
  "PINK",
  "PIONEER",
  "PIZZA",
  "PK",
  "PL",
  "PLACE",
  "PLAY",
  "PLAYSTATION",
  "PLUMBING",
  "PLUS",
  "PM",
  "PN",
  "PNC",
  "POHL",
  "POKER",
  "POLITIE",
  "PORN",
  "POST",
  "PR",
  "PRAMERICA",
  "PRAXI",
  "PRESS",
  "PRIME",
  "PRO",
  "PROD",
  "PRODUCTIONS",
  "PROF",
  "PROGRESSIVE",
  "PROMO",
  "PROPERTIES",
  "PROPERTY",
  "PROTECTION",
  "PRU",
  "PRUDENTIAL",
  "PS",
  "PT",
  "PUB",
  "PW",
  "PWC",
  "PY",
  "QA",
  "QPON",
  "QUEBEC",
  "QUEST",
  "RACING",
  "RADIO",
  "RE",
  "READ",
  "REALESTATE",
  "REALTOR",
  "REALTY",
  "RECIPES",
  "RED",
  "REDSTONE",
  "REDUMBRELLA",
  "REHAB",
  "REISE",
  "REISEN",
  "REIT",
  "RELIANCE",
  "REN",
  "RENT",
  "RENTALS",
  "REPAIR",
  "REPORT",
  "REPUBLICAN",
  "REST",
  "RESTAURANT",
  "REVIEW",
  "REVIEWS",
  "REXROTH",
  "RICH",
  "RICHARDLI",
  "RICOH",
  "RIL",
  "RIO",
  "RIP",
  "RO",
  "ROCKS",
  "RODEO",
  "ROGERS",
  "ROOM",
  "RS",
  "RSVP",
  "RU",
  "RUGBY",
  "RUHR",
  "RUN",
  "RW",
  "RWE",
  "RYUKYU",
  "SA",
  "SAARLAND",
  "SAFE",
  "SAFETY",
  "SAKURA",
  "SALE",
  "SALON",
  "SAMSCLUB",
  "SAMSUNG",
  "SANDVIK",
  "SANDVIKCOROMANT",
  "SANOFI",
  "SAP",
  "SARL",
  "SAS",
  "SAVE",
  "SAXO",
  "SB",
  "SBI",
  "SBS",
  "SC",
  "SCB",
  "SCHAEFFLER",
  "SCHMIDT",
  "SCHOLARSHIPS",
  "SCHOOL",
  "SCHULE",
  "SCHWARZ",
  "SCIENCE",
  "SCOT",
  "SD",
  "SE",
  "SEARCH",
  "SEAT",
  "SECURE",
  "SECURITY",
  "SEEK",
  "SELECT",
  "SENER",
  "SERVICES",
  "SEVEN",
  "SEW",
  "SEX",
  "SEXY",
  "SFR",
  "SG",
  "SH",
  "SHANGRILA",
  "SHARP",
  "SHAW",
  "SHELL",
  "SHIA",
  "SHIKSHA",
  "SHOES",
  "SHOP",
  "SHOPPING",
  "SHOUJI",
  "SHOW",
  "SI",
  "SILK",
  "SINA",
  "SINGLES",
  "SITE",
  "SJ",
  "SK",
  "SKI",
  "SKIN",
  "SKY",
  "SKYPE",
  "SL",
  "SLING",
  "SM",
  "SMART",
  "SMILE",
  "SN",
  "SNCF",
  "SO",
  "SOCCER",
  "SOCIAL",
  "SOFTBANK",
  "SOFTWARE",
  "SOHU",
  "SOLAR",
  "SOLUTIONS",
  "SONG",
  "SONY",
  "SOY",
  "SPA",
  "SPACE",
  "SPORT",
  "SPOT",
  "SR",
  "SRL",
  "SS",
  "ST",
  "STADA",
  "STAPLES",
  "STAR",
  "STATEBANK",
  "STATEFARM",
  "STC",
  "STCGROUP",
  "STOCKHOLM",
  "STORAGE",
  "STORE",
  "STREAM",
  "STUDIO",
  "STUDY",
  "STYLE",
  "SU",
  "SUCKS",
  "SUPPLIES",
  "SUPPLY",
  "SUPPORT",
  "SURF",
  "SURGERY",
  "SUZUKI",
  "SV",
  "SWATCH",
  "SWISS",
  "SX",
  "SY",
  "SYDNEY",
  "SYSTEMS",
  "SZ",
  "TAB",
  "TAIPEI",
  "TALK",
  "TAOBAO",
  "TARGET",
  "TATAMOTORS",
  "TATAR",
  "TATTOO",
  "TAX",
  "TAXI",
  "TC",
  "TCI",
  "TD",
  "TDK",
  "TEAM",
  "TECH",
  "TECHNOLOGY",
  "TEL",
  "TEMASEK",
  "TENNIS",
  "TEVA",
  "TF",
  "TG",
  "TH",
  "THD",
  "THEATER",
  "THEATRE",
  "TIAA",
  "TICKETS",
  "TIENDA",
  "TIPS",
  "TIRES",
  "TIROL",
  "TJ",
  "TJMAXX",
  "TJX",
  "TK",
  "TKMAXX",
  "TL",
  "TM",
  "TMALL",
  "TN",
  "TO",
  "TODAY",
  "TOKYO",
  "TOOLS",
  "TOP",
  "TORAY",
  "TOSHIBA",
  "TOTAL",
  "TOURS",
  "TOWN",
  "TOYOTA",
  "TOYS",
  "TR",
  "TRADE",
  "TRADING",
  "TRAINING",
  "TRAVEL",
  "TRAVELERS",
  "TRAVELERSINSURANCE",
  "TRUST",
  "TRV",
  "TT",
  "TUBE",
  "TUI",
  "TUNES",
  "TUSHU",
  "TV",
  "TVS",
  "TW",
  "TZ",
  "UA",
  "UBANK",
  "UBS",
  "UG",
  "UK",
  "UNICOM",
  "UNIVERSITY",
  "UNO",
  "UOL",
  "UPS",
  "US",
  "UY",
  "UZ",
  "VA",
  "VACATIONS",
  "VANA",
  "VANGUARD",
  "VC",
  "VE",
  "VEGAS",
  "VENTURES",
  "VERISIGN",
  "VERSICHERUNG",
  "VET",
  "VG",
  "VI",
  "VIAJES",
  "VIDEO",
  "VIG",
  "VIKING",
  "VILLAS",
  "VIN",
  "VIP",
  "VIRGIN",
  "VISA",
  "VISION",
  "VIVA",
  "VIVO",
  "VLAANDEREN",
  "VN",
  "VODKA",
  "VOLVO",
  "VOTE",
  "VOTING",
  "VOTO",
  "VOYAGE",
  "VU",
  "WALES",
  "WALMART",
  "WALTER",
  "WANG",
  "WANGGOU",
  "WATCH",
  "WATCHES",
  "WEATHER",
  "WEATHERCHANNEL",
  "WEBCAM",
  "WEBER",
  "WEBSITE",
  "WED",
  "WEDDING",
  "WEIBO",
  "WEIR",
  "WF",
  "WHOSWHO",
  "WIEN",
  "WIKI",
  "WILLIAMHILL",
  "WIN",
  "WINDOWS",
  "WINE",
  "WINNERS",
  "WME",
  "WOLTERSKLUWER",
  "WOODSIDE",
  "WORK",
  "WORKS",
  "WORLD",
  "WOW",
  "WS",
  "WTC",
  "WTF",
  "XBOX",
  "XEROX",
  "XFINITY",
  "XIHUAN",
  "XIN",
  "XN--11B4C3D",
  "XN--1CK2E1B",
  "XN--1QQW23A",
  "XN--2SCRJ9C",
  "XN--30RR7Y",
  "XN--3BST00M",
  "XN--3DS443G",
  "XN--3E0B707E",
  "XN--3HCRJ9C",
  "XN--3PXU8K",
  "XN--42C2D9A",
  "XN--45BR5CYL",
  "XN--45BRJ9C",
  "XN--45Q11C",
  "XN--4DBRK0CE",
  "XN--4GBRIM",
  "XN--54B7FTA0CC",
  "XN--55QW42G",
  "XN--55QX5D",
  "XN--5SU34J936BGSG",
  "XN--5TZM5G",
  "XN--6FRZ82G",
  "XN--6QQ986B3XL",
  "XN--80ADXHKS",
  "XN--80AO21A",
  "XN--80AQECDR1A",
  "XN--80ASEHDB",
  "XN--80ASWG",
  "XN--8Y0A063A",
  "XN--90A3AC",
  "XN--90AE",
  "XN--90AIS",
  "XN--9DBQ2A",
  "XN--9ET52U",
  "XN--9KRT00A",
  "XN--B4W605FERD",
  "XN--BCK1B9A5DRE4C",
  "XN--C1AVG",
  "XN--C2BR7G",
  "XN--CCK2B3B",
  "XN--CCKWCXETD",
  "XN--CG4BKI",
  "XN--CLCHC0EA0B2G2A9GCD",
  "XN--CZR694B",
  "XN--CZRS0T",
  "XN--CZRU2D",
  "XN--D1ACJ3B",
  "XN--D1ALF",
  "XN--E1A4C",
  "XN--ECKVDTC9D",
  "XN--EFVY88H",
  "XN--FCT429K",
  "XN--FHBEI",
  "XN--FIQ228C5HS",
  "XN--FIQ64B",
  "XN--FIQS8S",
  "XN--FIQZ9S",
  "XN--FJQ720A",
  "XN--FLW351E",
  "XN--FPCRJ9C3D",
  "XN--FZC2C9E2C",
  "XN--FZYS8D69UVGM",
  "XN--G2XX48C",
  "XN--GCKR3F0F",
  "XN--GECRJ9C",
  "XN--GK3AT1E",
  "XN--H2BREG3EVE",
  "XN--H2BRJ9C",
  "XN--H2BRJ9C8C",
  "XN--HXT814E",
  "XN--I1B6B1A6A2E",
  "XN--IMR513N",
  "XN--IO0A7I",
  "XN--J1AEF",
  "XN--J1AMH",
  "XN--J6W193G",
  "XN--JLQ480N2RG",
  "XN--JVR189M",
  "XN--KCRX77D1X4A",
  "XN--KPRW13D",
  "XN--KPRY57D",
  "XN--KPUT3I",
  "XN--L1ACC",
  "XN--LGBBAT1AD8J",
  "XN--MGB9AWBF",
  "XN--MGBA3A3EJT",
  "XN--MGBA3A4F16A",
  "XN--MGBA7C0BBN0A",
  "XN--MGBAAM7A8H",
  "XN--MGBAB2BD",
  "XN--MGBAH1A3HJKRD",
  "XN--MGBAI9AZGQP6J",
  "XN--MGBAYH7GPA",
  "XN--MGBBH1A",
  "XN--MGBBH1A71E",
  "XN--MGBC0A9AZCG",
  "XN--MGBCA7DZDO",
  "XN--MGBCPQ6GPA1A",
  "XN--MGBERP4A5D4AR",
  "XN--MGBGU82A",
  "XN--MGBI4ECEXP",
  "XN--MGBPL2FH",
  "XN--MGBT3DHD",
  "XN--MGBTX2B",
  "XN--MGBX4CD0AB",
  "XN--MIX891F",
  "XN--MK1BU44C",
  "XN--MXTQ1M",
  "XN--NGBC5AZD",
  "XN--NGBE9E0A",
  "XN--NGBRX",
  "XN--NODE",
  "XN--NQV7F",
  "XN--NQV7FS00EMA",
  "XN--NYQY26A",
  "XN--O3CW4H",
  "XN--OGBPF8FL",
  "XN--OTU796D",
  "XN--P1ACF",
  "XN--P1AI",
  "XN--PGBS0DH",
  "XN--PSSY2U",
  "XN--Q7CE6A",
  "XN--Q9JYB4C",
  "XN--QCKA1PMC",
  "XN--QXA6A",
  "XN--QXAM",
  "XN--RHQV96G",
  "XN--ROVU88B",
  "XN--RVC1E0AM3E",
  "XN--S9BRJ9C",
  "XN--SES554G",
  "XN--T60B56A",
  "XN--TCKWE",
  "XN--TIQ49XQYJ",
  "XN--UNUP4Y",
  "XN--VERMGENSBERATER-CTB",
  "XN--VERMGENSBERATUNG-PWB",
  "XN--VHQUV",
  "XN--VUQ861B",
  "XN--W4R85EL8FHU5DNRA",
  "XN--W4RS40L",
  "XN--WGBH1C",
  "XN--WGBL6A",
  "XN--XHQ521B",
  "XN--XKC2AL3HYE2A",
  "XN--XKC2DL3A5EE0H",
  "XN--Y9A3AQ",
  "XN--YFRO4I67O",
  "XN--YGBI2AMMX",
  "XN--ZFR164B",
  "XXX",
  "XYZ",
  "YACHTS",
  "YAHOO",
  "YAMAXUN",
  "YANDEX",
  "YE",
  "YODOBASHI",
  "YOGA",
  "YOKOHAMA",
  "YOU",
  "YOUTUBE",
  "YT",
  "YUN",
  "ZA",
  "ZAPPOS",
  "ZARA",
  "ZERO",
  "ZIP",
  "ZM",
  "ZONE",
  "ZUERICH",
  "ZW"
];
var tlds = new Set(internals.tlds.map((tld) => tld.toLowerCase()));
var string;
var hasRequiredString;
function requireString() {
  if (hasRequiredString)
    return string;
  hasRequiredString = 1;
  const Assert2 = assert;
  const Domain2 = domain;
  const Email = email;
  const Ip = ip;
  const EscapeRegex2 = escapeRegex;
  const Tlds = tlds;
  const Uri2 = uri;
  const Any = requireAny();
  const Common = requireCommon();
  const internals2 = {
    tlds: Tlds instanceof Set ? { tlds: { allow: Tlds, deny: null } } : false,
    // $lab:coverage:ignore$
    base64Regex: {
      // paddingRequired
      true: {
        // urlSafe
        true: /^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}==|[\w\-]{3}=)?$/,
        false: /^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/
      },
      false: {
        true: /^(?:[\w\-]{2}[\w\-]{2})*(?:[\w\-]{2}(==)?|[\w\-]{3}=?)?$/,
        false: /^(?:[A-Za-z0-9+\/]{2}[A-Za-z0-9+\/]{2})*(?:[A-Za-z0-9+\/]{2}(==)?|[A-Za-z0-9+\/]{3}=?)?$/
      }
    },
    dataUriRegex: /^data:[\w+.-]+\/[\w+.-]+;((charset=[\w-]+|base64),)?(.*)$/,
    hexRegex: /^[a-f0-9]+$/i,
    ipRegex: Ip.regex({ cidr: "forbidden" }).regex,
    isoDurationRegex: /^P(?!$)(\d+Y)?(\d+M)?(\d+W)?(\d+D)?(T(?=\d)(\d+H)?(\d+M)?(\d+S)?)?$/,
    guidBrackets: {
      "{": "}",
      "[": "]",
      "(": ")",
      "": ""
    },
    guidVersions: {
      uuidv1: "1",
      uuidv2: "2",
      uuidv3: "3",
      uuidv4: "4",
      uuidv5: "5"
    },
    guidSeparators: /* @__PURE__ */ new Set([void 0, true, false, "-", ":"]),
    normalizationForms: ["NFC", "NFD", "NFKC", "NFKD"]
  };
  string = Any.extend({
    type: "string",
    flags: {
      insensitive: { default: false },
      truncate: { default: false }
    },
    terms: {
      replacements: { init: null }
    },
    coerce: {
      from: "string",
      method(value, { schema, state: state2, prefs }) {
        const normalize = schema.$_getRule("normalize");
        if (normalize) {
          value = value.normalize(normalize.args.form);
        }
        const casing = schema.$_getRule("case");
        if (casing) {
          value = casing.args.direction === "upper" ? value.toLocaleUpperCase() : value.toLocaleLowerCase();
        }
        const trim = schema.$_getRule("trim");
        if (trim && trim.args.enabled) {
          value = value.trim();
        }
        if (schema.$_terms.replacements) {
          for (const replacement of schema.$_terms.replacements) {
            value = value.replace(replacement.pattern, replacement.replacement);
          }
        }
        const hex = schema.$_getRule("hex");
        if (hex && hex.args.options.byteAligned && value.length % 2 !== 0) {
          value = `0${value}`;
        }
        if (schema.$_getRule("isoDate")) {
          const iso = internals2.isoDate(value);
          if (iso) {
            value = iso;
          }
        }
        if (schema._flags.truncate) {
          const rule = schema.$_getRule("max");
          if (rule) {
            let limit = rule.args.limit;
            if (Common.isResolvable(limit)) {
              limit = limit.resolve(value, state2, prefs);
              if (!Common.limit(limit)) {
                return { value, errors: schema.$_createError("any.ref", limit, { ref: rule.args.limit, arg: "limit", reason: "must be a positive integer" }, state2, prefs) };
              }
            }
            value = value.slice(0, limit);
          }
        }
        return { value };
      }
    },
    validate(value, { schema, error: error2 }) {
      if (typeof value !== "string") {
        return { value, errors: error2("string.base") };
      }
      if (value === "") {
        const min2 = schema.$_getRule("min");
        if (min2 && min2.args.limit === 0) {
          return;
        }
        return { value, errors: error2("string.empty") };
      }
    },
    rules: {
      alphanum: {
        method() {
          return this.$_addRule("alphanum");
        },
        validate(value, helpers) {
          if (/^[a-zA-Z0-9]+$/.test(value)) {
            return value;
          }
          return helpers.error("string.alphanum");
        }
      },
      base64: {
        method(options2 = {}) {
          Common.assertOptions(options2, ["paddingRequired", "urlSafe"]);
          options2 = { urlSafe: false, paddingRequired: true, ...options2 };
          Assert2(typeof options2.paddingRequired === "boolean", "paddingRequired must be boolean");
          Assert2(typeof options2.urlSafe === "boolean", "urlSafe must be boolean");
          return this.$_addRule({ name: "base64", args: { options: options2 } });
        },
        validate(value, helpers, { options: options2 }) {
          const regex = internals2.base64Regex[options2.paddingRequired][options2.urlSafe];
          if (regex.test(value)) {
            return value;
          }
          return helpers.error("string.base64");
        }
      },
      case: {
        method(direction) {
          Assert2(["lower", "upper"].includes(direction), "Invalid case:", direction);
          return this.$_addRule({ name: "case", args: { direction } });
        },
        validate(value, helpers, { direction }) {
          if (direction === "lower" && value === value.toLocaleLowerCase() || direction === "upper" && value === value.toLocaleUpperCase()) {
            return value;
          }
          return helpers.error(`string.${direction}case`);
        },
        convert: true
      },
      creditCard: {
        method() {
          return this.$_addRule("creditCard");
        },
        validate(value, helpers) {
          let i = value.length;
          let sum = 0;
          let mul = 1;
          while (i--) {
            const char = value.charAt(i) * mul;
            sum = sum + (char - (char > 9) * 9);
            mul = mul ^ 3;
          }
          if (sum > 0 && sum % 10 === 0) {
            return value;
          }
          return helpers.error("string.creditCard");
        }
      },
      dataUri: {
        method(options2 = {}) {
          Common.assertOptions(options2, ["paddingRequired"]);
          options2 = { paddingRequired: true, ...options2 };
          Assert2(typeof options2.paddingRequired === "boolean", "paddingRequired must be boolean");
          return this.$_addRule({ name: "dataUri", args: { options: options2 } });
        },
        validate(value, helpers, { options: options2 }) {
          const matches = value.match(internals2.dataUriRegex);
          if (matches) {
            if (!matches[2]) {
              return value;
            }
            if (matches[2] !== "base64") {
              return value;
            }
            const base64regex = internals2.base64Regex[options2.paddingRequired].false;
            if (base64regex.test(matches[3])) {
              return value;
            }
          }
          return helpers.error("string.dataUri");
        }
      },
      domain: {
        method(options2) {
          if (options2) {
            Common.assertOptions(options2, ["allowFullyQualified", "allowUnicode", "maxDomainSegments", "minDomainSegments", "tlds"]);
          }
          const address = internals2.addressOptions(options2);
          return this.$_addRule({ name: "domain", args: { options: options2 }, address });
        },
        validate(value, helpers, args2, { address }) {
          if (Domain2.isValid(value, address)) {
            return value;
          }
          return helpers.error("string.domain");
        }
      },
      email: {
        method(options2 = {}) {
          Common.assertOptions(options2, ["allowFullyQualified", "allowUnicode", "ignoreLength", "maxDomainSegments", "minDomainSegments", "multiple", "separator", "tlds"]);
          Assert2(options2.multiple === void 0 || typeof options2.multiple === "boolean", "multiple option must be an boolean");
          const address = internals2.addressOptions(options2);
          const regex = new RegExp(`\\s*[${options2.separator ? EscapeRegex2(options2.separator) : ","}]\\s*`);
          return this.$_addRule({ name: "email", args: { options: options2 }, regex, address });
        },
        validate(value, helpers, { options: options2 }, { regex, address }) {
          const emails = options2.multiple ? value.split(regex) : [value];
          const invalids = [];
          for (const email2 of emails) {
            if (!Email.isValid(email2, address)) {
              invalids.push(email2);
            }
          }
          if (!invalids.length) {
            return value;
          }
          return helpers.error("string.email", { value, invalids });
        }
      },
      guid: {
        alias: "uuid",
        method(options2 = {}) {
          Common.assertOptions(options2, ["version", "separator"]);
          let versionNumbers = "";
          if (options2.version) {
            const versions = [].concat(options2.version);
            Assert2(versions.length >= 1, "version must have at least 1 valid version specified");
            const set2 = /* @__PURE__ */ new Set();
            for (let i = 0; i < versions.length; ++i) {
              const version2 = versions[i];
              Assert2(typeof version2 === "string", "version at position " + i + " must be a string");
              const versionNumber = internals2.guidVersions[version2.toLowerCase()];
              Assert2(versionNumber, "version at position " + i + " must be one of " + Object.keys(internals2.guidVersions).join(", "));
              Assert2(!set2.has(versionNumber), "version at position " + i + " must not be a duplicate");
              versionNumbers += versionNumber;
              set2.add(versionNumber);
            }
          }
          Assert2(internals2.guidSeparators.has(options2.separator), 'separator must be one of true, false, "-", or ":"');
          const separator = options2.separator === void 0 ? "[:-]?" : options2.separator === true ? "[:-]" : options2.separator === false ? "[]?" : `\\${options2.separator}`;
          const regex = new RegExp(`^([\\[{\\(]?)[0-9A-F]{8}(${separator})[0-9A-F]{4}\\2?[${versionNumbers || "0-9A-F"}][0-9A-F]{3}\\2?[${versionNumbers ? "89AB" : "0-9A-F"}][0-9A-F]{3}\\2?[0-9A-F]{12}([\\]}\\)]?)$`, "i");
          return this.$_addRule({ name: "guid", args: { options: options2 }, regex });
        },
        validate(value, helpers, args2, { regex }) {
          const results = regex.exec(value);
          if (!results) {
            return helpers.error("string.guid");
          }
          if (internals2.guidBrackets[results[1]] !== results[results.length - 1]) {
            return helpers.error("string.guid");
          }
          return value;
        }
      },
      hex: {
        method(options2 = {}) {
          Common.assertOptions(options2, ["byteAligned"]);
          options2 = { byteAligned: false, ...options2 };
          Assert2(typeof options2.byteAligned === "boolean", "byteAligned must be boolean");
          return this.$_addRule({ name: "hex", args: { options: options2 } });
        },
        validate(value, helpers, { options: options2 }) {
          if (!internals2.hexRegex.test(value)) {
            return helpers.error("string.hex");
          }
          if (options2.byteAligned && value.length % 2 !== 0) {
            return helpers.error("string.hexAlign");
          }
          return value;
        }
      },
      hostname: {
        method() {
          return this.$_addRule("hostname");
        },
        validate(value, helpers) {
          if (Domain2.isValid(value, { minDomainSegments: 1 }) || internals2.ipRegex.test(value)) {
            return value;
          }
          return helpers.error("string.hostname");
        }
      },
      insensitive: {
        method() {
          return this.$_setFlag("insensitive", true);
        }
      },
      ip: {
        method(options2 = {}) {
          Common.assertOptions(options2, ["cidr", "version"]);
          const { cidr, versions, regex } = Ip.regex(options2);
          const version2 = options2.version ? versions : void 0;
          return this.$_addRule({ name: "ip", args: { options: { cidr, version: version2 } }, regex });
        },
        validate(value, helpers, { options: options2 }, { regex }) {
          if (regex.test(value)) {
            return value;
          }
          if (options2.version) {
            return helpers.error("string.ipVersion", { value, cidr: options2.cidr, version: options2.version });
          }
          return helpers.error("string.ip", { value, cidr: options2.cidr });
        }
      },
      isoDate: {
        method() {
          return this.$_addRule("isoDate");
        },
        validate(value, { error: error2 }) {
          if (internals2.isoDate(value)) {
            return value;
          }
          return error2("string.isoDate");
        }
      },
      isoDuration: {
        method() {
          return this.$_addRule("isoDuration");
        },
        validate(value, helpers) {
          if (internals2.isoDurationRegex.test(value)) {
            return value;
          }
          return helpers.error("string.isoDuration");
        }
      },
      length: {
        method(limit, encoding) {
          return internals2.length(this, "length", limit, "=", encoding);
        },
        validate(value, helpers, { limit, encoding }, { name: name2, operator, args: args2 }) {
          const length = encoding ? Buffer && Buffer.byteLength(value, encoding) : value.length;
          if (Common.compare(length, limit, operator)) {
            return value;
          }
          return helpers.error("string." + name2, { limit: args2.limit, value, encoding });
        },
        args: [
          {
            name: "limit",
            ref: true,
            assert: Common.limit,
            message: "must be a positive integer"
          },
          "encoding"
        ]
      },
      lowercase: {
        method() {
          return this.case("lower");
        }
      },
      max: {
        method(limit, encoding) {
          return internals2.length(this, "max", limit, "<=", encoding);
        },
        args: ["limit", "encoding"]
      },
      min: {
        method(limit, encoding) {
          return internals2.length(this, "min", limit, ">=", encoding);
        },
        args: ["limit", "encoding"]
      },
      normalize: {
        method(form = "NFC") {
          Assert2(internals2.normalizationForms.includes(form), "normalization form must be one of " + internals2.normalizationForms.join(", "));
          return this.$_addRule({ name: "normalize", args: { form } });
        },
        validate(value, { error: error2 }, { form }) {
          if (value === value.normalize(form)) {
            return value;
          }
          return error2("string.normalize", { value, form });
        },
        convert: true
      },
      pattern: {
        alias: "regex",
        method(regex, options2 = {}) {
          Assert2(regex instanceof RegExp, "regex must be a RegExp");
          Assert2(!regex.flags.includes("g") && !regex.flags.includes("y"), "regex should not use global or sticky mode");
          if (typeof options2 === "string") {
            options2 = { name: options2 };
          }
          Common.assertOptions(options2, ["invert", "name"]);
          const errorCode = ["string.pattern", options2.invert ? ".invert" : "", options2.name ? ".name" : ".base"].join("");
          return this.$_addRule({ name: "pattern", args: { regex, options: options2 }, errorCode });
        },
        validate(value, helpers, { regex, options: options2 }, { errorCode }) {
          const patternMatch = regex.test(value);
          if (patternMatch ^ options2.invert) {
            return value;
          }
          return helpers.error(errorCode, { name: options2.name, regex, value });
        },
        args: ["regex", "options"],
        multi: true
      },
      replace: {
        method(pattern, replacement) {
          if (typeof pattern === "string") {
            pattern = new RegExp(EscapeRegex2(pattern), "g");
          }
          Assert2(pattern instanceof RegExp, "pattern must be a RegExp");
          Assert2(typeof replacement === "string", "replacement must be a String");
          const obj = this.clone();
          if (!obj.$_terms.replacements) {
            obj.$_terms.replacements = [];
          }
          obj.$_terms.replacements.push({ pattern, replacement });
          return obj;
        }
      },
      token: {
        method() {
          return this.$_addRule("token");
        },
        validate(value, helpers) {
          if (/^\w+$/.test(value)) {
            return value;
          }
          return helpers.error("string.token");
        }
      },
      trim: {
        method(enabled = true) {
          Assert2(typeof enabled === "boolean", "enabled must be a boolean");
          return this.$_addRule({ name: "trim", args: { enabled } });
        },
        validate(value, helpers, { enabled }) {
          if (!enabled || value === value.trim()) {
            return value;
          }
          return helpers.error("string.trim");
        },
        convert: true
      },
      truncate: {
        method(enabled = true) {
          Assert2(typeof enabled === "boolean", "enabled must be a boolean");
          return this.$_setFlag("truncate", enabled);
        }
      },
      uppercase: {
        method() {
          return this.case("upper");
        }
      },
      uri: {
        method(options2 = {}) {
          Common.assertOptions(options2, ["allowRelative", "allowQuerySquareBrackets", "domain", "relativeOnly", "scheme"]);
          if (options2.domain) {
            Common.assertOptions(options2.domain, ["allowFullyQualified", "allowUnicode", "maxDomainSegments", "minDomainSegments", "tlds"]);
          }
          const { regex, scheme } = Uri2.regex(options2);
          const domain2 = options2.domain ? internals2.addressOptions(options2.domain) : null;
          return this.$_addRule({ name: "uri", args: { options: options2 }, regex, domain: domain2, scheme });
        },
        validate(value, helpers, { options: options2 }, { regex, domain: domain2, scheme }) {
          if (["http:/", "https:/"].includes(value)) {
            return helpers.error("string.uri");
          }
          const match = regex.exec(value);
          if (match) {
            const matched = match[1] || match[2];
            if (domain2 && (!options2.allowRelative || matched) && !Domain2.isValid(matched, domain2)) {
              return helpers.error("string.domain", { value: matched });
            }
            return value;
          }
          if (options2.relativeOnly) {
            return helpers.error("string.uriRelativeOnly");
          }
          if (options2.scheme) {
            return helpers.error("string.uriCustomScheme", { scheme, value });
          }
          return helpers.error("string.uri");
        }
      }
    },
    manifest: {
      build(obj, desc) {
        if (desc.replacements) {
          for (const { pattern, replacement } of desc.replacements) {
            obj = obj.replace(pattern, replacement);
          }
        }
        return obj;
      }
    },
    messages: {
      "string.alphanum": "{{#label}} must only contain alpha-numeric characters",
      "string.base": "{{#label}} must be a string",
      "string.base64": "{{#label}} must be a valid base64 string",
      "string.creditCard": "{{#label}} must be a credit card",
      "string.dataUri": "{{#label}} must be a valid dataUri string",
      "string.domain": "{{#label}} must contain a valid domain name",
      "string.email": "{{#label}} must be a valid email",
      "string.empty": "{{#label}} is not allowed to be empty",
      "string.guid": "{{#label}} must be a valid GUID",
      "string.hex": "{{#label}} must only contain hexadecimal characters",
      "string.hexAlign": "{{#label}} hex decoded representation must be byte aligned",
      "string.hostname": "{{#label}} must be a valid hostname",
      "string.ip": "{{#label}} must be a valid ip address with a {{#cidr}} CIDR",
      "string.ipVersion": "{{#label}} must be a valid ip address of one of the following versions {{#version}} with a {{#cidr}} CIDR",
      "string.isoDate": "{{#label}} must be in iso format",
      "string.isoDuration": "{{#label}} must be a valid ISO 8601 duration",
      "string.length": "{{#label}} length must be {{#limit}} characters long",
      "string.lowercase": "{{#label}} must only contain lowercase characters",
      "string.max": "{{#label}} length must be less than or equal to {{#limit}} characters long",
      "string.min": "{{#label}} length must be at least {{#limit}} characters long",
      "string.normalize": "{{#label}} must be unicode normalized in the {{#form}} form",
      "string.token": "{{#label}} must only contain alpha-numeric and underscore characters",
      "string.pattern.base": "{{#label}} with value {:[.]} fails to match the required pattern: {{#regex}}",
      "string.pattern.name": "{{#label}} with value {:[.]} fails to match the {{#name}} pattern",
      "string.pattern.invert.base": "{{#label}} with value {:[.]} matches the inverted pattern: {{#regex}}",
      "string.pattern.invert.name": "{{#label}} with value {:[.]} matches the inverted {{#name}} pattern",
      "string.trim": "{{#label}} must not have leading or trailing whitespace",
      "string.uri": "{{#label}} must be a valid uri",
      "string.uriCustomScheme": "{{#label}} must be a valid uri with a scheme matching the {{#scheme}} pattern",
      "string.uriRelativeOnly": "{{#label}} must be a valid relative uri",
      "string.uppercase": "{{#label}} must only contain uppercase characters"
    }
  });
  internals2.addressOptions = function(options2) {
    if (!options2) {
      return options2;
    }
    Assert2(options2.minDomainSegments === void 0 || Number.isSafeInteger(options2.minDomainSegments) && options2.minDomainSegments > 0, "minDomainSegments must be a positive integer");
    Assert2(options2.maxDomainSegments === void 0 || Number.isSafeInteger(options2.maxDomainSegments) && options2.maxDomainSegments > 0, "maxDomainSegments must be a positive integer");
    if (options2.tlds === false) {
      return options2;
    }
    if (options2.tlds === true || options2.tlds === void 0) {
      Assert2(internals2.tlds, "Built-in TLD list disabled");
      return Object.assign({}, options2, internals2.tlds);
    }
    Assert2(typeof options2.tlds === "object", "tlds must be true, false, or an object");
    const deny = options2.tlds.deny;
    if (deny) {
      if (Array.isArray(deny)) {
        options2 = Object.assign({}, options2, { tlds: { deny: new Set(deny) } });
      }
      Assert2(options2.tlds.deny instanceof Set, "tlds.deny must be an array, Set, or boolean");
      Assert2(!options2.tlds.allow, "Cannot specify both tlds.allow and tlds.deny lists");
      internals2.validateTlds(options2.tlds.deny, "tlds.deny");
      return options2;
    }
    const allow = options2.tlds.allow;
    if (!allow) {
      return options2;
    }
    if (allow === true) {
      Assert2(internals2.tlds, "Built-in TLD list disabled");
      return Object.assign({}, options2, internals2.tlds);
    }
    if (Array.isArray(allow)) {
      options2 = Object.assign({}, options2, { tlds: { allow: new Set(allow) } });
    }
    Assert2(options2.tlds.allow instanceof Set, "tlds.allow must be an array, Set, or boolean");
    internals2.validateTlds(options2.tlds.allow, "tlds.allow");
    return options2;
  };
  internals2.validateTlds = function(set2, source) {
    for (const tld of set2) {
      Assert2(Domain2.isValid(tld, { minDomainSegments: 1, maxDomainSegments: 1 }), `${source} must contain valid top level domain names`);
    }
  };
  internals2.isoDate = function(value) {
    if (!Common.isIsoDate(value)) {
      return null;
    }
    if (/.*T.*[+-]\d\d$/.test(value)) {
      value += "00";
    }
    const date2 = new Date(value);
    if (isNaN(date2.getTime())) {
      return null;
    }
    return date2.toISOString();
  };
  internals2.length = function(schema, name2, limit, operator, encoding) {
    Assert2(!encoding || Buffer && Buffer.isEncoding(encoding), "Invalid encoding:", encoding);
    return schema.$_addRule({ name: name2, method: "length", args: { limit, encoding }, operator });
  };
  return string;
}
var symbol;
var hasRequiredSymbol;
function requireSymbol() {
  if (hasRequiredSymbol)
    return symbol;
  hasRequiredSymbol = 1;
  const Assert2 = assert;
  const Any = requireAny();
  const internals2 = {};
  internals2.Map = class extends Map {
    slice() {
      return new internals2.Map(this);
    }
  };
  symbol = Any.extend({
    type: "symbol",
    terms: {
      map: { init: new internals2.Map() }
    },
    coerce: {
      method(value, { schema, error: error2 }) {
        const lookup2 = schema.$_terms.map.get(value);
        if (lookup2) {
          value = lookup2;
        }
        if (!schema._flags.only || typeof value === "symbol") {
          return { value };
        }
        return { value, errors: error2("symbol.map", { map: schema.$_terms.map }) };
      }
    },
    validate(value, { error: error2 }) {
      if (typeof value !== "symbol") {
        return { value, errors: error2("symbol.base") };
      }
    },
    rules: {
      map: {
        method(iterable) {
          if (iterable && !iterable[Symbol.iterator] && typeof iterable === "object") {
            iterable = Object.entries(iterable);
          }
          Assert2(iterable && iterable[Symbol.iterator], "Iterable must be an iterable or object");
          const obj = this.clone();
          const symbols = [];
          for (const entry of iterable) {
            Assert2(entry && entry[Symbol.iterator], "Entry must be an iterable");
            const [key, value] = entry;
            Assert2(typeof key !== "object" && typeof key !== "function" && typeof key !== "symbol", "Key must not be of type object, function, or Symbol");
            Assert2(typeof value === "symbol", "Value must be a Symbol");
            obj.$_terms.map.set(key, value);
            symbols.push(value);
          }
          return obj.valid(...symbols);
        }
      }
    },
    manifest: {
      build(obj, desc) {
        if (desc.map) {
          obj = obj.map(desc.map);
        }
        return obj;
      }
    },
    messages: {
      "symbol.base": "{{#label}} must be a symbol",
      "symbol.map": "{{#label}} must be one of {{#map}}"
    }
  });
  return symbol;
}
var binary;
var hasRequiredBinary;
function requireBinary() {
  if (hasRequiredBinary)
    return binary;
  hasRequiredBinary = 1;
  const Assert2 = assert;
  const Any = requireAny();
  const Common = requireCommon();
  binary = Any.extend({
    type: "binary",
    coerce: {
      from: "string",
      method(value, { schema }) {
        try {
          return { value: Buffer.from(value, schema._flags.encoding) };
        } catch (ignoreErr) {
        }
      }
    },
    validate(value, { error: error2 }) {
      if (!Buffer.isBuffer(value)) {
        return { value, errors: error2("binary.base") };
      }
    },
    rules: {
      encoding: {
        method(encoding) {
          Assert2(Buffer.isEncoding(encoding), "Invalid encoding:", encoding);
          return this.$_setFlag("encoding", encoding);
        }
      },
      length: {
        method(limit) {
          return this.$_addRule({ name: "length", method: "length", args: { limit }, operator: "=" });
        },
        validate(value, helpers, { limit }, { name: name2, operator, args: args2 }) {
          if (Common.compare(value.length, limit, operator)) {
            return value;
          }
          return helpers.error("binary." + name2, { limit: args2.limit, value });
        },
        args: [
          {
            name: "limit",
            ref: true,
            assert: Common.limit,
            message: "must be a positive integer"
          }
        ]
      },
      max: {
        method(limit) {
          return this.$_addRule({ name: "max", method: "length", args: { limit }, operator: "<=" });
        }
      },
      min: {
        method(limit) {
          return this.$_addRule({ name: "min", method: "length", args: { limit }, operator: ">=" });
        }
      }
    },
    cast: {
      string: {
        from: (value) => Buffer.isBuffer(value),
        to(value, helpers) {
          return value.toString();
        }
      }
    },
    messages: {
      "binary.base": "{{#label}} must be a buffer or a string",
      "binary.length": "{{#label}} must be {{#limit}} bytes",
      "binary.max": "{{#label}} must be less than or equal to {{#limit}} bytes",
      "binary.min": "{{#label}} must be at least {{#limit}} bytes"
    }
  });
  return binary;
}
var lib;
var hasRequiredLib;
function requireLib() {
  if (hasRequiredLib)
    return lib;
  hasRequiredLib = 1;
  const Assert2 = assert;
  const Clone2 = clone;
  const Cache = requireCache();
  const Common = requireCommon();
  const Compile = requireCompile();
  const Errors2 = requireErrors();
  const Extend = requireExtend();
  const Manifest = requireManifest();
  const Ref = requireRef();
  const Template = requireTemplate();
  const Trace = requireTrace();
  let Schemas;
  const internals2 = {
    types: {
      alternatives: requireAlternatives(),
      any: requireAny(),
      array: requireArray(),
      boolean: requireBoolean(),
      date: requireDate(),
      function: require_function(),
      link: requireLink(),
      number: requireNumber(),
      object: requireObject(),
      string: requireString(),
      symbol: requireSymbol()
    },
    aliases: {
      alt: "alternatives",
      bool: "boolean",
      func: "function"
    }
  };
  if (Buffer) {
    internals2.types.binary = requireBinary();
  }
  internals2.root = function() {
    const root = {
      _types: new Set(Object.keys(internals2.types))
    };
    for (const type of root._types) {
      root[type] = function(...args2) {
        Assert2(!args2.length || ["alternatives", "link", "object"].includes(type), "The", type, "type does not allow arguments");
        return internals2.generate(this, internals2.types[type], args2);
      };
    }
    for (const method of ["allow", "custom", "disallow", "equal", "exist", "forbidden", "invalid", "not", "only", "optional", "options", "prefs", "preferences", "required", "strip", "valid", "when"]) {
      root[method] = function(...args2) {
        return this.any()[method](...args2);
      };
    }
    Object.assign(root, internals2.methods);
    for (const alias in internals2.aliases) {
      const target = internals2.aliases[alias];
      root[alias] = root[target];
    }
    root.x = root.expression;
    if (Trace.setup) {
      Trace.setup(root);
    }
    return root;
  };
  internals2.methods = {
    ValidationError: Errors2.ValidationError,
    version: Common.version,
    cache: Cache.provider,
    assert(value, schema, ...args2) {
      internals2.assert(value, schema, true, args2);
    },
    attempt(value, schema, ...args2) {
      return internals2.assert(value, schema, false, args2);
    },
    build(desc) {
      Assert2(typeof Manifest.build === "function", "Manifest functionality disabled");
      return Manifest.build(this, desc);
    },
    checkPreferences(prefs) {
      Common.checkPreferences(prefs);
    },
    compile(schema, options2) {
      return Compile.compile(this, schema, options2);
    },
    defaults(modifier) {
      Assert2(typeof modifier === "function", "modifier must be a function");
      const joi = Object.assign({}, this);
      for (const type of joi._types) {
        const schema = modifier(joi[type]());
        Assert2(Common.isSchema(schema), "modifier must return a valid schema object");
        joi[type] = function(...args2) {
          return internals2.generate(this, schema, args2);
        };
      }
      return joi;
    },
    expression(...args2) {
      return new Template(...args2);
    },
    extend(...extensions) {
      Common.verifyFlat(extensions, "extend");
      Schemas = Schemas || requireSchemas();
      Assert2(extensions.length, "You need to provide at least one extension");
      this.assert(extensions, Schemas.extensions);
      const joi = Object.assign({}, this);
      joi._types = new Set(joi._types);
      for (let extension of extensions) {
        if (typeof extension === "function") {
          extension = extension(joi);
        }
        this.assert(extension, Schemas.extension);
        const expanded = internals2.expandExtension(extension, joi);
        for (const item of expanded) {
          Assert2(joi[item.type] === void 0 || joi._types.has(item.type), "Cannot override name", item.type);
          const base2 = item.base || this.any();
          const schema = Extend.type(base2, item);
          joi._types.add(item.type);
          joi[item.type] = function(...args2) {
            return internals2.generate(this, schema, args2);
          };
        }
      }
      return joi;
    },
    isError: Errors2.ValidationError.isError,
    isExpression: Template.isTemplate,
    isRef: Ref.isRef,
    isSchema: Common.isSchema,
    in(...args2) {
      return Ref.in(...args2);
    },
    override: Common.symbols.override,
    ref(...args2) {
      return Ref.create(...args2);
    },
    types() {
      const types2 = {};
      for (const type of this._types) {
        types2[type] = this[type]();
      }
      for (const target in internals2.aliases) {
        types2[target] = this[target]();
      }
      return types2;
    }
  };
  internals2.assert = function(value, schema, annotate2, args2) {
    const message = args2[0] instanceof Error || typeof args2[0] === "string" ? args2[0] : null;
    const options2 = message !== null ? args2[1] : args2[0];
    const result = schema.validate(value, Common.preferences({ errors: { stack: true } }, options2 || {}));
    let error2 = result.error;
    if (!error2) {
      return result.value;
    }
    if (message instanceof Error) {
      throw message;
    }
    const display = annotate2 && typeof error2.annotate === "function" ? error2.annotate() : error2.message;
    if (error2 instanceof Errors2.ValidationError === false) {
      error2 = Clone2(error2);
    }
    error2.message = message ? `${message} ${display}` : display;
    throw error2;
  };
  internals2.generate = function(root, schema, args2) {
    Assert2(root, "Must be invoked on a Joi instance.");
    schema.$_root = root;
    if (!schema._definition.args || !args2.length) {
      return schema;
    }
    return schema._definition.args(schema, ...args2);
  };
  internals2.expandExtension = function(extension, joi) {
    if (typeof extension.type === "string") {
      return [extension];
    }
    const extended = [];
    for (const type of joi._types) {
      if (extension.type.test(type)) {
        const item = Object.assign({}, extension);
        item.type = type;
        item.base = joi[type]();
        extended.push(item);
      }
    }
    return extended;
  };
  lib = internals2.root();
  return lib;
}
var libExports = requireLib();
const Joi = /* @__PURE__ */ getDefaultExportFromCjs(libExports);
var ProviderRpcErrorCode;
(function(ProviderRpcErrorCode2) {
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["ACCOUNT_ACCESS_REJECTED"] = 4001] = "ACCOUNT_ACCESS_REJECTED";
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["ACCOUNT_ACCESS_ALREADY_REQUESTED"] = -32002] = "ACCOUNT_ACCESS_ALREADY_REQUESTED";
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["UNAUTHORIZED"] = 4100] = "UNAUTHORIZED";
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["INVALID_PARAMS"] = -32602] = "INVALID_PARAMS";
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["UNSUPPORTED_METHOD"] = 4200] = "UNSUPPORTED_METHOD";
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["DISCONNECTED"] = 4900] = "DISCONNECTED";
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["CHAIN_DISCONNECTED"] = 4901] = "CHAIN_DISCONNECTED";
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["CHAIN_NOT_ADDED"] = 4902] = "CHAIN_NOT_ADDED";
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["DOES_NOT_EXIST"] = -32601] = "DOES_NOT_EXIST";
  ProviderRpcErrorCode2[ProviderRpcErrorCode2["UNRECOGNIZED_CHAIN_ID"] = -32603] = "UNRECOGNIZED_CHAIN_ID";
})(ProviderRpcErrorCode || (ProviderRpcErrorCode = {}));
const chainIdValidation = Joi.alternatives().try(Joi.string().pattern(/^0x[0-9a-fA-F]+$/), Joi.number().positive());
const chainNamespaceValidation = Joi.string().valid("evm");
const secondaryTokenValidation$1 = Joi.object({
  address: Joi.string().required(),
  icon: Joi.string().optional()
});
const chainValidation = Joi.object({
  namespace: chainNamespaceValidation,
  id: chainIdValidation.required(),
  rpcUrl: Joi.string(),
  label: Joi.string(),
  token: Joi.string(),
  secondaryTokens: Joi.array().max(5).items(secondaryTokenValidation$1).optional(),
  icon: Joi.string(),
  color: Joi.string(),
  publicRpcUrl: Joi.string(),
  protectedRpcUrl: Joi.string(),
  blockExplorerUrl: Joi.string()
});
var lodash_partition = { exports: {} };
lodash_partition.exports;
(function(module, exports) {
  var LARGE_ARRAY_SIZE = 200;
  var FUNC_ERROR_TEXT = "Expected a function";
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  var UNORDERED_COMPARE_FLAG = 1, PARTIAL_COMPARE_FLAG = 2;
  var INFINITY = 1 / 0, MAX_SAFE_INTEGER = 9007199254740991;
  var argsTag = "[object Arguments]", arrayTag = "[object Array]", boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", objectTag = "[object Object]", promiseTag = "[object Promise]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", symbolTag = "[object Symbol]", weakMapTag = "[object WeakMap]";
  var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, reIsPlainProp = /^\w*$/, reLeadingDot = /^\./, rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reEscapeChar = /\\(\\)?/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
  var freeGlobal = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function("return this")();
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal.process;
  var nodeUtil = function() {
    try {
      return freeProcess && freeProcess.binding("util");
    } catch (e) {
    }
  }();
  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
  function arrayAggregator(array2, setter, iteratee, accumulator) {
    var index = -1, length = array2 ? array2.length : 0;
    while (++index < length) {
      var value = array2[index];
      setter(accumulator, value, iteratee(value), array2);
    }
    return accumulator;
  }
  function arraySome(array2, predicate) {
    var index = -1, length = array2 ? array2.length : 0;
    while (++index < length) {
      if (predicate(array2[index], index, array2)) {
        return true;
      }
    }
    return false;
  }
  function baseProperty(key) {
    return function(object2) {
      return object2 == null ? void 0 : object2[key];
    };
  }
  function baseTimes(n, iteratee) {
    var index = -1, result = Array(n);
    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }
  function getValue(object2, key) {
    return object2 == null ? void 0 : object2[key];
  }
  function isHostObject(value) {
    var result = false;
    if (value != null && typeof value.toString != "function") {
      try {
        result = !!(value + "");
      } catch (e) {
      }
    }
    return result;
  }
  function mapToArray(map2) {
    var index = -1, result = Array(map2.size);
    map2.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }
  function setToArray(set2) {
    var index = -1, result = Array(set2.size);
    set2.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }
  var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto2 = Object.prototype;
  var coreJsData = root["__core-js_shared__"];
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto2.hasOwnProperty;
  var objectToString = objectProto2.toString;
  var reIsNative = RegExp(
    "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
  );
  var Symbol2 = root.Symbol, Uint8Array = root.Uint8Array, propertyIsEnumerable = objectProto2.propertyIsEnumerable, splice = arrayProto.splice;
  var nativeKeys = overArg(Object.keys, Object);
  var DataView = getNative(root, "DataView"), Map2 = getNative(root, "Map"), Promise2 = getNative(root, "Promise"), Set2 = getNative(root, "Set"), WeakMap2 = getNative(root, "WeakMap"), nativeCreate = getNative(Object, "create");
  var dataViewCtorString = toSource(DataView), mapCtorString = toSource(Map2), promiseCtorString = toSource(Promise2), setCtorString = toSource(Set2), weakMapCtorString = toSource(WeakMap2);
  var symbolProto = Symbol2 ? Symbol2.prototype : void 0, symbolValueOf = symbolProto ? symbolProto.valueOf : void 0, symbolToString = symbolProto ? symbolProto.toString : void 0;
  function Hash(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
  }
  function hashDelete(key) {
    return this.has(key) && delete this.__data__[key];
  }
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? void 0 : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : void 0;
  }
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
  }
  function hashSet(key, value) {
    var data = this.__data__;
    data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
    return this;
  }
  Hash.prototype.clear = hashClear;
  Hash.prototype["delete"] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  function ListCache(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  function listCacheClear() {
    this.__data__ = [];
  }
  function listCacheDelete(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    return true;
  }
  function listCacheGet(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? void 0 : data[index][1];
  }
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }
  function listCacheSet(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype["delete"] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  function MapCache(entries) {
    var index = -1, length = entries ? entries.length : 0;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  function mapCacheClear() {
    this.__data__ = {
      "hash": new Hash(),
      "map": new (Map2 || ListCache)(),
      "string": new Hash()
    };
  }
  function mapCacheDelete(key) {
    return getMapData(this, key)["delete"](key);
  }
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }
  function mapCacheSet(key, value) {
    getMapData(this, key).set(key, value);
    return this;
  }
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype["delete"] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  function SetCache(values2) {
    var index = -1, length = values2 ? values2.length : 0;
    this.__data__ = new MapCache();
    while (++index < length) {
      this.add(values2[index]);
    }
  }
  function setCacheAdd(value) {
    this.__data__.set(value, HASH_UNDEFINED);
    return this;
  }
  function setCacheHas(value) {
    return this.__data__.has(value);
  }
  SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
  SetCache.prototype.has = setCacheHas;
  function Stack(entries) {
    this.__data__ = new ListCache(entries);
  }
  function stackClear() {
    this.__data__ = new ListCache();
  }
  function stackDelete(key) {
    return this.__data__["delete"](key);
  }
  function stackGet(key) {
    return this.__data__.get(key);
  }
  function stackHas(key) {
    return this.__data__.has(key);
  }
  function stackSet(key, value) {
    var cache2 = this.__data__;
    if (cache2 instanceof ListCache) {
      var pairs2 = cache2.__data__;
      if (!Map2 || pairs2.length < LARGE_ARRAY_SIZE - 1) {
        pairs2.push([key, value]);
        return this;
      }
      cache2 = this.__data__ = new MapCache(pairs2);
    }
    cache2.set(key, value);
    return this;
  }
  Stack.prototype.clear = stackClear;
  Stack.prototype["delete"] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;
  function arrayLikeKeys(value, inherited) {
    var result = isArray2(value) || isArguments(value) ? baseTimes(value.length, String) : [];
    var length = result.length, skipIndexes = !!length;
    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == "length" || isIndex(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }
  function assocIndexOf(array2, key) {
    var length = array2.length;
    while (length--) {
      if (eq(array2[length][0], key)) {
        return length;
      }
    }
    return -1;
  }
  function baseAggregator(collection, setter, iteratee, accumulator) {
    baseEach(collection, function(value, key, collection2) {
      setter(accumulator, value, iteratee(value), collection2);
    });
    return accumulator;
  }
  var baseEach = createBaseEach(baseForOwn);
  var baseFor = createBaseFor();
  function baseForOwn(object2, iteratee) {
    return object2 && baseFor(object2, iteratee, keys2);
  }
  function baseGet(object2, path) {
    path = isKey(path, object2) ? [path] : castPath(path);
    var index = 0, length = path.length;
    while (object2 != null && index < length) {
      object2 = object2[toKey(path[index++])];
    }
    return index && index == length ? object2 : void 0;
  }
  function baseGetTag(value) {
    return objectToString.call(value);
  }
  function baseHasIn(object2, key) {
    return object2 != null && key in Object(object2);
  }
  function baseIsEqual(value, other, customizer, bitmask, stack) {
    if (value === other) {
      return true;
    }
    if (value == null || other == null || !isObject(value) && !isObjectLike(other)) {
      return value !== value && other !== other;
    }
    return baseIsEqualDeep(value, other, baseIsEqual, customizer, bitmask, stack);
  }
  function baseIsEqualDeep(object2, other, equalFunc, customizer, bitmask, stack) {
    var objIsArr = isArray2(object2), othIsArr = isArray2(other), objTag = arrayTag, othTag = arrayTag;
    if (!objIsArr) {
      objTag = getTag(object2);
      objTag = objTag == argsTag ? objectTag : objTag;
    }
    if (!othIsArr) {
      othTag = getTag(other);
      othTag = othTag == argsTag ? objectTag : othTag;
    }
    var objIsObj = objTag == objectTag && !isHostObject(object2), othIsObj = othTag == objectTag && !isHostObject(other), isSameTag = objTag == othTag;
    if (isSameTag && !objIsObj) {
      stack || (stack = new Stack());
      return objIsArr || isTypedArray(object2) ? equalArrays(object2, other, equalFunc, customizer, bitmask, stack) : equalByTag(object2, other, objTag, equalFunc, customizer, bitmask, stack);
    }
    if (!(bitmask & PARTIAL_COMPARE_FLAG)) {
      var objIsWrapped = objIsObj && hasOwnProperty.call(object2, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
      if (objIsWrapped || othIsWrapped) {
        var objUnwrapped = objIsWrapped ? object2.value() : object2, othUnwrapped = othIsWrapped ? other.value() : other;
        stack || (stack = new Stack());
        return equalFunc(objUnwrapped, othUnwrapped, customizer, bitmask, stack);
      }
    }
    if (!isSameTag) {
      return false;
    }
    stack || (stack = new Stack());
    return equalObjects(object2, other, equalFunc, customizer, bitmask, stack);
  }
  function baseIsMatch(object2, source, matchData, customizer) {
    var index = matchData.length, length = index, noCustomizer = !customizer;
    if (object2 == null) {
      return !length;
    }
    object2 = Object(object2);
    while (index--) {
      var data = matchData[index];
      if (noCustomizer && data[2] ? data[1] !== object2[data[0]] : !(data[0] in object2)) {
        return false;
      }
    }
    while (++index < length) {
      data = matchData[index];
      var key = data[0], objValue = object2[key], srcValue = data[1];
      if (noCustomizer && data[2]) {
        if (objValue === void 0 && !(key in object2)) {
          return false;
        }
      } else {
        var stack = new Stack();
        if (customizer) {
          var result = customizer(objValue, srcValue, key, object2, source, stack);
        }
        if (!(result === void 0 ? baseIsEqual(srcValue, objValue, customizer, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG, stack) : result)) {
          return false;
        }
      }
    }
    return true;
  }
  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction2(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }
  function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objectToString.call(value)];
  }
  function baseIteratee(value) {
    if (typeof value == "function") {
      return value;
    }
    if (value == null) {
      return identity2;
    }
    if (typeof value == "object") {
      return isArray2(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);
    }
    return property(value);
  }
  function baseKeys(object2) {
    if (!isPrototype(object2)) {
      return nativeKeys(object2);
    }
    var result = [];
    for (var key in Object(object2)) {
      if (hasOwnProperty.call(object2, key) && key != "constructor") {
        result.push(key);
      }
    }
    return result;
  }
  function baseMatches(source) {
    var matchData = getMatchData(source);
    if (matchData.length == 1 && matchData[0][2]) {
      return matchesStrictComparable(matchData[0][0], matchData[0][1]);
    }
    return function(object2) {
      return object2 === source || baseIsMatch(object2, source, matchData);
    };
  }
  function baseMatchesProperty(path, srcValue) {
    if (isKey(path) && isStrictComparable(srcValue)) {
      return matchesStrictComparable(toKey(path), srcValue);
    }
    return function(object2) {
      var objValue = get2(object2, path);
      return objValue === void 0 && objValue === srcValue ? hasIn(object2, path) : baseIsEqual(srcValue, objValue, void 0, UNORDERED_COMPARE_FLAG | PARTIAL_COMPARE_FLAG);
    };
  }
  function basePropertyDeep(path) {
    return function(object2) {
      return baseGet(object2, path);
    };
  }
  function baseToString(value) {
    if (typeof value == "string") {
      return value;
    }
    if (isSymbol(value)) {
      return symbolToString ? symbolToString.call(value) : "";
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  }
  function castPath(value) {
    return isArray2(value) ? value : stringToPath(value);
  }
  function createAggregator(setter, initializer) {
    return function(collection, iteratee) {
      var func = isArray2(collection) ? arrayAggregator : baseAggregator, accumulator = initializer ? initializer() : {};
      return func(collection, setter, baseIteratee(iteratee), accumulator);
    };
  }
  function createBaseEach(eachFunc, fromRight) {
    return function(collection, iteratee) {
      if (collection == null) {
        return collection;
      }
      if (!isArrayLike2(collection)) {
        return eachFunc(collection, iteratee);
      }
      var length = collection.length, index = fromRight ? length : -1, iterable = Object(collection);
      while (fromRight ? index-- : ++index < length) {
        if (iteratee(iterable[index], index, iterable) === false) {
          break;
        }
      }
      return collection;
    };
  }
  function createBaseFor(fromRight) {
    return function(object2, iteratee, keysFunc) {
      var index = -1, iterable = Object(object2), props = keysFunc(object2), length = props.length;
      while (length--) {
        var key = props[fromRight ? length : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object2;
    };
  }
  function equalArrays(array2, other, equalFunc, customizer, bitmask, stack) {
    var isPartial = bitmask & PARTIAL_COMPARE_FLAG, arrLength = array2.length, othLength = other.length;
    if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
      return false;
    }
    var stacked = stack.get(array2);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var index = -1, result = true, seen = bitmask & UNORDERED_COMPARE_FLAG ? new SetCache() : void 0;
    stack.set(array2, other);
    stack.set(other, array2);
    while (++index < arrLength) {
      var arrValue = array2[index], othValue = other[index];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, arrValue, index, other, array2, stack) : customizer(arrValue, othValue, index, array2, other, stack);
      }
      if (compared !== void 0) {
        if (compared) {
          continue;
        }
        result = false;
        break;
      }
      if (seen) {
        if (!arraySome(other, function(othValue2, othIndex) {
          if (!seen.has(othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, customizer, bitmask, stack))) {
            return seen.add(othIndex);
          }
        })) {
          result = false;
          break;
        }
      } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, bitmask, stack))) {
        result = false;
        break;
      }
    }
    stack["delete"](array2);
    stack["delete"](other);
    return result;
  }
  function equalByTag(object2, other, tag, equalFunc, customizer, bitmask, stack) {
    switch (tag) {
      case dataViewTag:
        if (object2.byteLength != other.byteLength || object2.byteOffset != other.byteOffset) {
          return false;
        }
        object2 = object2.buffer;
        other = other.buffer;
      case arrayBufferTag:
        if (object2.byteLength != other.byteLength || !equalFunc(new Uint8Array(object2), new Uint8Array(other))) {
          return false;
        }
        return true;
      case boolTag:
      case dateTag:
      case numberTag:
        return eq(+object2, +other);
      case errorTag:
        return object2.name == other.name && object2.message == other.message;
      case regexpTag:
      case stringTag:
        return object2 == other + "";
      case mapTag:
        var convert = mapToArray;
      case setTag:
        var isPartial = bitmask & PARTIAL_COMPARE_FLAG;
        convert || (convert = setToArray);
        if (object2.size != other.size && !isPartial) {
          return false;
        }
        var stacked = stack.get(object2);
        if (stacked) {
          return stacked == other;
        }
        bitmask |= UNORDERED_COMPARE_FLAG;
        stack.set(object2, other);
        var result = equalArrays(convert(object2), convert(other), equalFunc, customizer, bitmask, stack);
        stack["delete"](object2);
        return result;
      case symbolTag:
        if (symbolValueOf) {
          return symbolValueOf.call(object2) == symbolValueOf.call(other);
        }
    }
    return false;
  }
  function equalObjects(object2, other, equalFunc, customizer, bitmask, stack) {
    var isPartial = bitmask & PARTIAL_COMPARE_FLAG, objProps = keys2(object2), objLength = objProps.length, othProps = keys2(other), othLength = othProps.length;
    if (objLength != othLength && !isPartial) {
      return false;
    }
    var index = objLength;
    while (index--) {
      var key = objProps[index];
      if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
        return false;
      }
    }
    var stacked = stack.get(object2);
    if (stacked && stack.get(other)) {
      return stacked == other;
    }
    var result = true;
    stack.set(object2, other);
    stack.set(other, object2);
    var skipCtor = isPartial;
    while (++index < objLength) {
      key = objProps[index];
      var objValue = object2[key], othValue = other[key];
      if (customizer) {
        var compared = isPartial ? customizer(othValue, objValue, key, other, object2, stack) : customizer(objValue, othValue, key, object2, other, stack);
      }
      if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, customizer, bitmask, stack) : compared)) {
        result = false;
        break;
      }
      skipCtor || (skipCtor = key == "constructor");
    }
    if (result && !skipCtor) {
      var objCtor = object2.constructor, othCtor = other.constructor;
      if (objCtor != othCtor && ("constructor" in object2 && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
        result = false;
      }
    }
    stack["delete"](object2);
    stack["delete"](other);
    return result;
  }
  function getMapData(map2, key) {
    var data = map2.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  }
  function getMatchData(object2) {
    var result = keys2(object2), length = result.length;
    while (length--) {
      var key = result[length], value = object2[key];
      result[length] = [key, value, isStrictComparable(value)];
    }
    return result;
  }
  function getNative(object2, key) {
    var value = getValue(object2, key);
    return baseIsNative(value) ? value : void 0;
  }
  var getTag = baseGetTag;
  if (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
    getTag = function(value) {
      var result = objectToString.call(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : void 0;
      if (ctorString) {
        switch (ctorString) {
          case dataViewCtorString:
            return dataViewTag;
          case mapCtorString:
            return mapTag;
          case promiseCtorString:
            return promiseTag;
          case setCtorString:
            return setTag;
          case weakMapCtorString:
            return weakMapTag;
        }
      }
      return result;
    };
  }
  function hasPath(object2, path, hasFunc) {
    path = isKey(path, object2) ? [path] : castPath(path);
    var result, index = -1, length = path.length;
    while (++index < length) {
      var key = toKey(path[index]);
      if (!(result = object2 != null && hasFunc(object2, key))) {
        break;
      }
      object2 = object2[key];
    }
    if (result) {
      return result;
    }
    var length = object2 ? object2.length : 0;
    return !!length && isLength(length) && isIndex(key, length) && (isArray2(object2) || isArguments(object2));
  }
  function isIndex(value, length) {
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
  }
  function isKey(value, object2) {
    if (isArray2(value)) {
      return false;
    }
    var type = typeof value;
    if (type == "number" || type == "symbol" || type == "boolean" || value == null || isSymbol(value)) {
      return true;
    }
    return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object2 != null && value in Object(object2);
  }
  function isKeyable(value) {
    var type = typeof value;
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
  }
  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }
  function isPrototype(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto2;
    return value === proto;
  }
  function isStrictComparable(value) {
    return value === value && !isObject(value);
  }
  function matchesStrictComparable(key, srcValue) {
    return function(object2) {
      if (object2 == null) {
        return false;
      }
      return object2[key] === srcValue && (srcValue !== void 0 || key in Object(object2));
    };
  }
  var stringToPath = memoize2(function(string2) {
    string2 = toString(string2);
    var result = [];
    if (reLeadingDot.test(string2)) {
      result.push("");
    }
    string2.replace(rePropName, function(match, number2, quote, string3) {
      result.push(quote ? string3.replace(reEscapeChar, "$1") : number2 || match);
    });
    return result;
  });
  function toKey(value) {
    if (typeof value == "string" || isSymbol(value)) {
      return value;
    }
    var result = value + "";
    return result == "0" && 1 / value == -INFINITY ? "-0" : result;
  }
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {
      }
      try {
        return func + "";
      } catch (e) {
      }
    }
    return "";
  }
  var partition2 = createAggregator(function(result, value, key) {
    result[key ? 0 : 1].push(value);
  }, function() {
    return [[], []];
  });
  function memoize2(func, resolver) {
    if (typeof func != "function" || resolver && typeof resolver != "function") {
      throw new TypeError(FUNC_ERROR_TEXT);
    }
    var memoized = function() {
      var args2 = arguments, key = resolver ? resolver.apply(this, args2) : args2[0], cache2 = memoized.cache;
      if (cache2.has(key)) {
        return cache2.get(key);
      }
      var result = func.apply(this, args2);
      memoized.cache = cache2.set(key, result);
      return result;
    };
    memoized.cache = new (memoize2.Cache || MapCache)();
    return memoized;
  }
  memoize2.Cache = MapCache;
  function eq(value, other) {
    return value === other || value !== value && other !== other;
  }
  function isArguments(value) {
    return isArrayLikeObject(value) && hasOwnProperty.call(value, "callee") && (!propertyIsEnumerable.call(value, "callee") || objectToString.call(value) == argsTag);
  }
  var isArray2 = Array.isArray;
  function isArrayLike2(value) {
    return value != null && isLength(value.length) && !isFunction2(value);
  }
  function isArrayLikeObject(value) {
    return isObjectLike(value) && isArrayLike2(value);
  }
  function isFunction2(value) {
    var tag = isObject(value) ? objectToString.call(value) : "";
    return tag == funcTag || tag == genTag;
  }
  function isLength(value) {
    return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }
  function isObject(value) {
    var type = typeof value;
    return !!value && (type == "object" || type == "function");
  }
  function isObjectLike(value) {
    return !!value && typeof value == "object";
  }
  function isSymbol(value) {
    return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
  }
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
  function toString(value) {
    return value == null ? "" : baseToString(value);
  }
  function get2(object2, path, defaultValue) {
    var result = object2 == null ? void 0 : baseGet(object2, path);
    return result === void 0 ? defaultValue : result;
  }
  function hasIn(object2, path) {
    return object2 != null && hasPath(object2, path, baseHasIn);
  }
  function keys2(object2) {
    return isArrayLike2(object2) ? arrayLikeKeys(object2) : baseKeys(object2);
  }
  function identity2(value) {
    return value;
  }
  function property(path) {
    return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
  }
  module.exports = partition2;
})(lodash_partition, lodash_partition.exports);
lodash_partition.exports;
var lodash_merge = { exports: {} };
lodash_merge.exports;
(function(module, exports) {
  var LARGE_ARRAY_SIZE = 200;
  var HASH_UNDEFINED = "__lodash_hash_undefined__";
  var HOT_COUNT = 800, HOT_SPAN = 16;
  var MAX_SAFE_INTEGER = 9007199254740991;
  var argsTag = "[object Arguments]", arrayTag = "[object Array]", asyncTag = "[object AsyncFunction]", boolTag = "[object Boolean]", dateTag = "[object Date]", errorTag = "[object Error]", funcTag = "[object Function]", genTag = "[object GeneratorFunction]", mapTag = "[object Map]", numberTag = "[object Number]", nullTag = "[object Null]", objectTag = "[object Object]", proxyTag = "[object Proxy]", regexpTag = "[object RegExp]", setTag = "[object Set]", stringTag = "[object String]", undefinedTag = "[object Undefined]", weakMapTag = "[object WeakMap]";
  var arrayBufferTag = "[object ArrayBuffer]", dataViewTag = "[object DataView]", float32Tag = "[object Float32Array]", float64Tag = "[object Float64Array]", int8Tag = "[object Int8Array]", int16Tag = "[object Int16Array]", int32Tag = "[object Int32Array]", uint8Tag = "[object Uint8Array]", uint8ClampedTag = "[object Uint8ClampedArray]", uint16Tag = "[object Uint16Array]", uint32Tag = "[object Uint32Array]";
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
  var reIsHostCtor = /^\[object .+?Constructor\]$/;
  var reIsUint = /^(?:0|[1-9]\d*)$/;
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
  var freeGlobal = typeof commonjsGlobal == "object" && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal;
  var freeSelf = typeof self == "object" && self && self.Object === Object && self;
  var root = freeGlobal || freeSelf || Function("return this")();
  var freeExports = exports && !exports.nodeType && exports;
  var freeModule = freeExports && true && module && !module.nodeType && module;
  var moduleExports = freeModule && freeModule.exports === freeExports;
  var freeProcess = moduleExports && freeGlobal.process;
  var nodeUtil = function() {
    try {
      var types2 = freeModule && freeModule.require && freeModule.require("util").types;
      if (types2) {
        return types2;
      }
      return freeProcess && freeProcess.binding && freeProcess.binding("util");
    } catch (e) {
    }
  }();
  var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
  function apply(func, thisArg, args2) {
    switch (args2.length) {
      case 0:
        return func.call(thisArg);
      case 1:
        return func.call(thisArg, args2[0]);
      case 2:
        return func.call(thisArg, args2[0], args2[1]);
      case 3:
        return func.call(thisArg, args2[0], args2[1], args2[2]);
    }
    return func.apply(thisArg, args2);
  }
  function baseTimes(n, iteratee) {
    var index = -1, result = Array(n);
    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }
  function getValue(object2, key) {
    return object2 == null ? void 0 : object2[key];
  }
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }
  var arrayProto = Array.prototype, funcProto = Function.prototype, objectProto2 = Object.prototype;
  var coreJsData = root["__core-js_shared__"];
  var funcToString = funcProto.toString;
  var hasOwnProperty = objectProto2.hasOwnProperty;
  var maskSrcKey = function() {
    var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
    return uid ? "Symbol(src)_1." + uid : "";
  }();
  var nativeObjectToString = objectProto2.toString;
  var objectCtorString = funcToString.call(Object);
  var reIsNative = RegExp(
    "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
  );
  var Buffer2 = moduleExports ? root.Buffer : void 0, Symbol2 = root.Symbol, Uint8Array = root.Uint8Array, allocUnsafe = Buffer2 ? Buffer2.allocUnsafe : void 0, getPrototype = overArg(Object.getPrototypeOf, Object), objectCreate = Object.create, propertyIsEnumerable = objectProto2.propertyIsEnumerable, splice = arrayProto.splice, symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
  var defineProperty = function() {
    try {
      var func = getNative(Object, "defineProperty");
      func({}, "", {});
      return func;
    } catch (e) {
    }
  }();
  var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0, nativeMax = Math.max, nativeNow = Date.now;
  var Map2 = getNative(root, "Map"), nativeCreate = getNative(Object, "create");
  var baseCreate = function() {
    function object2() {
    }
    return function(proto) {
      if (!isObject(proto)) {
        return {};
      }
      if (objectCreate) {
        return objectCreate(proto);
      }
      object2.prototype = proto;
      var result = new object2();
      object2.prototype = void 0;
      return result;
    };
  }();
  function Hash(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  function hashClear() {
    this.__data__ = nativeCreate ? nativeCreate(null) : {};
    this.size = 0;
  }
  function hashDelete(key) {
    var result = this.has(key) && delete this.__data__[key];
    this.size -= result ? 1 : 0;
    return result;
  }
  function hashGet(key) {
    var data = this.__data__;
    if (nativeCreate) {
      var result = data[key];
      return result === HASH_UNDEFINED ? void 0 : result;
    }
    return hasOwnProperty.call(data, key) ? data[key] : void 0;
  }
  function hashHas(key) {
    var data = this.__data__;
    return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
  }
  function hashSet(key, value) {
    var data = this.__data__;
    this.size += this.has(key) ? 0 : 1;
    data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
    return this;
  }
  Hash.prototype.clear = hashClear;
  Hash.prototype["delete"] = hashDelete;
  Hash.prototype.get = hashGet;
  Hash.prototype.has = hashHas;
  Hash.prototype.set = hashSet;
  function ListCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  function listCacheClear() {
    this.__data__ = [];
    this.size = 0;
  }
  function listCacheDelete(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      return false;
    }
    var lastIndex = data.length - 1;
    if (index == lastIndex) {
      data.pop();
    } else {
      splice.call(data, index, 1);
    }
    --this.size;
    return true;
  }
  function listCacheGet(key) {
    var data = this.__data__, index = assocIndexOf(data, key);
    return index < 0 ? void 0 : data[index][1];
  }
  function listCacheHas(key) {
    return assocIndexOf(this.__data__, key) > -1;
  }
  function listCacheSet(key, value) {
    var data = this.__data__, index = assocIndexOf(data, key);
    if (index < 0) {
      ++this.size;
      data.push([key, value]);
    } else {
      data[index][1] = value;
    }
    return this;
  }
  ListCache.prototype.clear = listCacheClear;
  ListCache.prototype["delete"] = listCacheDelete;
  ListCache.prototype.get = listCacheGet;
  ListCache.prototype.has = listCacheHas;
  ListCache.prototype.set = listCacheSet;
  function MapCache(entries) {
    var index = -1, length = entries == null ? 0 : entries.length;
    this.clear();
    while (++index < length) {
      var entry = entries[index];
      this.set(entry[0], entry[1]);
    }
  }
  function mapCacheClear() {
    this.size = 0;
    this.__data__ = {
      "hash": new Hash(),
      "map": new (Map2 || ListCache)(),
      "string": new Hash()
    };
  }
  function mapCacheDelete(key) {
    var result = getMapData(this, key)["delete"](key);
    this.size -= result ? 1 : 0;
    return result;
  }
  function mapCacheGet(key) {
    return getMapData(this, key).get(key);
  }
  function mapCacheHas(key) {
    return getMapData(this, key).has(key);
  }
  function mapCacheSet(key, value) {
    var data = getMapData(this, key), size = data.size;
    data.set(key, value);
    this.size += data.size == size ? 0 : 1;
    return this;
  }
  MapCache.prototype.clear = mapCacheClear;
  MapCache.prototype["delete"] = mapCacheDelete;
  MapCache.prototype.get = mapCacheGet;
  MapCache.prototype.has = mapCacheHas;
  MapCache.prototype.set = mapCacheSet;
  function Stack(entries) {
    var data = this.__data__ = new ListCache(entries);
    this.size = data.size;
  }
  function stackClear() {
    this.__data__ = new ListCache();
    this.size = 0;
  }
  function stackDelete(key) {
    var data = this.__data__, result = data["delete"](key);
    this.size = data.size;
    return result;
  }
  function stackGet(key) {
    return this.__data__.get(key);
  }
  function stackHas(key) {
    return this.__data__.has(key);
  }
  function stackSet(key, value) {
    var data = this.__data__;
    if (data instanceof ListCache) {
      var pairs2 = data.__data__;
      if (!Map2 || pairs2.length < LARGE_ARRAY_SIZE - 1) {
        pairs2.push([key, value]);
        this.size = ++data.size;
        return this;
      }
      data = this.__data__ = new MapCache(pairs2);
    }
    data.set(key, value);
    this.size = data.size;
    return this;
  }
  Stack.prototype.clear = stackClear;
  Stack.prototype["delete"] = stackDelete;
  Stack.prototype.get = stackGet;
  Stack.prototype.has = stackHas;
  Stack.prototype.set = stackSet;
  function arrayLikeKeys(value, inherited) {
    var isArr = isArray2(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length = result.length;
    for (var key in value) {
      if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
      (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
      isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
      isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
      isIndex(key, length)))) {
        result.push(key);
      }
    }
    return result;
  }
  function assignMergeValue(object2, key, value) {
    if (value !== void 0 && !eq(object2[key], value) || value === void 0 && !(key in object2)) {
      baseAssignValue(object2, key, value);
    }
  }
  function assignValue(object2, key, value) {
    var objValue = object2[key];
    if (!(hasOwnProperty.call(object2, key) && eq(objValue, value)) || value === void 0 && !(key in object2)) {
      baseAssignValue(object2, key, value);
    }
  }
  function assocIndexOf(array2, key) {
    var length = array2.length;
    while (length--) {
      if (eq(array2[length][0], key)) {
        return length;
      }
    }
    return -1;
  }
  function baseAssignValue(object2, key, value) {
    if (key == "__proto__" && defineProperty) {
      defineProperty(object2, key, {
        "configurable": true,
        "enumerable": true,
        "value": value,
        "writable": true
      });
    } else {
      object2[key] = value;
    }
  }
  var baseFor = createBaseFor();
  function baseGetTag(value) {
    if (value == null) {
      return value === void 0 ? undefinedTag : nullTag;
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
  }
  function baseIsArguments(value) {
    return isObjectLike(value) && baseGetTag(value) == argsTag;
  }
  function baseIsNative(value) {
    if (!isObject(value) || isMasked(value)) {
      return false;
    }
    var pattern = isFunction2(value) ? reIsNative : reIsHostCtor;
    return pattern.test(toSource(value));
  }
  function baseIsTypedArray(value) {
    return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
  }
  function baseKeysIn(object2) {
    if (!isObject(object2)) {
      return nativeKeysIn(object2);
    }
    var isProto = isPrototype(object2), result = [];
    for (var key in object2) {
      if (!(key == "constructor" && (isProto || !hasOwnProperty.call(object2, key)))) {
        result.push(key);
      }
    }
    return result;
  }
  function baseMerge(object2, source, srcIndex, customizer, stack) {
    if (object2 === source) {
      return;
    }
    baseFor(source, function(srcValue, key) {
      stack || (stack = new Stack());
      if (isObject(srcValue)) {
        baseMergeDeep(object2, source, key, srcIndex, baseMerge, customizer, stack);
      } else {
        var newValue = customizer ? customizer(safeGet(object2, key), srcValue, key + "", object2, source, stack) : void 0;
        if (newValue === void 0) {
          newValue = srcValue;
        }
        assignMergeValue(object2, key, newValue);
      }
    }, keysIn);
  }
  function baseMergeDeep(object2, source, key, srcIndex, mergeFunc, customizer, stack) {
    var objValue = safeGet(object2, key), srcValue = safeGet(source, key), stacked = stack.get(srcValue);
    if (stacked) {
      assignMergeValue(object2, key, stacked);
      return;
    }
    var newValue = customizer ? customizer(objValue, srcValue, key + "", object2, source, stack) : void 0;
    var isCommon = newValue === void 0;
    if (isCommon) {
      var isArr = isArray2(srcValue), isBuff = !isArr && isBuffer(srcValue), isTyped = !isArr && !isBuff && isTypedArray(srcValue);
      newValue = srcValue;
      if (isArr || isBuff || isTyped) {
        if (isArray2(objValue)) {
          newValue = objValue;
        } else if (isArrayLikeObject(objValue)) {
          newValue = copyArray(objValue);
        } else if (isBuff) {
          isCommon = false;
          newValue = cloneBuffer(srcValue, true);
        } else if (isTyped) {
          isCommon = false;
          newValue = cloneTypedArray(srcValue, true);
        } else {
          newValue = [];
        }
      } else if (isPlainObject(srcValue) || isArguments(srcValue)) {
        newValue = objValue;
        if (isArguments(objValue)) {
          newValue = toPlainObject(objValue);
        } else if (!isObject(objValue) || isFunction2(objValue)) {
          newValue = initCloneObject(srcValue);
        }
      } else {
        isCommon = false;
      }
    }
    if (isCommon) {
      stack.set(srcValue, newValue);
      mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
      stack["delete"](srcValue);
    }
    assignMergeValue(object2, key, newValue);
  }
  function baseRest(func, start) {
    return setToString(overRest(func, start, identity2), func + "");
  }
  var baseSetToString = !defineProperty ? identity2 : function(func, string2) {
    return defineProperty(func, "toString", {
      "configurable": true,
      "enumerable": false,
      "value": constant(string2),
      "writable": true
    });
  };
  function cloneBuffer(buffer2, isDeep) {
    if (isDeep) {
      return buffer2.slice();
    }
    var length = buffer2.length, result = allocUnsafe ? allocUnsafe(length) : new buffer2.constructor(length);
    buffer2.copy(result);
    return result;
  }
  function cloneArrayBuffer(arrayBuffer) {
    var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
    new Uint8Array(result).set(new Uint8Array(arrayBuffer));
    return result;
  }
  function cloneTypedArray(typedArray, isDeep) {
    var buffer2 = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
    return new typedArray.constructor(buffer2, typedArray.byteOffset, typedArray.length);
  }
  function copyArray(source, array2) {
    var index = -1, length = source.length;
    array2 || (array2 = Array(length));
    while (++index < length) {
      array2[index] = source[index];
    }
    return array2;
  }
  function copyObject(source, props, object2, customizer) {
    var isNew = !object2;
    object2 || (object2 = {});
    var index = -1, length = props.length;
    while (++index < length) {
      var key = props[index];
      var newValue = customizer ? customizer(object2[key], source[key], key, object2, source) : void 0;
      if (newValue === void 0) {
        newValue = source[key];
      }
      if (isNew) {
        baseAssignValue(object2, key, newValue);
      } else {
        assignValue(object2, key, newValue);
      }
    }
    return object2;
  }
  function createAssigner(assigner) {
    return baseRest(function(object2, sources) {
      var index = -1, length = sources.length, customizer = length > 1 ? sources[length - 1] : void 0, guard = length > 2 ? sources[2] : void 0;
      customizer = assigner.length > 3 && typeof customizer == "function" ? (length--, customizer) : void 0;
      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        customizer = length < 3 ? void 0 : customizer;
        length = 1;
      }
      object2 = Object(object2);
      while (++index < length) {
        var source = sources[index];
        if (source) {
          assigner(object2, source, index, customizer);
        }
      }
      return object2;
    });
  }
  function createBaseFor(fromRight) {
    return function(object2, iteratee, keysFunc) {
      var index = -1, iterable = Object(object2), props = keysFunc(object2), length = props.length;
      while (length--) {
        var key = props[fromRight ? length : ++index];
        if (iteratee(iterable[key], key, iterable) === false) {
          break;
        }
      }
      return object2;
    };
  }
  function getMapData(map2, key) {
    var data = map2.__data__;
    return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
  }
  function getNative(object2, key) {
    var value = getValue(object2, key);
    return baseIsNative(value) ? value : void 0;
  }
  function getRawTag(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
    try {
      value[symToStringTag] = void 0;
      var unmasked = true;
    } catch (e) {
    }
    var result = nativeObjectToString.call(value);
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag] = tag;
      } else {
        delete value[symToStringTag];
      }
    }
    return result;
  }
  function initCloneObject(object2) {
    return typeof object2.constructor == "function" && !isPrototype(object2) ? baseCreate(getPrototype(object2)) : {};
  }
  function isIndex(value, length) {
    var type = typeof value;
    length = length == null ? MAX_SAFE_INTEGER : length;
    return !!length && (type == "number" || type != "symbol" && reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length);
  }
  function isIterateeCall(value, index, object2) {
    if (!isObject(object2)) {
      return false;
    }
    var type = typeof index;
    if (type == "number" ? isArrayLike2(object2) && isIndex(index, object2.length) : type == "string" && index in object2) {
      return eq(object2[index], value);
    }
    return false;
  }
  function isKeyable(value) {
    var type = typeof value;
    return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
  }
  function isMasked(func) {
    return !!maskSrcKey && maskSrcKey in func;
  }
  function isPrototype(value) {
    var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto2;
    return value === proto;
  }
  function nativeKeysIn(object2) {
    var result = [];
    if (object2 != null) {
      for (var key in Object(object2)) {
        result.push(key);
      }
    }
    return result;
  }
  function objectToString(value) {
    return nativeObjectToString.call(value);
  }
  function overRest(func, start, transform) {
    start = nativeMax(start === void 0 ? func.length - 1 : start, 0);
    return function() {
      var args2 = arguments, index = -1, length = nativeMax(args2.length - start, 0), array2 = Array(length);
      while (++index < length) {
        array2[index] = args2[start + index];
      }
      index = -1;
      var otherArgs = Array(start + 1);
      while (++index < start) {
        otherArgs[index] = args2[index];
      }
      otherArgs[start] = transform(array2);
      return apply(func, this, otherArgs);
    };
  }
  function safeGet(object2, key) {
    if (key === "constructor" && typeof object2[key] === "function") {
      return;
    }
    if (key == "__proto__") {
      return;
    }
    return object2[key];
  }
  var setToString = shortOut(baseSetToString);
  function shortOut(func) {
    var count2 = 0, lastCalled = 0;
    return function() {
      var stamp = nativeNow(), remaining = HOT_SPAN - (stamp - lastCalled);
      lastCalled = stamp;
      if (remaining > 0) {
        if (++count2 >= HOT_COUNT) {
          return arguments[0];
        }
      } else {
        count2 = 0;
      }
      return func.apply(void 0, arguments);
    };
  }
  function toSource(func) {
    if (func != null) {
      try {
        return funcToString.call(func);
      } catch (e) {
      }
      try {
        return func + "";
      } catch (e) {
      }
    }
    return "";
  }
  function eq(value, other) {
    return value === other || value !== value && other !== other;
  }
  var isArguments = baseIsArguments(function() {
    return arguments;
  }()) ? baseIsArguments : function(value) {
    return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
  };
  var isArray2 = Array.isArray;
  function isArrayLike2(value) {
    return value != null && isLength(value.length) && !isFunction2(value);
  }
  function isArrayLikeObject(value) {
    return isObjectLike(value) && isArrayLike2(value);
  }
  var isBuffer = nativeIsBuffer || stubFalse;
  function isFunction2(value) {
    if (!isObject(value)) {
      return false;
    }
    var tag = baseGetTag(value);
    return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
  }
  function isLength(value) {
    return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
  }
  function isObject(value) {
    var type = typeof value;
    return value != null && (type == "object" || type == "function");
  }
  function isObjectLike(value) {
    return value != null && typeof value == "object";
  }
  function isPlainObject(value) {
    if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
      return false;
    }
    var proto = getPrototype(value);
    if (proto === null) {
      return true;
    }
    var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
    return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
  }
  var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
  function toPlainObject(value) {
    return copyObject(value, keysIn(value));
  }
  function keysIn(object2) {
    return isArrayLike2(object2) ? arrayLikeKeys(object2, true) : baseKeysIn(object2);
  }
  var merge2 = createAssigner(function(object2, source, srcIndex) {
    baseMerge(object2, source, srcIndex);
  });
  function constant(value) {
    return function() {
      return value;
    };
  }
  function identity2(value) {
    return value;
  }
  function stubFalse() {
    return false;
  }
  module.exports = merge2;
})(lodash_merge, lodash_merge.exports);
lodash_merge.exports;
var eventemitter3 = { exports: {} };
(function(module) {
  var has = Object.prototype.hasOwnProperty, prefix = "~";
  function Events() {
  }
  if (Object.create) {
    Events.prototype = /* @__PURE__ */ Object.create(null);
    if (!new Events().__proto__)
      prefix = false;
  }
  function EE(fn, context2, once) {
    this.fn = fn;
    this.context = context2;
    this.once = once || false;
  }
  function addListener(emitter, event, fn, context2, once) {
    if (typeof fn !== "function") {
      throw new TypeError("The listener must be a function");
    }
    var listener = new EE(fn, context2 || emitter, once), evt = prefix ? prefix + event : event;
    if (!emitter._events[evt])
      emitter._events[evt] = listener, emitter._eventsCount++;
    else if (!emitter._events[evt].fn)
      emitter._events[evt].push(listener);
    else
      emitter._events[evt] = [emitter._events[evt], listener];
    return emitter;
  }
  function clearEvent(emitter, evt) {
    if (--emitter._eventsCount === 0)
      emitter._events = new Events();
    else
      delete emitter._events[evt];
  }
  function EventEmitter() {
    this._events = new Events();
    this._eventsCount = 0;
  }
  EventEmitter.prototype.eventNames = function eventNames() {
    var names = [], events, name2;
    if (this._eventsCount === 0)
      return names;
    for (name2 in events = this._events) {
      if (has.call(events, name2))
        names.push(prefix ? name2.slice(1) : name2);
    }
    if (Object.getOwnPropertySymbols) {
      return names.concat(Object.getOwnPropertySymbols(events));
    }
    return names;
  };
  EventEmitter.prototype.listeners = function listeners(event) {
    var evt = prefix ? prefix + event : event, handlers = this._events[evt];
    if (!handlers)
      return [];
    if (handlers.fn)
      return [handlers.fn];
    for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {
      ee[i] = handlers[i].fn;
    }
    return ee;
  };
  EventEmitter.prototype.listenerCount = function listenerCount(event) {
    var evt = prefix ? prefix + event : event, listeners = this._events[evt];
    if (!listeners)
      return 0;
    if (listeners.fn)
      return 1;
    return listeners.length;
  };
  EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt])
      return false;
    var listeners = this._events[evt], len = arguments.length, args2, i;
    if (listeners.fn) {
      if (listeners.once)
        this.removeListener(event, listeners.fn, void 0, true);
      switch (len) {
        case 1:
          return listeners.fn.call(listeners.context), true;
        case 2:
          return listeners.fn.call(listeners.context, a1), true;
        case 3:
          return listeners.fn.call(listeners.context, a1, a2), true;
        case 4:
          return listeners.fn.call(listeners.context, a1, a2, a3), true;
        case 5:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
        case 6:
          return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
      }
      for (i = 1, args2 = new Array(len - 1); i < len; i++) {
        args2[i - 1] = arguments[i];
      }
      listeners.fn.apply(listeners.context, args2);
    } else {
      var length = listeners.length, j;
      for (i = 0; i < length; i++) {
        if (listeners[i].once)
          this.removeListener(event, listeners[i].fn, void 0, true);
        switch (len) {
          case 1:
            listeners[i].fn.call(listeners[i].context);
            break;
          case 2:
            listeners[i].fn.call(listeners[i].context, a1);
            break;
          case 3:
            listeners[i].fn.call(listeners[i].context, a1, a2);
            break;
          case 4:
            listeners[i].fn.call(listeners[i].context, a1, a2, a3);
            break;
          default:
            if (!args2)
              for (j = 1, args2 = new Array(len - 1); j < len; j++) {
                args2[j - 1] = arguments[j];
              }
            listeners[i].fn.apply(listeners[i].context, args2);
        }
      }
    }
    return true;
  };
  EventEmitter.prototype.on = function on(event, fn, context2) {
    return addListener(this, event, fn, context2, false);
  };
  EventEmitter.prototype.once = function once(event, fn, context2) {
    return addListener(this, event, fn, context2, true);
  };
  EventEmitter.prototype.removeListener = function removeListener(event, fn, context2, once) {
    var evt = prefix ? prefix + event : event;
    if (!this._events[evt])
      return this;
    if (!fn) {
      clearEvent(this, evt);
      return this;
    }
    var listeners = this._events[evt];
    if (listeners.fn) {
      if (listeners.fn === fn && (!once || listeners.once) && (!context2 || listeners.context === context2)) {
        clearEvent(this, evt);
      }
    } else {
      for (var i = 0, events = [], length = listeners.length; i < length; i++) {
        if (listeners[i].fn !== fn || once && !listeners[i].once || context2 && listeners[i].context !== context2) {
          events.push(listeners[i]);
        }
      }
      if (events.length)
        this._events[evt] = events.length === 1 ? events[0] : events;
      else
        clearEvent(this, evt);
    }
    return this;
  };
  EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
    var evt;
    if (event) {
      evt = prefix ? prefix + event : event;
      if (this._events[evt])
        clearEvent(this, evt);
    } else {
      this._events = new Events();
      this._eventsCount = 0;
    }
    return this;
  };
  EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
  EventEmitter.prototype.addListener = EventEmitter.prototype.on;
  EventEmitter.prefixed = prefix;
  EventEmitter.EventEmitter = EventEmitter;
  {
    module.exports = EventEmitter;
  }
})(eventemitter3);
function __rest(s, e) {
  var t = {};
  for (var p in s)
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
}
typeof SuppressedError === "function" ? SuppressedError : function(error2, suppressed, message) {
  var e = new Error(message);
  return e.name = "SuppressedError", e.error = error2, e.suppressed = suppressed, e;
};
function getDevice() {
  if (typeof window !== "undefined") {
    const parsed = Bowser.getParser(window.navigator.userAgent);
    const os = parsed.getOS();
    const browser2 = parsed.getBrowser();
    const { type } = parsed.getPlatform();
    return {
      type,
      os,
      browser: browser2
    };
  } else {
    return {
      type: null,
      os: null,
      browser: null
    };
  }
}
const notNullish = (value) => value != null;
({
  svelteInstance: null,
  apiKey: void 0,
  device: getDevice(),
  initialWalletInit: [],
  gas: void 0,
  containerElements: { accountCenter: void 0, connectModal: void 0 },
  transactionPreview: void 0,
  unstoppableResolution: void 0,
  wagmi: void 0
});
const APP_INITIAL_STATE = {
  wallets: [],
  walletModules: [],
  chains: [],
  accountCenter: {
    enabled: true,
    position: "bottomRight",
    expanded: false,
    minimal: true
  },
  notify: {
    enabled: true,
    transactionHandler: () => {
    },
    position: "topRight",
    replacement: {
      gasPriceProbability: {
        speedup: 80,
        cancel: 95
      }
    }
  },
  notifications: [],
  locale: "",
  connect: {
    showSidebar: true,
    disableClose: false
  },
  appMetadata: null,
  wagmiConfig: null
};
const ADD_CHAINS = "add_chains";
const UPDATE_CHAINS = "update_chains";
const RESET_STORE = "reset_store";
const ADD_WALLET = "add_wallet";
const UPDATE_WALLET = "update_wallet";
const REMOVE_WALLET = "remove_wallet";
const UPDATE_ACCOUNT = "update_account";
const UPDATE_ACCOUNT_CENTER = "update_account_center";
const UPDATE_CONNECT_MODAL = "update_connect_modal";
const SET_WALLET_MODULES = "set_wallet_modules";
const SET_LOCALE = "set_locale";
const UPDATE_NOTIFY = "update_notify";
const ADD_NOTIFICATION = "add_notification";
const REMOVE_NOTIFICATION = "remove_notification";
const UPDATE_ALL_WALLETS = "update_balance";
const UPDATE_APP_METADATA = "update_app_metadata";
const UPDATE_WAGMI_CONFIG = "update_wagmi_config";
function reducer(state2, action) {
  const { type, payload } = action;
  switch (type) {
    case ADD_CHAINS:
      return Object.assign(Object.assign({}, state2), { chains: [...state2.chains, ...payload] });
    case UPDATE_CHAINS: {
      const updatedChain = payload;
      const chains2 = state2.chains;
      const index = chains2.findIndex((chain) => chain.id === updatedChain.id);
      chains2[index] = updatedChain;
      return Object.assign(Object.assign({}, state2), { chains: chains2 });
    }
    case ADD_WALLET: {
      const wallet2 = payload;
      const existingWallet = state2.wallets.find(({ label }) => label === wallet2.label);
      return Object.assign(Object.assign({}, state2), { wallets: [
        // add to front of wallets as it is now the primary wallet
        existingWallet || payload,
        // filter out wallet if it already existed
        ...state2.wallets.filter(({ label }) => label !== wallet2.label)
      ] });
    }
    case UPDATE_WALLET: {
      const update = payload;
      const { id } = update, walletUpdate = __rest(update, ["id"]);
      const updatedWallets = state2.wallets.map((wallet2) => wallet2.label === id ? Object.assign(Object.assign({}, wallet2), walletUpdate) : wallet2);
      return Object.assign(Object.assign({}, state2), { wallets: updatedWallets });
    }
    case REMOVE_WALLET: {
      const update = payload;
      return Object.assign(Object.assign({}, state2), { wallets: state2.wallets.filter(({ label }) => label !== update.id) });
    }
    case UPDATE_ACCOUNT: {
      const update = payload;
      const { id, address } = update, accountUpdate = __rest(update, ["id", "address"]);
      const updatedWallets = state2.wallets.map((wallet2) => {
        if (wallet2.label === id) {
          wallet2.accounts = wallet2.accounts.map((account2) => {
            if (account2.address === address) {
              return Object.assign(Object.assign({}, account2), accountUpdate);
            }
            return account2;
          });
        }
        return wallet2;
      });
      return Object.assign(Object.assign({}, state2), { wallets: updatedWallets });
    }
    case UPDATE_ALL_WALLETS: {
      const updatedWallets = payload;
      return Object.assign(Object.assign({}, state2), { wallets: updatedWallets });
    }
    case UPDATE_CONNECT_MODAL: {
      const update = payload;
      return Object.assign(Object.assign({}, state2), { connect: Object.assign(Object.assign({}, state2.connect), update) });
    }
    case UPDATE_ACCOUNT_CENTER: {
      const update = payload;
      return Object.assign(Object.assign({}, state2), { accountCenter: Object.assign(Object.assign({}, state2.accountCenter), update) });
    }
    case UPDATE_NOTIFY: {
      const update = payload;
      return Object.assign(Object.assign({}, state2), { notify: Object.assign(Object.assign({}, state2.notify), update) });
    }
    case ADD_NOTIFICATION: {
      const update = payload;
      const notificationsUpdate = [...state2.notifications];
      const notificationExistsIndex = notificationsUpdate.findIndex(({ id }) => id === update.id);
      if (notificationExistsIndex !== -1) {
        notificationsUpdate[notificationExistsIndex] = update;
      } else {
        notificationsUpdate.unshift(update);
      }
      return Object.assign(Object.assign({}, state2), { notifications: notificationsUpdate });
    }
    case REMOVE_NOTIFICATION: {
      const id = payload;
      return Object.assign(Object.assign({}, state2), { notifications: state2.notifications.filter((notification) => notification.id !== id) });
    }
    case SET_WALLET_MODULES: {
      return Object.assign(Object.assign({}, state2), { walletModules: payload });
    }
    case SET_LOCALE: {
      $locale.set(payload);
      return Object.assign(Object.assign({}, state2), { locale: payload });
    }
    case UPDATE_APP_METADATA: {
      const update = payload;
      return Object.assign(Object.assign({}, state2), { appMetadata: Object.assign(Object.assign(Object.assign({}, state2.appMetadata), update), { name: update.name || "" }) });
    }
    case UPDATE_WAGMI_CONFIG: {
      const update = payload;
      return Object.assign(Object.assign({}, state2), { wagmiConfig: update });
    }
    case RESET_STORE:
      return APP_INITIAL_STATE;
    default:
      throw new Error(`Unknown type: ${type} in appStore reducer`);
  }
}
const _store = new cjs$1.BehaviorSubject(APP_INITIAL_STATE);
const _stateUpdates = new cjs$1.Subject();
_stateUpdates.subscribe(_store);
function dispatch$1(action) {
  const state2 = _store.getValue();
  _stateUpdates.next(reducer(state2, action));
}
function select(stateKey) {
  if (!stateKey)
    return _stateUpdates.asObservable();
  const validStateKeys = Object.keys(_store.getValue());
  if (!validStateKeys.includes(String(stateKey))) {
    throw new Error(`key: ${stateKey} does not exist on this store`);
  }
  return _stateUpdates.asObservable().pipe(operators.distinctUntilKeyChanged(stateKey), operators.pluck(stateKey), operators.filter(notNullish));
}
function get$1() {
  return _store.getValue();
}
const state$1 = {
  select,
  get: get$1
};
function get_current_component() {
  throw new Error("Function called outside component initialization");
}
function beforeUpdate(fn) {
  get_current_component().$$.before_update.push(fn);
}
function onMount(fn) {
  get_current_component().$$.on_mount.push(fn);
}
function afterUpdate(fn) {
  get_current_component().$$.after_update.push(fn);
}
function onDestroy(fn) {
  get_current_component().$$.on_destroy.push(fn);
}
const reset$ = new cjs$1.Subject();
const disconnectWallet$ = new cjs$1.Subject();
new cjs$1.BehaviorSubject({ inProgress: false, actionRequired: "" });
new cjs$1.BehaviorSubject(null);
const wallets$ = state$1.select("wallets").pipe(operators.shareReplay(1));
reset$.pipe(operators.withLatestFrom(wallets$), operators.pluck("1")).subscribe((wallets) => {
  wallets.forEach(({ label }) => {
    disconnectWallet$.next(label);
  });
  resetStore();
});
new cjs$1.BehaviorSubject([]);
cjs$1.defer(() => {
  const subject = new cjs$1.Subject();
  onMount(() => {
    subject.next();
  });
  return subject.asObservable().pipe(operators.take(1));
});
const onDestroy$ = cjs$1.defer(() => {
  const subject = new cjs$1.Subject();
  onDestroy(() => {
    subject.next();
  });
  return subject.asObservable().pipe(operators.take(1));
});
cjs$1.defer(() => {
  const subject = new cjs$1.Subject();
  afterUpdate(() => {
    subject.next();
  });
  return subject.asObservable().pipe(operators.takeUntil(onDestroy$));
});
cjs$1.defer(() => {
  const subject = new cjs$1.Subject();
  beforeUpdate(() => {
    subject.next();
  });
  return subject.asObservable().pipe(operators.takeUntil(onDestroy$));
});
const unknownObject = Joi.object().unknown();
const connectedChain = Joi.object({
  namespace: chainNamespaceValidation.required(),
  id: chainIdValidation.required()
});
const ens = Joi.any().allow(Joi.object({
  name: Joi.string().required(),
  avatar: Joi.string(),
  contentHash: Joi.any().allow(Joi.string(), null),
  getText: Joi.function().arity(1).required()
}), null);
const uns = Joi.any().allow(Joi.object({
  name: Joi.string().required()
}), null);
const balance = Joi.any().allow(Joi.object({
  eth: Joi.number()
}).unknown(), null);
const secondaryTokens = Joi.any().allow(Joi.object({
  balance: Joi.string().required(),
  icon: Joi.string()
}), null);
const account = Joi.object({
  address: Joi.string().required(),
  ens,
  uns,
  balance,
  secondaryTokens
});
const chains = Joi.array().items(chainValidation).unique((a, b) => a.id === b.id).error((e) => {
  if (e[0].code === "array.unique") {
    return new Error(`There is a duplicate Chain ID in your Onboard Chains array: ${e}`);
  }
  return new Error(`${e}`);
});
const accounts = Joi.array().items(account);
const wallet = Joi.object({
  label: Joi.string(),
  icon: Joi.string(),
  provider: unknownObject,
  instance: unknownObject,
  accounts,
  chains: Joi.array().items(connectedChain),
  wagmiConnector: unknownObject
}).required().error(new Error("wallet must be defined"));
Joi.array().items(wallet);
const recommendedWallet = Joi.object({
  name: Joi.string().required(),
  url: Joi.string().uri().required()
});
const agreement = Joi.object({
  version: Joi.string().required(),
  termsUrl: Joi.string().uri(),
  privacyUrl: Joi.string().uri()
});
const appMetadata = Joi.object({
  name: Joi.string().required(),
  description: Joi.string().required(),
  icon: Joi.string(),
  logo: Joi.string(),
  gettingStartedGuide: Joi.string(),
  email: Joi.string(),
  appUrl: Joi.string(),
  explore: Joi.string(),
  recommendedInjectedWallets: Joi.array().items(recommendedWallet),
  agreement
});
Joi.object({
  name: Joi.string(),
  description: Joi.string(),
  icon: Joi.string(),
  logo: Joi.string(),
  gettingStartedGuide: Joi.string(),
  email: Joi.string(),
  appUrl: Joi.string(),
  explore: Joi.string(),
  recommendedInjectedWallets: Joi.array().items(recommendedWallet),
  agreement
});
Joi.object({
  label: Joi.string().required(),
  getInfo: Joi.function().arity(1).required(),
  getInterface: Joi.function().arity(1).required()
});
const walletInit = Joi.array().items(Joi.function()).required();
Joi.string();
const commonPositions = Joi.string().valid("topRight", "bottomRight", "bottomLeft", "topLeft");
const gasPriceProbabilities = [70, 80, 90, 95, 99];
const notify$1 = Joi.object({
  transactionHandler: Joi.function(),
  enabled: Joi.boolean(),
  position: commonPositions,
  replacement: Joi.object({
    gasPriceProbability: Joi.object({
      speedup: Joi.number().valid(...gasPriceProbabilities),
      cancel: Joi.number().valid(...gasPriceProbabilities)
    })
  })
});
const notifyOptions = Joi.object({
  desktop: notify$1,
  mobile: notify$1
});
const accountCenterInitOptions = Joi.object({
  enabled: Joi.boolean(),
  position: commonPositions,
  minimal: Joi.boolean(),
  containerElement: Joi.string(),
  hideTransactionProtectionBtn: Joi.boolean(),
  transactionProtectionInfoLink: Joi.string()
});
Joi.object({
  enabled: Joi.boolean(),
  position: commonPositions,
  expanded: Joi.boolean(),
  minimal: Joi.boolean(),
  hideTransactionProtectionBtn: Joi.boolean(),
  transactionProtectionInfoLink: Joi.string(),
  containerElement: Joi.string()
});
const connectModalOptions = Joi.object({
  showSidebar: Joi.boolean(),
  disableClose: Joi.boolean(),
  autoConnectLastWallet: Joi.boolean(),
  autoConnectAllPreviousWallet: Joi.boolean(),
  iDontHaveAWalletLink: Joi.string(),
  wheresMyWalletLink: Joi.string(),
  removeWhereIsMyWalletWarning: Joi.boolean(),
  removeIDontHaveAWalletInfoLink: Joi.boolean(),
  disableUDResolution: Joi.boolean()
});
const containerElements = Joi.object({
  accountCenter: Joi.string(),
  connectModal: Joi.string()
});
const themeMap = Joi.object({
  "--w3o-background-color": Joi.string(),
  "--w3o-font-family": Joi.string(),
  "--w3o-foreground-color": Joi.string(),
  "--w3o-text-color": Joi.string(),
  "--w3o-border-color": Joi.string(),
  "--w3o-action-color": Joi.string(),
  "--w3o-border-radius": Joi.string()
});
const presetTheme = Joi.string().valid("default", "dark", "light", "system");
const theme = Joi.alternatives().try(themeMap, presetTheme);
Joi.object({
  wallets: walletInit,
  chains: chains.required(),
  appMetadata,
  i18n: Joi.object().unknown(),
  apiKey: Joi.string(),
  accountCenter: Joi.object({
    desktop: accountCenterInitOptions,
    mobile: accountCenterInitOptions,
    hideTransactionProtectionBtn: Joi.boolean(),
    transactionProtectionInfoLink: Joi.string()
  }),
  notify: [notifyOptions, notify$1],
  gas: Joi.object({
    get: Joi.function().required(),
    stream: Joi.function().required()
  }),
  wagmi: Joi.function(),
  connect: connectModalOptions,
  containerElements,
  transactionPreview: Joi.object({
    patchProvider: Joi.function().required(),
    init: Joi.function().required(),
    previewTransaction: Joi.function()
  }),
  theme,
  disableFontDownload: Joi.boolean(),
  unstoppableResolution: Joi.function()
});
Joi.object({
  autoSelect: Joi.alternatives().try(Joi.object({
    label: Joi.string().required(),
    disableModals: Joi.boolean()
  }), Joi.string())
});
Joi.object({
  label: Joi.string().required()
}).required();
const secondaryTokenValidation = Joi.object({
  address: Joi.string().required(),
  icon: Joi.string().optional()
});
Joi.object({
  chainId: chainIdValidation.required(),
  chainNamespace: chainNamespaceValidation,
  wallet: Joi.string(),
  rpcUrl: Joi.string(),
  label: Joi.string(),
  token: Joi.string(),
  protectedRpcUrl: Joi.string(),
  secondaryTokens: Joi.array().max(5).items(secondaryTokenValidation).optional()
});
const customNotificationUpdate = Joi.object({
  key: Joi.string().required(),
  type: Joi.string().allow("pending", "error", "success", "hint"),
  eventCode: Joi.string(),
  message: Joi.string().required(),
  id: Joi.string().required(),
  autoDismiss: Joi.number(),
  onClick: Joi.function(),
  link: Joi.string()
});
Joi.object({
  sendTransaction: Joi.function(),
  estimateGas: Joi.function(),
  gasPrice: Joi.function(),
  balance: Joi.alternatives(Joi.string(), Joi.number()),
  txDetails: Joi.object({
    value: Joi.alternatives(Joi.string(), Joi.number()),
    to: Joi.string(),
    from: Joi.string()
  }),
  txApproveReminderTimeout: Joi.number()
});
Joi.object({
  key: Joi.string(),
  type: Joi.string().allow("pending", "error", "success", "hint"),
  eventCode: Joi.string(),
  message: Joi.string(),
  id: Joi.string(),
  autoDismiss: Joi.number(),
  onClick: Joi.function(),
  link: Joi.string()
});
Joi.object({
  id: Joi.string().required(),
  key: Joi.string().required(),
  type: Joi.string().allow("pending", "error", "success", "hint").required(),
  eventCode: Joi.string().required(),
  message: Joi.string().required(),
  autoDismiss: Joi.number().required(),
  network: Joi.string().required(),
  startTime: Joi.number(),
  onClick: Joi.function(),
  link: Joi.string()
});
Joi.any().allow(customNotificationUpdate, Joi.boolean().allow(false));
function resetStore() {
  const action = {
    type: RESET_STORE
  };
  dispatch$1(action);
}
state$1.select("notifications").subscribe((notifications) => {
});
const tokens$1 = [
  {
    decimals: "18",
    id: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    name: "BNB",
    symbol: "BNB"
  },
  {
    decimals: "18",
    id: "0x55d398326f99059ff775485246999027b3197955",
    name: "Tether USD",
    symbol: "USDT"
  },
  {
    decimals: "18",
    id: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    name: "BUSD Token",
    symbol: "BUSD"
  },
  {
    decimals: "18",
    id: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    name: "BTCB Token",
    symbol: "BTCB"
  },
  {
    decimals: "18",
    id: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    name: "Ethereum Token",
    symbol: "ETH"
  },
  {
    decimals: "18",
    id: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    name: "USD Coin",
    symbol: "USDC"
  },
  {
    decimals: "18",
    id: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    name: "PancakeSwap Token",
    symbol: "Cake"
  },
  {
    decimals: "18",
    id: "0x9840652dc04fb9db2c43853633f0f62be6f00f98",
    name: "ChainGPT",
    symbol: "CGPT"
  },
  {
    decimals: "9",
    id: "0x75ca521892de7f2ecfb070cab545c250d0ceb7e3",
    name: "PVC META",
    symbol: "PVC"
  },
  {
    decimals: "18",
    id: "0x570a5d26f7765ecb712c0924e4de545b89fd43df",
    name: "SOLANA",
    symbol: "SOL"
  },
  {
    decimals: "18",
    id: "0x5b1f874d0b0c5ee17a495cbb70ab8bf64107a3bd",
    name: "BinaryX",
    symbol: "BNX"
  },
  {
    decimals: "18",
    id: "0xbdeae1ca48894a1759a8374d63925f21f2ee2639",
    name: "EDU Coin",
    symbol: "EDU"
  },
  {
    decimals: "18",
    id: "0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe",
    name: "XRP Token",
    symbol: "XRP"
  },
  {
    decimals: "8",
    id: "0xba2ae424d960c26247dd6c32edc70b295c744c43",
    name: "Dogecoin",
    symbol: "DOGE"
  },
  {
    decimals: "6",
    id: "0x4268b8f0b87b6eae5d897996e6b845ddbd99adf3",
    name: "Axelar Wrapped USDC",
    symbol: "axlUSDC"
  },
  {
    decimals: "18",
    id: "0x2d060ef4d6bf7f9e5edde373ab735513c0e4f944",
    name: "AITECH",
    symbol: "AITECH"
  },
  {
    decimals: "6",
    id: "0x323665443cef804a3b5206103304bd4872ea4253",
    name: "USDV",
    symbol: "USDV"
  },
  {
    decimals: "18",
    id: "0x4d2d32d8652058bf98c772953e1df5c5c85d9f45",
    name: "DAO Maker",
    symbol: "DAO"
  },
  {
    decimals: "18",
    id: "0x7f9ad7a5854658d984924e868187b2135514fb88",
    name: "BVSD",
    symbol: "BVSD"
  },
  {
    decimals: "18",
    id: "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47",
    name: "Cardano Token",
    symbol: "ADA"
  },
  {
    decimals: "18",
    id: "0x2940566eb50f15129238f4dc599adc4f742d7d8e",
    name: "BlackCardCoin",
    symbol: "BCCoin"
  },
  {
    decimals: "18",
    id: "0x031b41e504677879370e9dbcf937283a8691fa7f",
    name: "Fetch",
    symbol: "FET"
  },
  {
    decimals: "18",
    id: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409",
    name: "First Digital USD",
    symbol: "FDUSD"
  },
  {
    decimals: "18",
    id: "0x12bb890508c125661e03b09ec06e404bc9289040",
    name: "Radio Caca V2",
    symbol: "RACA"
  },
  {
    decimals: "18",
    id: "0x9240c44ee90d058b0b17ababe0f74ab1a205ae04",
    name: "Ents",
    symbol: "ENTS"
  },
  {
    decimals: "18",
    id: "0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153",
    name: "Filecoin",
    symbol: "FIL"
  },
  {
    decimals: "18",
    id: "0x2dff88a56767223a5529ea5960da7a3f5f766406",
    name: "SPACE ID",
    symbol: "ID"
  },
  {
    decimals: "18",
    id: "0xcc42724c6683b7e57334c4e856f4c9965ed682bd",
    name: "Matic Token",
    symbol: "MATIC"
  },
  {
    decimals: "18",
    id: "0x6e88056e8376ae7709496ba64d37fa2f8015ce3e",
    name: "Dexe",
    symbol: "DEXE"
  },
  {
    decimals: "18",
    id: "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd",
    name: "ChainLink Token",
    symbol: "LINK"
  },
  {
    decimals: "18",
    id: "0xc335df7c25b72eec661d5aa32a7c2b7b2a1d1874",
    name: "Ice",
    symbol: "ICE"
  },
  {
    decimals: "18",
    id: "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
    name: "Dai Token",
    symbol: "DAI"
  },
  {
    decimals: "18",
    id: "0x2859e4544c4bb03966803b044a93563bd2d0dd4d",
    name: "SHIBA INU",
    symbol: "SHIB"
  },
  {
    decimals: "18",
    id: "0x1fa4a73a3f0133f0025378af00236f3abdee5d63",
    name: "NEAR Protocol",
    symbol: "NEAR"
  },
  {
    decimals: "18",
    id: "0x33d08d8c7a168333a85285a68c0042b39fc3741d",
    name: "AIOZ Network",
    symbol: "AIOZ"
  },
  {
    decimals: "18",
    id: "0xad29abb318791d579433d831ed122afeaf29dcfe",
    name: "Fantom",
    symbol: "FTM"
  },
  {
    decimals: "8",
    id: "0xe0b1a112ee17ef376260ad347d0d9c38efdffe07",
    name: "CardsAhoy! Coin",
    symbol: "CAC"
  },
  {
    decimals: "18",
    id: "0x7083609fce4d1d8dc0c979aab8c869ea2c873402",
    name: "Polkadot Token",
    symbol: "DOT"
  },
  {
    decimals: "18",
    id: "0xb0d502e938ed5f4df2e681fe6e419ff29631d62b",
    name: "StargateToken",
    symbol: "STG"
  },
  {
    decimals: "18",
    id: "0x25d887ce7a35172c62febfd67a1856f20faebb00",
    name: "Pepe",
    symbol: "PEPE"
  },
  {
    decimals: "18",
    id: "0x0f5a89029342c88133c63c4e092a985160c5c5e6",
    name: "LollyBomb",
    symbol: "BOMB"
  },
  {
    decimals: "9",
    id: "0x76a797a59ba2c17726896976b7b3747bfd1d220f",
    name: "Wrapped TON Coin",
    symbol: "TONCOIN"
  },
  {
    decimals: "18",
    id: "0xb0b84d294e0c75a6abe60171b70edeb2efd14a1b",
    name: "Synclub Staked BNB",
    symbol: "SnBNB"
  },
  {
    decimals: "18",
    id: "0x003d87d02a2a01e9e8a20f507c83e15dd83a33d1",
    name: "GT Protocol",
    symbol: "GTAI"
  },
  {
    decimals: "18",
    id: "0x0782b6d8c4551b9760e74c0545a9bcd90bdc41e5",
    name: "Hay Destablecoin",
    symbol: "HAY"
  },
  {
    decimals: "18",
    id: "0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63",
    name: "Venus",
    symbol: "XVS"
  },
  {
    decimals: "18",
    id: "0x76d36d44dc4595e8d2eb3ad745f175eda134284f",
    name: "Phoenic Token",
    symbol: "PNIC"
  },
  {
    decimals: "18",
    id: "0x12f31b73d812c6bb0d735a218c086d44d5fe5f89",
    name: "agEUR",
    symbol: "agEUR"
  },
  {
    decimals: "18",
    id: "0x776f9987d9deed90eed791cbd824d971fd5ccf09",
    name: "LayerAI Token",
    symbol: "LAI"
  },
  {
    decimals: "18",
    id: "0x03aa6298f1370642642415edc0db8b957783e8d6",
    name: "NetMind Token",
    symbol: "NMT"
  },
  {
    decimals: "18",
    id: "0x4b0f1812e5df2a09796481ff14017e6005508003",
    name: "Trust Wallet",
    symbol: "TWT"
  },
  {
    decimals: "18",
    id: "0x1ce0c2827e2ef14d5c4f29a091d735a204794041",
    name: "Avalanche",
    symbol: "AVAX"
  },
  {
    decimals: "18",
    id: "0x8c49a510756224e887b3d99d00d959f2d86dda1c",
    name: "Realio Network",
    symbol: "RIO"
  },
  {
    decimals: "18",
    id: "0x16faf9daa401aa42506af503aa3d80b871c467a3",
    name: "DexCheck",
    symbol: "DCK"
  },
  {
    decimals: "18",
    id: "0x21ac3bb914f90a2bb1a16088e673a9fdda641434",
    name: "Octavia",
    symbol: "VIA"
  },
  {
    decimals: "18",
    id: "0x062ca2d2f1af8c203fa3ad5298fd6faa4e44e897",
    name: "OrangeDX",
    symbol: "O4DX"
  },
  {
    decimals: "8",
    id: "0x2b72867c32cf673f7b02d208b26889fed353b1f8",
    name: "Magic Square",
    symbol: "SQR"
  },
  {
    decimals: "18",
    id: "0x14778860e937f509e651192a90589de711fb88a9",
    name: "CyberConnect",
    symbol: "CYBER"
  },
  {
    decimals: "18",
    id: "0x8899ec96ed8c96b5c86c23c3f069c3def75b6d97",
    name: "Openfabric",
    symbol: "OFN"
  },
  {
    decimals: "18",
    id: "0x2598c30330d5771ae9f983979209486ae26de875",
    name: "Any Inu",
    symbol: "AI"
  },
  {
    decimals: "18",
    id: "0x998305efdc264b9674178899fffbb44a47134a76",
    name: "Gaimin Token",
    symbol: "GMRX"
  },
  {
    decimals: "18",
    id: "0x22b4fa9a13a0d303ad258ee6d62a6ac60364b0c9",
    name: "Big Pump",
    symbol: "PUMP"
  },
  {
    decimals: "18",
    id: "0xbf5140a22578168fd562dccf235e5d43a02ce9b1",
    name: "Uniswap",
    symbol: "UNI"
  },
  {
    decimals: "18",
    id: "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa",
    name: "Vita Inu",
    symbol: "VINU"
  },
  {
    decimals: "18",
    id: "0x6894cde390a3f51155ea41ed24a33a4827d3063d",
    name: "Simons Cat",
    symbol: "CAT"
  },
  {
    decimals: "9",
    id: "0x4ea98c1999575aaadfb38237dd015c5e773f75a2",
    name: "MAGA",
    symbol: "TRUMP"
  },
  {
    decimals: "18",
    id: "0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb",
    name: "SafePal Token",
    symbol: "SFP"
  },
  {
    decimals: "18",
    id: "0xec1f55b5be7ee8c24ee26b6cc931ce4d7fd5955c",
    name: "RevaLink Wallet Token",
    symbol: "RWT"
  },
  {
    decimals: "18",
    id: "0x75e8ddb518bb757b4282cd5b83bb70d4101d12fb",
    name: "NFPrompt Token",
    symbol: "NFP"
  },
  {
    decimals: "18",
    id: "0x0eb3a705fc54725037cc9e008bdede697f62f335",
    name: "Cosmos Token",
    symbol: "ATOM"
  },
  {
    decimals: "18",
    id: "0x62d0a8458ed7719fdaf978fe5929c6d342b0bfce",
    name: "Beam",
    symbol: "BEAM"
  },
  {
    decimals: "18",
    id: "0x3203c9e46ca618c8c1ce5dc67e7e9d75f5da2377",
    name: "Mobox",
    symbol: "MBOX"
  },
  {
    decimals: "18",
    id: "0xfe8bf5b8f5e4eb5f9bc2be16303f7dab8cf56aa8",
    name: "BIBI",
    symbol: "BIBI"
  },
  {
    decimals: "18",
    id: "0xa260e12d2b924cb899ae80bb58123ac3fee1e2f0",
    name: "Hook Token",
    symbol: "HOOK"
  },
  {
    decimals: "18",
    id: "0xdcf0929aa20077c7ff96da0cd91ab5183c29abdd",
    name: "CosmosAI",
    symbol: "CMA"
  },
  {
    decimals: "18",
    id: "0x9ec02756a559700d8d9e79ece56809f7bcc5dc27",
    name: "why",
    symbol: "WHY"
  },
  {
    decimals: "18",
    id: "0x4338665cbb7b2485a8855a139b75d5e34ab0db94",
    name: "Litecoin Token",
    symbol: "LTC"
  },
  {
    decimals: "18",
    id: "0xe4cc45bb5dbda06db6183e8bf016569f40497aa5",
    name: "Project Galaxy",
    symbol: "GAL"
  },
  {
    decimals: "18",
    id: "0x4c3145cb6285eb269c37685e05ff8c6684a70ec7",
    name: "FTC",
    symbol: "FTC"
  },
  {
    decimals: "18",
    id: "0xfceb31a79f71ac9cbdcf853519c1b12d379edc46",
    name: "Lista DAO",
    symbol: "LISTA"
  },
  {
    decimals: "5",
    id: "0xa697e272a73744b343528c3bc4702f2565b2f422",
    name: "Bonk",
    symbol: "Bonk"
  },
  {
    decimals: "18",
    id: "0xecbce2c13d3a1248debfd23dcc0558b495916756",
    name: "DRIPX Token",
    symbol: "DRIPX"
  },
  {
    decimals: "18",
    id: "0xc27a719105a987b4c34116223cae8bd8f4b5def4",
    name: "ACEToken",
    symbol: "ACE"
  },
  {
    decimals: "18",
    id: "0xcd1b51b87a8a7137d6421ba5a976225187a26777",
    name: "LSD",
    symbol: "LSD"
  },
  {
    decimals: "18",
    id: "0xb46584e0efde3092e04010a13f2eae62adb3b9f0",
    name: "Pepe Coin",
    symbol: "PEPE"
  },
  {
    decimals: "8",
    id: "0xf74594a5606eeca8eb5c09933a361f261296d3b7",
    name: "DoubleDog",
    symbol: "DD"
  },
  {
    decimals: "18",
    id: "0x03ff0ff224f904be3118461335064bb48df47938",
    name: "Harmony ONE",
    symbol: "ONE"
  },
  {
    decimals: "18",
    id: "0xc71b5f631354be6853efe9c3ab6b9590f8302e81",
    name: "Polyhedra Network",
    symbol: "ZK"
  },
  {
    decimals: "18",
    id: "0xf7de7e8a6bd59ed41a4b5fe50278b3b7f31384df",
    name: "Radiant",
    symbol: "RDNT"
  },
  {
    decimals: "18",
    id: "0xaec945e04baf28b135fa7c640f624f8d90f1c3a6",
    name: "Coin98",
    symbol: "C98"
  },
  {
    decimals: "9",
    id: "0x37a56cdcd83dce2868f721de58cb3830c44c6303",
    name: "ZEBEC",
    symbol: "ZBC"
  },
  {
    decimals: "18",
    id: "0x40af3827f39d0eacbf4a168f8d4ee67c121d11c9",
    name: "TrueUSD",
    symbol: "TUSD"
  },
  {
    decimals: "18",
    id: "0xd06716e1ff2e492cc5034c2e81805562dd3b45fa",
    name: "Magpie Token",
    symbol: "MGP"
  },
  {
    decimals: "18",
    id: "0x8ff795a6f4d97e7887c79bea79aba5cc76444adf",
    name: "Bitcoin Cash Token",
    symbol: "BCH"
  },
  {
    decimals: "18",
    id: "0x6ad9e9c098a45b2b41b519119c31c3dcb02accb2",
    name: "PLAYZAP",
    symbol: "PZP"
  },
  {
    decimals: "18",
    id: "0x0808bf94d57c905f1236212654268ef82e1e594e",
    name: "RITE Coin",
    symbol: "RITE"
  },
  {
    decimals: "18",
    id: "0x04756126f044634c9a0f0e985e60c88a51acc206",
    name: "Carbon",
    symbol: "CSIX"
  },
  {
    decimals: "6",
    id: "0x156ab3346823b651294766e23e6cf87254d68962",
    name: "LUNA",
    symbol: "LUNA"
  },
  {
    decimals: "18",
    id: "0x2ab0e9e4ee70fff1fb9d67031e44f6410170d00e",
    name: "XEN Crypto",
    symbol: "bXEN"
  },
  {
    decimals: "18",
    id: "0x21fd16cd0ef24a49d28429921e335bb0c1bfadb3",
    name: "4",
    symbol: "FOUR"
  },
  {
    decimals: "18",
    id: "0xfd4f2caf941b6d737382dce420b368de3fc7f2d4",
    name: "Patex Token",
    symbol: "PATEX"
  },
  {
    decimals: "18",
    id: "0x529c79f6918665ebe250f32eeeaa1d410a0798c6",
    name: "HYPERGPT",
    symbol: "HGPT"
  },
  {
    decimals: "8",
    id: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05",
    name: "PirateCash",
    symbol: "PIRATE"
  },
  {
    decimals: "18",
    id: "0xb3ed0a426155b79b898849803e3b36552f7ed507",
    name: "Pendle",
    symbol: "PENDLE"
  },
  {
    decimals: "5",
    id: "0xbe7bdd5d57ddd667347764b13626b90175ab852b",
    name: "TFX TOKEN",
    symbol: "TFX"
  },
  {
    decimals: "18",
    id: "0x6d106c0b8d2f47c5465bdbd58d1be253762cbbc1",
    name: "DeFi",
    symbol: "DEFI"
  },
  {
    decimals: "18",
    id: "0x88691f292b76bf4d2caa5678a54515fae77c33af",
    name: "Xpense",
    symbol: "XPE"
  },
  {
    decimals: "18",
    id: "0x87266413e5b64db72f11bb6795ee976545dbaf43",
    name: "Shibabitcoin",
    symbol: "SHIBTC"
  },
  {
    decimals: "6",
    id: "0x55e48aa00c55b6ed4453d90c247833f604bac1cb",
    name: "Green Candle",
    symbol: "GC"
  },
  {
    decimals: "18",
    id: "0x0203d275d2a65030889af45ed91d472be3948b92",
    name: "Engines of Fury Token",
    symbol: "FURY"
  },
  {
    decimals: "18",
    id: "0xc209831f7349d4e200d420326b3401899ab9ae68",
    name: "CRYPTERIUM COIN",
    symbol: "CCOIN"
  },
  {
    decimals: "6",
    id: "0x8b1f4432f943c465a973fedc6d7aa50fc96f1f65",
    name: "Axelar",
    symbol: "AXL"
  },
  {
    decimals: "18",
    id: "0x8888888837f84a7a82668e0320ac454f5945d0b9",
    name: "Work X Token",
    symbol: "WORK"
  },
  {
    decimals: "9",
    id: "0x59f4f336bf3d0c49dbfba4a74ebd2a6ace40539a",
    name: "Catcoin",
    symbol: "CAT"
  },
  {
    decimals: "18",
    id: "0xa026ad2ceda16ca5fc28fd3c72f99e2c332c8a26",
    name: "XCAD Token",
    symbol: "XCAD"
  },
  {
    decimals: "18",
    id: "0x44a21b3577924dcd2e9c81a3347d204c36a55466",
    name: "Paysenger EGO",
    symbol: "EGO"
  },
  {
    decimals: "9",
    id: "0x88da9901b3a02fe24e498e1ed683d2310383e295",
    name: "Baby Grok",
    symbol: "BabyGrok"
  },
  {
    decimals: "18",
    id: "0xceb24c99579e6140517d59c8dd4f5b36d84ed6de",
    name: "Phecda",
    symbol: "PCD "
  },
  {
    decimals: "18",
    id: "0x410a56541bd912f9b60943fcb344f1e3d6f09567",
    name: "Minto Bitcoin Hashrate Token",
    symbol: "BTCMT"
  },
  {
    decimals: "18",
    id: "0x4be35ec329343d7d9f548d42b0f8c17fffe07db4",
    name: "Tether USD Bridged ZED20",
    symbol: "USDT.z"
  },
  {
    decimals: "18",
    id: "0x29838b8c8b7cd6f0698c2fd6feaf0363d2cb6da1",
    name: "trex20",
    symbol: "TX20"
  },
  {
    decimals: "18",
    id: "0xa2b726b1145a4773f68593cf171187d8ebe4d495",
    name: "Injective Protocol",
    symbol: "INJ"
  },
  {
    decimals: "18",
    id: "0x35da89a339de2c78f8fb1c5e1a9a9c6539e2fa8a",
    name: "Utility Net Coin",
    symbol: "UNC"
  },
  {
    decimals: "18",
    id: "0x8263cd1601fe73c066bf49cc09841f35348e3be0",
    name: "Altura",
    symbol: "ALU"
  },
  {
    decimals: "18",
    id: "0x555296de6a86e72752e5c5dc091fe49713aa145c",
    name: "Grape coin",
    symbol: "GRAPE"
  },
  {
    decimals: "18",
    id: "0xd69ee2e508363fed57f89917d5ca03e715ee5519",
    name: "CHAT",
    symbol: "DECHAT"
  },
  {
    decimals: "18",
    id: "0x510ca7d22a84599e7d0f15f09e674056a6255389",
    name: "LABS Group V2",
    symbol: "LABS"
  },
  {
    decimals: "18",
    id: "0xcc6f1e1b87cfcbe9221808d2d85c501aab0b5192",
    name: "Dmail Network",
    symbol: "DMAIL"
  },
  {
    decimals: "18",
    id: "0xb6c53431608e626ac81a9776ac3e999c5556717c",
    name: "pTokens TLOS",
    symbol: "TLOS"
  },
  {
    decimals: "18",
    id: "0x0e7779e698052f8fe56c415c3818fcf89de9ac6d",
    name: "Ultiverse Token",
    symbol: "ULTI"
  },
  {
    decimals: "18",
    id: "0x1294f4183763743c7c9519bec51773fb3acd78fd",
    name: "Fideum",
    symbol: "FI"
  },
  {
    decimals: "18",
    id: "0xd98438889ae7364c7e2a3540547fad042fb24642",
    name: "Cellframe ERC20 v2",
    symbol: "CELL"
  },
  {
    decimals: "18",
    id: "0xcebef3df1f3c5bfd90fde603e71f31a53b11944d",
    name: "LitLabToken",
    symbol: "LITT"
  },
  {
    decimals: "18",
    id: "0x2bf83d080d8bc4715984e75e5b3d149805d11751",
    name: "VinuChain",
    symbol: "VC"
  },
  {
    decimals: "9",
    id: "0xfb5b838b6cfeedc2873ab27866079ac55363d37e",
    name: "FLOKI",
    symbol: "FLOKI"
  },
  {
    decimals: "6",
    id: "0xce7de646e7208a4ef112cb6ed5038fa6cc6b12e3",
    name: "TRON",
    symbol: "TRX"
  },
  {
    decimals: "18",
    id: "0xbda011d7f8ec00f66c1923b049b94c67d148d8b2",
    name: "Sleepless AI Token",
    symbol: "AI"
  },
  {
    decimals: "18",
    id: "0xf3a587d1ac967b40db59223434baf0c6e11588ea",
    name: "SonorusToken",
    symbol: "SNS"
  },
  {
    decimals: "18",
    id: "0x5542958fa9bd89c96cb86d1a6cb7a3e644a3d46e",
    name: "ARA",
    symbol: "ARA"
  },
  {
    decimals: "18",
    id: "0x1c3ba6cf2676cc795db02a3b2093e5076f5f330e",
    name: "CodeX",
    symbol: "CDX"
  },
  {
    decimals: "18",
    id: "0x48a8ba1754fe84e2f9dfa97982e524f18e5b4bd3",
    name: "Crypto-AI-Robo",
    symbol: "CAIR"
  },
  {
    decimals: "18",
    id: "0x4536819095a8969c94362ba130ee0bb1cda714cb",
    name: "Matthew Box 404",
    symbol: "MB4"
  },
  {
    decimals: "8",
    id: "0x3019bf2a2ef8040c242c9a4c5c4bd4c81678b2a1",
    name: "Green Metaverse Token",
    symbol: "GMT"
  },
  {
    decimals: "18",
    id: "0xf03ca04dd56d695a410f46f14fef4028b22fb79a",
    name: "NFE",
    symbol: "NFE"
  },
  {
    decimals: "6",
    id: "0xec4181db75f17d3bf7885158794d060ae30bd730",
    name: "WTH Token",
    symbol: "WTH"
  },
  {
    decimals: "18",
    id: "0xa4838122c683f732289805fc3c207febd55babdd",
    name: "\bTrias Token",
    symbol: "TRIAS"
  },
  {
    decimals: "18",
    id: "0xab737e248d3c088bdf093e0a28171ce35920f91b",
    name: "QFS GOLDEN",
    symbol: "QFS"
  },
  {
    decimals: "18",
    id: "0x2c44b726adf1963ca47af88b284c06f30380fc78",
    name: "ConstitutionDAO",
    symbol: "PEOPLE"
  },
  {
    decimals: "18",
    id: "0xe552fb52a4f19e44ef5a967632dbc320b0820639",
    name: "Metis Token",
    symbol: "Metis"
  },
  {
    decimals: "18",
    id: "0xbaea9aba1454df334943951d51116ae342eab255",
    name: "Poolz Finance",
    symbol: "POOLX"
  },
  {
    decimals: "18",
    id: "0x8f0528ce5ef7b51152a59745befdd91d97091d2f",
    name: "AlpacaToken",
    symbol: "ALPACA"
  },
  {
    decimals: "8",
    id: "0x51e72dd1f2628295cc2ef931cb64fdbdc3a0c599",
    name: "Kaspa",
    symbol: "KAS"
  },
  {
    decimals: "18",
    id: "0xa89e2871a850e0e6fd8f0018ec1fc62fa75440d4",
    name: "Ready to Fight",
    symbol: "RTF"
  },
  {
    decimals: "18",
    id: "0xf486ad071f3bee968384d2e39e2d8af0fcf6fd46",
    name: "VELO",
    symbol: "VELO"
  },
  {
    decimals: "18",
    id: "0xf30224eb7104aca47235beb3362e331ece70616a",
    name: "Wrapped Drip",
    symbol: "WDRIP"
  },
  {
    decimals: "9",
    id: "0x734d66f635523d7ddb7d2373c128333da313041b",
    name: "ZEDXION",
    symbol: "USDZ"
  },
  {
    decimals: "18",
    id: "0xa856098dcbc1b2b3a9c96c35c32bc4f71e49aed2",
    name: "FinceptorToken",
    symbol: "FINC"
  },
  {
    decimals: "18",
    id: "0x4d7fa587ec8e50bd0e9cd837cb4da796f47218a1",
    name: "SAFE(AnWang)",
    symbol: "SAFE"
  },
  {
    decimals: "18",
    id: "0x352cb5e19b12fc216548a2677bd0fce83bae434b",
    name: "BitTorrent",
    symbol: "BTT"
  },
  {
    decimals: "18",
    id: "0x6fdcdfef7c496407ccb0cec90f9c5aaa1cc8d888",
    name: "VeChain",
    symbol: "VET"
  },
  {
    decimals: "18",
    id: "0xad86d0e9764ba90ddd68747d64bffbd79879a238",
    name: "PAID Network",
    symbol: "PAID"
  },
  {
    decimals: "18",
    id: "0xf4bea2c219eb95c6745983b68185c7340c319d9e",
    name: "Fairspin Token",
    symbol: "TFS"
  },
  {
    decimals: "18",
    id: "0x4aae823a6a0b376de6a78e74ecc5b079d38cbcf7",
    name: "Solv BTC",
    symbol: "SolvBTC"
  },
  {
    decimals: "9",
    id: "0x4507cef57c46789ef8d1a19ea45f4216bae2b528",
    name: "TokenFi",
    symbol: "TOKEN"
  },
  {
    decimals: "18",
    id: "0x2b5d9adea07b590b638ffc165792b2c610eda649",
    name: "Cakepie",
    symbol: "CKP"
  },
  {
    decimals: "18",
    id: "0xae493a1f8bbe36ba8e687352f638d4c07c54f8d7",
    name: "Matthew Coin",
    symbol: "MC"
  },
  {
    decimals: "18",
    id: "0x7ddc52c4de30e94be3a6a0a2b259b2850f421989",
    name: "GoMining Token",
    symbol: "GMT"
  },
  {
    decimals: "18",
    id: "0x8c907e0a72c3d55627e853f4ec6a96b0c8771145",
    name: "ZigCoin",
    symbol: "ZIG"
  },
  {
    decimals: "18",
    id: "0x6985884c4392d348587b19cb9eaaf157f13271cd",
    name: "LayerZero",
    symbol: "ZRO"
  },
  {
    decimals: "18",
    id: "0xd069599e718f963bd84502b49ba8f8657faf5b3a",
    name: "PLAY",
    symbol: "PLAY"
  },
  {
    decimals: "18",
    id: "0x04f46cdfe8dd348e41902eef1aff19ace1661f4c",
    name: "FTC",
    symbol: "FTC"
  },
  {
    decimals: "18",
    id: "0x328fd053c4bb968875afd9ad0af36fcf4a0bdda9",
    name: "AGII",
    symbol: "AGII"
  },
  {
    decimals: "18",
    id: "0x111111111117dc0aa78b770fa6a738034120c302",
    name: "1INCH Token",
    symbol: "1INCH"
  },
  {
    decimals: "18",
    id: "0xf700d4c708c2be1463e355f337603183d20e0808",
    name: "Galactic Quadrant",
    symbol: "GQ"
  },
  {
    decimals: "18",
    id: "0x003144b41d9743d402c5bdf3f72ca0f327aa0bca",
    name: "X-314",
    symbol: "X314"
  },
  {
    decimals: "18",
    id: "0xb64e280e9d1b5dbec4accedb2257a87b400db149",
    name: "Level Token",
    symbol: "LVL"
  },
  {
    decimals: "18",
    id: "0x57185189118c7e786cafd5c71f35b16012fa95ad",
    name: "BEFE",
    symbol: "BEFE"
  },
  {
    decimals: "6",
    id: "0xbbcf73bd3f6774f6bd8c09d41c3c4a73cbab30b8",
    name: "Decentralized Realty Token",
    symbol: "UTLHOME"
  },
  {
    decimals: "18",
    id: "0x178fbe1cf4775fbdb9756d6349195a05799c0fe5",
    name: "SPENT",
    symbol: "SPENT"
  },
  {
    decimals: "18",
    id: "0x39df92f325938c610f4e4a04f7b756145ebe8804",
    name: "DEXNET",
    symbol: "DEXNET"
  },
  {
    decimals: "18",
    id: "0xc0041ef357b183448b235a8ea73ce4e4ec8c265f",
    name: "Cookie",
    symbol: "COOKIE"
  },
  {
    decimals: "18",
    id: "0xeceb87cf00dcbf2d4e2880223743ff087a995ad9",
    name: "NUM Token [via ChainPort.io]",
    symbol: "NUM"
  },
  {
    decimals: "18",
    id: "0xade2321efcc54b1d0676a29e331579da7b82aa76",
    name: "IPP",
    symbol: "IPP"
  },
  {
    decimals: "18",
    id: "0x0ae38f7e10a43b5b2fb064b42a2f4514cba909ef",
    name: "unshETH Ether",
    symbol: "unshETH"
  },
  {
    decimals: "18",
    id: "0xb2d9683364da90ab057215d55192520200888888",
    name: "HeiMa Coin",
    symbol: "HM"
  },
  {
    decimals: "18",
    id: "0xf1f0fa0287c47804636ffef14e2c241f2587903e",
    name: "Aarma",
    symbol: "ARMA"
  },
  {
    decimals: "18",
    id: "0xc703da39ae3b9db67c207c7bad8100e1afdc0f9c",
    name: "FRGX",
    symbol: "FRGX"
  },
  {
    decimals: "18",
    id: "0x944824290cc12f31ae18ef51216a223ba4063092",
    name: "Masa Token",
    symbol: "MASA"
  },
  {
    decimals: "18",
    id: "0x91d6d6af7635b7b23a8ced9508117965180e2362",
    name: "unshETHing_Token",
    symbol: "USH"
  },
  {
    decimals: "18",
    id: "0xfb6115445bff7b52feb98650c87f44907e58f802",
    name: "Aave Token",
    symbol: "AAVE"
  },
  {
    decimals: "18",
    id: "0x67b725d7e342d7b611fa85e859df9697d9378b2e",
    name: "The Sandbox",
    symbol: "SAND"
  },
  {
    decimals: "18",
    id: "0x0864c156b3c5f69824564dec60c629ae6401bf2a",
    name: "Streamr",
    symbol: "DATA"
  },
  {
    decimals: "2",
    id: "0x2c8d970d7c8c878db422c4bcd7d2542104ecfa2c",
    name: "GEZY BEP20 Token",
    symbol: "GEZY"
  },
  {
    decimals: "18",
    id: "0xad4c689dcb380a94f7e13400bd03fd998cf7af7a",
    name: "Kermit",
    symbol: "Crickets"
  },
  {
    decimals: "18",
    id: "0x30842a9c941d9de3af582c41ad12b11d776ba69e",
    name: "QnA3.AI Token",
    symbol: "GPT"
  },
  {
    decimals: "18",
    id: "0x740df024ce73f589acd5e8756b377ef8c6558bab",
    name: "Holograph Utility Token",
    symbol: "HLG"
  },
  {
    decimals: "18",
    id: "0x6730f7a6bbb7b9c8e60843948f7feb4b6a17b7f7",
    name: "Seed.Photo",
    symbol: "SEED"
  },
  {
    decimals: "18",
    id: "0xdc8c8221b8e27dfda87a6d56dc5899a65087b6f4",
    name: "FLOKITA",
    symbol: "FLOKITA"
  },
  {
    decimals: "18",
    id: "0x09f423ac3c9babbff6f94d372b16e4206e71439f",
    name: "Wrapped Enjinstarter",
    symbol: "WEJS"
  },
  {
    decimals: "9",
    id: "0x11cee2f0f707810c98382724fb6d5e14972366dc",
    name: "MAGA",
    symbol: "MAGA"
  },
  {
    decimals: "18",
    id: "0x7bc75e291e656e8658d66be1cc8154a3769a35dd",
    name: "iMe Lab",
    symbol: "LIME"
  },
  {
    decimals: "18",
    id: "0x8457ca5040ad67fdebbcc8edce889a335bc0fbfb",
    name: "AltLayer Token",
    symbol: "ALT"
  },
  {
    decimals: "18",
    id: "0x33dc5a6e2e01702c39f038f3a1c1cfefb81f2857",
    name: "OneX Token",
    symbol: "ONEX"
  },
  {
    decimals: "18",
    id: "0x4cfac133438b25c22434ed56106eaf8503ec65ea",
    name: "Honor Token",
    symbol: "Honor"
  },
  {
    decimals: "18",
    id: "0xf585b5b4f22816baf7629aea55b701662630397b",
    name: "Vow",
    symbol: "VOW"
  },
  {
    decimals: "18",
    id: "0x686318000d982bc8dcc1cdcf8ffd22322f0960ed",
    name: "OpulousToken [via ChainPort.io]",
    symbol: "OPUL"
  },
  {
    decimals: "8",
    id: "0x6679eb24f59dfe111864aec72b443d1da666b360",
    name: "ARIVA",
    symbol: "ARV"
  },
  {
    decimals: "18",
    id: "0xc4a1e7106d08b7ff947254b6d75cf2b877d55daf",
    name: "Laqira Token",
    symbol: "LQR"
  },
  {
    decimals: "18",
    id: "0x5651fa7a726b9ec0cad00ee140179912b6e73599",
    name: "OORT",
    symbol: "OORT"
  },
  {
    decimals: "18",
    id: "0xf95a5532d67c944dfa7eddd2f8c358fe0dc7fac2",
    name: "MARBLEX on BNB",
    symbol: "MBX"
  },
  {
    decimals: "18",
    id: "0x23e8a70534308a4aaf76fb8c32ec13d17a3bd89e",
    name: "lUSD",
    symbol: "lUSD"
  },
  {
    decimals: "18",
    id: "0x477bc8d23c634c154061869478bce96be6045d12",
    name: "SeedifyFund",
    symbol: "SFUND"
  },
  {
    decimals: "8",
    id: "0x2297aebd383787a160dd0d9f71508148769342e3",
    name: "Bitcoin",
    symbol: "BTC.b"
  },
  {
    decimals: "18",
    id: "0x417e99871cdc1a48cc313be8b586667d54b46494",
    name: "ESPENTO-USD",
    symbol: "eUSD"
  },
  {
    decimals: "18",
    id: "0x1ba42e5193dfa8b03d15dd1b86a3113bbbef8eeb",
    name: "Zcash Token",
    symbol: "ZEC"
  },
  {
    decimals: "18",
    id: "0x368ce786ea190f32439074e8d22e12ecb718b44c",
    name: "Epik Prime [via ChainPort.io]",
    symbol: "EPIK"
  },
  {
    decimals: "18",
    id: "0x5012c90f14d190607662ca8344120812aaa2639d",
    name: "Penpie Token",
    symbol: "PNP"
  },
  {
    decimals: "18",
    id: "0x19a00e359990ec7daf6e9dd9a2fb7664014bb5f7",
    name: "Fintoch STO",
    symbol: "FTH"
  },
  {
    decimals: "18",
    id: "0xf98b660adf2ed7d9d9d9daacc2fb0cace4f21835",
    name: "Symbiosis",
    symbol: "SIS"
  },
  {
    decimals: "18",
    id: "0xbd2949f67dcdc549c6ebe98696449fa79d988a9f",
    name: "Wrapped MTRG on BSC by Meter.io",
    symbol: "MTRG"
  },
  {
    decimals: "18",
    id: "0x0409633a72d846fc5bbe2f98d88564d35987904d",
    name: "Phoenix Global",
    symbol: "PHB"
  },
  {
    decimals: "18",
    id: "0x3419875b4d3bca7f3fdda2db7a476a79fd31b4fe",
    name: "DizzyHavoc",
    symbol: "DZHV"
  },
  {
    decimals: "18",
    id: "0x5e2689412fae5c29bd575fbe1d5c1cd1e0622a8f",
    name: "HeroesTD",
    symbol: "HTD"
  },
  {
    decimals: "18",
    id: "0x8d279274789ccec8af94a430a5996eaace9609a9",
    name: "INSPECT",
    symbol: "INSP"
  },
  {
    decimals: "1",
    id: "0xa5957e0e2565dc93880da7be32abcbdf55788888",
    name: "ATM",
    symbol: "ATM"
  },
  {
    decimals: "18",
    id: "0xee81ca267b8357ba30049d679027ebf65fcf7458",
    name: "VOPO",
    symbol: "VOPO"
  },
  {
    decimals: "18",
    id: "0xbabacc135bbf2ce30f9c0f12665b244d3689a29c",
    name: "COSMIC FOMO",
    symbol: "COSMIC"
  },
  {
    decimals: "18",
    id: "0x68ae2f202799be2008c89e2100257e66f77da1f3",
    name: "Public Meme Token",
    symbol: "PMT"
  },
  {
    decimals: "18",
    id: "0x62823659d09f9f9d2222058878f89437425eb261",
    name: "ERTHA Token",
    symbol: "ERTHA"
  },
  {
    decimals: "18",
    id: "0xf03e02acbc5eb22de027ea4f59235966f5810d4f",
    name: "piinu",
    symbol: "pinu"
  },
  {
    decimals: "18",
    id: "0xa9d2c420247ae4fe7b694be75d5db10b20fe3ea8",
    name: "TCP",
    symbol: "TCP"
  },
  {
    decimals: "18",
    id: "0xa5f249f401ba8931899a364d8e2699b5fa1d87a9",
    name: "MAIN",
    symbol: "MAIN"
  },
  {
    decimals: "18",
    id: "0x00e1656e45f18ec6747f5a8496fd39b50b38396d",
    name: "Bomber Coin",
    symbol: "BCOIN"
  },
  {
    decimals: "18",
    id: "0xfe19f0b51438fd612f6fd59c1dbb3ea319f433ba",
    name: "Magic Internet Money",
    symbol: "MIM"
  },
  {
    decimals: "18",
    id: "0x31e4efe290973ebe91b3a875a7994f650942d28f",
    name: "SHRAPToken",
    symbol: "SHRAP"
  },
  {
    decimals: "18",
    id: "0x5b6bf0c7f989de824677cfbd507d9635965e9cd3",
    name: "Gamium",
    symbol: "GMM"
  },
  {
    decimals: "18",
    id: "0x1c45366641014069114c78962bdc371f534bc81c",
    name: "binancedog",
    symbol: "binancedog"
  },
  {
    decimals: "8",
    id: "0xdb5ee2a3d48f17a81bdcf513d6988ed430bbe7ab",
    name: "MHAPPY",
    symbol: "MHAPPY"
  },
  {
    decimals: "18",
    id: "0x16939ef78684453bfdfb47825f8a5f714f12623a",
    name: "Tezos Token",
    symbol: "XTZ"
  },
  {
    decimals: "18",
    id: "0x0cbd6fadcf8096cc9a43d90b45f65826102e3ece",
    name: "CheckDot",
    symbol: "CDT"
  },
  {
    decimals: "18",
    id: "0x299142a6370e1912156e53fbd4f25d7ba49ddcc5",
    name: "AI Meta Coin",
    symbol: "AMC"
  },
  {
    decimals: "18",
    id: "0x8581cc815e40615998f4561f3e24e68066293595",
    name: "Manta",
    symbol: "Manta"
  },
  {
    decimals: "18",
    id: "0x3a12a501b2bdcf86c9db0c22e9b117c54c0a4d31",
    name: "Official BVSD token v2",
    symbol: "BVSD"
  },
  {
    decimals: "18",
    id: "0xf2ba89a6f9670459ed5aeefbd8db52be912228b8",
    name: "Minter BIP",
    symbol: "BIPX"
  },
  {
    decimals: "18",
    id: "0x15669cf161946c09a8b207650bfbb00e3d8a2e3e",
    name: "JasmyCoin",
    symbol: "JASMY"
  },
  {
    decimals: "18",
    id: "0x50c34995a273075a80c23625f69f40d56ce414de",
    name: "SELF Crypto",
    symbol: "SELF"
  },
  {
    decimals: "18",
    id: "0x922722e9ef614ec9a3e94b78496e92abfbb5a624",
    name: "ILCAPO",
    symbol: "CAPO"
  },
  {
    decimals: "18",
    id: "0x5f4bde007dc06b867f86ebfe4802e34a1ffeed63",
    name: "Highstreet Token",
    symbol: "HIGH"
  },
  {
    decimals: "18",
    id: "0x7bd6fabd64813c48545c9c0e312a0099d9be2540",
    name: "Dogelon Mars",
    symbol: "ELON"
  },
  {
    decimals: "18",
    id: "0x56d06a78ef8e95d6043341f24759e2834be6f97b",
    name: "DegenZoo",
    symbol: "wDZOO"
  },
  {
    decimals: "6",
    id: "0xc9882def23bc42d53895b8361d0b1edc7570bc6a",
    name: "FistToken",
    symbol: "FIST"
  },
  {
    decimals: "18",
    id: "0x965f527d9159dce6288a2219db51fc6eef120dd1",
    name: "Biswap",
    symbol: "BSW"
  },
  {
    decimals: "18",
    id: "0xf4b5470523ccd314c6b9da041076e7d79e0df267",
    name: "BlockBank",
    symbol: "BBANK"
  },
  {
    decimals: "6",
    id: "0x9f8a75436e7e808f3fb348182e0ea42d2dd467cd",
    name: "S-Wallet Protocol",
    symbol: "SWP"
  },
  {
    decimals: "18",
    id: "0xe64e30276c2f826febd3784958d6da7b55dfbad3",
    name: "SwftCoin",
    symbol: "SWFTC"
  },
  {
    decimals: "18",
    id: "0xc636782a837feee37ccc29d58bdbb4bcbdd0ae1f",
    name: "Binance Cat",
    symbol: "POSEIDON"
  },
  {
    decimals: "18",
    id: "0x0000028a2eb8346cd5c0267856ab7594b7a55308",
    name: "Zeta",
    symbol: "ZETA"
  },
  {
    decimals: "18",
    id: "0xccd09b80453335aa914f5d9174984b6586c315ec",
    name: "DBXen Token on Binance",
    symbol: "bDXN"
  },
  {
    decimals: "18",
    id: "0xa910a46e2f2002fa9b5aa85f35b9440f6dac4b10",
    name: "Scorpion",
    symbol: "SCORP"
  },
  {
    decimals: "18",
    id: "0x070a08beef8d36734dd67a491202ff35a6a16d97",
    name: "Smooth Love Potion",
    symbol: "SLP"
  },
  {
    decimals: "18",
    id: "0x9e1170c12fddd3b00fec42ddf4c942565d9be577",
    name: "Space Token",
    symbol: "SPACE"
  },
  {
    decimals: "18",
    id: "0xd585a6213f7c582857306e1cc5f9d267b8106d7f",
    name: "Genesis1:11 Official",
    symbol: "GEN111"
  },
  {
    decimals: "18",
    id: "0xbf76dbf84b16da71366fc73cf8c19600449ce71a",
    name: "MIMBO",
    symbol: "MIMBO"
  },
  {
    decimals: "18",
    id: "0x715d400f88c167884bbcc41c5fea407ed4d2f8a0",
    name: "Axie Infinity Shard",
    symbol: "AXS"
  },
  {
    decimals: "18",
    id: "0xa1ed0bd9a4776830c5b7ba004f26427b71152ca5",
    name: "DUEL Token",
    symbol: "DUEL"
  },
  {
    decimals: "9",
    id: "0xac68931b666e086e9de380cfdb0fb5704a35dc2d",
    name: "Bnb Tiger Inu",
    symbol: "BNBTiger"
  },
  {
    decimals: "6",
    id: "0x5a7a15f8d5daeae4e5ba880451cddf64fa2fae6d",
    name: "Promise",
    symbol: "PROMISE"
  },
  {
    decimals: "18",
    id: "0x0c9bb15b32334bdaa7ad319fa356dd3e8e184564",
    name: "MarineMoguls",
    symbol: "MOGUL"
  },
  {
    decimals: "18",
    id: "0xde5bdcbd4d7dfa86e527fef9971bd6ca6a76eefb",
    name: "ivendPay",
    symbol: "IVPAY"
  },
  {
    decimals: "18",
    id: "0xb52575ce47c4534f7b0ba88acfba7546350197d8",
    name: "Perry The BNB",
    symbol: "PERRY"
  },
  {
    decimals: "18",
    id: "0xe02df9e3e622debdd69fb838bb799e3f168902c5",
    name: "BakeryToken",
    symbol: "BAKE"
  },
  {
    decimals: "18",
    id: "0x9879406c2ef6578ceb59009d64151ef3f225830b",
    name: "TraitSniper.com",
    symbol: "TS"
  },
  {
    decimals: "18",
    id: "0x98999aa1b0d17fb832fd509e13b67fe506513a6d",
    name: "BANUS",
    symbol: "BANUS"
  },
  {
    decimals: "18",
    id: "0x4bd17003473389a42daf6a0a729f6fdb328bbbd7",
    name: "VAI Stablecoin",
    symbol: "VAI"
  },
  {
    decimals: "18",
    id: "0x8f0a66bedd597a633b41626df04af9f41b304b48",
    name: "CoinStrat Token",
    symbol: "CST"
  },
  {
    decimals: "9",
    id: "0x8b1869f79b9abf52001314a2e6990a96f039058d",
    name: "Andy",
    symbol: "ANDY"
  },
  {
    decimals: "18",
    id: "0xc1d31db22afa8b8c9368836f99850477288bdde1",
    name: "BTCPanda",
    symbol: "BTCP"
  },
  {
    decimals: "18",
    id: "0x200f73aba0d6f8919086f64035ef900669ea2de2",
    name: "Cross-Chain DAO",
    symbol: "CCDAO"
  },
  {
    decimals: "18",
    id: "0x2532bf4a9e1c52dc2f579acfee38d74e26d43f45",
    name: "MIK Coin",
    symbol: "MIK"
  },
  {
    decimals: "18",
    id: "0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b",
    name: "TRON",
    symbol: "TRX"
  },
  {
    decimals: "18",
    id: "0x4db5a66e937a9f4473fa95b1caf1d1e1d62e29ea",
    name: "Wrapped Ether",
    symbol: "WETH"
  },
  {
    decimals: "18",
    id: "0xf3e5cc435bd2c13cc40894f97bdfdf5fb29ffc26",
    name: "Unite To Live Club",
    symbol: "UTLC"
  },
  {
    decimals: "12",
    id: "0x351da1e7500aba1d168b9435dce73415718d212f",
    name: "WEB3WAR Token",
    symbol: "FPS"
  },
  {
    decimals: "18",
    id: "0xd6edbb510af7901b2c049ce778b65a740c4aeb7f",
    name: "WARRIOR",
    symbol: "WOR"
  },
  {
    decimals: "6",
    id: "0x617cab4aaae1f8dfb3ee138698330776a1e1b324",
    name: "Artyfact",
    symbol: "ARTY"
  },
  {
    decimals: "18",
    id: "0x0173295183685f27c84db046b5f0bea3e683c24b",
    name: "Cat",
    symbol: "CAT"
  },
  {
    decimals: "18",
    id: "0x9d44c04ef10cbd4ba321e51a54f1354d0799feef",
    name: "MAR3 TOKEN",
    symbol: "MAR3"
  },
  {
    decimals: "18",
    id: "0x26433c8127d9b4e9b71eaa15111df99ea2eeb2f8",
    name: "Decentraland",
    symbol: "MANA"
  },
  {
    decimals: "18",
    id: "0x8cd161eaa9809596917c7ab0dfbc488da60fac1a",
    name: "ONEX PLUS TOKEN",
    symbol: "OXP"
  },
  {
    decimals: "18",
    id: "0x581fa684d0ec11ccb46b1d92f1f24c8a3f95c0ca",
    name: "mCake Token",
    symbol: "mCake"
  },
  {
    decimals: "18",
    id: "0x8eb05c38c1d92ff74fd941ab4f7a469a5cc2ca6a",
    name: "Bitcoin Classic",
    symbol: "BXC"
  },
  {
    decimals: "18",
    id: "0x872952d3c1caf944852c5adda65633f1ef218a26",
    name: "Liquid Crypto",
    symbol: "LQDX"
  },
  {
    decimals: "9",
    id: "0x840ef7e5f896be71d46df234c60898216fefcbe3",
    name: "Byte",
    symbol: "BYTE"
  },
  {
    decimals: "18",
    id: "0x0cc3754442d15aeeceafdc1f56624b592eb0bb99",
    name: "Turing-Ai",
    symbol: "TIC"
  },
  {
    decimals: "18",
    id: "0x2ad69e58071b95c047bf78dc804db3662275b64a",
    name: "Wizz Ecosystem Coin",
    symbol: "WEC"
  },
  {
    decimals: "2",
    id: "0x61efd49636b558ec4895a9f5d8273ab51dacea35",
    name: "CryptoClicker Game Token",
    symbol: "CLICKER"
  },
  {
    decimals: "18",
    id: "0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2",
    name: "DODO bird",
    symbol: "DODO"
  },
  {
    decimals: "18",
    id: "0xa2e3356610840701bdf5611a53974510ae27e2e1",
    name: "Wrapped Binance Beacon ETH",
    symbol: "wBETH"
  },
  {
    decimals: "18",
    id: "0x886640149e31e1430fa74cc39725431eb82ddfb2",
    name: "Forward",
    symbol: "$FORWARD"
  },
  {
    decimals: "18",
    id: "0x13a637026df26f846d55acc52775377717345c06",
    name: "SpaceY Token",
    symbol: "SPAY"
  },
  {
    decimals: "18",
    id: "0x9e02b86a56b208058e41f442222fffa6ebfbefd2",
    name: "BIOZ Gaming Token",
    symbol: "BIOZ"
  },
  {
    decimals: "18",
    id: "0xe069af87450fb51fc0d0e044617f1c134163e591",
    name: "Virtue Player Points",
    symbol: "VPP"
  },
  {
    decimals: "8",
    id: "0x67db74b6d1ea807cb47248489c99d144323d348d",
    name: "MMS COIN",
    symbol: "MMSC"
  },
  {
    decimals: "18",
    id: "0x3d04edc843e74935c09f54cc4b2fe1870e347ac9",
    name: "Curio Governance Token on BSC",
    symbol: "CGT"
  },
  {
    decimals: "18",
    id: "0x36d8d5de808aa7b0b7f543c8b3e25a1fdb09f912",
    name: "SizToken",
    symbol: "SIZ"
  },
  {
    decimals: "18",
    id: "0x11cd72f7a4b699c67f225ca8abb20bc9f8db90c7",
    name: "Osaka Protocol",
    symbol: "OSAK"
  },
  {
    decimals: "18",
    id: "0x44ec807ce2f4a6f2737a92e985f318d035883e47",
    name: "Hashflow",
    symbol: "HFT"
  },
  {
    decimals: "18",
    id: "0x52f24a5e03aee338da5fd9df68d2b6fae1178827",
    name: "Ankr Staked BNB",
    symbol: "ankrBNB"
  },
  {
    decimals: "18",
    id: "0x9f9f093bbc604916e38247a32c14147e565990da",
    name: "BSCat",
    symbol: "BSCAT"
  },
  {
    decimals: "18",
    id: "0x9bae1a6bd435cd0deb62e7517ea948b5eb6eb497",
    name: "Go Wrap",
    symbol: "GWGW"
  },
  {
    decimals: "18",
    id: "0xe77fddc622ca05b7791facb9176b3cb0a9ea905d",
    name: "USDe",
    symbol: "USDE"
  },
  {
    decimals: "9",
    id: "0xfa54ff1a158b5189ebba6ae130ced6bbd3aea76e",
    name: "Wrapped SOL",
    symbol: "SOL"
  },
  {
    decimals: "6",
    id: "0x7b3b1d7d4375e78e061b3a6782828c71d6a4d5d4",
    name: "BNBDoge",
    symbol: "BDOGE"
  },
  {
    decimals: "8",
    id: "0xb897d0a0f68800f8be7d69ffdd1c24b69f57bf3e",
    name: "Electra Protocol",
    symbol: "XEP"
  },
  {
    decimals: "0",
    id: "0xcde131f756176967b695c6090885d387f1337456",
    name: "UBIX-Peg UBX Token",
    symbol: "UBX"
  },
  {
    decimals: "18",
    id: "0xbf8bab33600d5bca18e4464e34c2a8d532031f5c",
    name: "OZONE",
    symbol: "OZONE"
  },
  {
    decimals: "18",
    id: "0x5857c96dae9cf8511b08cb07f85753c472d36ea3",
    name: "Fuse Token on BSC",
    symbol: "FUSE"
  },
  {
    decimals: "18",
    id: "0xc14a7747cfec02cfea62e72bb93538de6b2078e6",
    name: "Global Token",
    symbol: "GBL"
  },
  {
    decimals: "18",
    id: "0xec91cc1c33d44fe13b42150d2f1dfbeb668aef2e",
    name: "Ago-Defi",
    symbol: "AGO"
  },
  {
    decimals: "18",
    id: "0x3d6545b08693dae087e957cb1180ee38b9e3c25e",
    name: "Ethereum Classic",
    symbol: "ETC"
  },
  {
    decimals: "18",
    id: "0x833f307ac507d47309fd8cdd1f835bef8d702a93",
    name: "REVV",
    symbol: "REVV"
  },
  {
    decimals: "18",
    id: "0x30ef46ecfc7d047810c9143af60072adf18bf01b",
    name: "SAGA",
    symbol: "SAGA"
  },
  {
    decimals: "18",
    id: "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
    name: "Wootrade Network",
    symbol: "WOO"
  },
  {
    decimals: "18",
    id: "0x2ed9a5c8c13b93955103b9a7c167b67ef4d568a3",
    name: "Mask Network",
    symbol: "MASK"
  },
  {
    decimals: "18",
    id: "0x5b65cd9feb54f1df3d0c60576003344079f8dc06",
    name: "Uniwhale Token",
    symbol: "UNW"
  },
  {
    decimals: "18",
    id: "0x2d4c3f0cebe62f9af50fcb5361d66896271fd6a2",
    name: "MoonBox",
    symbol: "MON"
  },
  {
    decimals: "18",
    id: "0x762539b45a1dcce3d36d080f74d1aed37844b878",
    name: "Linear Token",
    symbol: "LINA"
  },
  {
    decimals: "18",
    id: "0x0f5d54b27bdb556823f96f2536496550f8816dc5",
    name: "RITE Coin",
    symbol: "RITE"
  },
  {
    decimals: "18",
    id: "0x61dc650c10ec3c758d251cd2d1ab45af1a43e941",
    name: "RangersProtocolGas",
    symbol: "RPG"
  },
  {
    decimals: "18",
    id: "0x604642b431edc7a036cab175adce1f40b6654fe0",
    name: "Gaming-T-Bot.com",
    symbol: "GTBOT"
  },
  {
    decimals: "8",
    id: "0xaff9084f2374585879e8b434c399e29e80cce635",
    name: "Flux",
    symbol: "FLUX"
  },
  {
    decimals: "18",
    id: "0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e",
    name: "Reef.finance",
    symbol: "REEF"
  },
  {
    decimals: "6",
    id: "0x15d1dafbcc97f606bd02120d170fdac33b1a4a86",
    name: "CashBackPro",
    symbol: "CBP"
  },
  {
    decimals: "18",
    id: "0xa9f978c02915246e435c0bda9785aaaad3cc46d2",
    name: "LIFEFORM Token",
    symbol: "LFT"
  },
  {
    decimals: "18",
    id: "0x1b5d63c517770a96f0e8b6ca6b127fe6e0131419",
    name: "UBC",
    symbol: "UBC"
  },
  {
    decimals: "18",
    id: "0xff44967f2e4ebe0b8c5b6812f25e1b9bcec70b34",
    name: "Zedxion",
    symbol: "Zedxion"
  },
  {
    decimals: "18",
    id: "0x74926b3d118a63f6958922d3dc05eb9c6e6e00c6",
    name: "DOGGY",
    symbol: "DOGGY"
  },
  {
    decimals: "18",
    id: "0xb67a0b57703a43e7e2dc5dbf9754979652916f17",
    name: "PFB Token",
    symbol: "PFB"
  },
  {
    decimals: "18",
    id: "0xb4357054c3da8d46ed642383f03139ac7f090343",
    name: "Port3 Network",
    symbol: "PORT3"
  },
  {
    decimals: "18",
    id: "0xa4080f1778e69467e905b8d6f72f6e441f9e9484",
    name: "Synapse",
    symbol: "SYN"
  },
  {
    decimals: "18",
    id: "0xad6742a35fb341a9cc6ad674738dd8da98b94fb1",
    name: "Wombat Token",
    symbol: "WOM"
  },
  {
    decimals: "4",
    id: "0xeca41281c24451168a37211f0bc2b8645af45092",
    name: "TokenPocket Token",
    symbol: "TPT"
  },
  {
    decimals: "18",
    id: "0x52242cbab41e290e9e17ccc50cc437bb60020a9d",
    name: "WrappedNCG",
    symbol: "WNCG"
  },
  {
    decimals: "9",
    id: "0xc748673057861a797275cd8a068abb95a902e8de",
    name: "Baby Doge Coin",
    symbol: "BabyDoge"
  },
  {
    decimals: "18",
    id: "0xf4c8e32eadec4bfe97e0f595add0f4450a863a11",
    name: "THENA",
    symbol: "THE"
  },
  {
    decimals: "18",
    id: "0x8c912fd6fe2b14c1bb1a19f663aa8afe3008c1cd",
    name: "XToMarsToken",
    symbol: "XTT"
  },
  {
    decimals: "18",
    id: "0x42dabca1af369fbd9e8ea286dafba45b23fc92d9",
    name: "BigTycoon",
    symbol: "BTYC"
  },
  {
    decimals: "18",
    id: "0x99aa29ac023057951781dc5d1784e9a4c362ce23",
    name: "Crowns",
    symbol: "CWS"
  },
  {
    decimals: "6",
    id: "0x5c9ac6cbadfb0900a17735c9ffaacd20c60cfc15",
    name: "DeMi",
    symbol: "DEMI"
  },
  {
    decimals: "18",
    id: "0xa35b5c783117e107644056f5d39faa468e9d8d47",
    name: "STARCK",
    symbol: "STK"
  },
  {
    decimals: "18",
    id: "0x5cc5e64ab764a0f1e97f23984e20fd4528356a6a",
    name: "XRGB",
    symbol: "XRGB"
  },
  {
    decimals: "18",
    id: "0x9521728bf66a867bc65a93ece4a543d817871eb7",
    name: "CreoEngine",
    symbol: "CREO"
  },
  {
    decimals: "8",
    id: "0xe4ca1f75eca6214393fce1c1b316c237664eaa8e",
    name: "Orion Protocol",
    symbol: "ORN"
  },
  {
    decimals: "18",
    id: "0x38e382f74dfb84608f3c1f10187f6bef5951de93",
    name: "MUBI",
    symbol: "MUBI"
  },
  {
    decimals: "18",
    id: "0xa184088a740c695e156f91f5cc086a06bb78b827",
    name: "AUTOv2",
    symbol: "AUTO"
  },
  {
    decimals: "8",
    id: "0x4d1e90ab966ae26c778b2f9f365aa40abb13f53c",
    name: "STA TOKEN",
    symbol: "STA"
  },
  {
    decimals: "6",
    id: "0xf9cec8d50f6c8ad3fb6dccec577e05aa32b224fe",
    name: "Chroma",
    symbol: "CHR"
  },
  {
    decimals: "18",
    id: "0xf00600ebc7633462bc4f9c61ea2ce99f5aaebd4a",
    name: "Wrapped ROSE",
    symbol: "wROSE"
  },
  {
    decimals: "18",
    id: "0xc2c07cd0f570ee77c05b4360982a38d0306c534a",
    name: "GPT-1 ALLBESTICO",
    symbol: "GPT-1"
  },
  {
    decimals: "18",
    id: "0xd8047afecb86e44eff3add991b9f063ed4ca716b",
    name: "Good Games Guild",
    symbol: "GGG"
  },
  {
    decimals: "5",
    id: "0x66109633715d2110dda791e64a7b2afadb517abb",
    name: "Game Coin [via ChainPort.io]",
    symbol: "GAME"
  },
  {
    decimals: "18",
    id: "0xf307910a4c7bbc79691fd374889b36d8531b08e3",
    name: "Ankr",
    symbol: "ANKR"
  },
  {
    decimals: "18",
    id: "0x755f34709e369d37c6fa52808ae84a32007d1155",
    name: "Nabox Token",
    symbol: "NABOX"
  },
  {
    decimals: "18",
    id: "0x5d37abafd5498b0e7af753a2e83bd4f0335aa89f",
    name: "WECOIN",
    symbol: "WECO"
  },
  {
    decimals: "18",
    id: "0xea89199344a492853502a7a699cc4230854451b8",
    name: "Onino",
    symbol: "ONI"
  },
  {
    decimals: "18",
    id: "0x545356d4d69d8cd1213ee7e339867574738751ca",
    name: "KTX Community Token",
    symbol: "KTC"
  },
  {
    decimals: "18",
    id: "0xf9c57fdf310ca6a5c34b15385cd8b18207ff7a74",
    name: "Artificial Intelligence",
    symbol: "AI"
  },
  {
    decimals: "18",
    id: "0x41b7d66d96a30d301be938adb8a6c18656109517",
    name: "BitBoost",
    symbol: "BOOST"
  },
  {
    decimals: "18",
    id: "0x1c50013e69efb68575773ba4a48013f1a4a1fb6c",
    name: "Universal Tokan",
    symbol: "UPIT"
  },
  {
    decimals: "18",
    id: "0x80137510979822322193fc997d400d5a6c747bf7",
    name: "StakeStone Ether",
    symbol: "STONE"
  },
  {
    decimals: "18",
    id: "0xa7bd657c5838472ddf85ff0797a2e6fce8fd4833",
    name: "Arbipad",
    symbol: "ARBI"
  },
  {
    decimals: "3",
    id: "0xe9d7023f2132d55cbd4ee1f78273cb7a3e74f10a",
    name: "DarkEnergyCrystals",
    symbol: "DEC"
  },
  {
    decimals: "9",
    id: "0x6d57f5c286e04850c2c085350f2e60aaa7b7c15b",
    name: "Grok Girl",
    symbol: "GrokGirl"
  },
  {
    decimals: "18",
    id: "0x937c73d59a26058f074428c0a7b1d31bd45f53d0",
    name: "JEFF",
    symbol: "JEFF"
  },
  {
    decimals: "6",
    id: "0x936b6659ad0c1b244ba8efe639092acae30dc8d6",
    name: "CO",
    symbol: "CO"
  },
  {
    decimals: "18",
    id: "0x9f46ecf92e7f6ee8c03f393adf04c2e17b8cd0b0",
    name: "TRUSTxGAMING",
    symbol: "TXG"
  },
  {
    decimals: "18",
    id: "0x41e025ea850bb4d0dcbb5b1f4353af099cbd026a",
    name: "FantasyGold",
    symbol: "FGC"
  },
  {
    decimals: "18",
    id: "0x045c4324039da91c52c55df5d785385aab073dcf",
    name: "BSC Conflux",
    symbol: "bCFX"
  },
  {
    decimals: "18",
    id: "0x4ace5cdb2aa47d1b2b8e4c4ca01bf6850a4b87b5",
    name: "DogeZilla",
    symbol: "ZILLA"
  },
  {
    decimals: "18",
    id: "0x7f70642d88cf1c4a3a7abb072b53b929b653eda5",
    name: "YFII.finance Token",
    symbol: "YFII"
  },
  {
    decimals: "18",
    id: "0xc762043e211571eb34f1ef377e5e8e76914962f9",
    name: "ApeCoin",
    symbol: "APE"
  },
  {
    decimals: "18",
    id: "0xf2250a2708a6c2cfa74c4a50754a61465484ce4f",
    name: "Golden Tiger Fund",
    symbol: "GTF"
  },
  {
    decimals: "18",
    id: "0x36c7b164f85d6f775cd128966d5819c7d36feff3",
    name: "OpenLive NFT",
    symbol: "OPV"
  },
  {
    decimals: "18",
    id: "0xe2dca969624795985f2f083bcd0b674337ba130a",
    name: "Saakuru",
    symbol: "SKR"
  },
  {
    decimals: "8",
    id: "0x12fc07081fab7de60987cad8e8dc407b606fb2f8",
    name: "Dark Token",
    symbol: "DARK"
  },
  {
    decimals: "18",
    id: "0x734548a9e43d2d564600b1b2ed5be9c2b911c6ab",
    name: "Meta Apes Peel",
    symbol: "PEEL"
  },
  {
    decimals: "18",
    id: "0xbe2b6c5e31f292009f495ddbda88e28391c9815e",
    name: "Level Governance Token",
    symbol: "LGO"
  },
  {
    decimals: "18",
    id: "0x815d5d6a1ee9cc25349769fd197dc739733b1485",
    name: "Unite To Live Home",
    symbol: "UTLH"
  },
  {
    decimals: "18",
    id: "0x6c13a45101bd70561daf6186da86d7bdb018754f",
    name: "DEWAE",
    symbol: "DEWAE"
  },
  {
    decimals: "18",
    id: "0xca6d678e74f553f0e59cccc03ae644a3c2c5ee7d",
    name: "PLANET",
    symbol: "PLANET"
  },
  {
    decimals: "18",
    id: "0xf574ba6bde97cc09784e616ebaed432b4e896b49",
    name: "VLaunch",
    symbol: "VPAD"
  },
  {
    decimals: "18",
    id: "0x772b609d3a8f2ebe1c1b8f87ebda2e462ec475f8",
    name: "GetFit Activity Mining",
    symbol: "GFAM"
  },
  {
    decimals: "18",
    id: "0x4df357fba8a681eca72e133bc1e63198ef611641",
    name: "Weiss Fuel Token",
    symbol: "WEFT"
  },
  {
    decimals: "9",
    id: "0xa2c17a6fd0afe27afa2630a7528bc673089e6b8d",
    name: "CZ THE GOAT",
    symbol: "CZGOAT"
  },
  {
    decimals: "18",
    id: "0xbd7b8e4de08d9b01938f7ff2058f110ee1e0e8d4",
    name: "GamerCoin",
    symbol: "GHX"
  },
  {
    decimals: "18",
    id: "0x7f9ac38cd691bfc0a37040be3dd4ec424f8ee377",
    name: "Decentralized World Bank",
    symbol: "DWB"
  },
  {
    decimals: "18",
    id: "0x96dd399f9c3afda1f194182f71600f1b65946501",
    name: "Contentos",
    symbol: "COS"
  },
  {
    decimals: "18",
    id: "0x0104f019c8889bdabc62ae6c7b84f6f2ed351133",
    name: "STX COIN",
    symbol: "STX"
  },
  {
    decimals: "18",
    id: "0xd773affb89f9dbef8b1bcd2003a9de421f979416",
    name: "LendrR",
    symbol: "LNDRr"
  },
  {
    decimals: "18",
    id: "0x58730ae0faa10d73b0cddb5e7b87c3594f7a20cb",
    name: "ERC20",
    symbol: "ERC20"
  },
  {
    decimals: "8",
    id: "0x9b208b117b2c4f76c1534b6f006b033220a681a4",
    name: "Wrapped Dingocoin",
    symbol: "wDingocoin"
  },
  {
    decimals: "6",
    id: "0xac51066d7bec65dc4589368da368b212745d63e8",
    name: "ALICE",
    symbol: "ALICE"
  },
  {
    decimals: "18",
    id: "0x6a8fd46f88dbd7bdc2d536c604f811c63052ce0f",
    name: "TRVL",
    symbol: "TRVL"
  },
  {
    decimals: "18",
    id: "0x39ac82d1a6d87be085cb5c70ebec0f99af6b3829",
    name: "KITCATS",
    symbol: "KITCATS"
  },
  {
    decimals: "18",
    id: "0xeb65741d6d4fb463d529539716387eecdea403a4",
    name: "zkFish",
    symbol: "FISH"
  },
  {
    decimals: "18",
    id: "0x27c073e8427aa493a90b8dc8b73a89e670fd77bb",
    name: "Radpie",
    symbol: "RDP"
  },
  {
    decimals: "18",
    id: "0x69bfa36d50d92e8985d27e6aa6e685c0325ce7b4",
    name: "Cryptorg",
    symbol: "CTG"
  },
  {
    decimals: "18",
    id: "0x4c882ec256823ee773b25b414d36f92ef58a7c0c",
    name: "pStake Finance",
    symbol: "PSTAKE"
  },
  {
    decimals: "8",
    id: "0x83850d97018f665eb746fbb8f18351e977d1b0d6",
    name: "Star Atlas",
    symbol: "ATLAS"
  },
  {
    decimals: "18",
    id: "0x9767c8e438aa18f550208e6d1fdf5f43541cc2c8",
    name: "Mango Man Intelligent",
    symbol: "MMIT"
  },
  {
    decimals: "18",
    id: "0x1bdd3cf7f79cfb8edbb955f20ad99211551ba275",
    name: "Liquid Staking BNB",
    symbol: "BNBx"
  },
  {
    decimals: "18",
    id: "0x259b30c916e440fb79747cd559207ffdabbae057",
    name: "OVN",
    symbol: "OVN"
  },
  {
    decimals: "18",
    id: "0x4027d91ecd3140e53ae743d657549adfeebb27ab",
    name: "Chain of Legends Token",
    symbol: "CLEG"
  },
  {
    decimals: "2",
    id: "0x66207e39bb77e6b99aab56795c7c340c08520d83",
    name: "Rupiah Token",
    symbol: "IDRT"
  },
  {
    decimals: "18",
    id: "0x90c97f71e18723b0cf0dfa30ee176ab653e89f40",
    name: "Frax",
    symbol: "FRAX"
  },
  {
    decimals: "18",
    id: "0x24b4440c60b512eadd0d093367a46dbbe2f6540e",
    name: "Global Currency Reserve",
    symbol: "GCR"
  },
  {
    decimals: "18",
    id: "0x6d6ba21e4c4b29ca7bfa1c344ba1e35b8dae7205",
    name: "Katana Inu",
    symbol: "KATA"
  },
  {
    decimals: "18",
    id: "0xe55d97a97ae6a17706ee281486e98a84095d8aaf",
    name: "AIPAD.tech",
    symbol: "AIPAD"
  },
  {
    decimals: "18",
    id: "0x2728c49f42f4ac5a38da0080b27ded5ec04b05cc",
    name: "To the Moon",
    symbol: "TTM"
  },
  {
    decimals: "6",
    id: "0x073690e6ce25be816e68f32dca3e11067c9fb5cc",
    name: "Kujira native asset",
    symbol: "KUJI"
  },
  {
    decimals: "18",
    id: "0xc2eaaf69e6439abab12dd21f560ba0ec7f17cff7",
    name: "Pepe Original Version",
    symbol: "$POV"
  },
  {
    decimals: "18",
    id: "0xadbaf88b39d37dc68775ed1541f1bf83a5a45feb",
    name: "COTI Token",
    symbol: "COTI"
  },
  {
    decimals: "10",
    id: "0x7b56748a3ef9970a5bae99c58ad8bc67b26c525f",
    name: "Chappyz",
    symbol: "CHAPZ"
  },
  {
    decimals: "18",
    id: "0xdc7da87115d4464e8aac99920a533d401bf72a50",
    name: "Ice Coin",
    symbol: "ICE"
  },
  {
    decimals: "18",
    id: "0xed376501f61046a3f43dac6d5ab51a700dda46fc",
    name: "Cannation",
    symbol: "CNNC"
  },
  {
    decimals: "4",
    id: "0x2222227e22102fe3322098e4cbfe18cfebd57c95",
    name: "Alien Worlds Trilium",
    symbol: "TLM"
  },
  {
    decimals: "18",
    id: "0x248d995f14deebb179a222cd36c4767388545a62",
    name: "Astrafer",
    symbol: "ASTRAFER"
  },
  {
    decimals: "8",
    id: "0x5e57f24415f37c7d304e85df9b4c36bc08789794",
    name: "Barter BEP20",
    symbol: "BRTR"
  },
  {
    decimals: "18",
    id: "0xb43ac9a81eda5a5b36839d5b6fc65606815361b0",
    name: "Senspark",
    symbol: "SEN"
  },
  {
    decimals: "18",
    id: "0x0669538fcdef9a73cd37938eba8c79e652bb93aa",
    name: "SCPT - Script Network",
    symbol: "SCPT"
  },
  {
    decimals: "18",
    id: "0x43c934a845205f0b514417d757d7235b8f53f1b9",
    name: "Stellar",
    symbol: "XLM"
  },
  {
    decimals: "18",
    id: "0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c",
    name: "Dusk Network",
    symbol: "DUSK"
  },
  {
    decimals: "18",
    id: "0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18",
    name: "Band Protocol Token",
    symbol: "BAND"
  },
  {
    decimals: "18",
    id: "0xf339e8c294046e6e7ef6ad4f6fa9e202b59b556b",
    name: "Battle of Guardians Share",
    symbol: "BGS"
  },
  {
    decimals: "8",
    id: "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8",
    name: "Wrapped Metrix",
    symbol: "MRXb"
  },
  {
    decimals: "18",
    id: "0x40c8225329bd3e28a043b029e0d07a5344d2c27c",
    name: "AgeOfGods",
    symbol: "AOG"
  },
  {
    decimals: "18",
    id: "0x567351e802f52ca60b2ac9d61d5b538e9582e78d",
    name: "Shitcoin",
    symbol: "Shit"
  },
  {
    decimals: "18",
    id: "0x12e34cdf6a031a10fe241864c32fb03a4fdad739",
    name: "FREE coin BSC",
    symbol: "FREE"
  },
  {
    decimals: "18",
    id: "0x613e18f13391cd4bfedf8a904991077c7ef29ee6",
    name: "ALLBESTICO.com",
    symbol: "ALLBI"
  },
  {
    decimals: "18",
    id: "0xc47b0443f8608943c596168504bb6d4a062e0edc",
    name: "LACOSTOKEN",
    symbol: "LCSN"
  },
  {
    decimals: "18",
    id: "0x22514ffb0d7232a56f0c24090e7b68f179faa940",
    name: "QORPO Token",
    symbol: "QORPO"
  },
  {
    decimals: "6",
    id: "0x23ce9e926048273ef83be0a3a8ba9cb6d45cd978",
    name: "Dalarnia",
    symbol: "DAR"
  },
  {
    decimals: "18",
    id: "0xc53ca0d56c420e8f913316e84d2c492ede99c61e",
    name: "GROK",
    symbol: "GROK"
  },
  {
    decimals: "18",
    id: "0x2416092f143378750bb29b79ed961ab195cceea5",
    name: "Renzo Restaked ETH",
    symbol: "ezETH"
  },
  {
    decimals: "18",
    id: "0x591aa8039414f5fbc713913ecadb21e8e6d14913",
    name: "Fintoch Chain",
    symbol: "FTC"
  },
  {
    decimals: "18",
    id: "0x90b6496b6a87c14bd0385384346848c8554ea2cc",
    name: "Pancake LPs",
    symbol: "Cake-LP"
  },
  {
    decimals: "18",
    id: "0xdbe42cbf345afd9dd6a76eaeb12bde09454eb3a7",
    name: "tFTC",
    symbol: "tFTC"
  },
  {
    decimals: "18",
    id: "0xa80221d067603e30060f75e2458aa361f8ee5402",
    name: "Rebase",
    symbol: "IRL"
  },
  {
    decimals: "18",
    id: "0xeca19f3079009b7dfa626313e74c807d05bd8603",
    name: "Pancake LPs",
    symbol: "Cake-LP"
  },
  {
    decimals: "18",
    id: "0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe",
    name: "Elrond",
    symbol: "EGLD"
  },
  {
    decimals: "18",
    id: "0xc45de8ab31140e9ced1575ec53ffffa1e3062576",
    name: "Mad Viking Games",
    symbol: "MVG"
  },
  {
    decimals: "9",
    id: "0xbb2826ab03b6321e170f0558804f2b6488c98775",
    name: "Baby Bonk",
    symbol: "BabyBonk"
  },
  {
    decimals: "18",
    id: "0x818835503f55283cd51a4399f595e295a9338753",
    name: "AGI Token",
    symbol: "AGI"
  },
  {
    decimals: "8",
    id: "0xaa9e582e5751d703f85912903bacaddfed26484c",
    name: "Hacken Token",
    symbol: "HAI"
  },
  {
    decimals: "18",
    id: "0x59a780443b607499802e719b85ad4f964061b11e",
    name: "BTCP",
    symbol: "BTCP"
  },
  {
    decimals: "18",
    id: "0x382cefb55d3e06c1be985c599d55f0393ee5e6a3",
    name: "Vapor Token",
    symbol: "VPR"
  },
  {
    decimals: "18",
    id: "0x854a63b35b70a7becbed508ff0b6ff5038d0c917",
    name: "Minato",
    symbol: "MNTO"
  },
  {
    decimals: "18",
    id: "0xd21d29b38374528675c34936bf7d5dd693d2a577",
    name: "Parsiq Token",
    symbol: "PRQ"
  },
  {
    decimals: "8",
    id: "0xe7cb24f449973d5b3520e5b93d88b405903c75fb",
    name: "BNbitcoin Token - minable bitcoin on BSC",
    symbol: "BNBTC"
  },
  {
    decimals: "18",
    id: "0x1b9ede0e48d661aa2f1215a5b79c3727cf7fa461",
    name: "FTC",
    symbol: "FTC"
  },
  {
    decimals: "18",
    id: "0xa86a86b8acdc55812bec2971a2fc8a989455858c",
    name: "DSFS Coin",
    symbol: "DSC"
  },
  {
    decimals: "18",
    id: "0xf0fd0ada41ef2cb88a83b0301d451cc6e4ba054c",
    name: "COMMUNITY CRYPTO ID",
    symbol: "CCID"
  },
  {
    decimals: "18",
    id: "0x72dcf845ae36401e82e681b0e063d0703bac0bba",
    name: "Pancake LPs",
    symbol: "Cake-LP"
  },
  {
    decimals: "18",
    id: "0xd9483ea7214fcfd89b4fb8f513b544920e315a52",
    name: "AVA",
    symbol: "AVA"
  },
  {
    decimals: "18",
    id: "0xc51c05b7ea1147a9c846136a6f64358db4d6548e",
    name: "EVOLUTION MULTY GAME",
    symbol: "EVO"
  },
  {
    decimals: "6",
    id: "0x5c4bcc4dbaeabc7659f6435bce4e659314ebad87",
    name: "NuNet Utility Token",
    symbol: "NTX"
  },
  {
    decimals: "18",
    id: "0x9ab70e92319f0b9127df78868fd3655fb9f1e322",
    name: "WeWay Token",
    symbol: "WWY"
  },
  {
    decimals: "18",
    id: "0xbd3a8855d899a7c3bde08e1a893fd44e362fc728",
    name: "Escroco Emerald",
    symbol: "ESCE"
  },
  {
    decimals: "0",
    id: "0xccb39e9566fdec731feb4be50706e975078cd173",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "0",
    id: "0x967309e0c9b1c44c613edc57f8dc12fce250a603",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0xd61ec800066d4b8b1b3609ef91d50817193e6056",
    name: "impactMarket",
    symbol: "PACT"
  },
  {
    decimals: "18",
    id: "0xaaa9214f675316182eaa21c85f0ca99160cc3aaa",
    name: "QANX Token",
    symbol: "QANX"
  },
  {
    decimals: "18",
    id: "0x7552742dfccc8d0b13463ec93d259a3d87249a2d",
    name: "RickCoin",
    symbol: "Rick"
  },
  {
    decimals: "18",
    id: "0xd9c7d2d9347f6e5a9c9c9fb640e963e102a83181",
    name: "Neiro",
    symbol: "NEIRO"
  },
  {
    decimals: "18",
    id: "0x1a131f7b106d58f33eaf0fe5b47db2f2045e5732",
    name: "DegenReborn Token",
    symbol: "DEGEN"
  },
  {
    decimals: "18",
    id: "0xca7661ba64a7667e3006c421c181502d545d1911",
    name: "ARAW",
    symbol: "ARAW"
  },
  {
    decimals: "18",
    id: "0x301f02cbd81c2653bcd72a9d443da136d3b1b1b1",
    name: "BIBI",
    symbol: "BIBI"
  },
  {
    decimals: "18",
    id: "0xab5cd36302d83ad5e524a67578ae27beefdd4fc0",
    name: "Pagadi",
    symbol: "PAD"
  },
  {
    decimals: "18",
    id: "0xc9dccbb27d712494c99c20702fa87bd591f5f8ce",
    name: "binancecat",
    symbol: "binancecat"
  },
  {
    decimals: "18",
    id: "0x250632378e573c6be1ac2f97fcdf00515d0aa91b",
    name: "Binance Beacon ETH",
    symbol: "BETH"
  },
  {
    decimals: "18",
    id: "0x567556a7493fb7a22d2fd158dd4c766a98705f96",
    name: "Wrapped ZEDXION from ZEDX",
    symbol: "WZEDX"
  },
  {
    decimals: "18",
    id: "0x35bedbf9291b22218a0da863170dcc9329ef2563",
    name: "TAP Coin",
    symbol: "TAP"
  },
  {
    decimals: "18",
    id: "0x87a2d9a9a6b2d61b2a57798f1b4b2ddd19458fb6",
    name: "KDG Token",
    symbol: "KDG"
  },
  {
    decimals: "18",
    id: "0xf78d2e7936f5fe18308a3b2951a93b6c4a41f5e2",
    name: "MANTRA DAO",
    symbol: "OM"
  },
  {
    decimals: "18",
    id: "0xfc15a884471163f2dac5169159b04f1e9d6b1698",
    name: "ZGL",
    symbol: "ZGL"
  },
  {
    decimals: "18",
    id: "0xf8455cf9bcc672f9dd5539c44430eb7542a0dcb1",
    name: "GROK ALLBESTICO",
    symbol: "GROK"
  },
  {
    decimals: "18",
    id: "0x3862b022f0db84c11aa2c0df9f587f2ceb8dfc2e",
    name: "Trans Pepe",
    symbol: "TRANS"
  },
  {
    decimals: "18",
    id: "0x07715ee7219b07b8e01cc7d2787f4e5e75860383",
    name: "Stake DAO Token",
    symbol: "SDT"
  },
  {
    decimals: "18",
    id: "0x657ef7af0fffc7ac913a0492150060935b668f2c",
    name: "Walken",
    symbol: "WLKN"
  },
  {
    decimals: "18",
    id: "0xdd325c38b12903b727d16961e61333f4871a70e0",
    name: "Elephant Money Stable",
    symbol: "TRUNK"
  },
  {
    decimals: "18",
    id: "0x471bb4ccec146de565ba6339beb2bc86f9bff514",
    name: "Trollmp",
    symbol: "TROLLMP"
  },
  {
    decimals: "18",
    id: "0x837a130aed114300bab4f9f1f4f500682f7efd48",
    name: "WeSendit",
    symbol: "WSI"
  },
  {
    decimals: "18",
    id: "0x44f5909e97e1cbf5fbbdf0fc92fd83cde5d5c58a",
    name: "Acria Token",
    symbol: "ACRIA"
  },
  {
    decimals: "18",
    id: "0x5f0da599bb2cccfcf6fdfd7d81743b6020864350",
    name: "Maker",
    symbol: "MKR"
  },
  {
    decimals: "18",
    id: "0xd1cb0f34a7924328bc2e7961a17209c54f17cfe6",
    name: "BitTV Coin",
    symbol: "BTV"
  },
  {
    decimals: "18",
    id: "0x143d7a700a533b4baf6d693449b278a8a2f5927d",
    name: "sats",
    symbol: "sats"
  },
  {
    decimals: "4",
    id: "0x37807d4fbeb84124347b8899dd99616090d3e304",
    name: "Ethereum-bridged Lunr Token",
    symbol: "eLunr"
  },
  {
    decimals: "18",
    id: "0x4cd6aff304711810c48233908bdc94aff7d2d66f",
    name: "Cryptrump",
    symbol: "Cryptrump"
  },
  {
    decimals: "18",
    id: "0x6a1c1447f97b27da23dc52802f5f1435b5ac821a",
    name: "Stake DAO CAKE",
    symbol: "sdCAKE"
  },
  {
    decimals: "18",
    id: "0xde6e12bdb2062dc48b409f0086219464a0c317a0",
    name: "NIAO",
    symbol: "NIAO"
  },
  {
    decimals: "18",
    id: "0x928e55dab735aa8260af3cedada18b5f70c72f1b",
    name: "Frontier Token",
    symbol: "FRONT"
  },
  {
    decimals: "18",
    id: "0xff2aec2dfd8978eebf9bc036ab820e0350acf28b",
    name: "$50 Renda Niki",
    symbol: "$50"
  },
  {
    decimals: "18",
    id: "0x9d1d4de9cd93203147fac3bc0262a78e3a0e96bb",
    name: "Playbux",
    symbol: "PBUX"
  },
  {
    decimals: "18",
    id: "0x9678e42cebeb63f23197d726b29b1cb20d0064e5",
    name: "IoTeX Network",
    symbol: "IOTX"
  },
  {
    decimals: "18",
    id: "0x6d656793f97ae4e601cea1ae86f15198b7b22728",
    name: "GPT COIN",
    symbol: "GPT"
  },
  {
    decimals: "18",
    id: "0xefb5df8eb84055026018030e71bc2cdfa2f138b9",
    name: "Carbon",
    symbol: "CARBON"
  },
  {
    decimals: "18",
    id: "0xcf8847dca5e97e723792e6fc6410c2c29bd22e5c",
    name: "GWCTOKEN",
    symbol: "GWC"
  },
  {
    decimals: "18",
    id: "0xb2192a2829a5220bafd5b0a67f3328e209887bee",
    name: "GETA TOKEN",
    symbol: "GETA"
  },
  {
    decimals: "18",
    id: "0xa2dd9651f54320022af562ce5b25aea69b3b444c",
    name: "PAPA BEAR",
    symbol: "PAPA"
  },
  {
    decimals: "0",
    id: "0xdde5b33a56f3f1c22e5a6bd8429e6ad508bff24e",
    name: "VNDC",
    symbol: "VNDC"
  },
  {
    decimals: "18",
    id: "0xa325ad6d9c92b55a3fc5ad7e412b1518f96441c0",
    name: "Oraichain Token",
    symbol: "ORAI"
  },
  {
    decimals: "18",
    id: "0x9ce84f6a69986a83d92c324df10bc8e64771030f",
    name: "Chintai Exchange Token",
    symbol: "CHEX"
  },
  {
    decimals: "18",
    id: "0x7d8645416bda255007d1afd326e4b030639e4958",
    name: "AI-Powered Virtual World",
    symbol: "AIVIR"
  },
  {
    decimals: "18",
    id: "0x01ee9c2ec468236368dab097babaea4875fb4f81",
    name: "Trust",
    symbol: "STV"
  },
  {
    decimals: "6",
    id: "0x637c2173f6e678ac3c9b43b6665c760dc6021c13",
    name: "worldmobiletoken",
    symbol: "WMT"
  },
  {
    decimals: "18",
    id: "0x555a29d0e0e00d573a63fb11dc37b61a9da52f86",
    name: "Cat Life",
    symbol: "CATLIFE"
  },
  {
    decimals: "18",
    id: "0xe48a3d7d0bc88d552f730b62c006bc925eadb9ee",
    name: "Frax Share",
    symbol: "FXS"
  },
  {
    decimals: "18",
    id: "0xc79d1fd14f514cd713b5ca43d288a782ae53eab2",
    name: "XcelDefi",
    symbol: "XLD"
  },
  {
    decimals: "18",
    id: "0x7e9ab560d37e62883e882474b096643cab234b65",
    name: "Ultimate Champions Token",
    symbol: "CHAMP"
  },
  {
    decimals: "18",
    id: "0x29b6839d7136a0f44e4c5636ee059b5ef5b757b7",
    name: "PP",
    symbol: "PP"
  },
  {
    decimals: "18",
    id: "0x0c27f037074178267d89f68ca32bc4ffd1901927",
    name: "Bin4nce",
    symbol: "Bin4nce"
  },
  {
    decimals: "18",
    id: "0x0c9ad20802e89bea858ae2e8594843fafa887cb3",
    name: "Grow Token",
    symbol: "GROW"
  },
  {
    decimals: "18",
    id: "0xa045e37a0d1dd3a45fefb8803d22457abc0a728a",
    name: "Grizzly Honey",
    symbol: "GHNY"
  },
  {
    decimals: "18",
    id: "0x29c55f1b02a95f0b30e61976835a3eee2359ad92",
    name: "ESHARE V2",
    symbol: "ESHARE"
  },
  {
    decimals: "18",
    id: "0x1796ae0b0fa4862485106a0de9b654efe301d0b2",
    name: "Polkamon",
    symbol: "PMON"
  },
  {
    decimals: "18",
    id: "0x5c999e15b71de2bb8e651f0f999fb0bc321a0dfe",
    name: "ZedDex",
    symbol: "ZED"
  },
  {
    decimals: "18",
    id: "0xa6c59de838f1eeb82d86f5af0750f5f656439999",
    name: "ShopNEXT Loyalty Token",
    symbol: "NEXT"
  },
  {
    decimals: "18",
    id: "0x08801120ab610f42eaa5c573112eec68c19cbd9c",
    name: "HbToken",
    symbol: "HB"
  },
  {
    decimals: "18",
    id: "0xfc8774321ee4586af183baca95a8793530056353",
    name: "LONG",
    symbol: "LONG"
  },
  {
    decimals: "18",
    id: "0xe29142e14e52bdfbb8108076f66f49661f10ec10",
    name: "SeilorToken",
    symbol: "SEILOR"
  },
  {
    decimals: "18",
    id: "0xc05db54f680527fb105b36ae4b1bbcafdd7b7518",
    name: "ADI Coin",
    symbol: "ADI"
  },
  {
    decimals: "18",
    id: "0x72f74fb5382a7a49b5c6e8437a04d65bf2ff5736",
    name: "Wrapped Ruble",
    symbol: "WRUB"
  },
  {
    decimals: "18",
    id: "0x2288ae34a0ea59219e53755eb24a27a313689d9a",
    name: "Housing_and_Crypto_Finance",
    symbol: "HCF"
  },
  {
    decimals: "18",
    id: "0x47c454ca6be2f6def6f32b638c80f91c9c3c5949",
    name: "Games For A Living",
    symbol: "GFAL"
  },
  {
    decimals: "18",
    id: "0xd691d9a68c887bdf34da8c36f63487333acfd103",
    name: "Maverick Token",
    symbol: "MAV"
  },
  {
    decimals: "18",
    id: "0xb92c5e0135a510a4a3a8803f143d2cb085bbaf73",
    name: "Metaverser Token",
    symbol: "mtvt"
  },
  {
    decimals: "8",
    id: "0xbc7d6b50616989655afd682fb42743507003056d",
    name: "Alchemy",
    symbol: "ACH"
  },
  {
    decimals: "18",
    id: "0x101d82428437127bf1608f699cd651e6abf9766e",
    name: "Basic Attention Token",
    symbol: "BAT"
  },
  {
    decimals: "18",
    id: "0xf48f91df403976060cc05dbbf8a0901b09fdefd4",
    name: "Minu",
    symbol: "MINU"
  },
  {
    decimals: "18",
    id: "0x27f16d9a5095b763baeadd7dd78e83288af29cf4",
    name: "YOUR AI",
    symbol: "YOURAI"
  },
  {
    decimals: "18",
    id: "0x947950bcc74888a40ffa2593c5798f11fc9124c4",
    name: "SushiToken",
    symbol: "SUSHI"
  },
  {
    decimals: "18",
    id: "0x5bc4e94ce63c5470515cbddc903f813580a2a08d",
    name: "ENTER",
    symbol: "ENTER"
  },
  {
    decimals: "8",
    id: "0xcbfb0d98151d03ef8bb71fa668f57df5e3fb4673",
    name: "Wrapped Dash",
    symbol: "wDASH"
  },
  {
    decimals: "8",
    id: "0xcbbb3e5099f769f6d4e2b8b92dc0e268f7e099d8",
    name: "Wrapped BitcoinZ",
    symbol: "wBTCZ"
  },
  {
    decimals: "5",
    id: "0x64cf1e2cab86694ac8b31653460faa47a68f59f0",
    name: "GamesCoin",
    symbol: "GC"
  },
  {
    decimals: "18",
    id: "0x9f589e3eabe42ebc94a44727b3f3531c0c877809",
    name: "Tokocrypto Token",
    symbol: "TKO"
  },
  {
    decimals: "6",
    id: "0x0034719300501b06e10ebb1d07ea5967301f0941",
    name: "Governance xAlgo",
    symbol: "xALGO"
  },
  {
    decimals: "0",
    id: "0xe00c5e5e38a77d11ef53e0e42280fe83b4e27a62",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0x083dcb9df5453bb81f73dd9df5fa81b128035a29",
    name: "Argent",
    symbol: "ARG"
  },
  {
    decimals: "18",
    id: "0x0112e557d400474717056c4e6d40edd846f38351",
    name: "Phala Network",
    symbol: "PHA"
  },
  {
    decimals: "18",
    id: "0x20de22029ab63cf9a7cf5feb2b737ca1ee4c82a6",
    name: "Chess",
    symbol: "CHESS"
  },
  {
    decimals: "18",
    id: "0x307bc76e3d59ed73886a9cf9360a9286f6281ba7",
    name: "LimeWire Token",
    symbol: "LMWR"
  },
  {
    decimals: "18",
    id: "0xa177bdd433aea3702beb46652adcfc64248d4ab3",
    name: "Probinex Token",
    symbol: "PBX"
  },
  {
    decimals: "18",
    id: "0x8048517e2a46eab4a6aeb98c709ed69483f04d83",
    name: "Meta Angel Token",
    symbol: "MAT"
  },
  {
    decimals: "18",
    id: "0xb51d09b75193c35c1eb72d5714453a04051a80bc",
    name: "WebMind Network",
    symbol: "WMN"
  },
  {
    decimals: "18",
    id: "0x52ce071bd9b1c4b00a0b92d298c512478cad67e8",
    name: "Compound Coin",
    symbol: "COMP"
  },
  {
    decimals: "18",
    id: "0x9ac983826058b8a9c7aa1c9171441191232e8404",
    name: "Synthetix Network Token",
    symbol: "SNX"
  },
  {
    decimals: "18",
    id: "0xc2e9d07f66a89c44062459a47a0d2dc038e4fb16",
    name: "Staked BNB",
    symbol: "stkBNB"
  },
  {
    decimals: "18",
    id: "0x2068dfb5adc68dcf82ae8d91befe23f00ea0dc27",
    name: "WHY2.0",
    symbol: "WHY2.0"
  },
  {
    decimals: "18",
    id: "0xeb880acb83c63ea3eab4baae9693dc5dd9d324a3",
    name: "ScriptToken",
    symbol: "SCPT"
  },
  {
    decimals: "18",
    id: "0xb0a1c87b890fe171371f81a59f7ed4636e82595d",
    name: "RealWorldX",
    symbol: "RWX"
  },
  {
    decimals: "18",
    id: "0x0d37dea32d5ba45c1e19f620aa4f61f1ffd8d2fa",
    name: "LOP Token",
    symbol: "LOP"
  },
  {
    decimals: "8",
    id: "0xa64455a4553c9034236734faddaddbb64ace4cc7",
    name: "FC Santos Fan Token",
    symbol: "SANTOS"
  },
  {
    decimals: "18",
    id: "0x3d36685d91b060fb0351401f27ee058311fb00c1",
    name: "Costco Hot Dog",
    symbol: "COST"
  },
  {
    decimals: "18",
    id: "0x668db7aa38eac6b40c9d13dbe61361dc4c4611d1",
    name: "Measurable Data Token",
    symbol: "MDT"
  },
  {
    decimals: "18",
    id: "0x859c940f080b197659b3effc804fd622df66f0a1",
    name: "Fitburn",
    symbol: "CAL"
  },
  {
    decimals: "18",
    id: "0xddb341e88bb2dd7cb56e3c62991c5ad3911518cc",
    name: "CC",
    symbol: "CC"
  },
  {
    decimals: "18",
    id: "0xcdb96d3aef363a036c6cf6c9b5736d79f0e404e2",
    name: "InpulseX",
    symbol: "IPX"
  },
  {
    decimals: "18",
    id: "0x7e60c74b9096f8fa6fb5a9fd88405ded8b7d44f3",
    name: "INFIBLUE WORLD",
    symbol: "MONIE"
  },
  {
    decimals: "18",
    id: "0x991b4ce57864060115700d6fc05c7780346a15ac",
    name: "Y8U.AI",
    symbol: "Y8U"
  },
  {
    decimals: "18",
    id: "0xdebd6e2da378784a69dc6ec99fe254223b312287",
    name: "DESIGNER TOKEN",
    symbol: "EXIT"
  },
  {
    decimals: "8",
    id: "0x6d96c6c401423a23945c03bc8c42e7f82d24b9e0",
    name: "Freebnk",
    symbol: "FRBK"
  },
  {
    decimals: "18",
    id: "0x8789337a176e6e7223ff115f1cd85c993d42c25c",
    name: "Copiosa Coin",
    symbol: "COP"
  },
  {
    decimals: "18",
    id: "0xcf1b55d79e824da0ae0652f96c66fe33263d743f",
    name: "MixMarvel Token",
    symbol: "MIX"
  },
  {
    decimals: "18",
    id: "0xeaf0acd7fe39f2ea5ac52b0a8c20d3878082cc36",
    name: "Donkey Kong",
    symbol: "DK"
  },
  {
    decimals: "18",
    id: "0x71eeba415a523f5c952cc2f06361d5443545ad28",
    name: "XDAO",
    symbol: "XDAO"
  },
  {
    decimals: "2",
    id: "0x128f397237b6489de867c4d4e749689e284d58a4",
    name: "EGO",
    symbol: "EGO"
  },
  {
    decimals: "18",
    id: "0x8da443f84fea710266c8eb6bc34b71702d033ef2",
    name: "Cartesi Token",
    symbol: "CTSI"
  },
  {
    decimals: "18",
    id: "0x67bb72b4349a6f67f1bfebcf8c14df0fa4b9f87f",
    name: "MIND",
    symbol: "MIND"
  },
  {
    decimals: "18",
    id: "0xaef0d72a118ce24fee3cd1d43d383897d05b4e99",
    name: "WINk",
    symbol: "WIN"
  },
  {
    decimals: "9",
    id: "0xe3d286a1c777538daf75a536493f2b87ec3c4c8a",
    name: "GiggleAcademy",
    symbol: "GIGGLE"
  },
  {
    decimals: "18",
    id: "0x6cad12b3618a3c7ef1feb6c91fdc3251f58c2a90",
    name: "Ninneko Token",
    symbol: "NINO"
  },
  {
    decimals: "18",
    id: "0x872a34ebb2d54af86827810eebc7b9dc6b2144aa",
    name: "RocketVaultRocketX",
    symbol: "RVF"
  },
  {
    decimals: "18",
    id: "0x4f01df11d1ca0167bcf026981e5659336a9eaee0",
    name: "UnlimitedIP",
    symbol: "UIP"
  },
  {
    decimals: "9",
    id: "0x0c7d31befe4945089a3b8f835d6e8c1d4df6d952",
    name: "POKO",
    symbol: "POKO"
  },
  {
    decimals: "18",
    id: "0xad0926ecf31719263dc86426024794332d9dd9a3",
    name: "Arcas",
    symbol: "ARCAS"
  },
  {
    decimals: "18",
    id: "0x3e81aa8d6813ec9d7e6ddb4e523fb1601a0e86f3",
    name: "Mr Mint",
    symbol: "MNT"
  },
  {
    decimals: "18",
    id: "0xe05a08226c49b636acf99c40da8dc6af83ce5bb3",
    name: "Ankr Staked ETH",
    symbol: "ankrETH"
  },
  {
    decimals: "18",
    id: "0xa75d9ca2a0a1d547409d82e1b06618ec284a2ced",
    name: "Wombex Token",
    symbol: "WMX"
  },
  {
    decimals: "18",
    id: "0x96ed4db01218608e6c8a8d66c65bdf59601ee735",
    name: "BSCM",
    symbol: "BSCM"
  },
  {
    decimals: "18",
    id: "0xb4d32d8a133d793a6c0e8dc6ca6e8f32137bd421",
    name: "Eco Technology System",
    symbol: "ETS"
  },
  {
    decimals: "18",
    id: "0xf5532d7433cfd6f201f658a963c5e500caf46434",
    name: "Insignia",
    symbol: "INS"
  },
  {
    decimals: "8",
    id: "0xd5d0322b6bab6a762c79f8c81a0b674778e13aed",
    name: "Firo",
    symbol: "FIRO"
  },
  {
    decimals: "18",
    id: "0x3668eef8b0fe30e260e1706471be6543197f1769",
    name: "zkTube",
    symbol: "ZKT"
  },
  {
    decimals: "18",
    id: "0x678e840c640f619e17848045d23072844224dd37",
    name: "Cratos BEP20",
    symbol: "CRTS"
  },
  {
    decimals: "18",
    id: "0x93b30f6d5c2eed35950498f71235a749e6f0540c",
    name: "Lovely Finance",
    symbol: "LOVELY"
  },
  {
    decimals: "18",
    id: "0xc51ef828319b131b595b7ec4b28210ecf4d05ad0",
    name: "pTokens EFX",
    symbol: "EFX"
  },
  {
    decimals: "18",
    id: "0x708955db0d4c52ffbf9aa34af7f3ca8bf07390a8",
    name: "Battle Saga",
    symbol: "BTL"
  },
  {
    decimals: "18",
    id: "0x1633b7157e7638c4d6593436111bf125ee74703f",
    name: "Splintershards",
    symbol: "SPS"
  },
  {
    decimals: "18",
    id: "0xd273551e42693dd87017a933bbff60615e12125a",
    name: "Bitcoin801010101018101010101018101010108",
    symbol: "Bitcoin"
  },
  {
    decimals: "18",
    id: "0x61632b49df5ca20846b3220bfc42bda5e32c81ad",
    name: "Curio Gas Token",
    symbol: "CGT2.0"
  },
  {
    decimals: "18",
    id: "0x25382fb31e4b22e0ea09cb0761863df5ad97ed72",
    name: "Paragen",
    symbol: "RGEN"
  },
  {
    decimals: "18",
    id: "0x193f4a4a6ea24102f49b931deeeb931f6e32405d",
    name: "TLOS",
    symbol: "TLOS"
  },
  {
    decimals: "18",
    id: "0xa73835d6337719f316ad66f3c11ac6cc9bcf7b07",
    name: "ProTradex",
    symbol: "PTD"
  },
  {
    decimals: "18",
    id: "0x6fe4faf3a1afc8e9d0528f722b6b865923d62c74",
    name: "AIBOT",
    symbol: "AIBOT"
  },
  {
    decimals: "18",
    id: "0xa5e39aa224e2d4a6971dd0fe7f69c1abfa569f21",
    name: "Cuckoo",
    symbol: "CK"
  },
  {
    decimals: "18",
    id: "0xb90cdb259b9c96b579a30dac027ff92c1e99f1e3",
    name: "CORTEX",
    symbol: "CORTEX"
  },
  {
    decimals: "18",
    id: "0x374ca32fd7934c5d43240e1e73fa9b2283468609",
    name: "Equilibria Token",
    symbol: "EQB"
  },
  {
    decimals: "18",
    id: "0x1851ccd370c444ff494d7505e6103959bce9f9d9",
    name: "ONUS",
    symbol: "ONUS"
  },
  {
    decimals: "18",
    id: "0x8416a4b66369b4b8e0e7473e2be0d604c6c922f9",
    name: "DLM",
    symbol: "DLM"
  },
  {
    decimals: "18",
    id: "0xee0074509a481340fa2dc31177d1592f277c536f",
    name: "J7coin",
    symbol: "J7C"
  },
  {
    decimals: "18",
    id: "0xfe1d8816a1c4431f14cdf1d20e3e0c3812dce3e0",
    name: "BNBs",
    symbol: "BNBs"
  },
  {
    decimals: "18",
    id: "0x11fea412f4cad3baaaceddac44d73abaf0dd4485",
    name: "BabySiz",
    symbol: "BSIZ"
  },
  {
    decimals: "18",
    id: "0x32f1518baace69e85b9e5ff844ebd617c52573ac",
    name: "Dexsport Protocol Native Token",
    symbol: "DESU"
  },
  {
    decimals: "18",
    id: "0xd4364d2c7ad05530cb0e8defc291d7d7262e3924",
    name: "Netrum",
    symbol: "NTR"
  },
  {
    decimals: "18",
    id: "0x256d1fce1b1221e8398f65f9b36033ce50b2d497",
    name: "Alvey Chain",
    symbol: "wALV"
  },
  {
    decimals: "6",
    id: "0xd07b2f38670501dcd89f50280246531f10725358",
    name: "ME",
    symbol: "ME"
  },
  {
    decimals: "18",
    id: "0xfd7b3a77848f1c2d67e05e54d78d174a0c850335",
    name: "Ontology Token",
    symbol: "ONT"
  },
  {
    decimals: "18",
    id: "0x178c1500b7b99108ba9ad0e503ed449dd30cfdca",
    name: "OPEN Token",
    symbol: "OPEN"
  },
  {
    decimals: "9",
    id: "0x9dd5aca7afaa266c249ffc58161fedb731a0b601",
    name: "pepe in a bnb world",
    symbol: "PEW"
  },
  {
    decimals: "18",
    id: "0x1f9f6a696c6fd109cd3956f45dc709d2b3902163",
    name: "CelerToken",
    symbol: "CELR"
  },
  {
    decimals: "18",
    id: "0x7208a2671a2f96950d44c6daaf24719ce44dea78",
    name: "WEB3MET",
    symbol: "W3M"
  },
  {
    decimals: "18",
    id: "0x808602d91e58f2d58d7c09306044b88234ab4628",
    name: "KU COIN",
    symbol: "KUB"
  },
  {
    decimals: "18",
    id: "0x53e562b9b7e5e94b81f10e96ee70ad06df3d2657",
    name: "BabySwap Token",
    symbol: "BABY"
  },
  {
    decimals: "9",
    id: "0x4a8049c015ae1c6665fc9e49f053458ae3a102d0",
    name: "BabyRWA",
    symbol: "BabyRWA"
  },
  {
    decimals: "18",
    id: "0xe9c803f48dffe50180bd5b01dc04da939e3445fc",
    name: "Velas",
    symbol: "VLX"
  },
  {
    decimals: "18",
    id: "0x6b3c58bfc74a41c1f7e6c0516471fdb8e42868ad",
    name: "Flappy Moon Bird",
    symbol: "FMB"
  },
  {
    decimals: "18",
    id: "0xc9f5955f6da20e44a068f3d58fb2404f56f9a6f2",
    name: "USDFI",
    symbol: "USDFI"
  },
  {
    decimals: "8",
    id: "0xf74cc13b97f0706696871bf4b7ba88057decf349",
    name: "TORUS",
    symbol: "TRS"
  },
  {
    decimals: "18",
    id: "0x8291e5de10efe916fad377ccd0af574caf392692",
    name: "World Virtual Coin",
    symbol: "WVC"
  },
  {
    decimals: "9",
    id: "0x258903a8e68d5248de85cf8a0a173d9e046edd98",
    name: "Baby Elon",
    symbol: "BabyElon"
  },
  {
    decimals: "18",
    id: "0xb12e8eb6b1f24e14381514d2f3b75e7c61487016",
    name: "GSD",
    symbol: "GSD"
  },
  {
    decimals: "18",
    id: "0xe2ae1a99bbd2efab0a5c38f2146b7ace61abc5ce",
    name: "ordi",
    symbol: "ordi"
  },
  {
    decimals: "18",
    id: "0x6cda2862fd4b88ccfa522ffed66bc4277e7d9cc9",
    name: "Neurashi",
    symbol: "NEI"
  },
  {
    decimals: "18",
    id: "0x93891a3328cc16ebd59474ced882b1d91dec63e1",
    name: "GreenEnvCoalition",
    symbol: "GEC"
  },
  {
    decimals: "18",
    id: "0x4f8b986ecffe7bed5dbeb2b49310fb00ca85a539",
    name: "$REKT",
    symbol: "$REKT"
  },
  {
    decimals: "18",
    id: "0xe47e09e3f8d100cc8ca747f4bf593b1a8db8ed61",
    name: "MUNKY",
    symbol: "MUNKY"
  },
  {
    decimals: "18",
    id: "0x0bd74a50f0309bc11158c4af11c20e5fda5e43da",
    name: "Bitcoin Gold",
    symbol: "BTG"
  },
  {
    decimals: "18",
    id: "0x1f7e8fe01aeba6fdaea85161746f4d53dc9bda4f",
    name: "GG TOKEN",
    symbol: "GGTKN"
  },
  {
    decimals: "18",
    id: "0xa865197a84e780957422237b5d152772654341f3",
    name: "OpenLeverage",
    symbol: "OLE"
  },
  {
    decimals: "18",
    id: "0x57db6e13b2ad1fcdecd127d5905cf4cd36ab864b",
    name: "BEST COIN",
    symbol: "BCOIN"
  },
  {
    decimals: "18",
    id: "0x6c6d604d3f07abe287c1a3df0281e999a83495c0",
    name: "Wrapped ROSE",
    symbol: "wROSE"
  },
  {
    decimals: "18",
    id: "0x78e510f415cdf1399100c4e3078457e490dda7d3",
    name: "SwapQiQi",
    symbol: "QiQi"
  },
  {
    decimals: "18",
    id: "0xb0461d7e8212d311b842a58e9989ede849ac6816",
    name: "Oceanland",
    symbol: "OLAND"
  },
  {
    decimals: "18",
    id: "0xd85ad783cc94bd04196a13dc042a3054a9b52210",
    name: "TribeOne",
    symbol: "HAKA"
  },
  {
    decimals: "18",
    id: "0x3b248cefa87f836a4e6f6d6c9b42991b88dc1d58",
    name: "emp.money",
    symbol: "EMP"
  },
  {
    decimals: "18",
    id: "0x300d2c875c6fb8ce4bf5480b4d34b7c9ea8a33a4",
    name: "Pirex Ether OFT",
    symbol: "pxETH"
  },
  {
    decimals: "18",
    id: "0xa73164db271931cf952cbaeff9e8f5817b42fa5c",
    name: "Landshare Token",
    symbol: "LAND"
  },
  {
    decimals: "18",
    id: "0x78f5d389f5cdccfc41594abab4b0ed02f31398b3",
    name: "ApolloX Token",
    symbol: "APX"
  },
  {
    decimals: "9",
    id: "0x89eb16377f3d10d39b23df7c02ae94ac3a81d389",
    name: "XQJ",
    symbol: "XQJ"
  },
  {
    decimals: "18",
    id: "0x2ba64efb7a4ec8983e22a49c81fa216ac33f383a",
    name: "Wrapped BGL",
    symbol: "WBGL"
  },
  {
    decimals: "18",
    id: "0x73fbd93bfda83b111ddc092aa3a4ca77fd30d380",
    name: "SOPH AI Token",
    symbol: "SOPH"
  },
  {
    decimals: "18",
    id: "0x7d9093c5f8529dc5093a86ee36c917ba75d3fc92",
    name: "Trexcoin",
    symbol: "TREX"
  },
  {
    decimals: "18",
    id: "0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd",
    name: "LTO Network",
    symbol: "LTO"
  },
  {
    decimals: "18",
    id: "0xeac9873291ddaca754ea5642114151f3035c67a2",
    name: "Decubate Token",
    symbol: "DCB"
  },
  {
    decimals: "9",
    id: "0xca30e772e4bd5f38ed775e6f8c57c6ffcb3c931f",
    name: "ZEDXION",
    symbol: "ZEDX"
  },
  {
    decimals: "7",
    id: "0x605a1c214172fa504309b2af2600fe5307567b3d",
    name: "wrapped SANUSCOIN",
    symbol: "wSAC"
  },
  {
    decimals: "18",
    id: "0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e",
    name: "yearn.finance",
    symbol: "YFI"
  },
  {
    decimals: "18",
    id: "0x05d10932970d048408e73d9b40787831c1e5c7d2",
    name: "Fists",
    symbol: "Fists"
  },
  {
    decimals: "18",
    id: "0xaa390bd1657514730d98baabce4b393a53acd579",
    name: "XTO",
    symbol: "XTO"
  },
  {
    decimals: "7",
    id: "0x8f0fb159380176d324542b3a7933f0c2fd0c2bbf",
    name: "TFT on BSC",
    symbol: "TFT"
  },
  {
    decimals: "18",
    id: "0x45435ce62fe8b1577a5ba0deb3e1deefca704d64",
    name: "Tea",
    symbol: "TEA"
  },
  {
    decimals: "8",
    id: "0xc1ff50bc8d8c5f012adf3c9dd179944629bd57a3",
    name: "AAANA",
    symbol: "AAANA"
  },
  {
    decimals: "18",
    id: "0xaf41054c1487b0e5e2b9250c0332ecbce6ce9d71",
    name: "Ellipsis X",
    symbol: "EPX"
  },
  {
    decimals: "18",
    id: "0x8fb7a3d213c3a2b605386cd3617fe0eaab7f3b1c",
    name: "MetaWorth",
    symbol: "MTW"
  },
  {
    decimals: "18",
    id: "0x30ab8cd53f4e22798492579b001591cde3d2b1af",
    name: "PegNet",
    symbol: "PEG"
  },
  {
    decimals: "18",
    id: "0x12a16d6b160809f6be748c9dc29f934b960d7258",
    name: "WBT COIN",
    symbol: "WBT"
  },
  {
    decimals: "18",
    id: "0x740e1e17f65cf2d33413eed337db6dcd890e79db",
    name: "RevaLink Wallet Token",
    symbol: "RWC"
  },
  {
    decimals: "18",
    id: "0x8f36cc333f55b09bb71091409a3d7ade399e3b1c",
    name: "Cherry Token",
    symbol: "CHER"
  },
  {
    decimals: "6",
    id: "0x928f64d31186a0a341b38624177e911d746dc6b6",
    name: "EvoLoad",
    symbol: "EVLD"
  },
  {
    decimals: "1",
    id: "0x5137f2503ce2774b0e52c7e6fbd7f39261a88888",
    name: "ATM",
    symbol: "ATM"
  },
  {
    decimals: "9",
    id: "0x58c764c18b6263ce97c8a22fec857e0139026b06",
    name: "LindaYacc Ceo",
    symbol: "LindaCEO"
  },
  {
    decimals: "18",
    id: "0xa4e8e73c8be170528385bbce78172c891f1febd7",
    name: "MAGA VP",
    symbol: "MVP"
  },
  {
    decimals: "18",
    id: "0xb7e2713cf55cf4b469b5a8421ae6fc0ed18f1467",
    name: "OpenLeverage Token V2",
    symbol: "OLE"
  },
  {
    decimals: "6",
    id: "0x1bdaf9ddd7658d8049391971d1fd48c0484f66ec",
    name: "Cogito Governance Token",
    symbol: "CGV"
  },
  {
    decimals: "18",
    id: "0x2452adf40d9eb150c2377ac99df5a134070eaaf2",
    name: "Heroes 3 Foundation",
    symbol: "GorgonZola"
  },
  {
    decimals: "8",
    id: "0x4a2c860cec6471b9f5f5a336eb4f38bb21683c98",
    name: "GreenSatoshiToken",
    symbol: "GST"
  },
  {
    decimals: "18",
    id: "0x6c1efbed2f57dd486ec091dffd08ee5235a570b1",
    name: "PANDORA",
    symbol: "PNDR"
  },
  {
    decimals: "18",
    id: "0xa236fd48f30ad4dee145652a71912189855dd575",
    name: "Crypto Hunters Coin",
    symbol: "CRH"
  },
  {
    decimals: "18",
    id: "0x335b6828e2860abcdd0ef50ba86334ab25fd03ad",
    name: "Cannation",
    symbol: "CNNC"
  },
  {
    decimals: "9",
    id: "0x71e72dde4152d274afd1f2db43531ed9e44a78fa",
    name: "LordToken",
    symbol: "LTT"
  },
  {
    decimals: "18",
    id: "0x1f6ba0e8db204b9b7762ddcbcd6d3941f8e405cf",
    name: "LiteCoin Ultra",
    symbol: "LTCU"
  },
  {
    decimals: "0",
    id: "0x32dc065cc6bf468b5c8922ac034aeb5ac779dd79",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0x39f0f4c64c7ad1ebb25cfeafdd221cdee3084441",
    name: "Ordify",
    symbol: "ORFY"
  },
  {
    decimals: "6",
    id: "0xb04906e95ab5d797ada81508115611fee694c2b3",
    name: "USD Coin",
    symbol: "USDC"
  },
  {
    decimals: "18",
    id: "0xf041a35049f1609e77afb02c573739af73efd532",
    name: "SUKIWIN",
    symbol: "SUKIW"
  },
  {
    decimals: "18",
    id: "0x932b73421ff9724ef46e8c8b1547383e8181144a",
    name: "Magnavox Odyssey",
    symbol: "MO"
  },
  {
    decimals: "8",
    id: "0xf0e406c49c63abf358030a299c0e00118c4c6ba5",
    name: "NerveNetwork",
    symbol: "NVT"
  },
  {
    decimals: "18",
    id: "0x1cc0801f922b3c5dec5efb04d69b3c4ca9f00c54",
    name: "Wrapped Amino",
    symbol: "wAMO"
  },
  {
    decimals: "18",
    id: "0x872d068c25511be88c1f5990c53eeffcdf46c9b4",
    name: "VENT [via ChainPort.io]",
    symbol: "VENT"
  },
  {
    decimals: "18",
    id: "0xe405b8148d731e4e1117e00542264dac5375bc97",
    name: "Aarma",
    symbol: "ARMA"
  },
  {
    decimals: "18",
    id: "0x124123c7af9efd2a86f4d41daa88ac164d02a3d5",
    name: "GreenEnvironmentalCoins",
    symbol: "GEC"
  },
  {
    decimals: "18",
    id: "0xab4e026a2f6f6265c29bbb4c565e66968e3d4962",
    name: "ScapesMania",
    symbol: "MANIA"
  },
  {
    decimals: "18",
    id: "0xc7af62df637a77fb1ff5c4d1a904d3a966f8623e",
    name: "DogeETF",
    symbol: "DogeETF"
  },
  {
    decimals: "18",
    id: "0xec33d722d014c02cf4efb46d68098e98e027c364",
    name: "$REKT",
    symbol: "$REKT"
  },
  {
    decimals: "18",
    id: "0x9485bca5317b8214bffc790d34fface0c92d7656",
    name: "KTALK TOKEN",
    symbol: "KT"
  },
  {
    decimals: "18",
    id: "0x2c6c811aa1c67df5a47c0a358f0dc9a503542a71",
    name: "Baobao",
    symbol: "BAOBAO"
  },
  {
    decimals: "18",
    id: "0x63436d8a6ae90943cf09eb589cc815f645c14bb4",
    name: "Global Currency Reserve",
    symbol: "GCR"
  },
  {
    decimals: "18",
    id: "0x78c462fe8796932560586b9492ce84b54c755ed5",
    name: "Neural Coin",
    symbol: "NEU"
  },
  {
    decimals: "8",
    id: "0x8626264b6a1b4e920905efd381002aba52ea0eea",
    name: "BlackHat",
    symbol: "BLKC"
  },
  {
    decimals: "18",
    id: "0x45808ce43eb2d7685ff0242631f0feb6f3d8701a",
    name: "EKTA v2",
    symbol: "EKTA v2"
  },
  {
    decimals: "18",
    id: "0x9720ca160bbd4e7f3dd4bb3f8bd4227ca0342e63",
    name: "GMPD",
    symbol: "GMPD"
  },
  {
    decimals: "18",
    id: "0x10da043d0b46e43b53b74a88ac60ccc28e2afdf8",
    name: "BAI",
    symbol: "BAI"
  },
  {
    decimals: "18",
    id: "0xebbaeff6217d22e7744394061d874015709b8141",
    name: "WAM",
    symbol: "WAM"
  },
  {
    decimals: "18",
    id: "0x98169bf9b7a44edad372364063b897e16ebba88e",
    name: "una WEMIX",
    symbol: "una.WEMIX"
  },
  {
    decimals: "6",
    id: "0x524bc91dc82d6b90ef29f76a3ecaabafffd490bc",
    name: "Tether USD",
    symbol: "USDT"
  },
  {
    decimals: "18",
    id: "0x7ddee176f665cd201f93eede625770e2fd911990",
    name: "pTokens GALA",
    symbol: "GALA"
  },
  {
    decimals: "18",
    id: "0x723000d0df87652387e737f5747ac9205bf9c213",
    name: "Nemesis Downfall",
    symbol: "ND"
  },
  {
    decimals: "18",
    id: "0x291be4b6ea733148ad1d2489dd59da28f92b710e",
    name: "Bitcoin BSC",
    symbol: "BTCBSC"
  },
  {
    decimals: "8",
    id: "0x35f3ffffcb622bc9f64fa561d74e983fd488d90c",
    name: "PirateCash",
    symbol: "PIRATE"
  },
  {
    decimals: "18",
    id: "0x59c49b54d4425c7ff1e49f40958a14d48cc87c26",
    name: "Magic Crystal Coin",
    symbol: "MC"
  },
  {
    decimals: "18",
    id: "0xa0a2ee912caf7921eaabc866c6ef6fec8f7e90a4",
    name: "Deeper Network",
    symbol: "DPR"
  },
  {
    decimals: "18",
    id: "0xfe56d5892bdffc7bf58f2e84be1b2c32d21c308b",
    name: "Kyber Network Crystal",
    symbol: "KNC"
  },
  {
    decimals: "18",
    id: "0x1a74da1d7e717ba96cdc288bb9a4715d2aaaa1cd",
    name: "AVATAR",
    symbol: "AVATAR"
  },
  {
    decimals: "18",
    id: "0x023e760331b9fb495a99a037cd2671ff4869d5c9",
    name: "Wall Street Memes",
    symbol: "WSM"
  },
  {
    decimals: "18",
    id: "0xffff132b6b3010bfa7e9e16631bb3942bdd94461",
    name: "ETCS",
    symbol: "ETCS"
  },
  {
    decimals: "18",
    id: "0x428d0a41a442f7a69e7f6bdc0cc96866af348c43",
    name: "BIG ROO",
    symbol: "BIGROO"
  },
  {
    decimals: "18",
    id: "0x382ec3f9f2e79b03abf0127f3aa985b148cef6d7",
    name: "ZENF Token",
    symbol: "ZENF"
  },
  {
    decimals: "18",
    id: "0x5b943bc2f6ec33cd402d16d975030d70be8d20e1",
    name: "AiO",
    symbol: "AiO"
  },
  {
    decimals: "8",
    id: "0xfdad8edc724277e975f4955d288c6eb5b20a3146",
    name: "Nulswap",
    symbol: "NSWAP"
  },
  {
    decimals: "18",
    id: "0xebd3619642d78f0c98c84f6fa9a678653fb5a99b",
    name: "ASX",
    symbol: "ASX"
  },
  {
    decimals: "18",
    id: "0x6ba7a8f9063c712c1c8cabc776b1da7126805f3b",
    name: "Polytrade (PoS)",
    symbol: "TRADE"
  },
  {
    decimals: "18",
    id: "0x7e35d0e9180bf3a1fc47b0d110be7a21a10b41fe",
    name: "OVR",
    symbol: "OVR"
  },
  {
    decimals: "18",
    id: "0x9f882567a62a5560d147d64871776eea72df41d3",
    name: "MX Token",
    symbol: "MX"
  },
  {
    decimals: "18",
    id: "0x77edfae59a7948d66e9911a30cc787d2172343d4",
    name: "LABEL",
    symbol: "LBL"
  },
  {
    decimals: "18",
    id: "0x67009eb16ff64d06b4f782b3c552b924b1d1bb93",
    name: "Matrix Chain",
    symbol: "MTC"
  },
  {
    decimals: "18",
    id: "0x80702018c28988dfe3c900561745f7af1b9fdb37",
    name: "STC_TOKEN",
    symbol: "STC"
  },
  {
    decimals: "18",
    id: "0x5033b5b12980ce1b270bf3e7376b47f6ad502ebe",
    name: "Artificial intelligence staking token",
    symbol: "AIST"
  },
  {
    decimals: "18",
    id: "0xde3ab7aa2964fa7e2e45321dc0ee613e854623fc",
    name: "pugme",
    symbol: "pugme"
  },
  {
    decimals: "18",
    id: "0x57f5c1a40f1e847e50ebdd29cb3dbfef777d2d3e",
    name: "CVN",
    symbol: "CVN"
  },
  {
    decimals: "18",
    id: "0x04c0599ae5a44757c0af6f9ec3b93da8976c150a",
    name: "Wrapped eETH",
    symbol: "weETH"
  },
  {
    decimals: "18",
    id: "0xb5be8d87fce6ce87a24b90abdb019458a8ec31f9",
    name: "OBORTECH",
    symbol: "OBOT"
  },
  {
    decimals: "18",
    id: "0x29745314b4d294b7c77cdb411b8aaa95923aae38",
    name: "PALM",
    symbol: "PALM"
  },
  {
    decimals: "9",
    id: "0x8fff93e810a2edaafc326edee51071da9d398e83",
    name: "Bitrise Token",
    symbol: "BRISE"
  },
  {
    decimals: "18",
    id: "0xaa88c603d142c371ea0eac8756123c5805edee03",
    name: "The Doge NFT",
    symbol: "DOG"
  },
  {
    decimals: "2",
    id: "0xe2fc7eb28b6ecd68fa015a088ed5d4a95ce1fe3d",
    name: "CryptoClicker Super Token",
    symbol: "SUPPER"
  },
  {
    decimals: "18",
    id: "0x0af8c016620d3ed0c56381060e8ab2917775885e",
    name: "MegaWorld $MEGA Token",
    symbol: "MEGA"
  },
  {
    decimals: "18",
    id: "0xb55ee890426341fe45ee6dc788d2d93d25b59063",
    name: "Love.io",
    symbol: "LOVE"
  },
  {
    decimals: "18",
    id: "0xcbd9f6d748dd3d19416f8914528a65c7838e27d8",
    name: "R-Games",
    symbol: "RGAME"
  },
  {
    decimals: "18",
    id: "0xbb46693ebbea1ac2070e59b4d043b47e2e095f86",
    name: "BFG Token",
    symbol: "BFG"
  },
  {
    decimals: "18",
    id: "0xf31da2bbd0cc88cf204f76b21425a865ad9acc31",
    name: "LARO CLASSIC",
    symbol: "LRCC"
  },
  {
    decimals: "1",
    id: "0x55a9ee0bd79fb0fc0ac71a35d6f481fb4bdc9a5c",
    name: "OSL AI",
    symbol: "OSL"
  },
  {
    decimals: "18",
    id: "0x5715a750f155c958bb5bafe1336826a4dd6a83cb",
    name: "PANDA",
    symbol: "PANDA"
  },
  {
    decimals: "18",
    id: "0x903beffc8ecc50841373d0ecc2ca53fa4b04c31f",
    name: "Ivy Live",
    symbol: "IVY"
  },
  {
    decimals: "18",
    id: "0xaeb63742f2c7dd1538bbe2285b6789017a06b58b",
    name: "Colle AI",
    symbol: "COLLE"
  },
  {
    decimals: "18",
    id: "0x5a3010d4d8d3b5fb49f8b6e57fb9e48063f16700",
    name: "BSCPAD.com",
    symbol: "BSCPAD"
  },
  {
    decimals: "18",
    id: "0xbd66323633d8cc375482c2470443ee3ffc6dc22f",
    name: "TED",
    symbol: "TED"
  },
  {
    decimals: "18",
    id: "0xbb7d61d2511fd2e63f02178ca9b663458af9fc63",
    name: "EXVERSE",
    symbol: "EXVG"
  },
  {
    decimals: "18",
    id: "0x864195f5ee582d52037c3e54efad60dcd288ed64",
    name: "Bnbao token",
    symbol: "Bnbao"
  },
  {
    decimals: "18",
    id: "0x011a5de645f7b599bb4d6fa1371532dd25a45201",
    name: "Dramatic Chipmunk",
    symbol: "MUNK"
  },
  {
    decimals: "18",
    id: "0x94025780a1ab58868d9b2dbbb775f44b32e8e6e5",
    name: "BetSwirl v2",
    symbol: "BETS"
  },
  {
    decimals: "18",
    id: "0x1f926b439fae4595e5951029d47616feca401b77",
    name: "omChain",
    symbol: "OMC"
  },
  {
    decimals: "8",
    id: "0xa27e68aee11b9753424fee73f86d25500090cd3c",
    name: "XXOO.art meme token",
    symbol: "XXOO"
  },
  {
    decimals: "18",
    id: "0x27ae27110350b98d564b9a3eed31baebc82d878d",
    name: "CumRocket",
    symbol: "CUMMIES"
  },
  {
    decimals: "18",
    id: "0xaa076b62efc6f357882e07665157a271ab46a063",
    name: "Pleasure Coin",
    symbol: "NSFW"
  },
  {
    decimals: "18",
    id: "0x14016e85a25aeb13065688cafb43044c2ef86784",
    name: "TrueUSD",
    symbol: "TUSD"
  },
  {
    decimals: "18",
    id: "0xc38ecfbf81ec96478526b82526e53e9562aec297",
    name: "FBEP20",
    symbol: "fbep"
  },
  {
    decimals: "18",
    id: "0xcd11af4550e0436fe94071fc67e414f1c24fa392",
    name: "P2PPOWER",
    symbol: "P2PPOWER"
  },
  {
    decimals: "18",
    id: "0x95a8d9d1c43a99ee19b46cd81ff5b5e86d7d97a8",
    name: "DCPTG",
    symbol: "DCPTG"
  },
  {
    decimals: "18",
    id: "0xbfffd68774aa006840385cb021966188990a2d1a",
    name: "PEPE inu",
    symbol: "$pepeinu"
  },
  {
    decimals: "18",
    id: "0x0ab9d2adca4ce4cd6f6cac51f3e42acbbc5d1b2d",
    name: "GOLANG",
    symbol: "GLG"
  },
  {
    decimals: "8",
    id: "0x0ee7292bd28f4a490f849fb30c28cabab9440f9e",
    name: "Gemlink",
    symbol: "GLINK"
  },
  {
    decimals: "18",
    id: "0x2ac895feba458b42884dcbcb47d57e44c3a303c8",
    name: "HOLD",
    symbol: "EARN"
  },
  {
    decimals: "18",
    id: "0x5a9a8ac5e18c63f7591f63f15a5d89921853c8e9",
    name: "Hhee",
    symbol: "HHEE"
  },
  {
    decimals: "18",
    id: "0x0aa086e7a108d387de63294fe2a88b05820a9855",
    name: "MMOCoin",
    symbol: "MMO"
  },
  {
    decimals: "18",
    id: "0x0df73831c00b157bb0fed3c06eb475f201b64a78",
    name: "B2SHARE",
    symbol: "B2SHARE"
  },
  {
    decimals: "18",
    id: "0x2019941099e3e2c536c8a91c5e57a33ab0f9d9db",
    name: "Metaracing Game Token",
    symbol: "MGT"
  },
  {
    decimals: "18",
    id: "0x6a9ab0d83fdbb71f591864eba267c92c9bf98e8d",
    name: "DataBank.Me",
    symbol: "DBME"
  },
  {
    decimals: "18",
    id: "0x9810512be701801954449408966c630595d0cd51",
    name: "High Yield Dollar Stable Token",
    symbol: "HYDT"
  },
  {
    decimals: "18",
    id: "0x5dc1f1de9c9d18622defefaa00de43748b70005d",
    name: "ACT",
    symbol: "ACT"
  },
  {
    decimals: "18",
    id: "0x04fa9eb295266d9d4650edcb879da204887dc3da",
    name: "OSK",
    symbol: "OSK"
  },
  {
    decimals: "18",
    id: "0xf328ed974e586b6eea7997a87ea2ab1de149b186",
    name: "Ambit USD",
    symbol: "AUSD"
  },
  {
    decimals: "18",
    id: "0x9d9f77e697cd60862ef48245dee42f8e0136e8a1",
    name: "Go Green Token",
    symbol: "O2"
  },
  {
    decimals: "18",
    id: "0xefd8bb69ab5c0b022b1d33120ddd1dac3a83877e",
    name: "PokeGROK",
    symbol: "POKEGROK"
  },
  {
    decimals: "18",
    id: "0xd0ed8f9c119beb13b9fce318a28827d0574c37d6",
    name: "CATERPILLAR",
    symbol: "CPL"
  },
  {
    decimals: "18",
    id: "0xd64cb49e1dbfcce67ba6cd528083d2522afb1b8b",
    name: "Blue sapphire",
    symbol: "Bstoken"
  },
  {
    decimals: "18",
    id: "0x94b69263fca20119ae817b6f783fc0f13b02ad50",
    name: "League Of Ancients",
    symbol: "LOA"
  },
  {
    decimals: "18",
    id: "0xbcf39f0edda668c58371e519af37ca705f2bfcbd",
    name: "PolyCrowns",
    symbol: "pCWS"
  },
  {
    decimals: "18",
    id: "0xb1564dd0fa349697747c7953732d4ca2fe59de5a",
    name: "Emporiki Token",
    symbol: "EPK"
  },
  {
    decimals: "9",
    id: "0x444444444444c1a66f394025ac839a535246fcc8",
    name: "Genius",
    symbol: "GENI"
  },
  {
    decimals: "18",
    id: "0xca3f508b8e4dd382ee878a314789373d80a5190a",
    name: "beefy.finance",
    symbol: "BIFI"
  },
  {
    decimals: "18",
    id: "0x568701f32561527a77244600c01a19b0a11697fe",
    name: "BikCoin",
    symbol: "BIK"
  },
  {
    decimals: "18",
    id: "0xe2a59d5e33c6540e18aaa46bf98917ac3158db0d",
    name: "PureFi Token",
    symbol: "UFI"
  },
  {
    decimals: "18",
    id: "0x89af13a10b32f1b2f8d1588f93027f69b6f4e27e",
    name: "GameFi",
    symbol: "GAFI"
  },
  {
    decimals: "18",
    id: "0xcb59a22868a6195d126d7d89896a5fd190df90da",
    name: "Push n Shove",
    symbol: "PNS"
  },
  {
    decimals: "18",
    id: "0x6fd7c98458a943f469e1cf4ea85b173f5cd342f4",
    name: "Billion Happiness",
    symbol: "BHC"
  },
  {
    decimals: "18",
    id: "0xfb9c339b4bace4fe63ccc1dd9a3c3c531441d5fe",
    name: "Shill",
    symbol: "SHILL"
  },
  {
    decimals: "18",
    id: "0x26619fa1d4c957c58096bbbeca6588dcfb12e109",
    name: "TIME",
    symbol: "TIME"
  },
  {
    decimals: "18",
    id: "0xe6ce27025f13f5213bbc560dc275e292965a392f",
    name: "Loom Token",
    symbol: "LOOM"
  },
  {
    decimals: "18",
    id: "0x6e5b7d293fa136839647b5b45cf520d04708cc01",
    name: "Global AK101",
    symbol: "AK101"
  },
  {
    decimals: "18",
    id: "0x7fa895ddf5294c13d7c197cc5543b21cb0034084",
    name: "BWE",
    symbol: "BWE"
  },
  {
    decimals: "18",
    id: "0xc01fa5f062e67dd51a40cb59e5fad4ffe14d5bb6",
    name: "NEMO",
    symbol: "NEMO"
  },
  {
    decimals: "18",
    id: "0x84affeef925cdce87f8a99b7b2e540da5140fc09",
    name: "SerenityShield",
    symbol: "SERSH"
  },
  {
    decimals: "18",
    id: "0x54bb6c8551712ab214950cd7acf8493ef4e7e3ae",
    name: "Pepe Wif Hat",
    symbol: "PIF"
  },
  {
    decimals: "18",
    id: "0x0e28bc9b03971e95acf9ae1326e51ecf9c55b498",
    name: "Brickken",
    symbol: "BKN"
  },
  {
    decimals: "18",
    id: "0x4e89d67d88dba3c42a8c37e1991c192384c75625",
    name: "RITZ",
    symbol: "RITZ"
  },
  {
    decimals: "8",
    id: "0x6519cb1f694ccbcc72417570b364f2d051eefb9d",
    name: "NoLimitCoin",
    symbol: "NLC"
  },
  {
    decimals: "18",
    id: "0xe50ac93cc22683a4b6e96bbdc663c4b31cf8674a",
    name: "Realtors Community Coin",
    symbol: "RCC"
  },
  {
    decimals: "18",
    id: "0xe21b8a33410daa5b0275bfa68ca6e5c649b26170",
    name: "BSC_GR",
    symbol: "bGR"
  },
  {
    decimals: "8",
    id: "0x0a23454f4c5d57a020372ab7138d80b43da95c3e",
    name: "Shirushi Coin",
    symbol: "SISC"
  },
  {
    decimals: "18",
    id: "0xea1ca10ef55d7bc1c11167630c16c09f3ee9bf42",
    name: "ANGEL",
    symbol: "ANGEL"
  },
  {
    decimals: "18",
    id: "0xd2486bfd13d6de83edfd59f5f7a64ad55aade39f",
    name: "UWIK",
    symbol: "UWIK"
  },
  {
    decimals: "18",
    id: "0xaf535b6ed0c1ccf83fa7b32fb9a0c76ccc6f48d0",
    name: "ZOCI",
    symbol: "ZOCI"
  },
  {
    decimals: "9",
    id: "0x3ca994d9f723736381d44388bc8dd1e7ee8c1653",
    name: "SamuraiLegends",
    symbol: "SMG"
  },
  {
    decimals: "18",
    id: "0x7f6ee7e043d12c2de15e9b4bb6bc0921e86361a9",
    name: "Earneo",
    symbol: "RNO"
  },
  {
    decimals: "18",
    id: "0xb1a1d06d42a43a8fcfdc7fdcd744f7ef03e8ad1a",
    name: "HongKongDAO",
    symbol: "HKD"
  },
  {
    decimals: "18",
    id: "0xf92751a29816b0a8bca885935afcf52a1f25f92f",
    name: "Arbitrage Opportunity Technology",
    symbol: "$AOT"
  },
  {
    decimals: "18",
    id: "0x735c522c20305d868f2c14654b878950f820dc50",
    name: "BNBEE",
    symbol: "BEE"
  },
  {
    decimals: "18",
    id: "0x0892f6273c31d4c55c6bace88bc09ea300e2808b",
    name: "KitKat",
    symbol: "KIKA"
  },
  {
    decimals: "18",
    id: "0xf4bafaeae73a4a7c8b6479970075e91e641fb1fc",
    name: "Stafi",
    symbol: "FIS"
  },
  {
    decimals: "12",
    id: "0x56f86cfa34cf4004736554c2784d59e477589c8c",
    name: "Prosus Token",
    symbol: "wPROSUS"
  },
  {
    decimals: "18",
    id: "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89",
    name: "Impossible Decentralized Incubator Access Token",
    symbol: "IDIA"
  },
  {
    decimals: "6",
    id: "0x9fd470124903957f299a1c90feda9043a4619cc6",
    name: "Chihuahua native asset",
    symbol: "HUAHUA"
  },
  {
    decimals: "18",
    id: "0x631c2f0edabac799f07550aee4ff0bf7fd35212b",
    name: "Poollotto.finance",
    symbol: "PLT"
  },
  {
    decimals: "18",
    id: "0x9b9e48dfbe6a357d975e64875837ab97ee20a349",
    name: "BTN",
    symbol: "BTN"
  },
  {
    decimals: "18",
    id: "0x1c25222994531c4ac35e4d94bbf7552c9aa92e32",
    name: "Wrapped PKT",
    symbol: "WPKT"
  },
  {
    decimals: "18",
    id: "0xf264f966f8998a620295fcefb60e7868c27eae01",
    name: "Niobium Coin",
    symbol: "NBC"
  },
  {
    decimals: "18",
    id: "0xc7d4515ba4c82c98a5a81d2a5ef98dcf35314314",
    name: "314",
    symbol: "314"
  },
  {
    decimals: "18",
    id: "0x21ba761f1f667daf2846d601a9440e744efd0fb3",
    name: "cn Circle",
    symbol: "CICN"
  },
  {
    decimals: "18",
    id: "0x12275257375797e32b799398ba2ee25e6a62404f",
    name: "Pepe Johns BSC",
    symbol: "PJB"
  },
  {
    decimals: "18",
    id: "0x5888faf314e060b0b0c765dc706818036e1b910a",
    name: "Halvcoin",
    symbol: "4halv"
  },
  {
    decimals: "18",
    id: "0x53d851131f9a82b97af8a32d70c57b5c24c429ce",
    name: "GridMindDAO Token",
    symbol: "GMD"
  },
  {
    decimals: "18",
    id: "0x27d72484f1910f5d0226afa4e03742c9cd2b297a",
    name: "Moonscape",
    symbol: "MSCP"
  },
  {
    decimals: "18",
    id: "0x425e800e22d521e0c8f5ebfe56e828c704510e3f",
    name: "Shiro",
    symbol: "Shiro"
  },
  {
    decimals: "18",
    id: "0x4518231a8fdf6ac553b9bbd51bbb86825b583263",
    name: "Media Licensing Token",
    symbol: "MLT"
  },
  {
    decimals: "18",
    id: "0xec7fef81e936196a9a77619353fe8b69c81df732",
    name: "TBC CASH",
    symbol: "TBCC"
  },
  {
    decimals: "18",
    id: "0xb66279ce85ff79df18901946e65216777b093967",
    name: "HUNDRED",
    symbol: "HUNDRED"
  },
  {
    decimals: "18",
    id: "0xffba7529ac181c2ee1844548e6d7061c9a597df4",
    name: "Capsule Coin",
    symbol: "CAPS"
  },
  {
    decimals: "18",
    id: "0xcc4d447b1206347a4d0e091e2373547ad1ef3a12",
    name: "TradeGPT Bot Token",
    symbol: "TBT"
  },
  {
    decimals: "18",
    id: "0xa65dda13aaceed7c906dfe7c6cec805ae3d8ed71",
    name: "Wizz Ecosystem Coin",
    symbol: "WEC"
  },
  {
    decimals: "18",
    id: "0x7324c7c0d95cebc73eea7e85cbaac0dbdf88a05b",
    name: "Chain",
    symbol: "XCN"
  },
  {
    decimals: "18",
    id: "0x488cf9905cd9f5dea7212b4571c8b1052631ab8d",
    name: "HEHE",
    symbol: "HEHE"
  },
  {
    decimals: "6",
    id: "0x9a5350edf28c1f93bb36d6e94b5c425fde8e222d",
    name: "Vyvo Us Dollar",
    symbol: "USDV"
  },
  {
    decimals: "18",
    id: "0xc0eff7749b125444953ef89682201fb8c6a917cd",
    name: "Horizon Protocol",
    symbol: "HZN"
  },
  {
    decimals: "18",
    id: "0x05243e4e2c041d24408d0751c1031e9b435445da",
    name: "Bit Gold Coin",
    symbol: "BGC"
  },
  {
    decimals: "18",
    id: "0xe44b268c75d03b3695f3410d96f46053749f5d2b",
    name: "MakeOurBinanceAmazing",
    symbol: "MOBA"
  },
  {
    decimals: "18",
    id: "0xc541fa360527f19d7f2a83b6de5221dc5de9fe54",
    name: "Binance Pizza",
    symbol: "Pizza"
  },
  {
    decimals: "18",
    id: "0x78a0a62fba6fb21a83fe8a3433d44c73a4017a6f",
    name: "Open Exchange Token",
    symbol: "OX"
  },
  {
    decimals: "18",
    id: "0x0f7d6e8cbe343f402d030e4809aaa2d5b10d725b",
    name: "EXH COIN",
    symbol: "EXH"
  },
  {
    decimals: "18",
    id: "0x593313847ffe88796e002ecd0b80c44faa913c7b",
    name: "Intellectual Coin",
    symbol: "ITCC"
  },
  {
    decimals: "18",
    id: "0x7cd392a37a36152f5b3afe086a9832ad2ef8d145",
    name: "WEAVERS TOKEN",
    symbol: "VRS"
  },
  {
    decimals: "18",
    id: "0xf7686f43591302cd9b4b9c4fe1291473fae7d9c9",
    name: "Chainport.io-Peg Lossless Token",
    symbol: "LSS"
  },
  {
    decimals: "18",
    id: "0xa2741bec3115a4cc43bbccdc351e21df4c6c0e31",
    name: "Streamable Finance Token",
    symbol: "STREAM"
  },
  {
    decimals: "18",
    id: "0x363178c81c1d1eb8391de18726d450dc857ea3da",
    name: "ZEPX",
    symbol: "ZEPX"
  },
  {
    decimals: "18",
    id: "0xc732b6586a93b6b7cf5fed3470808bc74998224d",
    name: "KmonCoin",
    symbol: "KMON"
  },
  {
    decimals: "18",
    id: "0xd3fafe7094d744b17efb6c356046f59a0fce7ead",
    name: "ALPHA CLUB",
    symbol: "APC"
  },
  {
    decimals: "9",
    id: "0x21015b5607a4445fe45f041cae413f3292c5cf6e",
    name: "Roaring Kitty",
    symbol: "roar"
  },
  {
    decimals: "18",
    id: "0x0e2d3985a69eaeabaacf3845ad2d8f8fc7eb8312",
    name: "Ayyub Altun",
    symbol: "AYBAI"
  },
  {
    decimals: "18",
    id: "0x5cd8778345950d339ae088d7fc2db9b20c367316",
    name: "Telo Token",
    symbol: "TELO"
  },
  {
    decimals: "18",
    id: "0x039cb485212f996a9dbb85a9a75d898f94d38da6",
    name: "DeXe",
    symbol: "DEXE"
  },
  {
    decimals: "0",
    id: "0xf154c15f692bf2be10739cc5681abd6c8fd751ba",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "8",
    id: "0x000000089fb24237da101020ff8e2afd14624687",
    name: "Swapped Bitcore",
    symbol: "sBTX"
  },
  {
    decimals: "18",
    id: "0x05dc4a3b3254992f9e10ed9bbe1d1d8b7e122c38",
    name: "Chow Chow 松狮犬",
    symbol: "CHOW"
  },
  {
    decimals: "18",
    id: "0x0bbb1f133636e87900017d1b9f78d388944fde7b",
    name: "E-USDT",
    symbol: "EUSDT"
  },
  {
    decimals: "18",
    id: "0x57bc18f6177cdaffb34ace048745bc913a1b1b54",
    name: "Bit Hotel Token",
    symbol: "BTH"
  },
  {
    decimals: "8",
    id: "0x44836708ff32246635d8d08c785f4e779e294598",
    name: "Diamond Token",
    symbol: "DNT"
  },
  {
    decimals: "18",
    id: "0x96b625d2cc31218ca0d03f0aca64eb58ed78b1bf",
    name: "C-USDT",
    symbol: "CUSDT"
  },
  {
    decimals: "18",
    id: "0x1ce23701b30cb6230a1748e0e54286934e54d56e",
    name: "Pepe",
    symbol: "PEPE"
  },
  {
    decimals: "18",
    id: "0xbd01fe3b4bdd01a2bc71c007cbabedc95c2f5e79",
    name: "SEA",
    symbol: "SEA"
  },
  {
    decimals: "18",
    id: "0x53bba8f1d143b8ab80653dc2c1c4ddd49b6c7d8d",
    name: "Open Source Network",
    symbol: "OPN"
  },
  {
    decimals: "18",
    id: "0xf606bd19b1e61574ed625d9ea96c841d4e247a32",
    name: "Guardian",
    symbol: "GUARD"
  },
  {
    decimals: "18",
    id: "0xb962150760f9a3bb00e3e9cf48297ee20ada4a33",
    name: "xZoomerCoin",
    symbol: "xZOOMER"
  },
  {
    decimals: "18",
    id: "0x37ce6f28e3b63669b0a82dfa86662858d51e272a",
    name: "Scooby inu",
    symbol: "Scooby"
  },
  {
    decimals: "18",
    id: "0xf68a0de8919daac07753fe10ea1f7d6a2bc8307c",
    name: "PARMY Token",
    symbol: "PARMY"
  },
  {
    decimals: "9",
    id: "0x222c1e86c78b4a1d9c57c120d18b584be2c65937",
    name: "Baby Dragon",
    symbol: "BabyDragon"
  },
  {
    decimals: "18",
    id: "0xd24616870ca41bc01074446988faeb0085a71190",
    name: "Lord of Dragons Reward Token",
    symbol: "LORT"
  },
  {
    decimals: "18",
    id: "0x4634d58982138e93c951c1485d25bc619cbd1f75",
    name: "AiONE",
    symbol: "AiONE"
  },
  {
    decimals: "18",
    id: "0xb0c4080a8fa7afa11a09473f3be14d44af3f8743",
    name: "Stobox Token v.2",
    symbol: "STBU"
  },
  {
    decimals: "18",
    id: "0x766afcf83fd5eaf884b3d529b432ca27a6d84617",
    name: "Bolide",
    symbol: "BLID"
  },
  {
    decimals: "18",
    id: "0xf6565a97dc832d93dc83b75ee9aa5c7e8ecb0f9d",
    name: "HYVE",
    symbol: "HYVE"
  },
  {
    decimals: "18",
    id: "0xef4e9088c05424d6456056f3be80d7ae36278e9c",
    name: "GDAN",
    symbol: "GDAN"
  },
  {
    decimals: "18",
    id: "0x8dc0f602696de3ff03b37e19a172e5080f049c15",
    name: "Clashub",
    symbol: "CLASH"
  },
  {
    decimals: "18",
    id: "0xe308278c69d55adda9c4ef9dffae54a351f1ccab",
    name: "FALCON",
    symbol: "X"
  },
  {
    decimals: "18",
    id: "0xedef1f9ebd79e5057cf82b60fddcc7594a7615a7",
    name: "Runeword",
    symbol: "RUNE"
  },
  {
    decimals: "18",
    id: "0x391088b4594e41c003463c7e3a56a8ba00b8e7a9",
    name: "PodFast",
    symbol: "FAST"
  },
  {
    decimals: "18",
    id: "0x4dde9004c6460041a87f972168cdd7ab8b4c6441",
    name: "CHANCER",
    symbol: "CHANCER"
  },
  {
    decimals: "18",
    id: "0x95a6772a2272b9822d4b3dfeeaedf732f1d28db8",
    name: "PegHub.com",
    symbol: "PHUB"
  },
  {
    decimals: "18",
    id: "0x935a544bf5816e3a7c13db2efe3009ffda0acda2",
    name: "Bluzelle Token ",
    symbol: "BLZ"
  },
  {
    decimals: "18",
    id: "0xc5a05951f995cf19b7407820efeb618bf590d27a",
    name: "Mosquito Coin",
    symbol: "MOC"
  },
  {
    decimals: "18",
    id: "0x34b08ccf9620aed6d158bae65e85bb3bbe2c384a",
    name: "TourCoin",
    symbol: "TRC"
  },
  {
    decimals: "18",
    id: "0xf027e525d491ef6ffcc478555fbb3cfabb3406a6",
    name: "StaFi rBNB",
    symbol: "rBNB"
  },
  {
    decimals: "18",
    id: "0x846f52020749715f02aef25b5d1d65e48945649d",
    name: "Umbrella",
    symbol: "UMB"
  },
  {
    decimals: "18",
    id: "0x5af7e16aaf80ff4122f6964b09be5f4b5507b415",
    name: "Hhw",
    symbol: "HHW"
  },
  {
    decimals: "18",
    id: "0x5357e9c3488c7680e710b46b744e706e484b4ad7",
    name: "ELYSIA",
    symbol: "EL"
  },
  {
    decimals: "18",
    id: "0xb052b6c7c8f804a62ca14e5d284edcc70a151cf9",
    name: "TIKT",
    symbol: "TIKT"
  },
  {
    decimals: "18",
    id: "0xa40640458fbc27b6eefedea1e9c9e17d4cee7a21",
    name: "Anchored Coins EUR",
    symbol: "AEUR"
  },
  {
    decimals: "18",
    id: "0x1223334444a7466fbf985b14e1f4edaf3883bca6",
    name: "Grow",
    symbol: "GROW"
  },
  {
    decimals: "18",
    id: "0x7db21353a0c4659b6a9a0519066aa8d52639dfa5",
    name: "Joltify Coin",
    symbol: "JOLT"
  },
  {
    decimals: "18",
    id: "0x8a7b5fe6f43db70affc51f3881ff79354640f3e7",
    name: "ADSC Token",
    symbol: "ADSC"
  },
  {
    decimals: "8",
    id: "0xb10cb07ca2cdac77fbb5707f6690301f9d036f45",
    name: "Win",
    symbol: "WIN"
  },
  {
    decimals: "18",
    id: "0xbbca42c60b5290f2c48871a596492f93ff0ddc82",
    name: "Domi",
    symbol: "DOMI"
  },
  {
    decimals: "18",
    id: "0xb72a20c7b8bd666f80ac053b0f4de20a787080f5",
    name: "Media Licensing Token",
    symbol: "MLT"
  },
  {
    decimals: "18",
    id: "0x52da44b5e584f730005dac8d2d2acbdee44d4ba3",
    name: "KingToken",
    symbol: "KT"
  },
  {
    decimals: "18",
    id: "0x003fab51ba9ae9518c5acaeb53134ba4d4516b79",
    name: "TDR Token",
    symbol: "TDR"
  },
  {
    decimals: "18",
    id: "0x4b4b17aba4093c9a5a2e1aaff367d19b3b26b94a",
    name: "LiteCoin Ultra",
    symbol: "LTCU"
  },
  {
    decimals: "18",
    id: "0xc2378f88f18924c8c5a4ba5e2bf0aa5e5e15a184",
    name: "PetLFG",
    symbol: "LICK"
  },
  {
    decimals: "18",
    id: "0xa9279a1c36093185671676695eedb22f3330fb84",
    name: "circle index",
    symbol: "CCID"
  },
  {
    decimals: "18",
    id: "0xfba8d4af65c6d54612ba962bb3de3fc06b05f20a",
    name: "SlapFace",
    symbol: "SlaFac"
  },
  {
    decimals: "18",
    id: "0x460a49db303f620ad72fc070b6ffe90ce993713d",
    name: "Multi-Asset Utility Token",
    symbol: "MUA"
  },
  {
    decimals: "18",
    id: "0x2d2567dec25c9795117228adc7fd58116d2e310c",
    name: "SquadSwap",
    symbol: "SQUAD"
  },
  {
    decimals: "18",
    id: "0x2ccb747f969355e792f21335c54b92cd75c87d0c",
    name: "Stellaris Token",
    symbol: "STEL"
  },
  {
    decimals: "18",
    id: "0xcd7c5025753a49f1881b31c48caa7c517bb46308",
    name: "Raven Protocol",
    symbol: "RAVEN"
  },
  {
    decimals: "18",
    id: "0x12996c7b23c4012149bf9f5663ff9aa08a9cf2e4",
    name: "White Yorkshire",
    symbol: "WSH"
  },
  {
    decimals: "18",
    id: "0xe7eaf84b43bea4afea65535420ec975aa4b59c35",
    name: "NPT Coin",
    symbol: "NPT"
  },
  {
    decimals: "18",
    id: "0xea4821632b139b7f08e37533d8152d50976618c6",
    name: "Rug",
    symbol: "RUG"
  },
  {
    decimals: "5",
    id: "0xaf42a5df3c1c1427da8fc0326bd7b030a9367e78",
    name: "BSKT",
    symbol: "BSKT"
  },
  {
    decimals: "18",
    id: "0x7f68528a0464ecf3eb7f0c16bf77bbbb466c0288",
    name: "Hype Meme Token",
    symbol: "HMTT"
  },
  {
    decimals: "18",
    id: "0xacce237625e4e5ad971d949fd527c89d924cb653",
    name: "AI DUBAI",
    symbol: "AIDUBAI"
  },
  {
    decimals: "18",
    id: "0xb455d798e8b07dbbf9d4609f7b7bdc574463d0b3",
    name: "Shibaqua",
    symbol: "SHIB"
  },
  {
    decimals: "18",
    id: "0xcc7a91413769891de2e9ebbfc96d2eb1874b5760",
    name: "GovWorld Official",
    symbol: "GOV"
  },
  {
    decimals: "18",
    id: "0x82544454c88f6ac8b4ae50361c4db950fbcfac66",
    name: "MCA",
    symbol: "MCA"
  },
  {
    decimals: "18",
    id: "0x610547fb5e781c98ce52b62f9ace4e1526385311",
    name: "DINO WARS",
    symbol: "DINW"
  },
  {
    decimals: "18",
    id: "0x0b464d2c36d52bbbf3071b2b0fca82032dcf656d",
    name: "SwapQiQi",
    symbol: "QiQi"
  },
  {
    decimals: "6",
    id: "0x91ca579b0d47e5cfd5d0862c21d5659d39c8ecf0",
    name: "",
    symbol: ""
  },
  {
    decimals: "2",
    id: "0xf05e45ad22150677a017fbd94b84fbb63dc9b44c",
    name: "OG",
    symbol: "OG"
  },
  {
    decimals: "18",
    id: "0xb93ee4522c44ef4cd7ee8c83b9fe1a421b4b42c3",
    name: "Metatime",
    symbol: "MTC"
  },
  {
    decimals: "18",
    id: "0x24864549ee528ee50b9322bb6819d38f241c31d5",
    name: "burn2.0",
    symbol: "burn2.0"
  },
  {
    decimals: "18",
    id: "0xe085650f7c55787b183269cc9427edf310589347",
    name: "TrustPad 2.0",
    symbol: "TPAD"
  },
  {
    decimals: "18",
    id: "0xfc0b9b3e585a3dc59a066898f2394e5b1e2d8d5f",
    name: "GoldMax",
    symbol: "GMX"
  },
  {
    decimals: "18",
    id: "0xc0f0465d44f4846fae219623a3faa041b126dab1",
    name: "SQUARE MAKER",
    symbol: "SKER"
  },
  {
    decimals: "18",
    id: "0xd4abef1d6b87a584888ec15b92ef69b07da19f61",
    name: "CreamSwap",
    symbol: "Cream"
  },
  {
    decimals: "18",
    id: "0x26c5e01524d2e6280a48f2c50ff6de7e52e9611c",
    name: "Wrapped liquid staked Ether 2.0",
    symbol: "wstETH"
  },
  {
    decimals: "9",
    id: "0x6743665257c429605aa344ed04dff7a183a50296",
    name: "QJ",
    symbol: "QJ"
  },
  {
    decimals: "18",
    id: "0x1f1c90aeb2fd13ea972f0a71e35c0753848e3db0",
    name: "CHEELEE",
    symbol: "CHEEL"
  },
  {
    decimals: "18",
    id: "0x90422d35496e8ed3391971dbec894e4a8057081f",
    name: "Idle Ninja Online Token",
    symbol: "NINKY"
  },
  {
    decimals: "18",
    id: "0x0400ff00ffd395ef93e701ae27087a7eeeb84f32",
    name: "ZooBit.Org",
    symbol: "ZB"
  },
  {
    decimals: "6",
    id: "0x20b4620a767d6dccbb9314104d5cf0d08d1f7045",
    name: "Kilopi",
    symbol: "LOP"
  },
  {
    decimals: "18",
    id: "0x50e6c37ca59488701b05c1f3dfa0ff07de5f4b98",
    name: "Arbitrary coin power union",
    symbol: "ACPU"
  },
  {
    decimals: "18",
    id: "0xf46306cdc35b845ebcc823be8363249b21f7ee63",
    name: "Tradehub",
    symbol: "TRHUB"
  },
  {
    decimals: "9",
    id: "0x564a4468e1060a0dd40356d044682e5688888888",
    name: "BK",
    symbol: "BK"
  },
  {
    decimals: "18",
    id: "0x89ebfda3a8e69e541bfe61770c1f9d9fd7342941",
    name: "Bitcoin BX",
    symbol: "BX"
  },
  {
    decimals: "18",
    id: "0xe0db679377a0f5ae2bae485de475c9e1d8a4607d",
    name: "BOBA Token",
    symbol: "BOBA"
  },
  {
    decimals: "18",
    id: "0x1fd169fee61db18ef5f7854bbbb5ed19fef1c660",
    name: "Aarota Soft Tech",
    symbol: "AST"
  },
  {
    decimals: "18",
    id: "0xbe8868d6d8bf0021af801f931bcf9105add6fbed",
    name: "Wrapped Beng",
    symbol: "WBeng"
  },
  {
    decimals: "18",
    id: "0xdda8d1fd0d42f2cb43f625e6d3f13eb2cdef983f",
    name: "XenBitcoin",
    symbol: "XBTC"
  },
  {
    decimals: "18",
    id: "0xe6d19cfa419fc81029b11b335ba5c53a0aa6e37f",
    name: "Demon",
    symbol: "DEMON"
  },
  {
    decimals: "18",
    id: "0xde76797419d3af76206b9a6aab06539f7135ebe8",
    name: "History of SaoHoo since 1982",
    symbol: "saoho"
  },
  {
    decimals: "18",
    id: "0xb524a9a21702813f8ea7a79c16afcb5fb4660544",
    name: "IPO",
    symbol: "IPO"
  },
  {
    decimals: "9",
    id: "0xa9500f552ba0c249817c813999d856cbc932e847",
    name: "DaDaAiToken",
    symbol: "DaDa"
  },
  {
    decimals: "18",
    id: "0x34294afabcbaffc616ac6614f6d2e17260b78bed",
    name: "ApeBond",
    symbol: "ABOND"
  },
  {
    decimals: "18",
    id: "0xb4b7b339949cc24b3508c4e37e252c2f982f3a41",
    name: "Bridge of Balance",
    symbol: "BOB"
  },
  {
    decimals: "5",
    id: "0x566f47bf6e0fd69cd97da548573a6127c18ce1c0",
    name: "Metaverse",
    symbol: "META"
  },
  {
    decimals: "18",
    id: "0xefc815196e33f30c5ce42b9d7418688fe33f31a9",
    name: "HMA token",
    symbol: "HMA"
  },
  {
    decimals: "18",
    id: "0x843d4a358471547f51534e3e51fae91cb4dc3f28",
    name: "loser coin",
    symbol: "lowb"
  },
  {
    decimals: "0",
    id: "0x7597bdccf10e41bccc374a6a0104cf430c420884",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0xe6906717f129427eebade5406de68cadd57aa0c0",
    name: "Meta Interstellar Token",
    symbol: "MIT"
  },
  {
    decimals: "18",
    id: "0x124bc965a42fa4ca8967d5bd764d7c50df730a08",
    name: "Qubic Network",
    symbol: "QUBIC"
  },
  {
    decimals: "9",
    id: "0x04e3e226bedfd57252198443561b57c0a6456e9b",
    name: "FAYA",
    symbol: "FAYA"
  },
  {
    decimals: "18",
    id: "0x00f97c17f4dc4f3bfd2dd9ce5e67f3a339a8a261",
    name: "Shield Protocol",
    symbol: "SHIELD"
  },
  {
    decimals: "6",
    id: "0x704e37fefb6605db31835a89cb1ef10732c4bfd1",
    name: "luckypoop",
    symbol: "luckypoop"
  },
  {
    decimals: "18",
    id: "0x3d1f281a7f3ac7a7551691f802e1de735963e0c5",
    name: "STXPrime",
    symbol: "STXP"
  },
  {
    decimals: "18",
    id: "0xd99903242745e8e3ecf1e2a7d4f6052282f891ee",
    name: "4D Twin Maps",
    symbol: "4DMAPS"
  },
  {
    decimals: "8",
    id: "0x73cf73c2503154de4dc12067546aa9357dadaff2",
    name: "42-coin",
    symbol: "42"
  },
  {
    decimals: "18",
    id: "0x23ec58e45ac5313bcb6681f4f7827b8a8453ac45",
    name: "Zenfuse Trading Platform Token (BSC)",
    symbol: "ZEFU"
  },
  {
    decimals: "18",
    id: "0xf77dcb1d378ff8b83a1948f7982cb6a9802d1037",
    name: "Funny Coin",
    symbol: "FUC"
  },
  {
    decimals: "18",
    id: "0xfeb4e9b932ef708c498cc997abe51d0ee39300cf",
    name: "GetKicks",
    symbol: "KICKS"
  },
  {
    decimals: "18",
    id: "0x36530092b1413c21ab7e5203197cf76d4d598888",
    name: "ShopNEXT Reward Token",
    symbol: "STE"
  },
  {
    decimals: "18",
    id: "0xb6b8ccd230bb4235c7b87986274e7ab550b72261",
    name: "HALO Token",
    symbol: "HALO"
  },
  {
    decimals: "18",
    id: "0xecd17cff5da1ec867fec5faec97d1035727d7511",
    name: "Kamaleont",
    symbol: "KLT"
  },
  {
    decimals: "18",
    id: "0x6be6ac5fd71d7395a1fc875cf34c112177ce3413",
    name: "LOVE",
    symbol: "LOVE"
  },
  {
    decimals: "18",
    id: "0x2dc917b722184ece1dcb9bb9dddfb1d63ccd25eb",
    name: "WHITE RHINOCEROS",
    symbol: "WHRH"
  },
  {
    decimals: "18",
    id: "0x85528a8d186a55bde79cacb30dfddba4a9da5f0a",
    name: "MakeOurBinanceAmazing",
    symbol: "MOBA"
  },
  {
    decimals: "8",
    id: "0xb850cac12ab85d4400db61ac78dc5fc2418b6868",
    name: "CTOMORROW PLATFORM",
    symbol: "CTP"
  },
  {
    decimals: "18",
    id: "0x6cf8e39252bee00d168bd25bdf5834347d78e346",
    name: "choise.com Token",
    symbol: "CHO"
  },
  {
    decimals: "18",
    id: "0xa801d5ecb0dd7263655bae6511709146588bb55b",
    name: "Consensys Win",
    symbol: "CONSENSYS"
  },
  {
    decimals: "18",
    id: "0x3dbd49ad2b79bd563dc85ef5d4ed8f20a9f5c993",
    name: "coundown",
    symbol: "CDN"
  },
  {
    decimals: "0",
    id: "0xf6769d9ba88e9e0c9827b1aae33dd83da252d629",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0xef1f39d8391cddcaee62b8b383cb992f46a6ce4f",
    name: "META",
    symbol: "META"
  },
  {
    decimals: "18",
    id: "0xfe702f40ab9467f503a5fef3752a89881efda7eb",
    name: "KcPay",
    symbol: "KCP"
  },
  {
    decimals: "18",
    id: "0x5674743427b624c87be4159495c88ba4356335aa",
    name: "2024",
    symbol: "2024"
  },
  {
    decimals: "18",
    id: "0x9ba43191a84a726cbc48716c1ceb3d13a28a4535",
    name: "IXIR",
    symbol: "IXIR"
  },
  {
    decimals: "18",
    id: "0xe356cb3efc9cb4320b945393a10fd71c77dc24a0",
    name: "Tradetomato Token",
    symbol: "TTM"
  },
  {
    decimals: "18",
    id: "0xc3ecff520953cec9098e8d573dd277dd289098ae",
    name: "Kai Token",
    symbol: "KAI"
  },
  {
    decimals: "18",
    id: "0x3fd230b77ad19aaf6330da7854ec76d5aeb49ead",
    name: "CoinRobot.AI",
    symbol: "COINROBOT"
  },
  {
    decimals: "18",
    id: "0x74d45cc9af8e4e9f967ad923a8878044e5e96c0d",
    name: "PrimaVera",
    symbol: "PERA"
  },
  {
    decimals: "18",
    id: "0xa7324831da3deb902f0ff78a018fb8c2af333d1f",
    name: "Disruptive Protocol Asset",
    symbol: "DPA"
  },
  {
    decimals: "18",
    id: "0xcee4e6f4d8e634e329c457a4f98c090afafb1c4b",
    name: "2024 PUMP",
    symbol: "2024"
  },
  {
    decimals: "18",
    id: "0x11a31b833d43853f8869c9eec17f60e3b4d2a753",
    name: "BioFi",
    symbol: "BioFi"
  },
  {
    decimals: "18",
    id: "0x2d27ce2c1b19c0fb72422053bea69e333269bf04",
    name: "Artificial Intelligence Super Chain",
    symbol: "AISC"
  },
  {
    decimals: "18",
    id: "0x50ef21c81cfbf70a6824c83e45b170c0da17cdc1",
    name: "Camels Inu",
    symbol: "CAMEL"
  },
  {
    decimals: "4",
    id: "0x038a4a1f278031040f4a398033735cf84b57df59",
    name: "Wer coin",
    symbol: "Wer"
  },
  {
    decimals: "18",
    id: "0xb7f8cd00c5a06c0537e2abff0b58033d02e5e094",
    name: "Paxos Standard",
    symbol: "PAX"
  },
  {
    decimals: "18",
    id: "0x80b199fedb89eb5fd6b4efd9f000508ecc76f81c",
    name: "MicroCreditToken",
    symbol: "MCT"
  },
  {
    decimals: "18",
    id: "0x9a153e1fd8323647b349ee8554f22957cc20a349",
    name: "Global SBLC",
    symbol: "gSBLC"
  },
  {
    decimals: "18",
    id: "0xdfa1c5fcd4d64729cdf6d553b2fb1def11a7c689",
    name: "DCOREUM",
    symbol: "DCO"
  },
  {
    decimals: "18",
    id: "0xcfb70a4f8a3665e7c4d12f903cbd5046a541d887",
    name: "0001sensations ",
    symbol: "valium "
  },
  {
    decimals: "18",
    id: "0xdd23a3d8b57c6a31b4d863f32bf542365e407622",
    name: "Xerc404X",
    symbol: "X"
  },
  {
    decimals: "18",
    id: "0x3cb6b8dbbe340691529551b2bc460efafdc91d20",
    name: "BEP20DHP",
    symbol: "bDHP"
  },
  {
    decimals: "18",
    id: "0x9321bc6185adc9b9cb503cc211e17cb311c3fa95",
    name: "SGO",
    symbol: "SGO"
  },
  {
    decimals: "18",
    id: "0x6866b964f12ad1006d4b00520eb8ad61e7cc208d",
    name: "Upfi",
    symbol: "UPFI"
  },
  {
    decimals: "18",
    id: "0xe1987271a2838e7caded3625fe8b1be714084caf",
    name: "Nudefi",
    symbol: "NUDE"
  },
  {
    decimals: "18",
    id: "0xd91a5f4553b3f3a8c6459d433044ff2694381041",
    name: "optimum earn  track",
    symbol: "OET"
  },
  {
    decimals: "18",
    id: "0xa8d29a0cc90965acee773f74606ee0b45286a2fe",
    name: "ORON",
    symbol: "ORON"
  },
  {
    decimals: "18",
    id: "0x8105ece4ce08b6b6449539a5db23e23b973dfa8f",
    name: "MAP Protocol",
    symbol: "MAP"
  },
  {
    decimals: "18",
    id: "0x9e20461bc2c4c980f62f1b279d71734207a6a356",
    name: "OmniCat",
    symbol: "OMNI"
  },
  {
    decimals: "18",
    id: "0x6664d47a0985584e8c1d99da138fe211b1c5ae67",
    name: "USDe",
    symbol: "USDE"
  },
  {
    decimals: "18",
    id: "0xe68b79e51bf826534ff37aa9cee71a3842ee9c70",
    name: "CZUSD",
    symbol: "CZUSD"
  },
  {
    decimals: "18",
    id: "0x39db1a30122031751e803fabf329c44efbbfbf4b",
    name: "Frax Ether",
    symbol: "frxETH"
  },
  {
    decimals: "8",
    id: "0x7346aefecbb75c982575ee8861ddf365e7d0ae7d",
    name: "Libcoin",
    symbol: "LEN"
  },
  {
    decimals: "18",
    id: "0xec9742f992acc615c4252060d896c845ca8fc086",
    name: "BRICS Chain",
    symbol: "BRICS"
  },
  {
    decimals: "18",
    id: "0xcb191ac518e7dee0f6e34c6b59ffbef47580e092",
    name: "Acria AI Market",
    symbol: "AIMARKET"
  },
  {
    decimals: "18",
    id: "0x2889ab28029faeecd45487e6258f5e119a8c40f2",
    name: "TON Space Wallet in Telegram",
    symbol: "TON SPACE"
  },
  {
    decimals: "18",
    id: "0x2024b9be6b03f2a57d3533ae33c7e1d0b0b4be47",
    name: "Bitcointry Token",
    symbol: "BTTY"
  },
  {
    decimals: "18",
    id: "0xa80d88d15c315a8f40229fed2d01551747b97fd2",
    name: "Tenere",
    symbol: "TNR"
  },
  {
    decimals: "18",
    id: "0xd9eea06e2220a0e4af7ceb0f4628c3809a5025c7",
    name: "Life Token Global",
    symbol: "LIFE"
  },
  {
    decimals: "18",
    id: "0x3374a94e25606db7bea79039c042e9ef12ad324d",
    name: "ESTWO DIGITAL ASET ",
    symbol: "EDA"
  },
  {
    decimals: "12",
    id: "0xbada1ed4003fee20075b44b2d3b9db7bae472042",
    name: "Chow Chow",
    symbol: "CHOW"
  },
  {
    decimals: "18",
    id: "0x6e2d3d61a12a8fa1dad7a9ffaf9b59961fc9a045",
    name: "Kuma",
    symbol: "KUMA"
  },
  {
    decimals: "18",
    id: "0x4803ac6b79f9582f69c4fa23c72cb76dd1e46d8d",
    name: "TopManager Token",
    symbol: "TMT"
  },
  {
    decimals: "18",
    id: "0xace3d31ebac0c3ddfc1d2aa5c5ecc8c67509d15c",
    name: "LOVE",
    symbol: "LOVE"
  },
  {
    decimals: "18",
    id: "0x2d4133642a121ec1c3873c9c6112d2f62df22b57",
    name: "Detodocoin",
    symbol: "DTCN"
  },
  {
    decimals: "18",
    id: "0x58b26c9b2d32df1d0e505bcca2d776698c9be6b6",
    name: "VOVO Token",
    symbol: "VOVO"
  },
  {
    decimals: "18",
    id: "0x26d3163b165be95137cee97241e716b2791a7572",
    name: "DSHARE",
    symbol: "DSHARE"
  },
  {
    decimals: "18",
    id: "0x3e195dd3c55568362dcab32a61d253c1ca365786",
    name: "Great Wall Chain",
    symbol: "GWM"
  },
  {
    decimals: "18",
    id: "0x491347561cec563ad7d91135f92dbdc700277505",
    name: "BFX",
    symbol: "BFX"
  },
  {
    decimals: "18",
    id: "0xac472d0eed2b8a2f57a6e304ea7ebd8e88d1d36f",
    name: "Anime",
    symbol: "ANI"
  },
  {
    decimals: "18",
    id: "0x0a846d5f27b9192270567d9e0c20d1895fc92ed9",
    name: "Tesla Benchmarking Cars",
    symbol: "TBC"
  },
  {
    decimals: "18",
    id: "0x888888888888f195e27a2e0f98d712952ab9348e",
    name: "IPI Shorter",
    symbol: "IPISTR"
  },
  {
    decimals: "18",
    id: "0xaebda897fcc972f7d40bc42eaad848358ea30529",
    name: "Alkash Meme Coin",
    symbol: "ALKASH"
  },
  {
    decimals: "18",
    id: "0xf99f2aec50adfde23cc67ab6240168b0a59f1d30",
    name: "IVY",
    symbol: "IVY"
  },
  {
    decimals: "5",
    id: "0xb034e7963ca7744aca88e5e222ac7a000d51c19f",
    name: "LayerZero",
    symbol: "ZRO"
  },
  {
    decimals: "18",
    id: "0x0c09cebe826dae71d5e59458b742539f603530f7",
    name: "Pancake LPs",
    symbol: "Cake-LP"
  },
  {
    decimals: "10",
    id: "0x2df2a49e0cf2b4faccf089e522eb6d3b63738e2c",
    name: "TTMP",
    symbol: "TTMP"
  },
  {
    decimals: "18",
    id: "0x0cc5dc6cd17a4e003d675ae91354373945d4e0c6",
    name: "UFO alien",
    symbol: "UFO"
  },
  {
    decimals: "18",
    id: "0xaf88331abc43a019cb3e28a86d73e990f77ddf89",
    name: "RougeCoin",
    symbol: "XRGE"
  },
  {
    decimals: "18",
    id: "0xdd9852b32c1fd16488967f197680b0c0fdb106aa",
    name: "HasbullaMoon",
    symbol: "HBM"
  },
  {
    decimals: "18",
    id: "0x7e9d9c632c2f82066388a5a66300183ed2885572",
    name: "APSNY",
    symbol: "APSNY"
  },
  {
    decimals: "6",
    id: "0x9377e3c3180dddfcda4e4217ed21f2f7c3b235a0",
    name: "CAVADA",
    symbol: "CAVADA"
  },
  {
    decimals: "18",
    id: "0xab237ec2162e199c90c7d0bf587c455cf0d7d34e",
    name: "Lsodya",
    symbol: "LSDY"
  },
  {
    decimals: "10",
    id: "0x8839adcd26fdd3645f9c1d016f01f6d331c48767",
    name: "HST",
    symbol: "HST"
  },
  {
    decimals: "18",
    id: "0x1ec58fe5e681e35e490b5d4cbecdf42b29c1b063",
    name: "JK COIN",
    symbol: "JK"
  },
  {
    decimals: "18",
    id: "0x66d79b8f60ec93bfce0b56f5ac14a2714e509a99",
    name: "MAP Protocol",
    symbol: "MAPO"
  },
  {
    decimals: "18",
    id: "0x5506d3b14cc58c8c4790be4e89fc66b389be9f3e",
    name: "GSO Token",
    symbol: "GSO"
  },
  {
    decimals: "18",
    id: "0xacd2b5e2cb43532a7a01db2bf7a2f37871d80e64",
    name: "pht",
    symbol: "pht"
  },
  {
    decimals: "18",
    id: "0xdafc45a82c3681d857c6ae36227998190a9b6798",
    name: "KINDNESS FOR THE SOUL ",
    symbol: "SOUL "
  },
  {
    decimals: "18",
    id: "0x6f385377709eb4e1dc3ccb392b188feee788896e",
    name: "ChatGPT",
    symbol: "ChatGPT"
  },
  {
    decimals: "18",
    id: "0x349a3a681a5beb51902faeb9326de26b3a5c31e2",
    name: "Bitcoin Interest",
    symbol: "BCI"
  },
  {
    decimals: "18",
    id: "0x76e08e1c693d42551dd6ba7c2a659f74ff5ba261",
    name: "Shakita Inu",
    symbol: "Shak"
  },
  {
    decimals: "18",
    id: "0xc37d341ea63bd93219a0e36c8213d9e8e4888888",
    name: "vDBX",
    symbol: "DBX"
  },
  {
    decimals: "18",
    id: "0xbc28850e5da66b3a545fbdf0492ec8b34347109a",
    name: "bitmap.land",
    symbol: "BITMAP"
  },
  {
    decimals: "18",
    id: "0xe96fb4d635c51b133abba6e771f3a61171c48d7d",
    name: "Hhx",
    symbol: "HHX"
  },
  {
    decimals: "4",
    id: "0x7aa2894e96a9ec1a907a93e31ea2cace4644d7d3",
    name: "The flame token",
    symbol: "TFT"
  },
  {
    decimals: "18",
    id: "0x916ee185dbd3c4541d4ce8c5a774ce0623898a77",
    name: "BlackCat",
    symbol: "BC"
  },
  {
    decimals: "18",
    id: "0x7411f8d62203a9b4d2c7fbf063fabfef8d6290e0",
    name: "Avrora mAVR Token",
    symbol: "mAVR"
  },
  {
    decimals: "18",
    id: "0xb8afc02c6959bfe0fa6445c515ddceaa58c47026",
    name: "BabyBNBFloki",
    symbol: "BBF"
  },
  {
    decimals: "5",
    id: "0x05675c77ddf19d2e139f7a34164746c3bf32a2f1",
    name: "Issued by the Sacred Law for the Pleasure of Divinity",
    symbol: "Gaiano"
  },
  {
    decimals: "8",
    id: "0x67e6cc7af400e1a5f0018feff566f93dc2f95cc2",
    name: "SINERGIA",
    symbol: "SNG"
  },
  {
    decimals: "18",
    id: "0xdb79c12d1d0670988a39b0e48b96e955ef922d24",
    name: "Teddy Doge V2",
    symbol: "Teddy V2"
  },
  {
    decimals: "18",
    id: "0xe2a15230242c958384ca05b0c7d5d1aa8f8b710f",
    name: "Pink Pepe",
    symbol: "PIPEPE"
  },
  {
    decimals: "18",
    id: "0x1a05ebd6fa3a9ff19e40988f84dbb300abb2b11d",
    name: "Lollipop",
    symbol: "LOLLY"
  },
  {
    decimals: "18",
    id: "0xc6433135b473666bbdc09bfce9fb58e9c4d8749d",
    name: "Synth Ai Meme",
    symbol: "SAM"
  },
  {
    decimals: "18",
    id: "0x4d2776307c56b44431744221c09c59cc4c371779",
    name: "The Kitten Cat",
    symbol: "KITTEN"
  },
  {
    decimals: "18",
    id: "0xf106f153bd77be6d5191a07159c99c4219a1cec4",
    name: "DCNTRL Network",
    symbol: "DCNX"
  },
  {
    decimals: "18",
    id: "0x7133ced95c468b76175168600590c6260164f74b",
    name: "WOD.AI-BSC",
    symbol: "WOD"
  },
  {
    decimals: "18",
    id: "0x701b7acddf7ccb04c2e95d03c45d0f384105b08c",
    name: "NeuralCoin",
    symbol: "NAC"
  },
  {
    decimals: "10",
    id: "0xf4a00b788ee6d063559c5982ea9dc405fd9fff63",
    name: "BMYR",
    symbol: "BMYR"
  },
  {
    decimals: "18",
    id: "0xad55fb67a92383086e8abaeb878972e288d517a4",
    name: "CTC",
    symbol: "CTC"
  },
  {
    decimals: "9",
    id: "0xda75aaad4cbbc16a1ddda3583ffb06e2fd0289fb",
    name: "Binance Dog",
    symbol: "CIPPONE"
  },
  {
    decimals: "18",
    id: "0x05f00661c5de083c15f1137e9fa53f34ad11fd65",
    name: "TRUE LOVE",
    symbol: "LOVE"
  },
  {
    decimals: "18",
    id: "0xbd436456ec590fe2cd279e9408d068673121b494",
    name: "jerry",
    symbol: "jerry"
  },
  {
    decimals: "6",
    id: "0x44846e92dd01e3fe8f84a9a33d555b2aee862edb",
    name: "Terra Tritium Token",
    symbol: "TRIT"
  },
  {
    decimals: "18",
    id: "0x174251287a4a10a44f57aed92fc12af8882f115c",
    name: "Golden Dragon",
    symbol: "GDDR"
  },
  {
    decimals: "1",
    id: "0x9a2868c91b33540e83f31620e4c44ea344a5ac3b",
    name: "Tmv coin ",
    symbol: "Tmv"
  },
  {
    decimals: "18",
    id: "0x56403d4123e0662b9b0e22b4bc447d59b39b91ad",
    name: "Perpetual Motion Machine 315",
    symbol: "PMM315"
  },
  {
    decimals: "18",
    id: "0xbe655f7b58d5482e09aa426e54a4d20c6f80a122",
    name: "Salah ad-Din",
    symbol: "SALAH"
  },
  {
    decimals: "18",
    id: "0x7c8f96c6816f1d9afd9625574de80791fb9cae4b",
    name: "Chinese Zodiac Dragon",
    symbol: "CZDRAGON"
  },
  {
    decimals: "18",
    id: "0xdb5bcde758e4a4c0a723971742361a19aa77c4ba",
    name: "NRT",
    symbol: "NRT"
  },
  {
    decimals: "18",
    id: "0x3ade350e05f631f946b6d2b1a2deaaf95dcb243a",
    name: "Meta games Coin",
    symbol: "MGC"
  },
  {
    decimals: "18",
    id: "0x7e842b40e06a0b4c7f72a553a405993123c225a2",
    name: "friend.tech",
    symbol: "FRIEND"
  },
  {
    decimals: "18",
    id: "0x060c0cd6758c3c68429489bbdb3a0afbc77e3844",
    name: "FAB Token",
    symbol: "FAB"
  },
  {
    decimals: "4",
    id: "0x71be881e9c5d4465b3fff61e89c6f3651e69b5bb",
    name: "BRZ Token",
    symbol: "BRZ"
  },
  {
    decimals: "18",
    id: "0x15fee022b39579b353b9399af6272a12843084ee",
    name: "AICO",
    symbol: "AICO"
  },
  {
    decimals: "18",
    id: "0x0cf453dc7ea21ef8fdffc1b14cb848e1e3884be5",
    name: "SportPoint",
    symbol: "POINT"
  },
  {
    decimals: "18",
    id: "0x32bd8794a3b51018cc86a30997f73b57fc8755d1",
    name: "fantasy coin",
    symbol: "FTY"
  },
  {
    decimals: "18",
    id: "0xd67ca81c326aeb0c780016401970cad4e29e6902",
    name: "Tesla Token",
    symbol: "TESLA"
  },
  {
    decimals: "10",
    id: "0x0976bd9e6c5c4eedf2a535c2a87ea390787a6e45",
    name: "Expert Infra",
    symbol: "EIM"
  },
  {
    decimals: "18",
    id: "0x34bcd80dcf2da6a07f48a2ce08537daf2f140c6b",
    name: "LISTA",
    symbol: "LISTA"
  },
  {
    decimals: "18",
    id: "0xb3c33b5128f27b089c5407273e9f6b03ba3693a0",
    name: "GRACIASGARDEN",
    symbol: "GRG"
  },
  {
    decimals: "18",
    id: "0xda541c4c25b98fbbe10e1daf12ed5e8cbf3263a8",
    name: "SUPER DREAM CITY",
    symbol: "SDC"
  },
  {
    decimals: "18",
    id: "0x91dc92be0bfc47db50790949f423b62282887292",
    name: "Transit Swap Certificates",
    symbol: "TS"
  },
  {
    decimals: "18",
    id: "0x64f291de10ecd36d5f7b64aaebc70943cface28e",
    name: "EAC",
    symbol: "EAC"
  },
  {
    decimals: "18",
    id: "0xec86b3f01671147ed9a2066d2e51afa9906cae37",
    name: "AZERCRYPTO",
    symbol: "AZC"
  },
  {
    decimals: "18",
    id: "0x650bba0eeea407681e3bcca434707240d0911b6f",
    name: "TIKT",
    symbol: "TIKT"
  },
  {
    decimals: "18",
    id: "0xef33fd3d46c3efa1804b513e3ddb7fdff215def1",
    name: "MYRA",
    symbol: "MYR"
  },
  {
    decimals: "18",
    id: "0x472935591f64a09c5622eed08c51707a6640c86a",
    name: "Nitroken",
    symbol: "NITO"
  },
  {
    decimals: "0",
    id: "0xf5fab72f773af2a728c0d7a2a9089e5abbb77d75",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0x7e9808c731ce79b2dfc18b88e3baad3d115db102",
    name: "Vexchange",
    symbol: "VEX"
  },
  {
    decimals: "0",
    id: "0x1232ad2f0749bcd3cd4d57b06e62cc8c4f6a7177",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0x8834d830208e40328b8f7b99874c348f0d1e4d72",
    name: "BTC20",
    symbol: "BTC20"
  },
  {
    decimals: "1",
    id: "0xc8c61c3b496ac72441844643506919952f9a4133",
    name: "X-413",
    symbol: "X-413"
  },
  {
    decimals: "18",
    id: "0x1a076e4633fa139d7b908b88326de603fbe8c199",
    name: "Football at AlphaVerse",
    symbol: "FAV"
  },
  {
    decimals: "18",
    id: "0x4595ae1eaecbd4cffc5e5cc7754bbeb12fa5a2a2",
    name: "BWEDAO",
    symbol: "BWEDAO"
  },
  {
    decimals: "18",
    id: "0x0565805ca3a4105faee51983b0bd8ffb5ce1455c",
    name: "BlockchainSpace [via ChainPort.io]",
    symbol: "GUILD"
  },
  {
    decimals: "6",
    id: "0xc3cac4ae38ccf6985ef9039acc1abbc874ddcbb0",
    name: "Axelar Wrapped STARS",
    symbol: "axlSTARS"
  },
  {
    decimals: "18",
    id: "0xe56746d34b46c0c2355d7fa2659218e7e56932bc",
    name: "PICH",
    symbol: "PICH"
  },
  {
    decimals: "16",
    id: "0xf23c5be290292d9a7dfca0036c58d9578fb192a0",
    name: "BYR",
    symbol: "BYR"
  },
  {
    decimals: "16",
    id: "0x8d879a030b339a91538e806616921fdad163b064",
    name: "KKCB",
    symbol: "KKCB"
  },
  {
    decimals: "18",
    id: "0xea02412ed7290623acc267e98b69ad81ad4c9481",
    name: "MYRA Token",
    symbol: "MYRA"
  },
  {
    decimals: "18",
    id: "0x34e7b24c6203cf361b73e426e0b9cfbb28dcc01f",
    name: "Wrapped UPFI",
    symbol: "WUPFI"
  },
  {
    decimals: "18",
    id: "0xad88cc97f6c175c39a391e57469e332e5a2bde75",
    name: "Ripple classic",
    symbol: "XRPCL"
  },
  {
    decimals: "18",
    id: "0xf0b75b6ed5379c05938320895a8a096eb3096eba",
    name: "BabyBNBFloki",
    symbol: "BBF"
  },
  {
    decimals: "18",
    id: "0x557805bbe627ad81adecf4a94ef028141cebabdf",
    name: "BCRYPTOPIA",
    symbol: "BCPI"
  },
  {
    decimals: "18",
    id: "0x02401d8244fb52ba1860520deeeabd8ef975f936",
    name: "4",
    symbol: "FOUR"
  },
  {
    decimals: "18",
    id: "0xe9c07a8092ce2c689413b91d7410f12539c2b114",
    name: "PapaDoge",
    symbol: "PAPADOGE"
  },
  {
    decimals: "8",
    id: "0x02724c3927859bc47abc9a94ef6c818ea49332d9",
    name: "TFRS",
    symbol: "TFRS"
  },
  {
    decimals: "18",
    id: "0x7635120d43584e3d9639b81de61f8b5191ffca98",
    name: "LOANLINK TOKEN",
    symbol: "LLT"
  },
  {
    decimals: "9",
    id: "0xcaafe21960e4d1491dd801b2d0155304bbf927b6",
    name: "DoveCoin",
    symbol: "DoveCoin"
  },
  {
    decimals: "18",
    id: "0x60f6b4de4b411967331dcf0d7d21e7f22f4218b9",
    name: "PUS",
    symbol: "PUS"
  },
  {
    decimals: "18",
    id: "0x0d4629ff6d6ca422178dc66a21eea0dfb182e72c",
    name: "CopXToken",
    symbol: "COPX"
  },
  {
    decimals: "18",
    id: "0x4735a433efdcacb7374e50b3653da1af13b80c38",
    name: "HYP",
    symbol: "HYP"
  },
  {
    decimals: "18",
    id: "0x72b462178d42a7101940654f8629fda2cdd6eb11",
    name: "Overlay",
    symbol: "OV"
  },
  {
    decimals: "18",
    id: "0xfbc26841c173e9cce7be7c811cb8fe06289be820",
    name: "ASR Coin",
    symbol: "ASR"
  },
  {
    decimals: "18",
    id: "0x43d0551682687589c742f72309906d2b4f4ff05a",
    name: "TESLANETWORK COIN",
    symbol: "TESLANET"
  },
  {
    decimals: "18",
    id: "0x48e34efa67032ca5b15543c269b6c81d584c74a3",
    name: "rat coin",
    symbol: "RAT"
  },
  {
    decimals: "18",
    id: "0x137615267e6a4680d7d417951d96d45678b4a3d3",
    name: "MAKO",
    symbol: "MAKO"
  },
  {
    decimals: "18",
    id: "0x4f0813c4f46263c89d3c68837abd165ec2b324a7",
    name: "Star coin",
    symbol: "STAR"
  },
  {
    decimals: "18",
    id: "0xe864d06eeec7dd463c60be42c54886d238995919",
    name: "Epochal Cell Coin",
    symbol: "ECC"
  },
  {
    decimals: "18",
    id: "0x034dde6f6546a08f1f18f430d8a9bfa2a25f662c",
    name: "TemtAI",
    symbol: "TEMT"
  },
  {
    decimals: "18",
    id: "0x0085c014256e6cd2dcb76f73937e37a23de075e4",
    name: "MANTA NETWORK",
    symbol: "MANTA"
  },
  {
    decimals: "18",
    id: "0x62cfe8ac265918815f3ad5a2546d0dd96c62789b",
    name: "PANDA",
    symbol: "PANDA"
  },
  {
    decimals: "18",
    id: "0xbb4b8c06f14eeaee36e8e481259284772b49d1c8",
    name: "Gaura Ecosystem Token",
    symbol: "GET"
  },
  {
    decimals: "18",
    id: "0x34ed9b0c8bde1478470ed3bebd5bd131431d4624",
    name: "Green Dragon",
    symbol: "GRDR"
  },
  {
    decimals: "18",
    id: "0x1926554f9dc1c91caf7bdd2196410db4bbbb717d",
    name: "UniSat Wallet",
    symbol: "UNISAT"
  },
  {
    decimals: "18",
    id: "0x05a2eb59bdaafbb59cd863ba9092b9002c0417c6",
    name: "Decentralized Future",
    symbol: "ICE"
  },
  {
    decimals: "18",
    id: "0xa81cb7656c3af44566f44b275269b6938b0ba39d",
    name: "quantum coin",
    symbol: "QTM"
  },
  {
    decimals: "18",
    id: "0xa70de21f95b8f30a483c0490f5e3a64b31bd06c8",
    name: "PiPiXia",
    symbol: "PPX"
  },
  {
    decimals: "18",
    id: "0xc4402fccef278ea6367296b74f3fd2e12f4726c5",
    name: "AwesomeQA",
    symbol: "AwesomeQA"
  },
  {
    decimals: "0",
    id: "0xf44e63caebb71df1b73a033b96edf89cc9cd84ac",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0x398f7827dccbefe6990478876bbf3612d93baf05",
    name: "MixMarvel Token",
    symbol: "MIX"
  },
  {
    decimals: "18",
    id: "0x467eaebadb8e24f7b4747b70a58de8b84da494e4",
    name: "Green Monster Dildo",
    symbol: "DILDO"
  },
  {
    decimals: "18",
    id: "0x78353861e96a4a3d757bc7ef6c0dd4f667e6274b",
    name: "PECLand",
    symbol: "$PECL"
  },
  {
    decimals: "18",
    id: "0xac66fb49759d5cb644d2527f3053a75766467fe9",
    name: "Ledger",
    symbol: "LDG"
  },
  {
    decimals: "18",
    id: "0x1dc525b3b1a5040dd1324618c49374edf13c3c5d",
    name: "IDM",
    symbol: "IDM"
  },
  {
    decimals: "18",
    id: "0xd369f1af3f6d194800ebb76ed70a23055927fb49",
    name: "Celestia",
    symbol: "TIA"
  },
  {
    decimals: "18",
    id: "0xeb1b4651a9bcc7f5fc2f8ba9e73b70f2e4d8d802",
    name: "JAZ",
    symbol: "JAZ"
  },
  {
    decimals: "18",
    id: "0x8b3a48e51dffcc67ba22669dc1e5957d19905cf5",
    name: "REZ COIN",
    symbol: "REZ"
  },
  {
    decimals: "18",
    id: "0xe127d21b3a4326863de2ddc99ac8b9d3a2a673b6",
    name: "Uhive Token V2",
    symbol: "HVE2"
  },
  {
    decimals: "18",
    id: "0x70e1bc7e53eaa96b74fad1696c29459829509be2",
    name: "SILICA UTILITY TOKEN",
    symbol: "SUT"
  },
  {
    decimals: "18",
    id: "0x8c96e0b7f9fca112d36474a12a4e1d726e477fa1",
    name: "VVC",
    symbol: "VVC"
  },
  {
    decimals: "18",
    id: "0x28a085352127713d6da7748ce15df19ce805a0b3",
    name: "WalletConnect COIN",
    symbol: "WLC"
  },
  {
    decimals: "6",
    id: "0x2ffe5f2ea116dd9d2b6dc1768d64c0d8295b4640",
    name: "JVB",
    symbol: "JVB"
  },
  {
    decimals: "16",
    id: "0x0e15bb4ed19cd8eb6721daac04895c16388ba632",
    name: "MNBB",
    symbol: "MNBB"
  },
  {
    decimals: "0",
    id: "0xd8b31356324fcdcadbc18ff2d6600cf18c623a1f",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0xe05001a6fb6b1dcf2c0fa18f26abf691a5b9cca4",
    name: "Suzaku DAO",
    symbol: "SZK"
  },
  {
    decimals: "12",
    id: "0x6d0ef390b360af9844a6d649681774ba026e063f",
    name: "VBM",
    symbol: "VBM"
  },
  {
    decimals: "18",
    id: "0xfe351f4d0dbfbd8a301cce91e3040f897cf76191",
    name: "Ant",
    symbol: "ANT"
  },
  {
    decimals: "18",
    id: "0xc2098a8938119a52b1f7661893c0153a6cb116d5",
    name: "Rangers Protocol Gas",
    symbol: "RPG"
  },
  {
    decimals: "18",
    id: "0xb806fa32ebdc04e5dbdd2ad83e75c8f7d8e8ef8b",
    name: "Web3Camp Token",
    symbol: "3P"
  },
  {
    decimals: "18",
    id: "0xa40e4b91afa53ae65d793831218adf869eabb1a3",
    name: "FAME",
    symbol: "FAME"
  },
  {
    decimals: "18",
    id: "0x48ef9b1d19ec131f4c33cd3283b39e7af682a8cc",
    name: "zkBridge ",
    symbol: "zkBridge "
  },
  {
    decimals: "18",
    id: "0xef111316430ec5f97a1a7ff04b6cdde47c888709",
    name: "BULL",
    symbol: "BULL"
  },
  {
    decimals: "18",
    id: "0x106513e399c5b4bcc3fa3978e39a083185027554",
    name: "TADAs",
    symbol: "TADAs"
  },
  {
    decimals: "8",
    id: "0xe632000238abd0c7c95c116c47bbcc036ecd98ee",
    name: "Grand Tourer",
    symbol: "GT"
  },
  {
    decimals: "18",
    id: "0xae3d757cefc32b4c30e7f98384c1e0dfa8c7170c",
    name: "BOP",
    symbol: "BOP"
  },
  {
    decimals: "0",
    id: "0xcd321cfa3fa23e3d392b6e0ef7db22ea021f02a9",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "8",
    id: "0xf9c4ff105803a77ecb5dae300871ad76c2794fa4",
    name: "pumpBTC",
    symbol: "pumpBTC"
  },
  {
    decimals: "16",
    id: "0x724749f0d31ddb05f4e461d1777b16fd525a5035",
    name: "PTRH",
    symbol: "PTRH"
  },
  {
    decimals: "18",
    id: "0x8b49411b11d4030ce5e92f8ffd921a158dff90a8",
    name: "AZTEQ Metaverse",
    symbol: "AZTEQ"
  },
  {
    decimals: "18",
    id: "0x57f2be3e97e7653a2e6d6bddda40160d202d5305",
    name: "KARAT",
    symbol: "KARAT"
  },
  {
    decimals: "18",
    id: "0xdfe16521839e7df88897e44f933f96d9782ae17c",
    name: "VBO",
    symbol: "VBO"
  },
  {
    decimals: "18",
    id: "0xb6adbe0517a0f9ab489520beb0f76a2f872c237b",
    name: "NVIDIA NETWORK",
    symbol: "NVIDIA"
  },
  {
    decimals: "18",
    id: "0xcb7342369e55b4d8c63441396c07d93cdcc6e386",
    name: "Green Bitcoin",
    symbol: "GBTC"
  },
  {
    decimals: "18",
    id: "0xe0464a2ca466da301ba62a996def801bff963671",
    name: "Renzo",
    symbol: "REZ"
  },
  {
    decimals: "16",
    id: "0xac4886ff34075d158e16713924b318b6f981e59d",
    name: "VNM",
    symbol: "VNM"
  },
  {
    decimals: "18",
    id: "0xfba2863727e2bafa39687d01fb2eefbe4e6e1d5a",
    name: "GainFlow Token",
    symbol: "GFLOW"
  },
  {
    decimals: "18",
    id: "0x258b1eb611a0c66540eebd1f9fc5a7d056e395fe",
    name: "Zora",
    symbol: "ZORA"
  },
  {
    decimals: "18",
    id: "0xb87afaaa8ccaad4ff7018bec3ee7d93119ead502",
    name: "GDS",
    symbol: "GDS"
  },
  {
    decimals: "18",
    id: "0xfbb8d5a7fa5dcb8c62d81db89d7a8369326e0bf4",
    name: "Polyhedra",
    symbol: "ZK"
  },
  {
    decimals: "18",
    id: "0x5cef58c38c1505dbe15a3aae624750879ab8efb4",
    name: "Hemule",
    symbol: "HEMULE"
  },
  {
    decimals: "16",
    id: "0x2a90aa39d859e08c101605e41a1ed20772253325",
    name: "HKD",
    symbol: "HKD"
  },
  {
    decimals: "18",
    id: "0x3be0e5edc58bd55aaa381fa642688adc289c05a3",
    name: "The Winners Circle",
    symbol: "HRSE"
  },
  {
    decimals: "18",
    id: "0x47e131a93b01c12dc0803016543ac07000a8c563",
    name: "GDOW",
    symbol: "GDOW"
  },
  {
    decimals: "18",
    id: "0x0505efad2f885705c4035848349ec54cc8b993a0",
    name: "fantasy coin",
    symbol: "FTY"
  },
  {
    decimals: "9",
    id: "0x6c62cb6e956f48a66e691683e3f417749bd99b97",
    name: "MickeyMusk",
    symbol: "MickeyMusk"
  },
  {
    decimals: "18",
    id: "0xcf160cc9701ac2c410f5801d16b8a279c1cdb520",
    name: "VYO",
    symbol: "VYO"
  },
  {
    decimals: "18",
    id: "0x191430f0fb5b827fbe619b07b8b797d501fdd337",
    name: "NFG",
    symbol: "NFG"
  },
  {
    decimals: "18",
    id: "0xf2bf88e6f27b674d47cd1b26f77055ad66278bdb",
    name: "DailyGain",
    symbol: "DG"
  },
  {
    decimals: "18",
    id: "0xef3c206fd2dd012f891d859ab7314bf77a4b471c",
    name: "Crystal Diamond",
    symbol: "CLD"
  },
  {
    decimals: "6",
    id: "0xd26e61661b5542cf3413d863cc679464f9f80841",
    name: "bamboo coins",
    symbol: "BaBo8"
  },
  {
    decimals: "18",
    id: "0x493361d6164093936c86dcb35ad03b4c0d032076",
    name: "Vista Finance",
    symbol: "VISTA"
  },
  {
    decimals: "18",
    id: "0xa6f5de3c9ccb9768091c57fff2c67efa7cd09d34",
    name: "Pancake LPs",
    symbol: "Cake-LP"
  },
  {
    decimals: "18",
    id: "0x4cb178f9f12aaa0e205e4902e0154e20cffb00cd",
    name: "Swagg Network",
    symbol: "SWAGG"
  },
  {
    decimals: "18",
    id: "0xea96daa186c1fa0a709929822867ec176af8baff",
    name: "LOLLIPOP",
    symbol: "LPOP"
  },
  {
    decimals: "18",
    id: "0x1a651fcdc5a3ab2b60efc0602557b6d926c13755",
    name: "Green CoconutCoin",
    symbol: "GHY"
  },
  {
    decimals: "18",
    id: "0xf0186490b18cb74619816cfc7feb51cdbe4ae7b9",
    name: "Zasset zUSD",
    symbol: "zUSD"
  },
  {
    decimals: "18",
    id: "0x66535f4e5d718d941597205b7e76a116d64fbbac",
    name: "OpenAICoın",
    symbol: "OpenAI"
  },
  {
    decimals: "18",
    id: "0xa76fd6ac1a9d9511db1f14a97319a3ff797c7838",
    name: "AITECH",
    symbol: "AITECH"
  },
  {
    decimals: "18",
    id: "0x56383ebf5ba59735d75d40b3dd3b2fa43f8f9a32",
    name: "BabyBNBFloki",
    symbol: "BBF"
  },
  {
    decimals: "18",
    id: "0xefa4f2ac6e1f90c5632c36ae1dc3c4fd8ba4693b",
    name: "Open AI",
    symbol: "OPEN"
  },
  {
    decimals: "8",
    id: "0xb51d9c7dbc154f61c28446a3e4955f1a1bb615aa",
    name: "Diva currency",
    symbol: "DIVA"
  },
  {
    decimals: "18",
    id: "0x8b3bd80ed1f4c758c5faab7f4d66a7e34b6f7ab4",
    name: "Wall Street Memes",
    symbol: "WSM"
  },
  {
    decimals: "18",
    id: "0x8eacc7dc1043c4d750246aecb3e8a0c8d4405f88",
    name: "ARAW",
    symbol: "ARAW"
  },
  {
    decimals: "18",
    id: "0x4bf53eef374684b1d18c31ea6beb909181f5bc44",
    name: "Pepe X",
    symbol: "PEPEX"
  },
  {
    decimals: "18",
    id: "0x762878e70f506f1d52c4b5db2191e5341349afe7",
    name: "Overlay",
    symbol: "OV"
  },
  {
    decimals: "18",
    id: "0x44af89068d9952b31425688fb6b7a1d1b7b24ca7",
    name: "Merlin Chain",
    symbol: "MERL"
  },
  {
    decimals: "9",
    id: "0x300ff1ef7476e29aa760f29e94b43329caf921eb",
    name: "OpenAI ZIN",
    symbol: "ZIN"
  },
  {
    decimals: "18",
    id: "0x0862067fb63ef96c5fa7b4a53146b90156ad8888",
    name: "HAPPYFARM",
    symbol: "HPA"
  },
  {
    decimals: "18",
    id: "0x0323cae0318c1686b7c69272ef5d006146096812",
    name: "Wildfire from PulseChain",
    symbol: "Wildfire"
  },
  {
    decimals: "18",
    id: "0x0207b7900a2c536dc112c4a1e758edab09c1fe69",
    name: "KIK",
    symbol: "KIK"
  },
  {
    decimals: "18",
    id: "0x6920a21ad060240b77ca12ea3c5a9246397f08b1",
    name: "Giza",
    symbol: "Giza"
  },
  {
    decimals: "18",
    id: "0x9b83cdd4834ab6f4b892e7b668248ca6659a7a9f",
    name: "Aevo",
    symbol: "AEVO"
  },
  {
    decimals: "18",
    id: "0x5da9e7d74d05475036cb2fb1aa3b59b49a2b624c",
    name: "Animeme",
    symbol: "ANIMEME"
  },
  {
    decimals: "18",
    id: "0x41084e95725561782664eb43aa5fc1c3d6cf0c31",
    name: "Openfabric AI",
    symbol: "OFN"
  },
  {
    decimals: "18",
    id: "0xf6718b2701d4a6498ef77d7c152b2137ab28b8a3",
    name: "Lorenzo stBTC",
    symbol: "stBTC"
  },
  {
    decimals: "18",
    id: "0xaacf9eacb17658bf0bbdd52d2db7a93531d37d07",
    name: "XGT",
    symbol: "XGT"
  },
  {
    decimals: "18",
    id: "0xf7eb17ed5c500068f3eca11e471915f02652143a",
    name: "GTP",
    symbol: "GTP"
  },
  {
    decimals: "9",
    id: "0xf705deb80034cf7109984d1c13751a791b61f234",
    name: "Playbux Token",
    symbol: "PBUX"
  },
  {
    decimals: "18",
    id: "0xefdcdbabfe88baed5f8360da6ee10cc191709506",
    name: "Zoned AI",
    symbol: "ZONED"
  },
  {
    decimals: "18",
    id: "0x86bcc39b1370a1e675463c79bb515addccc59472",
    name: "FDRO",
    symbol: "FDRO"
  },
  {
    decimals: "6",
    id: "0x90cb6ac729025226c7a90009dba2c1cf9129211c",
    name: "BMO",
    symbol: "BMO"
  },
  {
    decimals: "18",
    id: "0x63b497c731adc1412453c4cffd63f372932740f1",
    name: "BBK",
    symbol: "BBK"
  },
  {
    decimals: "10",
    id: "0x6aa332050729838a8e4390e35dea8a0b0d3f6f48",
    name: "CWR",
    symbol: "CWR"
  },
  {
    decimals: "18",
    id: "0xa43072ac086881cb94cfba9002492f1b4a4b9d8f",
    name: "MerlinSwap Token",
    symbol: "MP"
  },
  {
    decimals: "18",
    id: "0x681e6dcea16e612edda1f092ba35882748271de2",
    name: "Renzo",
    symbol: "REZ"
  },
  {
    decimals: "18",
    id: "0x9ae407142753f950467a8999786efbf3d4fbf5ee",
    name: "JOP",
    symbol: "JOP"
  },
  {
    decimals: "18",
    id: "0x87174c5ce67e84b2413a2e82380ceef3fc38b1d0",
    name: "Omni Network",
    symbol: "OMNI"
  },
  {
    decimals: "18",
    id: "0x7cb9803b8d60b795c9d46b2a01aa5caaa59e48eb",
    name: "LCB",
    symbol: "LCB"
  },
  {
    decimals: "18",
    id: "0xd5b5882a76a63c032e789e033a1c5b1e4b70ba91",
    name: "BlockGames",
    symbol: "BLOCK"
  },
  {
    decimals: "18",
    id: "0x7a5256ab919d4ea7a50de02eb0e5ef339db20083",
    name: "Tipcoin",
    symbol: "TIP"
  },
  {
    decimals: "18",
    id: "0x47f5499b90af2b4a79f91e39bb6411c1da6b0004",
    name: "BESTTRADE",
    symbol: "BTE"
  },
  {
    decimals: "18",
    id: "0x6561153f940260b3ca1f206e39afe0bd85bb2299",
    name: "Oracle",
    symbol: "ORCL"
  },
  {
    decimals: "18",
    id: "0xb6281127356b0b38eb8c50f1db2f19769e4bcc37",
    name: "KKGL",
    symbol: "KKGL"
  },
  {
    decimals: "18",
    id: "0xd9361d306a9e9a43f5883a064038220ef0d46fb0",
    name: "Styleo Coin",
    symbol: "STC"
  },
  {
    decimals: "18",
    id: "0xe7618f728ac6526a2054f7896e7bd6b5cbd5a36d",
    name: "nVIDIA",
    symbol: "NVD"
  },
  {
    decimals: "18",
    id: "0x45c4bc3e576c14bc5bdc69fae54fef68eea05dac",
    name: "ZJDI",
    symbol: "ZJDI"
  },
  {
    decimals: "18",
    id: "0x24f0c4097dfc7d1ce67487270f5cf827bbf93cf3",
    name: "HRB Token",
    symbol: "HRB"
  },
  {
    decimals: "18",
    id: "0x56f73df6d31fbec5117edaf7189cad3e85427329",
    name: "PUMP",
    symbol: "PUMP"
  },
  {
    decimals: "18",
    id: "0x495354b53fc856c55da044f4329ca19167438f5d",
    name: "IONET",
    symbol: "IONET"
  },
  {
    decimals: "18",
    id: "0xe500c0a78049534782a6dc2ecb529b74bec326ab",
    name: "Sharpe AI",
    symbol: "Sharpe"
  },
  {
    decimals: "18",
    id: "0xe05de356c8eeb00eceab3ad9d4959c10eb2b0475",
    name: "EigenLayer Protocol",
    symbol: "EIGEN"
  },
  {
    decimals: "18",
    id: "0xba2f119d0ceecfba1c1ad909ff48611e510a62a9",
    name: "SPACE GAME BULL",
    symbol: "SGB"
  },
  {
    decimals: "0",
    id: "0x1e762a0a1dcf94f4d94c20f4ba8d62b941d7755c",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "6",
    id: "0xf22a5324a8f10bba6cedcb260e303e9f40c5f157",
    name: "Quantum coin",
    symbol: "QAT"
  },
  {
    decimals: "18",
    id: "0x62f71830fa420ba1ca0dc1a94c4d4da5b14c5432",
    name: "BITCOIN FUTURE",
    symbol: "BFDC"
  },
  {
    decimals: "18",
    id: "0x48d761312aed29202229fa0672e129befe1d8023",
    name: "Ethena",
    symbol: "ENA"
  },
  {
    decimals: "18",
    id: "0xd0c8ad30606b2f428e7edd10c56939b1d223227f",
    name: "black porcelain coin",
    symbol: "BAK"
  },
  {
    decimals: "18",
    id: "0x8c8891f3eabc17a8e056604185efad642407bf0f",
    name: "Hamster Kombat",
    symbol: "HMSTR"
  },
  {
    decimals: "18",
    id: "0xef437c4540de4792f6f47c01aaf2c0597d5a5b86",
    name: "PORTAL",
    symbol: "PORTAL"
  },
  {
    decimals: "18",
    id: "0xcbec2cb9dc21a79bc3691633b43ae931fc632b9a",
    name: "META",
    symbol: "META"
  },
  {
    decimals: "18",
    id: "0x6887d10d11daa2365a1c0699334eaaf67f41a1b0",
    name: "SGPT",
    symbol: "SGPT"
  },
  {
    decimals: "18",
    id: "0x3cea5f4a8dfee9c497b8dcfee862a49073340bb3",
    name: "HVB",
    symbol: "HVB"
  },
  {
    decimals: "18",
    id: "0xd70c3681f6f14a65758be094a5a52dc44c196250",
    name: "Notcoin",
    symbol: "NOT"
  },
  {
    decimals: "8",
    id: "0x0b0120fd70323f8472788f91fc5d7f83ecf3bc1c",
    name: "BOP",
    symbol: "BOP"
  },
  {
    decimals: "16",
    id: "0xa51ad411c375e4294e1e87261503eeff6068f6a0",
    name: "AAR",
    symbol: "AAR"
  },
  {
    decimals: "18",
    id: "0xa66e74ddf06cbfa3bdb010f8f47af6979ac4597b",
    name: "KvantsAI",
    symbol: "KVNT"
  },
  {
    decimals: "10",
    id: "0x9b673c0f2545382015daef28a86eddb4c4a37eb9",
    name: "MML",
    symbol: "MML"
  },
  {
    decimals: "10",
    id: "0xf99b183e803da2efaaf7a1cd6a1fb90eaaa243db",
    name: "CTSF",
    symbol: "CTSF"
  },
  {
    decimals: "18",
    id: "0xf0a0ada356c3592256aeb0be5f9d31c81f2f72ed",
    name: "Baidu Coin",
    symbol: "BDC"
  },
  {
    decimals: "6",
    id: "0x157a74bba219b3a2e6c0a5732f84a3e372031cfe",
    name: "DjedMicroUSD [via ChainPort.io]",
    symbol: "DJED"
  },
  {
    decimals: "18",
    id: "0x4636d73f536f2c28a33b5c758e731c512a6ca323",
    name: "BlackRock ETF",
    symbol: "BLKETF"
  },
  {
    decimals: "16",
    id: "0x5dd2d542e42754cde72c4401209997a75503cfbc",
    name: "UIV COIN",
    symbol: "UIV"
  },
  {
    decimals: "18",
    id: "0x8dbd77c79e7a7cf5172205519c29a1ada2aa6c99",
    name: "xFish",
    symbol: "xFi"
  },
  {
    decimals: "18",
    id: "0xbe0aa0cf0af373f9f62998c042c2942ca7d9c3d1",
    name: "Saga",
    symbol: "SAGA"
  },
  {
    decimals: "18",
    id: "0x1e140fe3e34f719352756fc83ecff3bd32de8400",
    name: "BYO",
    symbol: "BYO"
  },
  {
    decimals: "1",
    id: "0xf7be93fd73732039c2cb07861a416e43cf37128b",
    name: "Internet starlink coin",
    symbol: "Netik"
  },
  {
    decimals: "18",
    id: "0x23953481799765c30836eb5bdc2e4ffb405c626b",
    name: "Raiku",
    symbol: "Raiku"
  },
  {
    decimals: "18",
    id: "0x353db403271057188e6353651112d7b6bc7cc57e",
    name: "Decentralized",
    symbol: "DAC"
  },
  {
    decimals: "18",
    id: "0x7b27d11d90a52709b6c3c84688042ce9d61c9f86",
    name: "quantum",
    symbol: "ATU"
  },
  {
    decimals: "18",
    id: "0xd37915eeb7ea5ce18ac96aa90a42ac850465ac9b",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0x45412856a5bd16109e86f9edad5037a1b50eaef6",
    name: "GTV",
    symbol: "GTV"
  },
  {
    decimals: "18",
    id: "0x705ca67c29fad9f5afa5d086c66e6c9f96602a09",
    name: "Coribot",
    symbol: "CORI"
  },
  {
    decimals: "18",
    id: "0x82c44cbb041a1415dbc2662ef0896bfdb9b21a3c",
    name: "pixels.xyz",
    symbol: "PIXEL"
  },
  {
    decimals: "18",
    id: "0x9f1b821bf22c580fd6d8d57477c3b104a2b69054",
    name: "IO.NET",
    symbol: "IO"
  },
  {
    decimals: "18",
    id: "0x4f52f33910c262be948ce7480cd5a75fa091ad01",
    name: "BJK",
    symbol: "BJK888"
  },
  {
    decimals: "18",
    id: "0x284c57e21abc46063c893d1f53893fac557bddab",
    name: "Acorns Token",
    symbol: "ACORNS"
  },
  {
    decimals: "18",
    id: "0xf7dc1eac1dc93a82112dc9c52104938c78cee872",
    name: " Aromatherapy",
    symbol: "ATY"
  },
  {
    decimals: "18",
    id: "0xdbee29e9f356164ade20f0fd26652eff8fa41f22",
    name: "Tago Verse",
    symbol: "Tago Verse"
  },
  {
    decimals: "18",
    id: "0x8c770a4958f55e742b05e58b87c4a44146237acc",
    name: "callback",
    symbol: "wish i could callback my ex like i callback your bot"
  },
  {
    decimals: "16",
    id: "0x21fa9ffa1ae333f13bd30f1084b53b1cc1419564",
    name: "UO861",
    symbol: "UO861"
  },
  {
    decimals: "18",
    id: "0x2b8ee528de0615d8f1de75805dcd1c0b2481c784",
    name: "Neutron",
    symbol: "NTRN "
  },
  {
    decimals: "18",
    id: "0xdadc8dff9f122f0bd84fc52ba2d7e6b512393956",
    name: "Reiko",
    symbol: "REIKO"
  },
  {
    decimals: "18",
    id: "0x311fafa4649583f0add8f7b3130cc139b84dbb06",
    name: "Metapotamians",
    symbol: "MTP"
  },
  {
    decimals: "18",
    id: "0x8dad9693b6b1c42b1dd189bdd6c9963c7fdb9005",
    name: "DGF",
    symbol: "DGF"
  },
  {
    decimals: "18",
    id: "0x070060a7d436af8f41b612de099a24c8c1bb3e23",
    name: "KOP",
    symbol: "KOP"
  },
  {
    decimals: "18",
    id: "0xc8daa981b49f045c524596791bc844df59cb709f",
    name: "VOK",
    symbol: "VOK"
  },
  {
    decimals: "18",
    id: "0x49795ba7c911d2789047a4c57b64f2b27292430c",
    name: "Metamask",
    symbol: "MASK"
  },
  {
    decimals: "18",
    id: "0x087c28d8941030870a4f833e5c3b4c8f04f83a84",
    name: "star currency",
    symbol: "STAR"
  },
  {
    decimals: "18",
    id: "0x93ab66ae3407158a89ec5cf53d58b8998ff6ff7b",
    name: "The X",
    symbol: "X"
  },
  {
    decimals: "9",
    id: "0x9fc0444a45fc4c784af6c2f95259306c4f8c7bf6",
    name: "Eigen Layer",
    symbol: "EIGEN"
  },
  {
    decimals: "16",
    id: "0xc2cef6245a8f0488d0437e0d77cab51d5420be48",
    name: "ZCT",
    symbol: "ZCT"
  },
  {
    decimals: "18",
    id: "0x00ad418ca33dc9c49592357086b88a939b293bb5",
    name: "CoinMarket 100",
    symbol: "CM100"
  },
  {
    decimals: "16",
    id: "0xcb444305d7d4259e0084f2d93fc36cdc007be5c1",
    name: "LYUP",
    symbol: "LYUP"
  },
  {
    decimals: "18",
    id: "0xe43b1abab834ebe3ad6b3c1272dfabe6fa33b878",
    name: "PATEX",
    symbol: "PATEX"
  },
  {
    decimals: "18",
    id: "0x180543f52b301fe23ecc143003a4a1a90b5a1216",
    name: "VOP",
    symbol: "VOP"
  },
  {
    decimals: "18",
    id: "0x2949912b881268d04398d53faf5235ecb3606195",
    name: "chingpong zhappy",
    symbol: "CZ"
  },
  {
    decimals: "9",
    id: "0xdb0a8721d6e5574a6ca64336dc6d3c21dccba326",
    name: "Eigen Layer",
    symbol: "EIGEN"
  },
  {
    decimals: "16",
    id: "0x33d0c8d7d2c863096e372e5675d998a977b857a9",
    name: "KOB",
    symbol: "KOB"
  },
  {
    decimals: "18",
    id: "0x98fc774181369a7929ee949b61d39c166a48cb8b",
    name: "MYDS",
    symbol: "MYDS"
  },
  {
    decimals: "18",
    id: "0x2c95a2a76d58c4f8b790d4b3d272a10b85bbd637",
    name: "D.A.I.Wo",
    symbol: "DAIWO"
  },
  {
    decimals: "18",
    id: "0xdc82e7d64b371e876d345935a3df19dde4dd8e7d",
    name: "Scarab",
    symbol: "DUNG"
  },
  {
    decimals: "0",
    id: "0x8b5097bf77ac7c33b3b60b33e3eba7d9ce325a26",
    name: "unknown",
    symbol: "unknown"
  },
  {
    decimals: "18",
    id: "0x08bfe995df70b6a2b887dd316b792eeb09bda6b4",
    name: "TBB",
    symbol: "TBB"
  },
  {
    decimals: "18",
    id: "0x5e0e27f21d58b3f1ed741decde6040ca659923e1",
    name: "Mner",
    symbol: "MNER"
  },
  {
    decimals: "8",
    id: "0x437b18246972295309d7c26642edc26d3086cd57",
    name: "FRE",
    symbol: "FRE"
  },
  {
    decimals: "18",
    id: "0x36cb8a37d34c35fe1d3778f36393932dd78e3997",
    name: "REKT",
    symbol: "REKT"
  },
  {
    decimals: "18",
    id: "0xa97e705ce7ad5aa5609a13b9c843bd4e8c6b3015",
    name: "Smurfs",
    symbol: "SMURFS"
  },
  {
    decimals: "0",
    id: "0xa136f6a5fe53d042959a2ed39187010361a4b1c7",
    name: "Big Pump",
    symbol: "PUMP"
  },
  {
    decimals: "18",
    id: "0x62aa735a77f6bc670efa6f37a4b502aec606a7eb",
    name: "KLB",
    symbol: "KLB"
  },
  {
    decimals: "18",
    id: "0x4b178bce59ef7fa00208315f905d6c10f84da0bd",
    name: "JHB",
    symbol: "JHB"
  },
  {
    decimals: "18",
    id: "0xf389ad7b33d6f434e1141f20a3211f39a7855121",
    name: "KLP",
    symbol: "KLP"
  },
  {
    decimals: "18",
    id: "0xb6489783d37aab7f74d266894002decc51172091",
    name: "DGS",
    symbol: "DGS"
  },
  {
    decimals: "8",
    id: "0x5232276d5f4b23b45cab1a9b556d28d9054921cf",
    name: "SSI",
    symbol: "SSI"
  },
  {
    decimals: "18",
    id: "0x560e264973205773bbe18ce5870abfa4cf1f2cfc",
    name: "jeffrey from mcdonalds",
    symbol: "yeah number 1 victory royale"
  },
  {
    decimals: "8",
    id: "0xd637c586f8ae1002f87ae4b3cc50d12c015120c2",
    name: "KYYO",
    symbol: "KYYO"
  },
  {
    decimals: "18",
    id: "0x51a772349f59c7dd6f3a2bb04e40f5360e8b5757",
    name: "VGL",
    symbol: "VGL"
  },
  {
    decimals: "18",
    id: "0xc8505e8ec969fa76811769736b76c62da2ebbcf1",
    name: "ClimateCoin",
    symbol: "ClimateCoin"
  },
  {
    decimals: "18",
    id: "0x8f22a9373b4328ba0de5816f2cb82f4e669d3848",
    name: "BVC",
    symbol: "BVC"
  },
  {
    decimals: "18",
    id: "0x2936564a325f394931fea526b55c725601bc9055",
    name: "BYP",
    symbol: "BYP"
  },
  {
    decimals: "18",
    id: "0x05c50a62b0b87be1ffb1cf3b77d9edba834ef6f7",
    name: "IRISnet Token",
    symbol: "IRIS"
  },
  {
    decimals: "18",
    id: "0xb385d336a15067efe90de12e7afd0cbc0c26b152",
    name: "TB",
    symbol: "TB"
  },
  {
    decimals: "18",
    id: "0xfead2aaa2ed08d0725eca0b2768d2d0bc794a419",
    name: "BHR",
    symbol: "BHR"
  },
  {
    decimals: "18",
    id: "0x263a6024c56fc0251a54d14d9f073d36908cf1b3",
    name: "Islamic Coin",
    symbol: "ISLM"
  },
  {
    decimals: "18",
    id: "0xab980940732b4f5f3c04a3a0ff9800cf6dd72fec",
    name: "Neutron",
    symbol: "NTRN"
  },
  {
    decimals: "5",
    id: "0x0ca15365358390a4c95d17debedb1a86b372c460",
    name: "APN",
    symbol: "APN"
  },
  {
    decimals: "18",
    id: "0xcaed5ad4c6fd762073dc94381c62a1a88f799658",
    name: "CHAT 0xD69ee2e508363FEd57f89917D5ca03e715ee5519",
    symbol: "DECHAT"
  },
  {
    decimals: "18",
    id: "0x219ec76b9ae42f6beebd05d079d166da38d3e61a",
    name: "SOIL",
    symbol: "SOIL"
  },
  {
    decimals: "18",
    id: "0xef070f5c9eb5998b0feed9174cff8e87f56e73b5",
    name: "Klubcoin",
    symbol: "KLUB"
  },
  {
    decimals: "18",
    id: "0xba6654bcbe9eaf1914ab97d787752e7399d4ec58",
    name: "ByyPilott",
    symbol: "ByyPltt"
  },
  {
    decimals: "18",
    id: "0x7e4e4a9f272cab5a8fdfae78490db46b830d4d86",
    name: "CHAT                                                                                                                                      0xD69ee2e508363FEd57f89917D5ca03e715ee5519",
    symbol: "DECHAT"
  }
];
const pools = [
  {
    feeTier: "10000",
    id: "0x1e204ed3a5bb892eef050ca247ae6fa8b8210dea",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9b9e48dfbe6a357d975e64875837ab97ee20a349"
  },
  {
    feeTier: "10000",
    id: "0x43003b9f7b40b3f698787296652f0c23aa7e94a2",
    token0: "0x200f73aba0d6f8919086f64035ef900669ea2de2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x802a8cc652ba835807d02b252577ac3d2caa9064",
    token0: "0x03aa6298f1370642642415edc0db8b957783e8d6",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "500",
    id: "0xbffec96e8f3b5058b1817c14e4380758fada01ef",
    token0: "0x570a5d26f7765ecb712c0924e4de545b89fd43df",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x3803300d7d921c745763396a75b555043781e1c3",
    token0: "0x604642b431edc7a036cab175adce1f40b6654fe0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x84f6831a1e85491424cd828ff7f058b0d29ddd76",
    token0: "0x00e1656e45f18ec6747f5a8496fd39b50b38396d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x247f51881d1e3ae0f759afb801413a6c948ef442",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "2500",
    id: "0x63af17a89e85809dba13764f819d9391f47a38d8",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xab237ec2162e199c90c7d0bf587c455cf0d7d34e"
  },
  {
    feeTier: "2500",
    id: "0x96c87d3936feb4ffeb08f9dacbfcea2883381eb0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa697e272a73744b343528c3bc4702f2565b2f422"
  },
  {
    feeTier: "10000",
    id: "0x08e6cf7210538d63beb7acf3a410a90423df2e77",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x4db5a66e937a9f4473fa95b1caf1d1e1d62e29ea"
  },
  {
    feeTier: "10000",
    id: "0xd8e3f999157937007a16ec8d3e98c23d25def7b3",
    token0: "0x01ee9c2ec468236368dab097babaea4875fb4f81",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x4858ce69417bf489a3dce9959de6c5a547ce7744",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xea1ca10ef55d7bc1c11167630c16c09f3ee9bf42"
  },
  {
    feeTier: "500",
    id: "0x83dd724caaced0807d2157a5f1663e6ac6c9e008",
    token0: "0x33d0c8d7d2c863096e372e5675d998a977b857a9",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x42f647d29292ecbc7a735c4f343cc22f8355d70a",
    token0: "0x1223334444a7466fbf985b14e1f4edaf3883bca6",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xa4a7133686eb64fef7c474c16c8024bcef29e4f9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x723000d0df87652387e737f5747ac9205bf9c213"
  },
  {
    feeTier: "2500",
    id: "0x9b876d740f75efc07aa4aacd5f4d938cab7b5d0c",
    token0: "0x529c79f6918665ebe250f32eeeaa1d410a0798c6",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xc770e8d1ca1631d14f0adce7fe93c408ccf65c5b",
    token0: "0x854a63b35b70a7becbed508ff0b6ff5038d0c917",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xf69765e8483dcf16fc112eee67ede1936b475fa1",
    token0: "0x53d851131f9a82b97af8a32d70c57b5c24c429ce",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xead47160142b3dce1713806c7c8499583c9a73b4",
    token0: "0x872a34ebb2d54af86827810eebc7b9dc6b2144aa",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x1b7ce0f923c5d109f695b6a95dc29b0225368bb7",
    token0: "0x1ba42e5193dfa8b03d15dd1b86a3113bbbef8eeb",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xa98d8a5867d664b7a758652146fd93a7de40ee82",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xce7de646e7208a4ef112cb6ed5038fa6cc6b12e3"
  },
  {
    feeTier: "2500",
    id: "0x8182fd44f2f0be306b268ee28aaf4ad641bd0245",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbf8bab33600d5bca18e4464e34c2a8d532031f5c"
  },
  {
    feeTier: "100",
    id: "0xd29c6b614150f53b8910493fb9cdc2a77f877fc8",
    token0: "0x174251287a4a10a44f57aed92fc12af8882f115c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xd4eb4718d4ca70d538ec2cf9b4a1a9f49c3fd6ad",
    token0: "0x7ddc52c4de30e94be3a6a0a2b259b2850f421989",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x683645d39985ef1bd3f0258668124e181e8e08b5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7083609fce4d1d8dc0c979aab8c869ea2c873402"
  },
  {
    feeTier: "10000",
    id: "0xe4ef690fb52a5cf39c7e9c271fb81ae8eca073e5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x93891a3328cc16ebd59474ced882b1d91dec63e1"
  },
  {
    feeTier: "500",
    id: "0x1483e7c35cc1287a954021aca0e7e86c6d74df51",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8839adcd26fdd3645f9c1d016f01f6d331c48767"
  },
  {
    feeTier: "2500",
    id: "0x01bac48d8309555843fdbb11aa647fe2e292522e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6ad9e9c098a45b2b41b519119c31c3dcb02accb2"
  },
  {
    feeTier: "2500",
    id: "0x9c499880e28889aee4e60e564b8cecfbe4bd42db",
    token0: "0x2598c30330d5771ae9f983979209486ae26de875",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x8ccb4544b3030dacf3d4d71c658f04e8688e25b1",
    token0: "0x4b0f1812e5df2a09796481ff14017e6005508003",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x2113ff11bb8ed3ec4fb5989c10ae735780f87bc0",
    token0: "0x070060a7d436af8f41b612de099a24c8c1bb3e23",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x51e976322badd62d3dfcadbe72ad0efea7ed0b5a",
    token0: "0x34294afabcbaffc616ac6614f6d2e17260b78bed",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9004c94e73ca8d5b870dcfb391a3cd485e3648cd",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x872a34ebb2d54af86827810eebc7b9dc6b2144aa"
  },
  {
    feeTier: "10000",
    id: "0x3fc1c4c7d35b942d86f1c956784d2dd6ece42333",
    token0: "0x111111111117dc0aa78b770fa6a738034120c302",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9e03e2acc493f41423ad0948b45e6b68a7266643",
    token0: "0x8c49a510756224e887b3d99d00d959f2d86dda1c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd48d4a286a4b59f58a6518138e0d3aa71d3e9edc",
    token0: "0xba6654bcbe9eaf1914ab97d787752e7399d4ec58",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x5dc96ae344f77cad58561c7f64a7929e16e8c4d0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6d656793f97ae4e601cea1ae86f15198b7b22728"
  },
  {
    feeTier: "10000",
    id: "0xe9f6d2f5bc6b6606755a5836f97eda11561cca7b",
    token0: "0x22b4fa9a13a0d303ad258ee6d62a6ac60364b0c9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x9b36e5b07eab82cd861aeb282235b95ee029164d",
    token0: "0x0f5d54b27bdb556823f96f2536496550f8816dc5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x88e510ca5d3b7730420d313f3d5409d6c156c90f",
    token0: "0xe9d7023f2132d55cbd4ee1f78273cb7a3e74f10a",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x976241c208cc07505a620d768ee7251d47acb2a0",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfceb31a79f71ac9cbdcf853519c1b12d379edc46"
  },
  {
    feeTier: "10000",
    id: "0xa1f5c8db1e8d06ee5bf6f3155abfe9e31e44fa31",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf574ba6bde97cc09784e616ebaed432b4e896b49"
  },
  {
    feeTier: "10000",
    id: "0x77e77006fbb900421459617f547d87b82499b301",
    token0: "0x2c44b726adf1963ca47af88b284c06f30380fc78",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x953c808b5e121dcffdd90417c2a1526f94a57972",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x61dc650c10ec3c758d251cd2d1ab45af1a43e941"
  },
  {
    feeTier: "100",
    id: "0xa2d86bcb4a7651e2926b2dd9a3f4d4d2ec6abd21",
    token0: "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x1fc80b1bb466536873ef48115df60247576f6386",
    token0: "0x25d887ce7a35172c62febfd67a1856f20faebb00",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x7b6b76b0fedeed0e98789ddf085137888d27d7f7",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd70c3681f6f14a65758be094a5a52dc44c196250"
  },
  {
    feeTier: "100",
    id: "0x6ea92360e9d7ff222a7163d0aa09b5ffc9961df7",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x80137510979822322193fc997d400d5a6c747bf7"
  },
  {
    feeTier: "2500",
    id: "0x9c5add5b10bfccf89bef307a69e8b3610af4b4b2",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcf8847dca5e97e723792e6fc6410c2c29bd22e5c"
  },
  {
    feeTier: "10000",
    id: "0xd13f849e1edecd36ab0397c8ba97a449f6d2ce81",
    token0: "0x29745314b4d294b7c77cdb411b8aaa95923aae38",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9ca82d66b109fbd1e229cda040926879294b4100",
    token0: "0x26d3163b165be95137cee97241e716b2791a7572",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x71f51e5070c7070b2d079c087bfa814642fcef58",
    token0: "0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x4797d2ff3da05d8a74a534366ce1287771540f0c",
    token0: "0x023e760331b9fb495a99a037cd2671ff4869d5c9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x957a6f806c338ad2b0cb02986366ab820fc0d170",
    token0: "0x391088b4594e41c003463c7e3a56a8ba00b8e7a9",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0xcded0952c8cbf5843130dc8cbcb092e9b211d9a7",
    token0: "0x5b6bf0c7f989de824677cfbd507d9635965e9cd3",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "500",
    id: "0x8e4eb4780677c4046aac3b3feb02e8c529e5f830",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xff44967f2e4ebe0b8c5b6812f25e1b9bcec70b34"
  },
  {
    feeTier: "10000",
    id: "0xc24d2478d1937dca5b23a4b0d9caf7e7084b6d56",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe6d19cfa419fc81029b11b335ba5c53a0aa6e37f"
  },
  {
    feeTier: "10000",
    id: "0xba3147ee186e16b0744b3409ab92a22a3ca46327",
    token0: "0x222c1e86c78b4a1d9c57c120d18b584be2c65937",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x6e7b8b0ebfb7419f1334c2a8a39b1f9320e9726d",
    token0: "0x45412856a5bd16109e86f9edad5037a1b50eaef6",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xccafd19ca234b792d3ae76593df6ccc0d4b0ef79",
    token0: "0x417e99871cdc1a48cc313be8b586667d54b46494",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x4167f229a0323f480518b61cb35ed4d6a0c5ea27",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcc6f1e1b87cfcbe9221808d2d85c501aab0b5192"
  },
  {
    feeTier: "10000",
    id: "0x2da32920a775cf121004551abc92f385b3c0dab9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7e9ab560d37e62883e882474b096643cab234b65"
  },
  {
    feeTier: "10000",
    id: "0xa26165fbf48b9584ad4215caa048960074f3260d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe96fb4d635c51b133abba6e771f3a61171c48d7d"
  },
  {
    feeTier: "2500",
    id: "0xaa97872b5432c6b37786afe308360a54c84b33e6",
    token0: "0x7d9093c5f8529dc5093a86ee36c917ba75d3fc92",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9b200ed4ada40e2642ad1bca621c538fbfb8bb9e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf486ad071f3bee968384d2e39e2d8af0fcf6fd46"
  },
  {
    feeTier: "2500",
    id: "0x1c25ae16e6de5760aa92eebf2857eff2796539d1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x837a130aed114300bab4f9f1f4f500682f7efd48"
  },
  {
    feeTier: "2500",
    id: "0x043681828303cdf9398f0768bf1da99feebf7ee8",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x8c49a510756224e887b3d99d00d959f2d86dda1c"
  },
  {
    feeTier: "100",
    id: "0xab42db346d31fdb3a68105a30bfd8764fc3a32d6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf68a0de8919daac07753fe10ea1f7d6a2bc8307c"
  },
  {
    feeTier: "2500",
    id: "0x06fd4ce0e97173c1f04946d74a3da848aff31e3b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x67bb72b4349a6f67f1bfebcf8c14df0fa4b9f87f"
  },
  {
    feeTier: "500",
    id: "0x79790b9aa35ee2c7453057b466b979ee3151f927",
    token0: "0x15fee022b39579b353b9399af6272a12843084ee",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xd5cf27c4226148bd09af5f9f4621acac82eefc47",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe50ac93cc22683a4b6e96bbdc663c4b31cf8674a"
  },
  {
    feeTier: "500",
    id: "0x67ab57b09defbb03a317f3d28f4a51afc0104f47",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf7dc1eac1dc93a82112dc9c52104938c78cee872"
  },
  {
    feeTier: "500",
    id: "0x2fa8b5924864198aa159d13700a3f4cb8956fdae",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd8047afecb86e44eff3add991b9f063ed4ca716b"
  },
  {
    feeTier: "2500",
    id: "0xba81fa1db93c6c8928ca51f7006483cac057fe45",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xebd3619642d78f0c98c84f6fa9a678653fb5a99b"
  },
  {
    feeTier: "10000",
    id: "0x97aa022758fa5be639142e42b141b990663f15f6",
    token0: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    token1: "0xeac9873291ddaca754ea5642114151f3035c67a2"
  },
  {
    feeTier: "100",
    id: "0x642682aea9cbb688e99b11fca66098367288a282",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x71eeba415a523f5c952cc2f06361d5443545ad28"
  },
  {
    feeTier: "2500",
    id: "0xc71ca59d8f36f0961b2f0d0279bf7b5a26771c74",
    token0: "0x560e264973205773bbe18ce5870abfa4cf1f2cfc",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x2e2dca75bbd1a4ce87f59f52f22fd252963eea03",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf4c8e32eadec4bfe97e0f595add0f4450a863a11"
  },
  {
    feeTier: "10000",
    id: "0xb40b8dcefa812f870451075dd5200701596964a1",
    token0: "0x3be0e5edc58bd55aaa381fa642688adc289c05a3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x4206021b965014b7634b3d768e69259a78bc810d",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf0a0ada356c3592256aeb0be5f9d31c81f2f72ed"
  },
  {
    feeTier: "10000",
    id: "0xafcd13696cd8868a085e65f125ad28125c79a381",
    token0: "0x2949912b881268d04398d53faf5235ecb3606195",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x032c23ee512f588b068afd37ecb1c7d73a47beb5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa89e2871a850e0e6fd8f0018ec1fc62fa75440d4"
  },
  {
    feeTier: "10000",
    id: "0x22a997c095c3a25abe0db6df90954c70890f6376",
    token0: "0x02401d8244fb52ba1860520deeeabd8ef975f936",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x898fe77d1c083dd725004a12df0bc55f6dbdec2f",
    token0: "0x323665443cef804a3b5206103304bd4872ea4253",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xf3de4772f78320b02afb2cbe2d44d48dd70603b9",
    token0: "0x704e37fefb6605db31835a89cb1ef10732c4bfd1",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x125c0064080fb54e9191eb9ee0def194278bbfb8",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe552fb52a4f19e44ef5a967632dbc320b0820639"
  },
  {
    feeTier: "2500",
    id: "0xd6b5447fcb7d025773e1c91eb8162a65c1e082b5",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xee0074509a481340fa2dc31177d1592f277c536f"
  },
  {
    feeTier: "100",
    id: "0x2b2aaa1809ab05c25516e8deca1323d196a27610",
    token0: "0xba2f119d0ceecfba1c1ad909ff48611e510a62a9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x495c6b1ccedffe5ef114fdfe3f22a63e5a6a0b47",
    token0: "0x7d8645416bda255007d1afd326e4b030639e4958",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x45a954946292ff2fe30b52e92c18655a76f46204",
    token0: "0x36cb8a37d34c35fe1d3778f36393932dd78e3997",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x849f86ed464169397d55ac881a4b6e4240cc52e8",
    token0: "0x04fa9eb295266d9d4650edcb879da204887dc3da",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xfddea92bca26f439f02fd9d37de3f88c6671aa58",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xace3d31ebac0c3ddfc1d2aa5c5ecc8c67509d15c"
  },
  {
    feeTier: "10000",
    id: "0x3d0d8259e04f7de45adb763b75699784299e591e",
    token0: "0x7e35d0e9180bf3a1fc47b0d110be7a21a10b41fe",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb908c0fbb2bf1c2faf9f1ad8a6d25ef5acd9e951",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xb6c53431608e626ac81a9776ac3e999c5556717c"
  },
  {
    feeTier: "500",
    id: "0x3b67f1b6ec942c449db1b5d4f856413d227db271",
    token0: "0x437b18246972295309d7c26642edc26d3086cd57",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x831db36239c7f8a38ddc8484562c32659f97a3f4",
    token0: "0x6cda2862fd4b88ccfa522ffed66bc4277e7d9cc9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x6d1bc19eea986976a9cd94213e2c44ab7a26b6b1",
    token0: "0x0565805ca3a4105faee51983b0bd8ffb5ce1455c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x3e21a48e570cca399cb503cc9cf9ebd1ba226532",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc335df7c25b72eec661d5aa32a7c2b7b2a1d1874"
  },
  {
    feeTier: "100",
    id: "0x9f599f3d64a9d99ea21e68127bb6ce99f893da61",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xc0f47e155367441f2236b0ce34b9435909552edd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe0b1a112ee17ef376260ad347d0d9c38efdffe07"
  },
  {
    feeTier: "500",
    id: "0x88fd8393f2cdf2c23d6b91bc78186873cb6a6df3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6aa332050729838a8e4390e35dea8a0b0d3f6f48"
  },
  {
    feeTier: "10000",
    id: "0x8085a875ba0da8d6b3a3b22e2d49f77c375dbc97",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc2378f88f18924c8c5a4ba5e2bf0aa5e5e15a184"
  },
  {
    feeTier: "10000",
    id: "0xa052cb1589f43277a0866d0818a05be3efbad27a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8789337a176e6e7223ff115f1cd85c993d42c25c"
  },
  {
    feeTier: "10000",
    id: "0xcb9819abe8546d132d27530779c0c6a3f72a7572",
    token0: "0x555296de6a86e72752e5c5dc091fe49713aa145c",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "500",
    id: "0xf37e2716f22882564238bedfbd56db4dc6517977",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe9c803f48dffe50180bd5b01dc04da939e3445fc"
  },
  {
    feeTier: "100",
    id: "0xa00e54aaf31f2d9f0e17761b25e856fb878972ea",
    token0: "0x7db21353a0c4659b6a9a0519066aa8d52639dfa5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x535e9c5e554bfb09510dcee1cbca9346fd4f6eb3",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe00c5e5e38a77d11ef53e0e42280fe83b4e27a62"
  },
  {
    feeTier: "500",
    id: "0x7a00366acb7f9030bef9e847a15ad7ec6aa6042c",
    token0: "0x7d9093c5f8529dc5093a86ee36c917ba75d3fc92",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x2941a39c465c55ad6a3fabe4a22bb2e655ac8952",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xed376501f61046a3f43dac6d5ab51a700dda46fc"
  },
  {
    feeTier: "10000",
    id: "0xeb415b089e2ac0acdec90fa793dfa4467799b3d9",
    token0: "0x1c3ba6cf2676cc795db02a3b2093e5076f5f330e",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xa3cf2f6e2be350d5db588a0539ff70d8ffade3ab",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa8d29a0cc90965acee773f74606ee0b45286a2fe"
  },
  {
    feeTier: "10000",
    id: "0xcaeed8123794c019786e524e4c2bde472f4c75fc",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc1ff50bc8d8c5f012adf3c9dd179944629bd57a3"
  },
  {
    feeTier: "10000",
    id: "0x0f59fbdd7f6f8daa5ff75f034a11e7ec449b5dd9",
    token0: "0xaa076b62efc6f357882e07665157a271ab46a063",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x21942de4d122bd83544c1f5d554027532868d090",
    token0: "0xba2ae424d960c26247dd6c32edc70b295c744c43",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x7564b0c66a9782311d43acd5e6cc95b226a4038a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa73835d6337719f316ad66f3c11ac6cc9bcf7b07"
  },
  {
    feeTier: "10000",
    id: "0xb777c2e0402abcca21fffa8ac38160af486b4055",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa7324831da3deb902f0ff78a018fb8c2af333d1f"
  },
  {
    feeTier: "10000",
    id: "0x1786a085fc8b64d35b6f24f0c62cb47b612b584d",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf4bafaeae73a4a7c8b6479970075e91e641fb1fc"
  },
  {
    feeTier: "100",
    id: "0x79048915b94d7bb12ff20687bcfe07f8f5f57278",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf0b75b6ed5379c05938320895a8a096eb3096eba"
  },
  {
    feeTier: "10000",
    id: "0xd618d972536b10d26ecf617292bb571f64ae261c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc71b5f631354be6853efe9c3ab6b9590f8302e81"
  },
  {
    feeTier: "100",
    id: "0xcb8b99647fa22f5e8af865b8688e495a4abe1a05",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xad55fb67a92383086e8abaeb878972e288d517a4"
  },
  {
    feeTier: "100",
    id: "0x274017a53394388ea6dac785ede7eef11cf51ba5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x87266413e5b64db72f11bb6795ee976545dbaf43"
  },
  {
    feeTier: "100",
    id: "0x235c00756c73aa05e1c6ef51cf4bd97893b4dbf8",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xca7661ba64a7667e3006c421c181502d545d1911"
  },
  {
    feeTier: "100",
    id: "0xb32770b17838cbe47c96b1ea7f7f8769237bed7c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe43b1abab834ebe3ad6b3c1272dfabe6fa33b878"
  },
  {
    feeTier: "500",
    id: "0x8a5da22865a59d4d99d0721009f36515ab21dea6",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc703da39ae3b9db67c207c7bad8100e1afdc0f9c"
  },
  {
    feeTier: "500",
    id: "0x8721f342cb9ec06fcf374a29db8db9fc5dd7fcf5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x928f64d31186a0a341b38624177e911d746dc6b6"
  },
  {
    feeTier: "2500",
    id: "0x7eefde1b111045f034a0c1cfb8165717d5e167d8",
    token0: "0x51e72dd1f2628295cc2ef931cb64fdbdc3a0c599",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "100",
    id: "0x912c9ca81288c7dc2190d5fa7a8ac08ed7180069",
    token0: "0x1232ad2f0749bcd3cd4d57b06e62cc8c4f6a7177",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x6398227d110c9aada237b3d723cb2ed855fe2155",
    token0: "0x840ef7e5f896be71d46df234c60898216fefcbe3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x2fdf9b25df26e81598c09ef7482a82e2ec6eb68c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc27a719105a987b4c34116223cae8bd8f4b5def4"
  },
  {
    feeTier: "2500",
    id: "0xc70b964ce12b4f48a70bf5c301ad23a2610cffbf",
    token0: "0x6c62cb6e956f48a66e691683e3f417749bd99b97",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xeca409a2c24a83cfcbfccadfbb7149f02089bf12",
    token0: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    token1: "0xeac9873291ddaca754ea5642114151f3035c67a2"
  },
  {
    feeTier: "10000",
    id: "0x7f68480f65cecc704ba3dbbc554984df92d97649",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9f8a75436e7e808f3fb348182e0ea42d2dd467cd"
  },
  {
    feeTier: "10000",
    id: "0xbb9969890303da5eecca3c0355c5c9d535ca845c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x78e510f415cdf1399100c4e3078457e490dda7d3"
  },
  {
    feeTier: "100",
    id: "0x93c8fc4304174934b45557c6c70cd323f333e67e",
    token0: "0x0bd74a50f0309bc11158c4af11c20e5fda5e43da",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x05476dc028239d0dbe34283ddbc82566738f860a",
    token0: "0xb6adbe0517a0f9ab489520beb0f76a2f872c237b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xacab5f561d195010e4c3a58782b9c9b66074ca0e",
    token0: "0x7e842b40e06a0b4c7f72a553a405993123c225a2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xf339e87f68f0ab21d1019ae042ee1a34d1bd952a",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xecd17cff5da1ec867fec5faec97d1035727d7511"
  },
  {
    feeTier: "500",
    id: "0xeb8c528b60774db785bdd1c0916e6aef723786e5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc05db54f680527fb105b36ae4b1bbcafdd7b7518"
  },
  {
    feeTier: "10000",
    id: "0x1a5b2f14cdd96db492ef14f6079fcf108753dfc0",
    token0: "0x9dd5aca7afaa266c249ffc58161fedb731a0b601",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x8ba9ec5737fdcb0e472c207befe775ca94386e91",
    token0: "0x4d2d32d8652058bf98c772953e1df5c5c85d9f45",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x88240a2ca0af5dd3b181975b9985274274cb3685",
    token0: "0x5012c90f14d190607662ca8344120812aaa2639d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xdcccc7d0b02c837d1b8d8a8d5e2683387bc2b910",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xad6742a35fb341a9cc6ad674738dd8da98b94fb1"
  },
  {
    feeTier: "10000",
    id: "0x6681603843a1615a646bcdd8ea0ea234b1d08897",
    token0: "0x9bae1a6bd435cd0deb62e7517ea948b5eb6eb497",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x5feaa7be21d029a1ecaa4ae26a001ea0f20424cf",
    token0: "0x2288ae34a0ea59219e53755eb24a27a313689d9a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x5d6e96f551e983a80e9bab7c478694783093b3c9",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfb5b838b6cfeedc2873ab27866079ac55363d37e"
  },
  {
    feeTier: "10000",
    id: "0x9165d07d986b733a2b3a4cb77accd89015af4c7b",
    token0: "0x5506d3b14cc58c8c4790be4e89fc66b389be9f3e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xc6c0718a69f10dee8c11c4dc0e92a4ed8280fee2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbf8bab33600d5bca18e4464e34c2a8d532031f5c"
  },
  {
    feeTier: "2500",
    id: "0xf20344d3e909d5057f1cbead02c7f753a9ce6297",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xc762043e211571eb34f1ef377e5e8e76914962f9"
  },
  {
    feeTier: "2500",
    id: "0x958bb8cbc4ecc7e2ee84d25aa5cb23ef50c7b7c9",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xad29abb318791d579433d831ed122afeaf29dcfe"
  },
  {
    feeTier: "10000",
    id: "0x4fb407d057930e3e52b945ef08d4f28bd57a1e26",
    token0: "0x9f589e3eabe42ebc94a44727b3f3531c0c877809",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x799502584983f747ca376a4c1a70ce73be6fb6e9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd99903242745e8e3ecf1e2a7d4f6052282f891ee"
  },
  {
    feeTier: "10000",
    id: "0x0d55f0ee1bdfc6f1c7d032b1cad3fdb8d1ec5cb4",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc7d4515ba4c82c98a5a81d2a5ef98dcf35314314"
  },
  {
    feeTier: "500",
    id: "0x4856c035b27800f1136c79bc2a1e1de6cbeee1a4",
    token0: "0x47f5499b90af2b4a79f91e39bb6411c1da6b0004",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xa6f6bd05def8b439624e792715a4b301b963dc43",
    token0: "0x83850d97018f665eb746fbb8f18351e977d1b0d6",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x9a55e1e636eb275f0ecdd331a42f6d1a369a5023",
    token0: "0x66d79b8f60ec93bfce0b56f5ac14a2714e509a99",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x446f98c7a04eb9c5cd0bc8676c820b4883b1d27f",
    token0: "0x0112e557d400474717056c4e6d40edd846f38351",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "10000",
    id: "0x9f605e1f57d6062a72d5ee5796bb88c4843aa99b",
    token0: "0x4338665cbb7b2485a8855a139b75d5e34ab0db94",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "500",
    id: "0xe1197c57b08e1d80236b8aac67c328d3b9ebdd35",
    token0: "0x178fbe1cf4775fbdb9756d6349195a05799c0fe5",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x721fea4b7fb174c8ba4b0a87c1adf8997a17532f",
    token0: "0x156ab3346823b651294766e23e6cf87254d68962",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xce6160bb594fc055c943f59de92cee30b8c6b32c",
    token0: "0xba2ae424d960c26247dd6c32edc70b295c744c43",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xdf542b8ba23f12b7afa7c4323dd8790cc258c489",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6664d47a0985584e8c1d99da138fe211b1c5ae67"
  },
  {
    feeTier: "10000",
    id: "0x518452f047c501b987ebe4b9500ff5ac62a54d91",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x69bfa36d50d92e8985d27e6aa6e685c0325ce7b4"
  },
  {
    feeTier: "10000",
    id: "0xda46c520d0e3a6b9a745b5f8e667d73be5b157d0",
    token0: "0x1ba42e5193dfa8b03d15dd1b86a3113bbbef8eeb",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "10000",
    id: "0x701396d9b97857dd20ad1cce048d58186573880c",
    token0: "0x78a0a62fba6fb21a83fe8a3433d44c73a4017a6f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x46d1106ed0d76d9827c784777048373ded6aaa03",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbc28850e5da66b3a545fbdf0492ec8b34347109a"
  },
  {
    feeTier: "10000",
    id: "0xe95a925f4a3e7111473b75c8507ec0e604108287",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf4b5470523ccd314c6b9da041076e7d79e0df267"
  },
  {
    feeTier: "2500",
    id: "0x7831819d57170b15ea617fe75753503f8c30857f",
    token0: "0x2c44b726adf1963ca47af88b284c06f30380fc78",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x4cac30e75fef6312762e1b5db0c43d5c0dfb00aa",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xcc42724c6683b7e57334c4e856f4c9965ed682bd"
  },
  {
    feeTier: "500",
    id: "0xb76e90172b71229e14cfa867aff4748cf14e4379",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdebd6e2da378784a69dc6ec99fe254223b312287"
  },
  {
    feeTier: "500",
    id: "0x1d9925fffce17cdb461ad3ac74311ab280e948cf",
    token0: "0x4df357fba8a681eca72e133bc1e63198ef611641",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x114b7b2e062885be12b160f7640aa1d2eeb2800a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x762878e70f506f1d52c4b5db2191e5341349afe7"
  },
  {
    feeTier: "500",
    id: "0x9dd29c366abaa234252b6c1059f4cdca930dda25",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa81cb7656c3af44566f44b275269b6938b0ba39d"
  },
  {
    feeTier: "10000",
    id: "0x718ef2c26890eeb58287afe2c3c25e830004c579",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x76a797a59ba2c17726896976b7b3747bfd1d220f"
  },
  {
    feeTier: "10000",
    id: "0xa585bf3f293dc86ef78324a3bb992ae888254299",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x570a5d26f7765ecb712c0924e4de545b89fd43df"
  },
  {
    feeTier: "2500",
    id: "0xee9ecc8032849112778a8372ef3355888ea85c55",
    token0: "0x9840652dc04fb9db2c43853633f0f62be6f00f98",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xc1feb3e2e411f82bc5892328c17b36b45a1a64c1",
    token0: "0x299142a6370e1912156e53fbd4f25d7ba49ddcc5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x366460f25186bea99a20bdf33fe0afe77bc2793b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xca30e772e4bd5f38ed775e6f8c57c6ffcb3c931f"
  },
  {
    feeTier: "2500",
    id: "0xaefd8195309ebe89b278ba857f1b11a8b91f5892",
    token0: "0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153",
    token1: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82"
  },
  {
    feeTier: "100",
    id: "0xcab9fe6be204ef029b7feb90beb913ad31c0f8cc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb385d336a15067efe90de12e7afd0cbc0c26b152"
  },
  {
    feeTier: "10000",
    id: "0x7b402569648df3b670d9a28f162844e731fde46c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa236fd48f30ad4dee145652a71912189855dd575"
  },
  {
    feeTier: "10000",
    id: "0x34bb7465896644b274f6fc26b450697eb1022f8f",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfc15a884471163f2dac5169159b04f1e9d6b1698"
  },
  {
    feeTier: "2500",
    id: "0xc6e5e7845547056679862e747f9541b88b604fad",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xb6c53431608e626ac81a9776ac3e999c5556717c"
  },
  {
    feeTier: "500",
    id: "0x51b48e87ec132b7d314e22384ea037154567fd77",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6d0ef390b360af9844a6d649681774ba026e063f"
  },
  {
    feeTier: "2500",
    id: "0x6efd714afadfbb1a639ccdeb9293670c49504a8f",
    token0: "0x8f0528ce5ef7b51152a59745befdd91d97091d2f",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0xce6326fc06c2f3967884e5578bb33d0f30b63a33",
    token0: "0x1fa4a73a3f0133f0025378af00236f3abdee5d63",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x0af30235bc09783f086ac87eee510914fe81b629",
    token0: "0xab980940732b4f5f3c04a3a0ff9800cf6dd72fec",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x767d2bbc5213a302d80f02b74f32a26e50827a74",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6ad9e9c098a45b2b41b519119c31c3dcb02accb2"
  },
  {
    feeTier: "10000",
    id: "0xfcfca7a231e75f97e3db02011504e0c912572230",
    token0: "0x16faf9daa401aa42506af503aa3d80b871c467a3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xf5b4b24e5808daa3fbeee11df27a0994600356b4",
    token0: "0x4bd17003473389a42daf6a0a729f6fdb328bbbd7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x339807669dceead3d2ef7f0dc99fcaa9fff3283e",
    token0: "0x6ad9e9c098a45b2b41b519119c31c3dcb02accb2",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x91b545acb12a30bbf1df4909b97a1dde6e7fb8be",
    token0: "0x349a3a681a5beb51902faeb9326de26b3a5c31e2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x295cf57f70f1b0ff2cfcdfe6abcfaf015be94ebf",
    token0: "0x300ff1ef7476e29aa760f29e94b43329caf921eb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x6f4919d08bdeb1aadfeae4da97ccebfa370008f6",
    token0: "0x6fdcdfef7c496407ccb0cec90f9c5aaa1cc8d888",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x27f3c7f534af9b3e37b1bff0cd1a367b807816dc",
    token0: "0x991b4ce57864060115700d6fc05c7780346a15ac",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xcf0ba206d688fc9ae8a268f8b9077f4307600895",
    token0: "0x143d7a700a533b4baf6d693449b278a8a2f5927d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x2c50cb8faf2e4afda887cfbd969b026ea59dbd9d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xef437c4540de4792f6f47c01aaf2c0597d5a5b86"
  },
  {
    feeTier: "2500",
    id: "0x7983ceb15fe6dc393a1efd0be75739e5bbbd82d8",
    token0: "0x1f9f6a696c6fd109cd3956f45dc709d2b3902163",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "10000",
    id: "0x3829b476799a81e8b98682016bc2815d48de60ef",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc47b0443f8608943c596168504bb6d4a062e0edc"
  },
  {
    feeTier: "10000",
    id: "0x6a04c8b5eab555c7590c5dcf619ccde558ae35e4",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc9f5955f6da20e44a068f3d58fb2404f56f9a6f2"
  },
  {
    feeTier: "2500",
    id: "0xcc09d4441f848eed3c1f707f0fa552703c995c71",
    token0: "0x0a23454f4c5d57a020372ab7138d80b43da95c3e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x1067559db5e4273fe0798a9ed0f85b30089a7bbc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd91a5f4553b3f3a8c6459d433044ff2694381041"
  },
  {
    feeTier: "2500",
    id: "0xfe4e2d6ca46f3fda0de21e41af6608c8e165fdd3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf92751a29816b0a8bca885935afcf52a1f25f92f"
  },
  {
    feeTier: "10000",
    id: "0x0f475814e6a613257a554ca2da70815ca6a8511e",
    token0: "0x111111111117dc0aa78b770fa6a738034120c302",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "10000",
    id: "0x33bfb5c29400c74d4e036d88cebd9fb7564a8688",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x84affeef925cdce87f8a99b7b2e540da5140fc09"
  },
  {
    feeTier: "100",
    id: "0x2f84455dae19b2c6ea7fae76415eb154cec1ec52",
    token0: "0xaf88331abc43a019cb3e28a86d73e990f77ddf89",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x929db863046e7ee5139a07cb49638eb5e722f711",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd4364d2c7ad05530cb0e8defc291d7d7262e3924"
  },
  {
    feeTier: "2500",
    id: "0xfd67493cdbf7189ee84ff5f8ddab231c627577d1",
    token0: "0x71e72dde4152d274afd1f2db43531ed9e44a78fa",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x846d87e8f3b73c3f26183acb7ab52c9a98b832b7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb04906e95ab5d797ada81508115611fee694c2b3"
  },
  {
    feeTier: "2500",
    id: "0x1be0a017cda061501b9dd460ebfd16f0971eea8e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe2ae1a99bbd2efab0a5c38f2146b7ace61abc5ce"
  },
  {
    feeTier: "10000",
    id: "0x55c9626d91e34fd803a335a5828cf230d8639437",
    token0: "0x0e28bc9b03971e95acf9ae1326e51ecf9c55b498",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x52dd6cf4e5efd221698544a020e76fb7cc5170b8",
    token0: "0x4027d91ecd3140e53ae743d657549adfeebb27ab",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xa6fd747ca73d91ee3af6e89669ebf22ee64ea669",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xca3f508b8e4dd382ee878a314789373d80a5190a"
  },
  {
    feeTier: "10000",
    id: "0x754fbd00233e43ea8d4d47f5f3de54f7e9ca8321",
    token0: "0x33d08d8c7a168333a85285a68c0042b39fc3741d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x14ae2f8e6913daad5f8a8ddf6a0d046be5183093",
    token0: "0x3fd230b77ad19aaf6330da7854ec76d5aeb49ead",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x7210f6699a7c0a8f4c44643a9efc06b431aa2e7f",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x73cf73c2503154de4dc12067546aa9357dadaff2"
  },
  {
    feeTier: "500",
    id: "0xc352acd2a42f88d31f89dba30d5a256f09ef58d6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9b673c0f2545382015daef28a86eddb4c4a37eb9"
  },
  {
    feeTier: "500",
    id: "0x03df9939a8d692aad49e2559cb50eff62e3ae166",
    token0: "0x2a90aa39d859e08c101605e41a1ed20772253325",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xf97129a617728b543bb5c38b9af37618d1ded8a8",
    token0: "0x36d8d5de808aa7b0b7f543c8b3e25a1fdb09f912",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x261766fadcf917c53dbf5e9a978736a9e4123586",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc51ef828319b131b595b7ec4b28210ecf4d05ad0"
  },
  {
    feeTier: "100",
    id: "0x8d89a9b6b76fc499b019ee3200d8291a6fc2011a",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcee4e6f4d8e634e329c457a4f98c090afafb1c4b"
  },
  {
    feeTier: "2500",
    id: "0xfb5c2d2f2cf7741ba1a7be2ffabed248bd9b888e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbdeae1ca48894a1759a8374d63925f21f2ee2639"
  },
  {
    feeTier: "10000",
    id: "0x4642792ac79b0e80f5a43f1fbf93a0af8b4a33ba",
    token0: "0x840ef7e5f896be71d46df234c60898216fefcbe3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x7fdf477e43f36ad563a0c40570a8ce101058d856",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdc82e7d64b371e876d345935a3df19dde4dd8e7d"
  },
  {
    feeTier: "10000",
    id: "0x19b43ae43701818c4dfe61329c578a2c6d82b504",
    token0: "0x74926b3d118a63f6958922d3dc05eb9c6e6e00c6",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd76e15e3b7ac9d0e75b2d65c46dc226eaef608cc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7b27d11d90a52709b6c3c84688042ce9d61c9f86"
  },
  {
    feeTier: "10000",
    id: "0x402457adee5e7e35afeea09335d5a9ea415ab70f",
    token0: "0x12bb890508c125661e03b09ec06e404bc9289040",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x466626db6aea75b2491fe5ff6cf8cb82a7b3b7c6",
    token0: "0x48d761312aed29202229fa0672e129befe1d8023",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xccbd082b90084e7317187512d8d2af83ef95508c",
    token0: "0x04756126f044634c9a0f0e985e60c88a51acc206",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x1a1703bf5f1da9db0f62d17e8c54e84fd732d695",
    token0: "0xa697e272a73744b343528c3bc4702f2565b2f422",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x3b0b1daa799cc19aae435617e15b8b5263373f54",
    token0: "0x2d4c3f0cebe62f9af50fcb5361d66896271fd6a2",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x43dda7c784ff36ca1b2898719e16f7ac9de3f48b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcebef3df1f3c5bfd90fde603e71f31a53b11944d"
  },
  {
    feeTier: "2500",
    id: "0x7626f508f6ed1e72d9c4de78e26c8a03f6c2147c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x67009eb16ff64d06b4f782b3c552b924b1d1bb93"
  },
  {
    feeTier: "500",
    id: "0x84a6dd4a5c8eeae624359c4692ec8ec999ce4a73",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcaafe21960e4d1491dd801b2d0155304bbf927b6"
  },
  {
    feeTier: "10000",
    id: "0x29c2330eb008945fcaee35d6f1ad7f00a6dc52de",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb6b8ccd230bb4235c7b87986274e7ab550b72261"
  },
  {
    feeTier: "10000",
    id: "0x7524eec313a7af65b62e9d8c5d169bdb74d982c1",
    token0: "0xb1564dd0fa349697747c7953732d4ca2fe59de5a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x2d2af273117ee3639cde46c8af0baf447b8a1aec",
    token0: "0x0c9ad20802e89bea858ae2e8594843fafa887cb3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xdb99407d6c70d608aabc5a74f90e11f16801e191",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0x9e20461bc2c4c980f62f1b279d71734207a6a356"
  },
  {
    feeTier: "2500",
    id: "0xe0ed9d69700ce5aaaab55fbec0b2a1879b182b94",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9720ca160bbd4e7f3dd4bb3f8bd4227ca0342e63"
  },
  {
    feeTier: "10000",
    id: "0x548751d1a9161ce782460cb9287d7498e5274534",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xe9c803f48dffe50180bd5b01dc04da939e3445fc"
  },
  {
    feeTier: "100",
    id: "0xab91b3e775bd7d1b3ac29d4b4993170ec2f06499",
    token0: "0x9a2868c91b33540e83f31620e4c44ea344a5ac3b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x61cda9a60a732a885f8c74929e197d045669286c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe127d21b3a4326863de2ddc99ac8b9d3a2a673b6"
  },
  {
    feeTier: "10000",
    id: "0xe5c990fb60efa071ca09ad8173f23044a4f6dcff",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x72f74fb5382a7a49b5c6e8437a04d65bf2ff5736"
  },
  {
    feeTier: "2500",
    id: "0xe139b45286cd6f474dd21d00944e42ecfa2b6d11",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9ba43191a84a726cbc48716c1ceb3d13a28a4535"
  },
  {
    feeTier: "10000",
    id: "0xad2c46a601d3ac1a883c4e4b9233cf4efcd2ffe4",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd37915eeb7ea5ce18ac96aa90a42ac850465ac9b"
  },
  {
    feeTier: "2500",
    id: "0x946a31300e21a409e2a53ef879831b13ec091c3c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfa54ff1a158b5189ebba6ae130ced6bbd3aea76e"
  },
  {
    feeTier: "10000",
    id: "0xb2adf2ac951dd6245a853dc6144caf524c1ce34e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7597bdccf10e41bccc374a6a0104cf430c420884"
  },
  {
    feeTier: "10000",
    id: "0xe15472674e93c9c740656b228b9c9d45442a8a48",
    token0: "0xa1ed0bd9a4776830c5b7ba004f26427b71152ca5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x7d05c84581f0c41ad80ddf677a510360bae09a5a",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x0a89404323ef10c23fa71e39fe41da0e75eecb8e",
    token0: "0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x3a149a44dd1f48472c78f38500e94b853e23185f",
    token0: "0x03ff0ff224f904be3118461335064bb48df47938",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x0edf82c89b709da504484a66a3c8e96ef8ca2562",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xda541c4c25b98fbbe10e1daf12ed5e8cbf3263a8"
  },
  {
    feeTier: "100",
    id: "0x513b522bef32c8dfb2341da462affebdb062b4dd",
    token0: "0x56f73df6d31fbec5117edaf7189cad3e85427329",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xb535cec52bf0238447a136c5a2e5f8b7c588abea",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdb5ee2a3d48f17a81bdcf513d6988ed430bbe7ab"
  },
  {
    feeTier: "10000",
    id: "0x7fb29cb498c8523f39e481b283137641c49e1052",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x5cc5e64ab764a0f1e97f23984e20fd4528356a6a"
  },
  {
    feeTier: "10000",
    id: "0x6de111093f23770fc75396b34ef1e26a3730a457",
    token0: "0x26619fa1d4c957c58096bbbeca6588dcfb12e109",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xe7ea066fb51d3a61b9ca63cd3edaea230dc5dc5d",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf2bf88e6f27b674d47cd1b26f77055ad66278bdb"
  },
  {
    feeTier: "10000",
    id: "0xe8c76e17c5c67b05a6588a00c43b783b5ce6fdea",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc1d31db22afa8b8c9368836f99850477288bdde1"
  },
  {
    feeTier: "2500",
    id: "0x9cc47281db92164a00040d2364f9d61f37bf7c64",
    token0: "0x8f0fb159380176d324542b3a7933f0c2fd0c2bbf",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd288becf86d300d4cb575c0c7e28b964f6844431",
    token0: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x427f225266b41bf1b04bcb4e249d95e2c7da6f8f",
    token0: "0x6985884c4392d348587b19cb9eaaf157f13271cd",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0x1aaecb940a342d89258a297e2418b22ce1bf5d5e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7324c7c0d95cebc73eea7e85cbaac0dbdf88a05b"
  },
  {
    feeTier: "2500",
    id: "0xee79b8aa125cba4f9dcdef14a0a9f5a8e94dd6a9",
    token0: "0xaa390bd1657514730d98baabce4b393a53acd579",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x8b5cdeb2f0558efde20e52b8901fa4dcb65e64b3",
    token0: "0xb46584e0efde3092e04010a13f2eae62adb3b9f0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xfa11a2ed28abb3a0f20dcc20cb207e10899fe6f0",
    token0: "0x27ae27110350b98d564b9a3eed31baebc82d878d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9fd9041d5316f1b29285898ea5b371830b369750",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7aa2894e96a9ec1a907a93e31ea2cace4644d7d3"
  },
  {
    feeTier: "2500",
    id: "0x436380bd2404aba3f20c0ea68f343f5a174532a7",
    token0: "0x0034719300501b06e10ebb1d07ea5967301f0941",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x05001e922870a0614da5d71ce79d7fb79f0ac0a7",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd85ad783cc94bd04196a13dc042a3054a9b52210"
  },
  {
    feeTier: "2500",
    id: "0xf683113764e4499c473acd38fc4b37e71554e4ad",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xce7de646e7208a4ef112cb6ed5038fa6cc6b12e3"
  },
  {
    feeTier: "10000",
    id: "0x4acd6c8b3bfa890546e088e8abc87f035155362d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9879406c2ef6578ceb59009d64151ef3f225830b"
  },
  {
    feeTier: "100",
    id: "0x0b1275f8d31c0aebacba573e0e61cd9517d20a97",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbd3a8855d899a7c3bde08e1a893fd44e362fc728"
  },
  {
    feeTier: "10000",
    id: "0xdef2d8c9757712369082e0dd8fd5c86e2e912122",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x6c6d604d3f07abe287c1a3df0281e999a83495c0"
  },
  {
    feeTier: "10000",
    id: "0x3cce4adf65d12f1c7f8b276e6af67869aaa21412",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x56f86cfa34cf4004736554c2784d59e477589c8c"
  },
  {
    feeTier: "500",
    id: "0x4f9e5529017847dced6c8f2dcfcd45edb9ab5bcf",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xec4181db75f17d3bf7885158794d060ae30bd730"
  },
  {
    feeTier: "500",
    id: "0x8ac130084f24218c9c1e5b4ea29876ade67a4c31",
    token0: "0x51a772349f59c7dd6f3a2bb04e40f5360e8b5757",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x817894ca334956df7f45bacb2079561c720a0735",
    token0: "0x6561153f940260b3ca1f206e39afe0bd85bb2299",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x94eaab72bccd456c94fb2ce5fbe4da21669f3fc2",
    token0: "0x2889ab28029faeecd45487e6258f5e119a8c40f2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x70487f1b496707af1f09884079fa58df458a7dbc",
    token0: "0x4d2d32d8652058bf98c772953e1df5c5c85d9f45",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x6b2dd8b85cab5fa6d508aa62c8aa73a289ae8164",
    token0: "0x5da9e7d74d05475036cb2fb1aa3b59b49a2b624c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x6c3dcf10600c951d5aa343503ae7159ca5b3902f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x59c49b54d4425c7ff1e49f40958a14d48cc87c26"
  },
  {
    feeTier: "10000",
    id: "0x99b2db8b7c57681f67b49ae7a4b204e0377ef543",
    token0: "0xd64cb49e1dbfcce67ba6cd528083d2522afb1b8b",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x069607fe13415d2af0ec99f030ca16a40fd12c3d",
    token0: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x6877ee194023687e2d0925c98fc5c8ab21377e03",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6d96c6c401423a23945c03bc8c42e7f82d24b9e0"
  },
  {
    feeTier: "10000",
    id: "0x5ca70744a5a65d50d08c5cfbe02cadc56cf8fdc5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc05db54f680527fb105b36ae4b1bbcafdd7b7518"
  },
  {
    feeTier: "2500",
    id: "0xd3538174e57735b02fa85e1bc65c52f4a98a6363",
    token0: "0x2b72867c32cf673f7b02d208b26889fed353b1f8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xf232161f1b47025b6726f82b984a15169928416f",
    token0: "0x872952d3c1caf944852c5adda65633f1ef218a26",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xd59853885f42784f104cd5ec5e76fed06e177d61",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8"
  },
  {
    feeTier: "100",
    id: "0x7fb1f3c7bd15cdde30c26d66c5e78c2155807f5e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xff2aec2dfd8978eebf9bc036ab820e0350acf28b"
  },
  {
    feeTier: "10000",
    id: "0xdbfdbd9702f078b84e17ef6a4be5d8f8d37d3584",
    token0: "0x51e72dd1f2628295cc2ef931cb64fdbdc3a0c599",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x7919a2d35b28a3889eb64c854094e3b0def32bc2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x708955db0d4c52ffbf9aa34af7f3ca8bf07390a8"
  },
  {
    feeTier: "2500",
    id: "0xd0e18df17688a48d844facbf53607ef80205f86c",
    token0: "0x045c4324039da91c52c55df5d785385aab073dcf",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "2500",
    id: "0xe297e1da9a484e609d180c5b1fefe4830df70ef1",
    token0: "0x27c073e8427aa493a90b8dc8b73a89e670fd77bb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x89da4102853c6cf3f4e9979cbb1dc4a166f38e84",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xba2ae424d960c26247dd6c32edc70b295c744c43"
  },
  {
    feeTier: "100",
    id: "0xdce6b04cc62ef8e483e19b87fac4e92b11a0f836",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd26e61661b5542cf3413d863cc679464f9f80841"
  },
  {
    feeTier: "2500",
    id: "0xda482469273d1e0aa1976ce8228a3abc9656fc1c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcc7a91413769891de2e9ebbfc96d2eb1874b5760"
  },
  {
    feeTier: "2500",
    id: "0x0125ac49a5c06ccfd0819e6e20ccbe09bde35140",
    token0: "0x21ac3bb914f90a2bb1a16088e673a9fdda641434",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x9efad471fcb31827ece79d28d95ed3b7a3710ab2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd2486bfd13d6de83edfd59f5f7a64ad55aade39f"
  },
  {
    feeTier: "10000",
    id: "0xe0bd2b7f4b3e3f0374e6ced0be43b2f68960434f",
    token0: "0x35da89a339de2c78f8fb1c5e1a9a9c6539e2fa8a",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x94f1a8a08c5e2f91c3662587d1b2717f9d538f7c",
    token0: "0x178c1500b7b99108ba9ad0e503ed449dd30cfdca",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x891513b1640ff394217758e0b93ac153bd87af6e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbe7bdd5d57ddd667347764b13626b90175ab852b"
  },
  {
    feeTier: "2500",
    id: "0x42a69a118570bec5015c23e4fc5f52bf994a6051",
    token0: "0x0864c156b3c5f69824564dec60c629ae6401bf2a",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "100",
    id: "0x88068f771d07eb361c272e0c6ede3aa568cb90f4",
    token0: "0x05a2eb59bdaafbb59cd863ba9092b9002c0417c6",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xd031844c86243b8e1be897f2059ac25c9261b3a2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa2b726b1145a4773f68593cf171187d8ebe4d495"
  },
  {
    feeTier: "100",
    id: "0x7d0f3034904fc2e53ac8689c245439cfb824d392",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcaed5ad4c6fd762073dc94381c62a1a88f799658"
  },
  {
    feeTier: "2500",
    id: "0x897aaecd9d0eef1113dd9055527c39531aaca8af",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x657ef7af0fffc7ac913a0492150060935b668f2c"
  },
  {
    feeTier: "2500",
    id: "0x647d99772863e09f47435782cbb6c96ec4a75f12",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbf5140a22578168fd562dccf235e5d43a02ce9b1"
  },
  {
    feeTier: "10000",
    id: "0x35c2e5863b1fbef7b5830fe01dac0188010058a3",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x90c97f71e18723b0cf0dfa30ee176ab653e89f40"
  },
  {
    feeTier: "500",
    id: "0x4553e7de926c1ddeb5e2f7b8c8a8dc51c3544977",
    token0: "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x2da31497972e9fc07a09f06419fdc53b8d136432",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc8c61c3b496ac72441844643506919952f9a4133"
  },
  {
    feeTier: "2500",
    id: "0x5c74c175af46bd3e6fd36cca0f46f35970b0e362",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x888888888888f195e27a2e0f98d712952ab9348e"
  },
  {
    feeTier: "10000",
    id: "0x184da5ac84afa30fcf699119ac8120cc9fceb81b",
    token0: "0x23e8a70534308a4aaf76fb8c32ec13d17a3bd89e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xe2fc3a51d90eb5587720c4ec721f6792d2a7f8de",
    token0: "0x7e4e4a9f272cab5a8fdfae78490db46b830d4d86",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xb947b2c7711df25734f8c9cf58ffefb371e60309",
    token0: "0x1a131f7b106d58f33eaf0fe5b47db2f2045e5732",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x839334f53e9d425ea01cd1f8c57bf5f2ff12f08f",
    token0: "0xb51d09b75193c35c1eb72d5714453a04051a80bc",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x36696169c63e42cd08ce11f5deebbcebae652050",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xe650577f6da3fce62df945861e25e0197412cdfc",
    token0: "0x886640149e31e1430fa74cc39725431eb82ddfb2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x57382d0877afdabe896dfbf63889d4ff345fc1a4",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xfe56d5892bdffc7bf58f2e84be1b2c32d21c308b"
  },
  {
    feeTier: "2500",
    id: "0x6fcec6a3c4255ba4e37b5ce9a5a0311f73ea7777",
    token0: "0xa73164db271931cf952cbaeff9e8f5817b42fa5c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xcfe783e16c9a8c74f2be9bceb2339769439061bf",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8f0528ce5ef7b51152a59745befdd91d97091d2f"
  },
  {
    feeTier: "100",
    id: "0x15023b7fc7bec2b4ade76ef5b7479422cbf82c30",
    token0: "0x41e025ea850bb4d0dcbb5b1f4353af099cbd026a",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xe0f166b714726efb679ad48ba58e8b1403e363ea",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xccd09b80453335aa914f5d9174984b6586c315ec"
  },
  {
    feeTier: "100",
    id: "0xa5f34c803e57830a2dce9d9ba8629ee4539cecd8",
    token0: "0x4b4b17aba4093c9a5a2e1aaff367d19b3b26b94a",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xdfd0bf78249ba91ff6024089c913d0b55e056172",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf264f966f8998a620295fcefb60e7868c27eae01"
  },
  {
    feeTier: "500",
    id: "0x985b818153633f45ac267e6db5ae9929c7d82f0e",
    token0: "0x417e99871cdc1a48cc313be8b586667d54b46494",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x68fb2fe28c872677340be738a64b5a02109922fc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcc42724c6683b7e57334c4e856f4c9965ed682bd"
  },
  {
    feeTier: "10000",
    id: "0xc5add65d53a2f679a39db92ae4a94e6cfde7c1b0",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfe1d8816a1c4431f14cdf1d20e3e0c3812dce3e0"
  },
  {
    feeTier: "2500",
    id: "0x29ab4a3efd3616bcf08f89d555e7788ef65a120a",
    token0: "0x93891a3328cc16ebd59474ced882b1d91dec63e1",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x5657643c935238229aca6dc41c1399a38ee36a9b",
    token0: "0x04756126f044634c9a0f0e985e60c88a51acc206",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xda262f1ebf043d8612a6a7422e9baea6d79550f0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5a9a8ac5e18c63f7591f63f15a5d89921853c8e9"
  },
  {
    feeTier: "500",
    id: "0xef3874ce57a02f96e8ee6fab919ec0972416b910",
    token0: "0x4d2d32d8652058bf98c772953e1df5c5c85d9f45",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x0516bdaea7bc076322350bda750487273112e9c6",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe7cb24f449973d5b3520e5b93d88b405903c75fb"
  },
  {
    feeTier: "100",
    id: "0xcbed474a58fdee2ca996c0cb349751fa15b32c85",
    token0: "0x30ab8cd53f4e22798492579b001591cde3d2b1af",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xa62fdd52ae4c9ca11d6c4e328e8f6a9db218e452",
    token0: "0x0203d275d2a65030889af45ed91d472be3948b92",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xcb171ab6a1511029e34374ec80e37256a48f1dfa",
    token0: "0x944824290cc12f31ae18ef51216a223ba4063092",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x282847bcde876c9c6847e023502b4cd5a18fdf2c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe500c0a78049534782a6dc2ecb529b74bec326ab"
  },
  {
    feeTier: "100",
    id: "0xcd185e6bd71a7e2f53e29d4043964c378fef2e13",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6920a21ad060240b77ca12ea3c5a9246397f08b1"
  },
  {
    feeTier: "100",
    id: "0xdf07353b4fc526a42ea0d2872e602652e9bd23df",
    token0: "0x1f6ba0e8db204b9b7762ddcbcd6d3941f8e405cf",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x8d49025003d3d15d0e2d1558f3ff59027db83c37",
    token0: "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xc6b0eccb90434331eded17b04032c3383e1e5b0d",
    token0: "0x8dbd77c79e7a7cf5172205519c29a1ada2aa6c99",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x4d41cc06b04bb743b8d8a73c8907e1af06dda301",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6d106c0b8d2f47c5465bdbd58d1be253762cbbc1"
  },
  {
    feeTier: "500",
    id: "0xa4e594cf5829f20cba17511dc443bc24d80c9ba3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb51d9c7dbc154f61c28446a3e4955f1a1bb615aa"
  },
  {
    feeTier: "10000",
    id: "0xbc9f7616c26f88d993caaff19e5f891619d18776",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbb7d61d2511fd2e63f02178ca9b663458af9fc63"
  },
  {
    feeTier: "500",
    id: "0x5bcb1a10d281f0ff55dfb457c47921cb12ca63b8",
    token0: "0x4b0f1812e5df2a09796481ff14017e6005508003",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xf2c7bb09bcc6f5ddb7e90a93123fbde849a4e79e",
    token0: "0x8b3a48e51dffcc67ba22669dc1e5957d19905cf5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xb6019a53d6763c95f678748eb45547d93c7d858b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbabacc135bbf2ce30f9c0f12665b244d3689a29c"
  },
  {
    feeTier: "10000",
    id: "0x2fdc1ba17d6fca6dfa483000822a34315c5997bc",
    token0: "0x4536819095a8969c94362ba130ee0bb1cda714cb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x86f2e5f3395f370607289b898452f226628b172a",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x97be9fbd5ea977173c38fba10f869a660850295c",
    token0: "0x4dde9004c6460041a87f972168cdd7ab8b4c6441",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xfd4a84c533e98493a91b6e8bbca1b2e7e6b347f5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa5957e0e2565dc93880da7be32abcbdf55788888"
  },
  {
    feeTier: "10000",
    id: "0xce05bfaac78a46306772dd2a501206335ab40e40",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6519cb1f694ccbcc72417570b364f2d051eefb9d"
  },
  {
    feeTier: "100",
    id: "0xc522d86785013532faffb850ac1836b6b854672f",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbf76dbf84b16da71366fc73cf8c19600449ce71a"
  },
  {
    feeTier: "10000",
    id: "0xfd0632299cf1f1d905e4fd8acc6e25d2a4105805",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xde5bdcbd4d7dfa86e527fef9971bd6ca6a76eefb"
  },
  {
    feeTier: "10000",
    id: "0xba03299ee7a1bbaf64ab58c43d56c30f18894a4f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x90b6496b6a87c14bd0385384346848c8554ea2cc"
  },
  {
    feeTier: "100",
    id: "0x1d80c7e4af84a6cafedf8d7c9635ac4978a8e338",
    token0: "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x8ce89a561e920fe7bff5bfaf13c6611e682eae8e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd1cb0f34a7924328bc2e7961a17209c54f17cfe6"
  },
  {
    feeTier: "2500",
    id: "0xaa3cb015f5f799eee05b1062204806e3fde7f9d3",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xb5be8d87fce6ce87a24b90abdb019458a8ec31f9"
  },
  {
    feeTier: "100",
    id: "0xd53b800cb363c7f378890514c269eaf3e6ee2f86",
    token0: "0x5651fa7a726b9ec0cad00ee140179912b6e73599",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x1f2b0c3ae3dcbd8fb4621b3249260550e10d2f4c",
    token0: "0x16939ef78684453bfdfb47825f8a5f714f12623a",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "500",
    id: "0x69a295afee2a010381354fa24b9fcffde3e72e9c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7cb9803b8d60b795c9d46b2a01aa5caaa59e48eb"
  },
  {
    feeTier: "2500",
    id: "0x8a9ebd06c8e3683d3b267b69233033b662a00472",
    token0: "0x09f423ac3c9babbff6f94d372b16e4206e71439f",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x86b0b44723c675660caa09bc47486e55c8599544",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe552fb52a4f19e44ef5a967632dbc320b0820639"
  },
  {
    feeTier: "2500",
    id: "0x40a1688565adb44a85bcab3ef3068d2a21895a19",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe2dca969624795985f2f083bcd0b674337ba130a"
  },
  {
    feeTier: "100",
    id: "0xb14089ace0086d517b40ce5abac982c994b14b32",
    token0: "0x60f6b4de4b411967331dcf0d7d21e7f22f4218b9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x6a2a46434a302ad9588f828522b4d83564d22d3f",
    token0: "0x1a74da1d7e717ba96cdc288bb9a4715d2aaaa1cd",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9629e7eed2be092084f7822d9e558983d5bb84ad",
    token0: "0x15d1dafbcc97f606bd02120d170fdac33b1a4a86",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x302e26e9bda986709b5f504d3426c2310e6383c6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa026ad2ceda16ca5fc28fd3c72f99e2c332c8a26"
  },
  {
    feeTier: "100",
    id: "0x8f45b99bf65cdbf9bc0c0b4846d6a324d2de5314",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "500",
    id: "0xd5f07fed6ddca96c6e93f06498dfecf7e1346d7e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9810512be701801954449408966c630595d0cd51"
  },
  {
    feeTier: "2500",
    id: "0x29c5ba7dbb67a4af999a28cc380ad234fe7c1b86",
    token0: "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x151c000e550ff01f6d6ce9592513f1ea81941ce5",
    token0: "0x363178c81c1d1eb8391de18726d450dc857ea3da",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x19e444435b9331655806d2266bc2b8c4c81eab6c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xef1f39d8391cddcaee62b8b383cb992f46a6ce4f"
  },
  {
    feeTier: "2500",
    id: "0xb49332eb00086fd4adcff960a7bc570bbccaa252",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe64e30276c2f826febd3784958d6da7b55dfbad3"
  },
  {
    feeTier: "100",
    id: "0xcd66dc220155b5746485784e19b689bb6f471446",
    token0: "0x0ca15365358390a4c95d17debedb1a86b372c460",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x91c6c2ea39fa88a86f072b23a12020654c9a2a48",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x1ba42e5193dfa8b03d15dd1b86a3113bbbef8eeb"
  },
  {
    feeTier: "100",
    id: "0xa68630cac755c9f4fac9a540212fc33a6b526345",
    token0: "0x0bbb1f133636e87900017d1b9f78d388944fde7b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xc2b3dbbf26d43617036b0eba53ad2dbd945adebf",
    token0: "0xaec945e04baf28b135fa7c640f624f8d90f1c3a6",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x2c4bac035e6a879d5fc333a13a159844d80c945f",
    token0: "0x52da44b5e584f730005dac8d2d2acbdee44d4ba3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xa58e2320e9050ea97eb1901e29a7d6e5e8a6c0fd",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xffba7529ac181c2ee1844548e6d7061c9a597df4"
  },
  {
    feeTier: "10000",
    id: "0xc87ac46773f35bfa1cb6b30ba1a127b23f489d08",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfc8774321ee4586af183baca95a8793530056353"
  },
  {
    feeTier: "500",
    id: "0xbdb116c4b008732a532e79c813cd351aa432c258",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe1987271a2838e7caded3625fe8b1be714084caf"
  },
  {
    feeTier: "10000",
    id: "0x36272df9b92b71be24f3efb1204a58cd554097f1",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x581fa684d0ec11ccb46b1d92f1f24c8a3f95c0ca"
  },
  {
    feeTier: "10000",
    id: "0xa39d06fcf8f2aff927226816a88c9de88348f231",
    token0: "0x4507cef57c46789ef8d1a19ea45f4216bae2b528",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x8a2a1c89ba9975b964e933ea4b2f32f16b45ff54",
    token0: "0xa4080f1778e69467e905b8d6f72f6e441f9e9484",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xe3620640540310166af092f7203c84e40ea1e0af",
    token0: "0x71eeba415a523f5c952cc2f06361d5443545ad28",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x41e5fa15297bc964088776bf0e8110c6a44ff2e5",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xad29abb318791d579433d831ed122afeaf29dcfe"
  },
  {
    feeTier: "2500",
    id: "0x6085973727ccd7775716239cdc4a4669ca0f4d85",
    token0: "0x69bfa36d50d92e8985d27e6aa6e685c0325ce7b4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xa95635e72b9092458597b0da32c3ed6e340592de",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xe9d7023f2132d55cbd4ee1f78273cb7a3e74f10a"
  },
  {
    feeTier: "10000",
    id: "0xb8cc488c9ba4fd24d7f9dccb79adc9bafa5f17fb",
    token0: "0x1b9ede0e48d661aa2f1215a5b79c3727cf7fa461",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xe7cb78efe9930e250baf9f64a6a17a79e12b3c5d",
    token0: "0xa2b726b1145a4773f68593cf171187d8ebe4d495",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x3b7761632240c4bbec6dee27e10d491de9aa669b",
    token0: "0x3019bf2a2ef8040c242c9a4c5c4bd4c81678b2a1",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0x2bab77dac701b86e7ee9ba4f26aeb3bd5de25020",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbda011d7f8ec00f66c1923b049b94c67d148d8b2"
  },
  {
    feeTier: "10000",
    id: "0xb5d83164658a290ce4b5742b1e0ca3f52bf3003b",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe55d97a97ae6a17706ee281486e98a84095d8aaf"
  },
  {
    feeTier: "2500",
    id: "0xe850d4d4657071328798de55265933e73dd90815",
    token0: "0xa4838122c683f732289805fc3c207febd55babdd",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xe53069909217a1a41c830092c690ef8652409f18",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdb5bcde758e4a4c0a723971742361a19aa77c4ba"
  },
  {
    feeTier: "2500",
    id: "0x7c0df9397d0fae306187de69c355544b158640ac",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcd1b51b87a8a7137d6421ba5a976225187a26777"
  },
  {
    feeTier: "10000",
    id: "0x26fb9ff6807607cea5a947e2101e9094187b0020",
    token0: "0x5a3010d4d8d3b5fb49f8b6e57fb9e48063f16700",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xba923b5d9a6b0b3288e782323e13f1dea51b6171",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfe702f40ab9467f503a5fef3752a89881efda7eb"
  },
  {
    feeTier: "500",
    id: "0x77b27c351b13dc6a8a16cc1d2e9d5e7f9873702e",
    token0: "0x1bdd3cf7f79cfb8edbb955f20ad99211551ba275",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xe0ab948d4558c29e9ff3ce217990101f11280334",
    token0: "0x0173295183685f27c84db046b5f0bea3e683c24b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x00caf94936e092d1df403b63507ce8c522b210a3",
    token0: "0x87a2d9a9a6b2d61b2a57798f1b4b2ddd19458fb6",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xa0c7a36651bb20a3d5e9d4d4bfe74023a0b2b732",
    token0: "0x1c25222994531c4ac35e4d94bbf7552c9aa92e32",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xcc9834a4e8b5b22bdfb0fcc7d43430ff9dabedca",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xecbce2c13d3a1248debfd23dcc0558b495916756"
  },
  {
    feeTier: "10000",
    id: "0xe98fc882596c307ff26f8c570532ed0e93238e9a",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfb6115445bff7b52feb98650c87f44907e58f802"
  },
  {
    feeTier: "100",
    id: "0xff5a6a2c4fd5af177f6e0d94904bf627923559b1",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe56746d34b46c0c2355d7fa2659218e7e56932bc"
  },
  {
    feeTier: "10000",
    id: "0xfca49ae01602ed10d2451d91dce2161691f01832",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x928e55dab735aa8260af3cedada18b5f70c72f1b"
  },
  {
    feeTier: "100",
    id: "0x3f36f126ed1908eb3f1c6d217d5c0c9c313a5f4b",
    token0: "0x038a4a1f278031040f4a398033735cf84b57df59",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xbed87bbe06c703e375d14a88cd54ec773c4006c1",
    token0: "0x000000089fb24237da101020ff8e2afd14624687",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xf8059e44ff8aec785e2ed67aac2e17688d23514a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x818835503f55283cd51a4399f595e295a9338753"
  },
  {
    feeTier: "500",
    id: "0x24a9bc10467a6aa239b553099598ff980b99c6dc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfe8bf5b8f5e4eb5f9bc2be16303f7dab8cf56aa8"
  },
  {
    feeTier: "100",
    id: "0x79576fbda837be3082fc19b45dde8b136f44cd12",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfbb8d5a7fa5dcb8c62d81db89d7a8369326e0bf4"
  },
  {
    feeTier: "10000",
    id: "0x1239b0495c6676b36a6c6618a63f9b3917a79577",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xca6d678e74f553f0e59cccc03ae644a3c2c5ee7d"
  },
  {
    feeTier: "10000",
    id: "0x19be90d5dd7b198eb420d579a88f20e0323eeda7",
    token0: "0x2d060ef4d6bf7f9e5edde373ab735513c0e4f944",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xebc763d213168f65fcf31fc286aa2de7d46a513c",
    token0: "0x510ca7d22a84599e7d0f15f09e674056a6255389",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x4904857d696903fef0e78f9b809561a7664d68b5",
    token0: "0x9a153e1fd8323647b349ee8554f22957cc20a349",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x62edaf2a56c9fb55be5f9b1399ac067f6a37013b",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x961c19a53e5ea0e43b8f9020553f94623ce475b6",
    token0: "0x38e382f74dfb84608f3c1f10187f6bef5951de93",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb38bcffbdde76386b95f7bc296c66d7deb259379",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x75e8ddb518bb757b4282cd5b83bb70d4101d12fb"
  },
  {
    feeTier: "2500",
    id: "0xfceb1071a8f034154a04b51bcb361958a92e0176",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa35b5c783117e107644056f5d39faa468e9d8d47"
  },
  {
    feeTier: "10000",
    id: "0x85bea4fbc57fa22b41fb1632f0d9a6a99390fd0a",
    token0: "0xb3ed0a426155b79b898849803e3b36552f7ed507",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x4fee6e2dadd14845b699b5ad336bf0f609e9be1f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5e0e27f21d58b3f1ed741decde6040ca659923e1"
  },
  {
    feeTier: "500",
    id: "0x0ec0a7c9554b8ea70bc724383b15201792164adb",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe2a15230242c958384ca05b0c7d5d1aa8f8b710f"
  },
  {
    feeTier: "10000",
    id: "0xa4be2d7ffd2f0105e17f2d51f91e093af9e23bbd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf5fab72f773af2a728c0d7a2a9089e5abbb77d75"
  },
  {
    feeTier: "10000",
    id: "0x29874fee7b84ce942bd6e06074e11c0dd615f6e0",
    token0: "0x3374a94e25606db7bea79039c042e9ef12ad324d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x5d7517fe1323bd6a65328f699b1ba2e38abb9ced",
    token0: "0xa9279a1c36093185671676695eedb22f3330fb84",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xc20b77e4f807096da06a16d99851ab96044265d0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5e2689412fae5c29bd575fbe1d5c1cd1e0622a8f"
  },
  {
    feeTier: "500",
    id: "0xfab21cb9467e9badd22a2de57bcde5f53d925973",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5b1f874d0b0c5ee17a495cbb70ab8bf64107a3bd"
  },
  {
    feeTier: "2500",
    id: "0x2a5c12d77529bc7119ae12b4db842b717d65ae35",
    token0: "0x2c44b726adf1963ca47af88b284c06f30380fc78",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x915a7204bf68c52de0aa1e3433ca362135d956de",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7b56748a3ef9970a5bae99c58ad8bc67b26c525f"
  },
  {
    feeTier: "100",
    id: "0x0ec7a280709a03877e69d1b80c115f8e8d3abc02",
    token0: "0x04c0599ae5a44757c0af6f9ec3b93da8976c150a",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "10000",
    id: "0xf0fa6e44ff229452bfc12a75dba66885c3cd27fb",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x7f70642d88cf1c4a3a7abb072b53b929b653eda5"
  },
  {
    feeTier: "100",
    id: "0x424ce9e0af2dfa6fe0f9f99e8623c26ca9504f88",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcc42724c6683b7e57334c4e856f4c9965ed682bd"
  },
  {
    feeTier: "10000",
    id: "0x59e2dc6e5c00869669bd9f4d21cfd0370c1a959e",
    token0: "0xb034e7963ca7744aca88e5e222ac7a000d51c19f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9e4011a6fc74670c74579294abd036e5b0da9417",
    token0: "0x30842a9c941d9de3af582c41ad12b11d776ba69e",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x7a1ddbeb90da173e322d9d680851949915726317",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdd325c38b12903b727d16961e61333f4871a70e0"
  },
  {
    feeTier: "500",
    id: "0x5e49ce7389a6deee994a22e994c58e0b545eaff6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdfe16521839e7df88897e44f933f96d9782ae17c"
  },
  {
    feeTier: "10000",
    id: "0x4e26d812a134560ee81202f560b6965ab7feda89",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc9882def23bc42d53895b8361d0b1edc7570bc6a"
  },
  {
    feeTier: "2500",
    id: "0xdf4c0647b8be3c49ed381209fba6ff0282445c07",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd273551e42693dd87017a933bbff60615e12125a"
  },
  {
    feeTier: "100",
    id: "0xcaffe485372708d8359f77b86e01bc4cb6b31858",
    token0: "0x3862b022f0db84c11aa2c0df9f587f2ceb8dfc2e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xf0c5b30969b38cb7e321a7dc78a3d3b3eb60fba2",
    token0: "0x003144b41d9743d402c5bdf3f72ca0f327aa0bca",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xad65ed230c4f799b7fe5929262e75df730a7d6a9",
    token0: "0x2ba64efb7a4ec8983e22a49c81fa216ac33f383a",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "2500",
    id: "0xea1a7532cb695f8e8ba54bdffe8d41000f16677a",
    token0: "0xb850cac12ab85d4400db61ac78dc5fc2418b6868",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x93cf55b210c9a5034a008c4daf7e527002136f9f",
    token0: "0x7f9ad7a5854658d984924e868187b2135514fb88",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0x49072b4bd92a1a9da4b83ee8f2886a14218cb68a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9e02b86a56b208058e41f442222fffa6ebfbefd2"
  },
  {
    feeTier: "2500",
    id: "0x55458175c5f5d34b9bd01c81f172780ed4271b23",
    token0: "0x2d060ef4d6bf7f9e5edde373ab735513c0e4f944",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x1695f239a1e0315ddeff723fda65f9d3d4ea7df2",
    token0: "0x6fd7c98458a943f469e1cf4ea85b173f5cd342f4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x5b6bf82bbe890b078b5cbedc8720a51a91df3b0c",
    token0: "0x258903a8e68d5248de85cf8a0a173d9e046edd98",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf46f4447436bce2492f3ca59de097ee98139c7de",
    token0: "0x11cd72f7a4b699c67f225ca8abb20bc9f8db90c7",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "500",
    id: "0x86cd08e163cc3d7faa6958a7d4a0e3468c4ae586",
    token0: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    token1: "0xf0186490b18cb74619816cfc7feb51cdbe4ae7b9"
  },
  {
    feeTier: "500",
    id: "0xe9c096a1bbba77af1823c6590772b429b9556472",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x581fa684d0ec11ccb46b1d92f1f24c8a3f95c0ca"
  },
  {
    feeTier: "2500",
    id: "0xa322b156b138deaa6b5df1f76154ee019f33db25",
    token0: "0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "10000",
    id: "0xbf0c2ccb200bd48a1c69e7271b1f228f7ca53ed1",
    token0: "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xe62cfe6ed0c4a5834863e92eeef5d437bdb6300b",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf68a0de8919daac07753fe10ea1f7d6a2bc8307c"
  },
  {
    feeTier: "10000",
    id: "0x537227ea8ddb675e9eddad8ef6c581499d5b1232",
    token0: "0x58c764c18b6263ce97c8a22fec857e0139026b06",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x617f6213bc6d23d39033b56f28ccd5e6ed2d8fd8",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xef3c206fd2dd012f891d859ab7314bf77a4b471c"
  },
  {
    feeTier: "100",
    id: "0x49c2d28bc2fca506cb07f084b03ac2298a938f48",
    token0: "0x570a5d26f7765ecb712c0924e4de545b89fd43df",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x4179e36957afd303261bd88c92d560d7291ac7ed",
    token0: "0x1fa4a73a3f0133f0025378af00236f3abdee5d63",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "10000",
    id: "0xbf967038092dd7af17c6f1f4b8da8949b7943741",
    token0: "0x1294f4183763743c7c9519bec51773fb3acd78fd",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x18ca6bdbaa051324df002be8440f3eef2d1b1866",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb897d0a0f68800f8be7d69ffdd1c24b69f57bf3e"
  },
  {
    feeTier: "10000",
    id: "0xfb2978fe970f8a2d0c99103374e4b3bea93f196c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd07b2f38670501dcd89f50280246531f10725358"
  },
  {
    feeTier: "2500",
    id: "0x3ab7dc57dde2de98c7b7999786cd7245c9a20a24",
    token0: "0x637c2173f6e678ac3c9b43b6665c760dc6021c13",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xc866039156aa6d0270f9c73b4da9d188a5dad9df",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa2c17a6fd0afe27afa2630a7528bc673089e6b8d"
  },
  {
    feeTier: "10000",
    id: "0xcb4ee784e2520b611a6d3e3a0cfa3ba4075efb44",
    token0: "0x72f74fb5382a7a49b5c6e8437a04d65bf2ff5736",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x90d1231316551b12fecbad2aa6f67f3f76281694",
    token0: "0x1fd169fee61db18ef5f7854bbbb5ed19fef1c660",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x8da885a16bacea79ed681b235be1e1c45d3e3049",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x300d2c875c6fb8ce4bf5480b4d34b7c9ea8a33a4"
  },
  {
    feeTier: "100",
    id: "0x52ee59e8f09363d400a102f90d5a79532eb19bb8",
    token0: "0x6f385377709eb4e1dc3ccb392b188feee788896e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xd5a79ab649e0a5f20e995026d034a0bf28b8aaca",
    token0: "0x2b72867c32cf673f7b02d208b26889fed353b1f8",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x1b28d9ced09ccb6fb8d6e4f5afa1fc4f5fd92c40",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa856098dcbc1b2b3a9c96c35c32bc4f71e49aed2"
  },
  {
    feeTier: "100",
    id: "0x6e37dc8611f14f21e9a0d63a157c2b6751d03c78",
    token0: "0x44af89068d9952b31425688fb6b7a1d1b7b24ca7",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x3f92efc74aaacd8b8d666e712917e5b41e2d61c0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc6433135b473666bbdc09bfce9fb58e9c4d8749d"
  },
  {
    feeTier: "100",
    id: "0x1265c61d9e5d10bd149107da225c470f422a997e",
    token0: "0x3dbd49ad2b79bd563dc85ef5d4ed8f20a9f5c993",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x58604da0970d7685a2c6766d9b40d6d9122092f2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbb46693ebbea1ac2070e59b4d043b47e2e095f86"
  },
  {
    feeTier: "10000",
    id: "0x03dcf1c3d07043a3a0f3f45a0f028bdc61b6b9e4",
    token0: "0xb64e280e9d1b5dbec4accedb2257a87b400db149",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xa19a8b48cb209f58833eecf537c97d00af79b54b",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf264f966f8998a620295fcefb60e7868c27eae01"
  },
  {
    feeTier: "10000",
    id: "0x850f138cce9872f77270f1e26a5afc6f913d500a",
    token0: "0x1bdaf9ddd7658d8049391971d1fd48c0484f66ec",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x1d8b1ed9b3da5d510fd3723e0dd02476e0d7e781",
    token0: "0x1ce0c2827e2ef14d5c4f29a091d735a204794041",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x3271129d00a31257aa01b4e5e9b93d02e61e3c87",
    token0: "0x4bf53eef374684b1d18c31ea6beb909181f5bc44",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xee6eaf2c27f61a6ab7beda5ce8efc38b2b611aca",
    token0: "0x524bc91dc82d6b90ef29f76a3ecaabafffd490bc",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xa3142dacb05e1824d0bfd42fe8c53e234ee055cc",
    token0: "0x32bd8794a3b51018cc86a30997f73b57fc8755d1",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x019fba5e590c5643f0fa256d8f48148a12542bea",
    token0: "0x13a637026df26f846d55acc52775377717345c06",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xaf69210d641384e2a6040ac588ab94bd1ad93544",
    token0: "0x2ac895feba458b42884dcbcb47d57e44c3a303c8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9f5a0ad81fe7fd5dfb84ee7a0cfb83967359bd90",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x570a5d26f7765ecb712c0924e4de545b89fd43df"
  },
  {
    feeTier: "500",
    id: "0xa601258fa027c454244f53362de61ff3580c23df",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe0db679377a0f5ae2bae485de475c9e1d8a4607d"
  },
  {
    feeTier: "500",
    id: "0x0e4314e7366843ba6d8a0ecdb31d773407ca31fa",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc14a7747cfec02cfea62e72bb93538de6b2078e6"
  },
  {
    feeTier: "500",
    id: "0xc6ec706894c995b4f3e226c3a9b036f517c35bc8",
    token0: "0x5651fa7a726b9ec0cad00ee140179912b6e73599",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb5d01a6e99fdcdb6db8d0a342c35036adeb8fb48",
    token0: "0x073690e6ce25be816e68f32dca3e11067c9fb5cc",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x7c11c25cb6a33a7dba6a87d2ab0c6c83d763bae5",
    token0: "0x76e08e1c693d42551dd6ba7c2a659f74ff5ba261",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xd1016dac882225fa16f2e62cbc6ef5c209f83cab",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe069af87450fb51fc0d0e044617f1c134163e591"
  },
  {
    feeTier: "2500",
    id: "0xd187ef795dca8f6d7aa47a22ecf67649e618b445",
    token0: "0x4d7fa587ec8e50bd0e9cd837cb4da796f47218a1",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x5e3b0e6dcb0eb7a0f38c20f91a3e909b509d4e7e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x568701f32561527a77244600c01a19b0a11697fe"
  },
  {
    feeTier: "2500",
    id: "0x21dcb183f9d895e3a7c5205621555c44c5b566c5",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0xd710dac10b7255fcc0ec929a0e742a18f25b6395",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xa2fe8c517eb1cf67d4f11d07eb6c4af5ab1fd668",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe21b8a33410daa5b0275bfa68ca6e5c649b26170"
  },
  {
    feeTier: "10000",
    id: "0x82a831e9d0e081989746e6283b8110e9394783a3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5dd2d542e42754cde72c4401209997a75503cfbc"
  },
  {
    feeTier: "10000",
    id: "0xb4ba021e05095b55e91848962c26c0ede336bbae",
    token0: "0x0d4629ff6d6ca422178dc66a21eea0dfb182e72c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x0a9e5072b2c06dc2d703743f640313e47916f185",
    token0: "0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "2500",
    id: "0x5f3f7e620980ac01fa8f0e67e4b4a8025d787068",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcb7342369e55b4d8c63441396c07d93cdcc6e386"
  },
  {
    feeTier: "10000",
    id: "0xd33506885a11a3aafba6e2338613e3748ee5587d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5af7e16aaf80ff4122f6964b09be5f4b5507b415"
  },
  {
    feeTier: "10000",
    id: "0xee194bcab09425633f0d3ca4d911d9799e9d0b44",
    token0: "0x2d2567dec25c9795117228adc7fd58116d2e310c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x74f90b21b227fbed95adf75fbe073e121e0daa80",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe9c07a8092ce2c689413b91d7410f12539c2b114"
  },
  {
    feeTier: "10000",
    id: "0xb040aea4ef342050d8ae563f4a4073a5014605f5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x61632b49df5ca20846b3220bfc42bda5e32c81ad"
  },
  {
    feeTier: "10000",
    id: "0x59e52a4e6e541c36e64f704c411194b746a3b934",
    token0: "0x75e8ddb518bb757b4282cd5b83bb70d4101d12fb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xed987e6a3689441703fa11ee8dbd74bff52a09d4",
    token0: "0x98169bf9b7a44edad372364063b897e16ebba88e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x29db8e82b329550da40f92d2f12d48637123564e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf606bd19b1e61574ed625d9ea96c841d4e247a32"
  },
  {
    feeTier: "2500",
    id: "0xdf95771a236b6a87b1325bf674737fe498aaefde",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x68ae2f202799be2008c89e2100257e66f77da1f3"
  },
  {
    feeTier: "500",
    id: "0x12e79eb21dcc5852f9c6ac1736d977312925da33",
    token0: "0x0782b6d8c4551b9760e74c0545a9bcd90bdc41e5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x260a23cea737603f1f990a9d3ff7e4e1a2f2963d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7208a2671a2f96950d44c6daaf24719ce44dea78"
  },
  {
    feeTier: "500",
    id: "0x634aadf6028f82de2f0850d7468512ce89e0d88a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf7eb17ed5c500068f3eca11e471915f02652143a"
  },
  {
    feeTier: "500",
    id: "0xf17aba76f2617c067e2303ff2db998a0ead6c194",
    token0: "0x180543f52b301fe23ecc143003a4a1a90b5a1216",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xd8df46163b4cc62951b3d71cf0c0cf4148f031fd",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xe47e09e3f8d100cc8ca747f4bf593b1a8db8ed61"
  },
  {
    feeTier: "10000",
    id: "0x29981c1b7287a9b5b9dbb7029a1a1b1775cc72ce",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x62823659d09f9f9d2222058878f89437425eb261"
  },
  {
    feeTier: "10000",
    id: "0x352950bf85e7dcfd2d512ef53e19a29721f21eec",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbda011d7f8ec00f66c1923b049b94c67d148d8b2"
  },
  {
    feeTier: "500",
    id: "0xc5d10a1abed70c9224413f6747757e1513cf23ed",
    token0: "0x8b49411b11d4030ce5e92f8ffd921a158dff90a8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb7eb3b0e47b77220c86c6d3497cb645503bbb437",
    token0: "0x328fd053c4bb968875afd9ad0af36fcf4a0bdda9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x37a08c15a00b06d3050a803b25f04ebd7a5704d7",
    token0: "0x034dde6f6546a08f1f18f430d8a9bfa2a25f662c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xfb81c3392b0b5fb4e7693eeb79edf880649267b9",
    token0: "0x967309e0c9b1c44c613edc57f8dc12fce250a603",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x9d7dbd2dc256e9b2e4eac727c8a5ba8ff3966cb5",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe44b268c75d03b3695f3410d96f46053749f5d2b"
  },
  {
    feeTier: "10000",
    id: "0xf962dbe45cfcb80d78a3ffc05b3e7ce5106443eb",
    token0: "0x1ba42e5193dfa8b03d15dd1b86a3113bbbef8eeb",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "10000",
    id: "0x982a9442455fe710a0647d8b55dac4cf5c08a71b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe6906717f129427eebade5406de68cadd57aa0c0"
  },
  {
    feeTier: "10000",
    id: "0xbd39ff5d6db5d75894308577fb9e1c448ec86f26",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd8b31356324fcdcadbc18ff2d6600cf18c623a1f"
  },
  {
    feeTier: "10000",
    id: "0x8c4abe59366d61edf25511b6484af6eac4e051ba",
    token0: "0x57185189118c7e786cafd5c71f35b16012fa95ad",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xdefc23adaa89bfba0353917a1023977493f4e26d",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xf7686f43591302cd9b4b9c4fe1291473fae7d9c9"
  },
  {
    feeTier: "500",
    id: "0x1e478626da5d58f56130aee77db95fbbcae19662",
    token0: "0x191430f0fb5b827fbe619b07b8b797d501fdd337",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xbb1ab252cc38ed5a4bc38565bc16ad1d5ba3045f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8834d830208e40328b8f7b99874c348f0d1e4d72"
  },
  {
    feeTier: "2500",
    id: "0x3557e2899adc6c30d5d7679a0a5301de5da798a7",
    token0: "0x71e72dde4152d274afd1f2db43531ed9e44a78fa",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "100",
    id: "0x406ce68756b8e97d7b27e33e09c8958214899b9a",
    token0: "0x2d4133642a121ec1c3873c9c6112d2f62df22b57",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xfa93eeec392651b583dcb493f6acb7022e415151",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x8eb05c38c1d92ff74fd941ab4f7a469a5cc2ca6a"
  },
  {
    feeTier: "2500",
    id: "0x4d8fd7649d34913d7396e9acad8da432be0cdde4",
    token0: "0x05243e4e2c041d24408d0751c1031e9b435445da",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xd0fe73a084bba0a90b5b9a3874ef80f8cee98da1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe2dca969624795985f2f083bcd0b674337ba130a"
  },
  {
    feeTier: "2500",
    id: "0x3fe794555dc96320456add6c0685de677b7cc92b",
    token0: "0x26433c8127d9b4e9b71eaa15111df99ea2eeb2f8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x13c31f98c736311bca65938dbce9ea0ee70b3ee1",
    token0: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    token1: "0xfc8774321ee4586af183baca95a8793530056353"
  },
  {
    feeTier: "2500",
    id: "0x673516e510d702ab5f2bbf0c6b545111a85f7ea7",
    token0: "0x3ee2200efb3400fabb9aacf31297cbdd1d435d47",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xd88797909078fa49da84bdbcd3f88bd387cb1a08",
    token0: "0x21fa9ffa1ae333f13bd30f1084b53b1cc1419564",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xef2cf65ff6dce6f2b15f18999673676d5a07f63f",
    token0: "0x374ca32fd7934c5d43240e1e73fa9b2283468609",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x4ac1254ba7d24c4b0f7304c5bf07a2fbb51c3cda",
    token0: "0x49795ba7c911d2789047a4c57b64f2b27292430c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x0e9a7649c0bf92e9cad08d7d64c11c329c601b9e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe2dca969624795985f2f083bcd0b674337ba130a"
  },
  {
    feeTier: "100",
    id: "0x62fcb3c1794fb95bd8b1a97f6ad5d8a7e4943a1e",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xe3d9f8ef633666771b7f1995aaedeb67d1b3c853",
    token0: "0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "2500",
    id: "0x89a6be1ec107c911c3f2a1112f049f876ce033c9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb0d502e938ed5f4df2e681fe6e419ff29631d62b"
  },
  {
    feeTier: "100",
    id: "0x172fcd41e0913e95784454622d1c3724f546f849",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x0a0d5d01696801113a9c2e2d80b837fe2bbc5106",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdc7da87115d4464e8aac99920a533d401bf72a50"
  },
  {
    feeTier: "500",
    id: "0x996acc5a99f6b1d7143199f1ab2a0bb6c073f98d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf5532d7433cfd6f201f658a963c5e500caf46434"
  },
  {
    feeTier: "10000",
    id: "0xd9919f2b800f07565e66ec24f0ce91d126b3003d",
    token0: "0x2222227e22102fe3322098e4cbfe18cfebd57c95",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x56e93de834c0e506363e82983b715e9692c13780",
    token0: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x1c4dd76300e51fa48a76d1eb486bc3347a255232",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcb59a22868a6195d126d7d89896a5fd190df90da"
  },
  {
    feeTier: "2500",
    id: "0x380a466ae6896d7d4fcd571e1e24cd5061a836b3",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "500",
    id: "0x8fc7a395710d4a92d6bce654d92cdcce93c53525",
    token0: "0x4bd17003473389a42daf6a0a729f6fdb328bbbd7",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0x1e56913be75684b53284ec7ef584a197bb65f16d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbe2b6c5e31f292009f495ddbda88e28391c9815e"
  },
  {
    feeTier: "10000",
    id: "0x001405fadd5d49ee1838f3a96e42e0028ad9d7ef",
    token0: "0x8c907e0a72c3d55627e853f4ec6a96b0c8771145",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x7c35a05efc898345468675a227a7497a9f00da4e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf9c57fdf310ca6a5c34b15385cd8b18207ff7a74"
  },
  {
    feeTier: "10000",
    id: "0x640ba9794739291826f282fe4bf5136591bc4b53",
    token0: "0x545356d4d69d8cd1213ee7e339867574738751ca",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x1e80088792cf8021cd2e3dd1866f567553815fc4",
    token0: "0x1ec58fe5e681e35e490b5d4cbecdf42b29c1b063",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x89c6590cd4600728efab69df9132d3a1eb06f19f",
    token0: "0x4cfac133438b25c22434ed56106eaf8503ec65ea",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x04b9c00e65af1066e3eb4d2906889282125c450f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5715a750f155c958bb5bafe1336826a4dd6a83cb"
  },
  {
    feeTier: "10000",
    id: "0x2f84173f8245026572f5cba3183607e5e6e8204b",
    token0: "0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x12be8cfd69f65119c36524b448aa288264771f5d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x567556a7493fb7a22d2fd158dd4c766a98705f96"
  },
  {
    feeTier: "10000",
    id: "0x8b72ab4e136cde7fb3477ecc59792b59e5088c6d",
    token0: "0x0e2d3985a69eaeabaacf3845ad2d8f8fc7eb8312",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x81115409feb7adbe7a00a287dc3191beb27ba2a3",
    token0: "0x4db5a66e937a9f4473fa95b1caf1d1e1d62e29ea",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xf026aa01fca748e4835f78625e617efaeee308b5",
    token0: "0x922722e9ef614ec9a3e94b78496e92abfbb5a624",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xb008159819a16c21ecedffe0171709496e06940e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa7bd657c5838472ddf85ff0797a2e6fce8fd4833"
  },
  {
    feeTier: "10000",
    id: "0x33300d91c65ce25f69b49079f2b7c4a11767aa23",
    token0: "0x9d1d4de9cd93203147fac3bc0262a78e3a0e96bb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xedc7770bed08519297efef87912c47fb9c132ce0",
    token0: "0x916ee185dbd3c4541d4ce8c5a774ce0623898a77",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xfe8503c6951cfe763bd018431ac634f9c7144381",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6cf8e39252bee00d168bd25bdf5834347d78e346"
  },
  {
    feeTier: "10000",
    id: "0x0a3178b9c9fbcde0fdfcfd805ce776eb3b8138e3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc3cac4ae38ccf6985ef9039acc1abbc874ddcbb0"
  },
  {
    feeTier: "10000",
    id: "0xe39047f6f604774e496e5017fa50eb876f044f82",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xc335df7c25b72eec661d5aa32a7c2b7b2a1d1874"
  },
  {
    feeTier: "10000",
    id: "0x66baa9e43e64c8a85bc3c04debf9e7686be5b09c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf95a5532d67c944dfa7eddd2f8c358fe0dc7fac2"
  },
  {
    feeTier: "10000",
    id: "0xf258d2789468a897d698f88e2feb48a39b1cfc26",
    token0: "0x23e8a70534308a4aaf76fb8c32ec13d17a3bd89e",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x24adf4e626c46057b162ec134ca5933384522ab7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb4b7b339949cc24b3508c4e37e252c2f982f3a41"
  },
  {
    feeTier: "100",
    id: "0xa3aec2c3aabeaefe0689a1b3d6d50a3308b2f29c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xeb65741d6d4fb463d529539716387eecdea403a4"
  },
  {
    feeTier: "10000",
    id: "0x69608992f1be9d9053b53f39b978cb338d02fdd5",
    token0: "0x00f97c17f4dc4f3bfd2dd9ce5e67f3a339a8a261",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9ad48f593cca8fe7e0e216d621ba486c1b7587bd",
    token0: "0x96dd399f9c3afda1f194182f71600f1b65946501",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x38d28b3a1fffc128a3ff0e8b84fa1f1739f96c8d",
    token0: "0x111111111117dc0aa78b770fa6a738034120c302",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xcdf1eb410e5f1d534d3a501aa226e4cf1b531eed",
    token0: "0x3e81aa8d6813ec9d7e6ddb4e523fb1601a0e86f3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x208fa6f5822ea779db9c5a4cbeccede813aa6493",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbcf39f0edda668c58371e519af37ca705f2bfcbd"
  },
  {
    feeTier: "500",
    id: "0xb3eef5eec459a17b0ab7ee70a6d80f81935470d2",
    token0: "0x003fab51ba9ae9518c5acaeb53134ba4d4516b79",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xb446f1964855e89102e6d4647d1b0d32e39bff9a",
    token0: "0xaebda897fcc972f7d40bc42eaad848358ea30529",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x7a404e6687bfb5f566232f935a52328b63a4968e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa4080f1778e69467e905b8d6f72f6e441f9e9484"
  },
  {
    feeTier: "500",
    id: "0x369482c78bad380a036cab827fe677c1903d1523",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x31a104fbfb409ec7afc71bcffe1870b9338d10ce",
    token0: "0x5cef58c38c1505dbe15a3aae624750879ab8efb4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xab641436ffe6e9cf22396ff354609f6a113009e0",
    token0: "0xa97e705ce7ad5aa5609a13b9c843bd4e8c6b3015",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xd850b66a198c98cf8210c7fa932c355023db52e0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xea4821632b139b7f08e37533d8152d50976618c6"
  },
  {
    feeTier: "2500",
    id: "0x28b9af65e439d198ef239241aca387827901f254",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8dc0f602696de3ff03b37e19a172e5080f049c15"
  },
  {
    feeTier: "2500",
    id: "0x5654475ddd37590770e7a80d7ccf8c4788492837",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf106f153bd77be6d5191a07159c99c4219a1cec4"
  },
  {
    feeTier: "2500",
    id: "0x5d315b213f2ee0d8d9eff2b4ac8fe5a08f76fb3b",
    token0: "0x0104f019c8889bdabc62ae6c7b84f6f2ed351133",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xa1f2c333007c06ed99a331645d22926db8388eaa",
    token0: "0x7e9808c731ce79b2dfc18b88e3baad3d115db102",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x61c6a4bb0e28b1b5ec574619ff6c0225b929acbf",
    token0: "0x0b0120fd70323f8472788f91fc5d7f83ecf3bc1c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xa7c1e8b098a2fab23d268b8766ec78b43ed3e496",
    token0: "0x7bd6fabd64813c48545c9c0e312a0099d9be2540",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xb64f6887a46dbf0b518381f2fb404ddea02c032b",
    token0: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x0d384ca9989508172c9a17b8443be2b544c83875",
    token0: "0x30ab8cd53f4e22798492579b001591cde3d2b1af",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x1e8d7ab96323953fac85ab687f5d38b45344e62d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9840652dc04fb9db2c43853633f0f62be6f00f98"
  },
  {
    feeTier: "100",
    id: "0xd2e323a770288630e035935ce18cd42e1ccc9ca2",
    token0: "0x12e34cdf6a031a10fe241864c32fb03a4fdad739",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xfe095163f2f921faea749c2af250722e0ed54442",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xea89199344a492853502a7a699cc4230854451b8"
  },
  {
    feeTier: "100",
    id: "0xf4f69662038d84bedd2349bcdafc8ae22b17c71d",
    token0: "0x1e762a0a1dcf94f4d94c20f4ba8d62b941d7755c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xef69aa64098a26fd68c53ef12aea5ee17a20fc92",
    token0: "0x2068dfb5adc68dcf82ae8d91befe23f00ea0dc27",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x1a1adea3c1e2f55526379a21023ef46714e73d06",
    token0: "0x6894cde390a3f51155ea41ed24a33a4827d3063d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xd777cb8471d06835846c80246a42580483e1a0c5",
    token0: "0xba2ae424d960c26247dd6c32edc70b295c744c43",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x468be8c177849e698af38a153cab6e7e2684a612",
    token0: "0x0e7779e698052f8fe56c415c3818fcf89de9ac6d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xd1752f447bae1c9bb7699793661fe5ea923c0a19",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x9678e42cebeb63f23197d726b29b1cb20d0064e5"
  },
  {
    feeTier: "500",
    id: "0x0541fed9b938070eebb9e2f49e7ba1ff1a0d20fd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa856098dcbc1b2b3a9c96c35c32bc4f71e49aed2"
  },
  {
    feeTier: "500",
    id: "0xc792ba93d3208b44a93f5dc9ecfcb14d99807897",
    token0: "0x335b6828e2860abcdd0ef50ba86334ab25fd03ad",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xdbbdb7dd8870ee0433f50dd17ce849703be56704",
    token0: "0x9840652dc04fb9db2c43853633f0f62be6f00f98",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x274f608e430f80466588c21d91452455a439c31a",
    token0: "0x98999aa1b0d17fb832fd509e13b67fe506513a6d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x496a71dc0756f126c4cca81ba719dbc71c53aaeb",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x3b248cefa87f836a4e6f6d6c9b42991b88dc1d58"
  },
  {
    feeTier: "10000",
    id: "0xa033c0121a19b3ec02fcafc14e248352553ae624",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6fe4faf3a1afc8e9d0528f722b6b865923d62c74"
  },
  {
    feeTier: "10000",
    id: "0x7b717b996a8159b43ac62c8bd2825a98f22edbb8",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x250632378e573c6be1ac2f97fcdf00515d0aa91b"
  },
  {
    feeTier: "500",
    id: "0xce7eac87ab10772906e1212464f1e3f6fd1bb63c",
    token0: "0x45c4bc3e576c14bc5bdc69fae54fef68eea05dac",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x13b19f16dc76398ba87d152896b67ecae3d19cd2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcd321cfa3fa23e3d392b6e0ef7db22ea021f02a9"
  },
  {
    feeTier: "100",
    id: "0x3f70d9752295d36f511024e34ff7ada45c9b94bd",
    token0: "0xa43072ac086881cb94cfba9002492f1b4a4b9d8f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x1e4600929edf7f36b4a7eac4c7571057d82a246c",
    token0: "0x570a5d26f7765ecb712c0924e4de545b89fd43df",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x548fb74ba0d7f83f16545e5ae1b09a04f46df539",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfe8bf5b8f5e4eb5f9bc2be16303f7dab8cf56aa8"
  },
  {
    feeTier: "10000",
    id: "0x4a5019dce5fcbe8e59bba9b763222d4458e13ce6",
    token0: "0x41b7d66d96a30d301be938adb8a6c18656109517",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "2500",
    id: "0x99b80bb821d511efef7b7cc50db995553de8d2f3",
    token0: "0x43c934a845205f0b514417d757d7235b8f53f1b9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf93fc217ed330ace41cecf8a75baeb9aef8d8686",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e"
  },
  {
    feeTier: "10000",
    id: "0x434de6a0c06e717be5f04d3de0ca2d10bfb8a0fe",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x78c462fe8796932560586b9492ce84b54c755ed5"
  },
  {
    feeTier: "10000",
    id: "0x7658c8e0605874d39e01771568b189b5920e34f0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x91ca579b0d47e5cfd5d0862c21d5659d39c8ecf0"
  },
  {
    feeTier: "10000",
    id: "0xb79549d9995287de3725724bed7059796933461c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05"
  },
  {
    feeTier: "2500",
    id: "0x2a8f2fa33829ed886e04e17783244090aa0361ea",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7f9ad7a5854658d984924e868187b2135514fb88"
  },
  {
    feeTier: "2500",
    id: "0xf62028a1fc524fc36e566c3a5a8cb46f1a26cee3",
    token0: "0x3d1f281a7f3ac7a7551691f802e1de735963e0c5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xbf4cf3e71d6ae973f06323795e53e4656ae1312f",
    token0: "0xa5957e0e2565dc93880da7be32abcbdf55788888",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x00a4a097fb99403009c6ebd0636a14976f150e57",
    token0: "0x44836708ff32246635d8d08c785f4e779e294598",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x0463b7c05c1a1f489c9a4b3d3ed1d4b345e02cde",
    token0: "0x613e18f13391cd4bfedf8a904991077c7ef29ee6",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xefd5f99792d37c6fbfd19eccd04e8b0a20f2faf8",
    token0: "0x398f7827dccbefe6990478876bbf3612d93baf05",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x9bab68e710d21a2963a0eafc93ea7d150629fc6f",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x96dd399f9c3afda1f194182f71600f1b65946501"
  },
  {
    feeTier: "2500",
    id: "0xedb6d7d456a570f790185af9f6b99020cc578ed0",
    token0: "0x44a21b3577924dcd2e9c81a3347d204c36a55466",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xbfa4bf6ff03010b299c362b1e44e0c5609a03fb9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe7eaf84b43bea4afea65535420ec975aa4b59c35"
  },
  {
    feeTier: "10000",
    id: "0xd6604ff48a2f03069d92f1c9e3f08a0e235a7a29",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf77dcb1d378ff8b83a1948f7982cb6a9802d1037"
  },
  {
    feeTier: "500",
    id: "0xe82429e7a44036d1d8887121771cadd26c2bea1f",
    token0: "0x23953481799765c30836eb5bdc2e4ffb405c626b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x697491acbaf88a6ba621abc6641fad4503618759",
    token0: "0x4c3145cb6285eb269c37685e05ff8c6684a70ec7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x068a397e499c07eeb2143746ab3f36b5949c98d8",
    token0: "0x137615267e6a4680d7d417951d96d45678b4a3d3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xaab0dfeccfb8e01fac044015c2d5e601e376080d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf2250a2708a6c2cfa74c4a50754a61465484ce4f"
  },
  {
    feeTier: "10000",
    id: "0x0a4a3d87561f899bb69455ba79b02bc346b3e14a",
    token0: "0x22b4fa9a13a0d303ad258ee6d62a6ac60364b0c9",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xfb4a582ed76fe82070ace643a5a44b47b51baded",
    token0: "0x903beffc8ecc50841373d0ecc2ca53fa4b04c31f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xffb5c34be58ff057ac729734ae419933f4c33a6d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x62aa735a77f6bc670efa6f37a4b502aec606a7eb"
  },
  {
    feeTier: "10000",
    id: "0x4518670691b3308a81b7592d47403f713b4ae382",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xef111316430ec5f97a1a7ff04b6cdde47c888709"
  },
  {
    feeTier: "10000",
    id: "0x6bd1a8647b32b1dc10ddd48480b3b283d510dd3d",
    token0: "0x818835503f55283cd51a4399f595e295a9338753",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x72768f7382143f5822d48ab497a3d44f57b864e7",
    token0: "0x6b3c58bfc74a41c1f7e6c0516471fdb8e42868ad",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x52811a5c293c332688e303feaf5801fa6b894e0d",
    token0: "0x2ad69e58071b95c047bf78dc804db3662275b64a",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x09074fe193454080fd0d1809538c4c6c7d347adc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa70de21f95b8f30a483c0490f5e3a64b31bd06c8"
  },
  {
    feeTier: "500",
    id: "0xd4174d0e1843b86b364f9923785aa45f7ae06a9b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa51ad411c375e4294e1e87261503eeff6068f6a0"
  },
  {
    feeTier: "500",
    id: "0x27d0b42407963be80e7a9e016f80ea5ff1a9b0bb",
    token0: "0x37ce6f28e3b63669b0a82dfa86662858d51e272a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x041e73ed4d718088bc0cbe3da6ab2b24cfc54f0e",
    token0: "0x96b625d2cc31218ca0d03f0aca64eb58ed78b1bf",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x91f05c74467be8dffd463c0a9483ddf12e2105d3",
    token0: "0x58730ae0faa10d73b0cddb5e7b87c3594f7a20cb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x20a9d76a3a7160c2053ace4495d9dbf191f61fc7",
    token0: "0xaf42a5df3c1c1427da8fc0326bd7b030a9367e78",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xa2c1e0237bf4b58bc9808a579715df57522f41b2",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd98438889ae7364c7e2a3540547fad042fb24642"
  },
  {
    feeTier: "100",
    id: "0x222f490de2956b6f175a71560513c19e95776eea",
    token0: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    token1: "0xea02412ed7290623acc267e98b69ad81ad4c9481"
  },
  {
    feeTier: "2500",
    id: "0xbbc0af92d39496bfeadbe511acb5b0f64f49df2c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd585a6213f7c582857306e1cc5f9d267b8106d7f"
  },
  {
    feeTier: "10000",
    id: "0xe276971d0a1b76e7fd8c873910fd6d2c3d4d28da",
    token0: "0xbb2826ab03b6321e170f0558804f2b6488c98775",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xdca693422fac1e15341c3cede40a1798ee7af4b3",
    token0: "0x12fc07081fab7de60987cad8e8dc407b606fb2f8",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xcfb9d42d3ec67caf804e075196f1efb84a0311ea",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x4027d91ecd3140e53ae743d657549adfeebb27ab"
  },
  {
    feeTier: "2500",
    id: "0xb55a0b97b7d9ebe4208b08ab00fec0c419cc32a3",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf7de7e8a6bd59ed41a4b5fe50278b3b7f31384df"
  },
  {
    feeTier: "10000",
    id: "0xd766e79e9cf7c3fd29f72233ade122d248e74e93",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xd691d9a68c887bdf34da8c36f63487333acfd103"
  },
  {
    feeTier: "10000",
    id: "0x26f2acefeb1a4f36f98648fd82943a1e65574d46",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63"
  },
  {
    feeTier: "10000",
    id: "0x6805e0e5333c5c3accf2930be4734e2b98f4ce06",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x8d81a73ac2477335bbd29c1b9f18b809050adeb7",
    token0: "0x7c8f96c6816f1d9afd9625574de80791fb9cae4b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb2e3dbb8c350f87f69c91b1f11825cd3401a1138",
    token0: "0x04f46cdfe8dd348e41902eef1aff19ace1661f4c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x7f51c8aaa6b0599abd16674e2b17fec7a9f674a1",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x3dab8e6b06e25d6afd9e9911836a77883cc11774",
    token0: "0x0669538fcdef9a73cd37938eba8c79e652bb93aa",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x3543f30a457a8fc4dee9983e9d357cd52bab5ab7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x95a8d9d1c43a99ee19b46cd81ff5b5e86d7d97a8"
  },
  {
    feeTier: "10000",
    id: "0x967eed039c86fb4aa8f766eb95e81b2a5eaf903f",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x72f74fb5382a7a49b5c6e8437a04d65bf2ff5736"
  },
  {
    feeTier: "100",
    id: "0xe4cce8ca675f81bd5e7c1c142868b85f3bdab139",
    token0: "0x56383ebf5ba59735d75d40b3dd3b2fa43f8f9a32",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xf03c31df7bc2a15e945df4367c8095fced53eb9c",
    token0: "0x060c0cd6758c3c68429489bbdb3a0afbc77e3844",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xce3d444d0d5741c4d9a1e623aefd09b307bb1850",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x566f47bf6e0fd69cd97da548573a6127c18ce1c0"
  },
  {
    feeTier: "2500",
    id: "0x631e67bba2829c6780b01864aab88440378e4301",
    token0: "0x50ef21c81cfbf70a6824c83e45b170c0da17cdc1",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x3b649abb1050ed0294f14de88c47110e72aa24d5",
    token0: "0x031b41e504677879370e9dbcf937283a8691fa7f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x49482ed816137917406323d91d35b69e61f2c659",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7f9ac38cd691bfc0a37040be3dd4ec424f8ee377"
  },
  {
    feeTier: "2500",
    id: "0xebc4b13f574ae8eb68e61b3b21f3457ab2f1f2e4",
    token0: "0x70e1bc7e53eaa96b74fad1696c29459829509be2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x24fb2d42c2cce2a2098d997d43680a59a03c6f9d",
    token0: "0x76a797a59ba2c17726896976b7b3747bfd1d220f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x19ceabe800596ec01164c3680a66e8216d47d517",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "500",
    id: "0x71c4ab02ecbfbd1b025933299ff5230ab8dcd807",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbe0aa0cf0af373f9f62998c042c2942ca7d9c3d1"
  },
  {
    feeTier: "100",
    id: "0xf07ad214481d97414f61e7ecb46c2f1ebae1a6bc",
    token0: "0x1f6ba0e8db204b9b7762ddcbcd6d3941f8e405cf",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xd5e916a450cdc396bb4176c2ced3347273059f89",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb2192a2829a5220bafd5b0a67f3328e209887bee"
  },
  {
    feeTier: "10000",
    id: "0x5f8f8c54dd3939217f6cbfaf57d856e3d7a0151f",
    token0: "0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "2500",
    id: "0x52eb99a5b0da0e4c68100041f5204970e3b5a9a0",
    token0: "0x7bc75e291e656e8658d66be1cc8154a3769a35dd",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xc68d1f4865c0d35f4b1ad5c4899b5f9ab335bf77",
    token0: "0x96ed4db01218608e6c8a8d66c65bdf59601ee735",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf54ec67006dc7bb8e43a2f6ff4a145941ebea9b6",
    token0: "0x37807d4fbeb84124347b8899dd99616090d3e304",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x5c9d6c29f2074064a2d087b869379b2802583572",
    token0: "0x4f01df11d1ca0167bcf026981e5659336a9eaee0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x378b96811b4dbc72a96b16e144f3b402a3321140",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x39db1a30122031751e803fabf329c44efbbfbf4b"
  },
  {
    feeTier: "2500",
    id: "0x17281fd2ff8b506b974fe2fbefae0a0492446d4e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xea89199344a492853502a7a699cc4230854451b8"
  },
  {
    feeTier: "10000",
    id: "0x9217d47132212ab04d4c194a658c7007c7e1365c",
    token0: "0xc209831f7349d4e200d420326b3401899ab9ae68",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x43beb5b09ac912c4288db731fe7c30507e252c2a",
    token0: "0x76a797a59ba2c17726896976b7b3747bfd1d220f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xc9b80fae26aa04f2e914cfa1773b3b61a02222c7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfd4f2caf941b6d737382dce420b368de3fc7f2d4"
  },
  {
    feeTier: "2500",
    id: "0xe5607dc39beef2154aec0d4a78a399fe8b76fbe0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb4d32d8a133d793a6c0e8dc6ca6e8f32137bd421"
  },
  {
    feeTier: "500",
    id: "0xbe141893e4c6ad9272e8c04bab7e6a10604501a5",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xda95a09683adc40db029dec330e482ac2f0d7308",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xcc42724c6683b7e57334c4e856f4c9965ed682bd"
  },
  {
    feeTier: "10000",
    id: "0x2f74ad2c64be7dc07c9f51e9d338ecb7c1ee0b18",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa697e272a73744b343528c3bc4702f2565b2f422"
  },
  {
    feeTier: "10000",
    id: "0x30b460af2bbbdf7786beb9576997a46bcca9b7ef",
    token0: "0x80702018c28988dfe3c900561745f7af1b9fdb37",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xb624fe83dfc393aab921ebbc2bf38fdd238f2380",
    token0: "0x259b30c916e440fb79747cd559207ffdabbae057",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x3b4568933f86122e3a19814b1d42aa27fe429c3b",
    token0: "0x8c49a510756224e887b3d99d00d959f2d86dda1c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9eaeb8934bf1373b085421b7130147ba5ddf7e5b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfe19f0b51438fd612f6fd59c1dbb3ea319f433ba"
  },
  {
    feeTier: "2500",
    id: "0xdd00b225600d13cf2da8cce8319c5a776a9b37c6",
    token0: "0x80702018c28988dfe3c900561745f7af1b9fdb37",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xc241e8fb314bc3799be2db94dce4d070c29b425d",
    token0: "0x6985884c4392d348587b19cb9eaaf157f13271cd",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xdc6f3fbc1d2f0abe058eb867bbdd367c2d8c2d2a",
    token0: "0x36d8d5de808aa7b0b7f543c8b3e25a1fdb09f912",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xd27c67be03fbe8a47e7616f7d1fc9dcac5262d08",
    token0: "0x09f423ac3c9babbff6f94d372b16e4206e71439f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf314aa20a5b64d8bf1d5c9a05351a3d42af2c3b1",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe4ca1f75eca6214393fce1c1b316c237664eaa8e"
  },
  {
    feeTier: "100",
    id: "0xf2688fb5b81049dfb7703ada5e770543770612c4",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x5b4ea0ca3113adb9d4194453468e3edffb92eab5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf0e406c49c63abf358030a299c0e00118c4c6ba5"
  },
  {
    feeTier: "2500",
    id: "0x47eec63a190fbcdc11328341c96543435d8559bc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd9483ea7214fcfd89b4fb8f513b544920e315a52"
  },
  {
    feeTier: "2500",
    id: "0x291bb7bd27896de96411e354cd2efc8ced62bf36",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x57f5c1a40f1e847e50ebdd29cb3dbfef777d2d3e"
  },
  {
    feeTier: "500",
    id: "0x732818033a510a104f5a30b22d9dd0bb1f919028",
    token0: "0x0207b7900a2c536dc112c4a1e758edab09c1fe69",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x80ed571502af4dfdc1e59a9d9128f9c9baaee63d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdde5b33a56f3f1c22e5a6bd8429e6ad508bff24e"
  },
  {
    feeTier: "10000",
    id: "0x121071a21edeec9f6d813a8ff14b31802e8bdaf2",
    token0: "0x4ace5cdb2aa47d1b2b8e4c4ca01bf6850a4b87b5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x3ed650ebae1a7ac95b341605c438186b4d241f26",
    token0: "0xad6742a35fb341a9cc6ad674738dd8da98b94fb1",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0xa6dc1fa760d154d0967dd4ea684189d05bf59e26",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf6565a97dc832d93dc83b75ee9aa5c7e8ecb0f9d"
  },
  {
    feeTier: "500",
    id: "0x244f2646d03350145599df79ffbc201f06af2d98",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xac4886ff34075d158e16713924b318b6f981e59d"
  },
  {
    feeTier: "10000",
    id: "0x100a152b566dff007bf10ccf76e6b468beb59d94",
    token0: "0x1c45366641014069114c78962bdc371f534bc81c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x2ee3d4ef18c489077b7f8fa8b6de2211b76b5f1b",
    token0: "0x03ff0ff224f904be3118461335064bb48df47938",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xd9fe3f9c8fc0d0ce4740bc2b2d075eee65151f6c",
    token0: "0x8f0528ce5ef7b51152a59745befdd91d97091d2f",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xc1ce094fc8cd3b8de6b8f659ee2d5a8323f13d8b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xeac9873291ddaca754ea5642114151f3035c67a2"
  },
  {
    feeTier: "10000",
    id: "0x27a2ac42725a010bdf00e2a2502d604ad7eadb89",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xcb59a22868a6195d126d7d89896a5fd190df90da"
  },
  {
    feeTier: "2500",
    id: "0xcc05137ceee82bde8b3eeca8975867c90ddaaf6e",
    token0: "0x30842a9c941d9de3af582c41ad12b11d776ba69e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x4f31fa980a675570939b737ebdde0471a4be40eb",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "100",
    id: "0xf5c4fc188ccfaa4b540c699f3323fd464578b8f1",
    token0: "0x4f0813c4f46263c89d3c68837abd165ec2b324a7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xf9adc7f9e10eaa8afd6a3ea2b419d9497fa192c3",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x300d2c875c6fb8ce4bf5480b4d34b7c9ea8a33a4"
  },
  {
    feeTier: "10000",
    id: "0xe210a02c2ec1455b2fccc44ddec7350069fe82bd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x72dcf845ae36401e82e681b0e063d0703bac0bba"
  },
  {
    feeTier: "10000",
    id: "0xe08078c1daacef415b2653e7256a70002f41eeb6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9fd470124903957f299a1c90feda9043a4619cc6"
  },
  {
    feeTier: "2500",
    id: "0xac19685da53411e027530510796923051cc7a0fa",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x78353861e96a4a3d757bc7ef6c0dd4f667e6274b"
  },
  {
    feeTier: "2500",
    id: "0xc13a2b84643d4ef4557230fe587c463951aa157c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa86a86b8acdc55812bec2971a2fc8a989455858c"
  },
  {
    feeTier: "100",
    id: "0xd7277570b1c4c35824ef6043e7b18dd78d8849ae",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x71be881e9c5d4465b3fff61e89c6f3651e69b5bb"
  },
  {
    feeTier: "500",
    id: "0x8bc495dbeac561d5a7700e9403518d74123bd65a",
    token0: "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x96a8c9651c4b1e6dc3a126d9122dfcb2354bd58c",
    token0: "0x6e2d3d61a12a8fa1dad7a9ffaf9b59961fc9a045",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf1ca68c7ede87673f33615e901ee4ff486634374",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbbca42c60b5290f2c48871a596492f93ff0ddc82"
  },
  {
    feeTier: "2500",
    id: "0x50eb5abce5f631a0a23f3efb7a77f9f7b95f6fba",
    token0: "0x29838b8c8b7cd6f0698c2fd6feaf0363d2cb6da1",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x9f6288e1099bd586126adff04561a47186176d73",
    token0: "0x6c13a45101bd70561daf6186da86d7bdb018754f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x74ce8029094e545730f769e906099089ee8fb61a",
    token0: "0x5bc4e94ce63c5470515cbddc903f813580a2a08d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x86aef5b9ddae6bca94ed976bd058992d16fec202",
    token0: "0x35bedbf9291b22218a0da863170dcc9329ef2563",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x949c21ddba9ffc361d78d2a1459ec6741a4e6a40",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xadbaf88b39d37dc68775ed1541f1bf83a5a45feb"
  },
  {
    feeTier: "500",
    id: "0x9a5977bcc422b542e025815805aa79b293ae96bc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb6281127356b0b38eb8c50f1db2f19769e4bcc37"
  },
  {
    feeTier: "500",
    id: "0xc130d18fd84bf0167bd583bebc5aee1a010ec887",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd06716e1ff2e492cc5034c2e81805562dd3b45fa"
  },
  {
    feeTier: "2500",
    id: "0x6425bc30d0751af5181fc74a50e760b0e4a19811",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbdeae1ca48894a1759a8374d63925f21f2ee2639"
  },
  {
    feeTier: "10000",
    id: "0xbf185cccda42a4e384bc27ed9b27b6444d5f4843",
    token0: "0xad86d0e9764ba90ddd68747d64bffbd79879a238",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x07003daebc432ecec26309ccd1391bbbf06cc890",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf700d4c708c2be1463e355f337603183d20e0808"
  },
  {
    feeTier: "10000",
    id: "0xbe36360a3f60777badf2ec9a92e9aea74c660a01",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfc0b9b3e585a3dc59a066898f2394e5b1e2d8d5f"
  },
  {
    feeTier: "100",
    id: "0x91cddc3f60733f7f5dc460490f875a930ae54020",
    token0: "0x4cb178f9f12aaa0e205e4902e0154e20cffb00cd",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x38bc9ddaae00fa74454135663a512fd7bb2e26c6",
    token0: "0x16faf9daa401aa42506af503aa3d80b871c467a3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xf09291a5dfec2a634409419a9f601b7bcd0e9bfc",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcfb70a4f8a3665e7c4d12f903cbd5046a541d887"
  },
  {
    feeTier: "100",
    id: "0x92b7807bf19b7dddf89b706143896d05228f3121",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0xd15b00e81f98a7db25f1dc1ba6e983a4316c4cac",
    token0: "0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x7288c2891619ad0c1aa02e112c09a950344d9112",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xaf535b6ed0c1ccf83fa7b32fb9a0c76ccc6f48d0"
  },
  {
    feeTier: "500",
    id: "0xfceca5d1f6dc36fe7e9f90465f14be6afef5e6e9",
    token0: "0xa7bd657c5838472ddf85ff0797a2e6fce8fd4833",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf169b5eeabf4e63e8a9edb5664716e9b1456c303",
    token0: "0xa260e12d2b924cb899ae80bb58123ac3fee1e2f0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xc43c568be056f73ebcfd09c4379d9b4e76a8a345",
    token0: "0x157a74bba219b3a2e6c0a5732f84a3e372031cfe",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0x9f7eea64e1427ed1aebbb2c721dd59389905c09a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcd11af4550e0436fe94071fc67e414f1c24fa392"
  },
  {
    feeTier: "100",
    id: "0x2db8524de3b77a44fcd12c815867e461ff2cfbca",
    token0: "0x477bc8d23c634c154061869478bce96be6045d12",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0x007bd30222bff3f68ab80424c864368d4be91850",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcd1b51b87a8a7137d6421ba5a976225187a26777"
  },
  {
    feeTier: "2500",
    id: "0x0df9661d1c5a16641f341864bebdb58bcf58dbae",
    token0: "0x0862067fb63ef96c5fa7b4a53146b90156ad8888",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x42f5def6147ddbf00fa30bf0bf1691db6d20353e",
    token0: "0x1b5d63c517770a96f0e8b6ca6b127fe6e0131419",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xfb3f9764efc2e73f6235d63f792facd270ad70e7",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd0ed8f9c119beb13b9fce318a28827d0574c37d6"
  },
  {
    feeTier: "500",
    id: "0xc2217800351d65631cacfbff2ea26aa56147e56d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb87afaaa8ccaad4ff7018bec3ee7d93119ead502"
  },
  {
    feeTier: "10000",
    id: "0x6a89006953e6e4daa870b6dc1bb2a0a95fdf9c07",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x55e48aa00c55b6ed4453d90c247833f604bac1cb"
  },
  {
    feeTier: "500",
    id: "0x6059f8472c0f541883241661b3bae6da1793852b",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc9882def23bc42d53895b8361d0b1edc7570bc6a"
  },
  {
    feeTier: "10000",
    id: "0x4b31b46a259f7e07fd1f082bd203125d34e339a3",
    token0: "0x4634d58982138e93c951c1485d25bc619cbd1f75",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xd85b3c9bb661efee3dc131ff1cafadd129a1ee5a",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd24616870ca41bc01074446988faeb0085a71190"
  },
  {
    feeTier: "10000",
    id: "0x68a4141d2984b78c89aa6ca47200419ddd9c3cd3",
    token0: "0x2c6c811aa1c67df5a47c0a358f0dc9a503542a71",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x4024581a5a528b21c3cbb98a951a6a134a91dc3d",
    token0: "0x524bc91dc82d6b90ef29f76a3ecaabafffd490bc",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x846d44186dede6576d3feafc3a06239da206d58a",
    token0: "0x39f0f4c64c7ad1ebb25cfeafdd221cdee3084441",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x1e213600fa9317feac4ef4087acdf5d0e25d7187",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x626a93958f8c0906d119250c41eb50d46a0f9781",
    token0: "0x61632b49df5ca20846b3220bfc42bda5e32c81ad",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x4a380423280665d3b7c4c5f58d3d4fa197955c4e",
    token0: "0x1b5d63c517770a96f0e8b6ca6b127fe6e0131419",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x63393d036fef3b187ca613a8e5d917697ade2cd5",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409"
  },
  {
    feeTier: "2500",
    id: "0xf1c131fdcb294f075749edcb7dcf1d7d3e4913c6",
    token0: "0x0c27f037074178267d89f68ca32bc4ffd1901927",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xb4e9dea6105089f15685508b8ef2e7f7f5a1b16d",
    token0: "0x5b65cd9feb54f1df3d0c60576003344079f8dc06",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x35452450ce58858007f24b4198234c331f126212",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcb444305d7d4259e0084f2d93fc36cdc007be5c1"
  },
  {
    feeTier: "2500",
    id: "0x5be4d55710ce86bf8f190c1ec361bd067ea9dc7a",
    token0: "0x3ca994d9f723736381d44388bc8dd1e7ee8c1653",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x0e1893beeb4d0913d26b9614b18aea29c56d94b9",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd"
  },
  {
    feeTier: "10000",
    id: "0x2c6b4fbda5160a8ae3f623b064cda80bf3fe92c7",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x686318000d982bc8dcc1cdcf8ffd22322f0960ed"
  },
  {
    feeTier: "2500",
    id: "0xa62439a42fbec9827a0b0452a5fd619d517f2d83",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409"
  },
  {
    feeTier: "2500",
    id: "0x79fa6e614041d13fefc385f32c76cda856ee08c9",
    token0: "0xb52575ce47c4534f7b0ba88acfba7546350197d8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9ccc30e4e83b104cc9c525742aa5b066386bb4c1",
    token0: "0x555296de6a86e72752e5c5dc091fe49713aa145c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x303a43974906fbbde13b96b4f2924295990749cb",
    token0: "0xb64e280e9d1b5dbec4accedb2257a87b400db149",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x1a4c5b2c89ec2e2a1a1146944e7143f38d85ac4f",
    token0: "0x4507cef57c46789ef8d1a19ea45f4216bae2b528",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xc480afcf7ece4545fe272f17337eb0c92e889db4",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd5b5882a76a63c032e789e033a1c5b1e4b70ba91"
  },
  {
    feeTier: "10000",
    id: "0x04958b4b4db0909779dca5a86b1a9bf0a91e4570",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcc6f1e1b87cfcbe9221808d2d85c501aab0b5192"
  },
  {
    feeTier: "2500",
    id: "0x70b3e480351704d25e15bc89138ca19ba37ef828",
    token0: "0x7f70642d88cf1c4a3a7abb072b53b929b653eda5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x38d2f2d0138b92e297e8e60d8ad25ae730104ec6",
    token0: "0x2ad69e58071b95c047bf78dc804db3662275b64a",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x55a3e40cd966e5e844249b2412275da2ede766ed",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c"
  },
  {
    feeTier: "2500",
    id: "0xaf8c48ad10cfd77bdf3f8ad6d1785b7376a78e39",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf0fd0ada41ef2cb88a83b0301d451cc6e4ba054c"
  },
  {
    feeTier: "500",
    id: "0x6fc7512f8cd87b05f4c0e937cc845e2c2e9e55a9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x62f71830fa420ba1ca0dc1a94c4d4da5b14c5432"
  },
  {
    feeTier: "100",
    id: "0x3a9851023659ab047dee77c180734ffbf4a325d9",
    token0: "0x8eb05c38c1d92ff74fd941ab4f7a469a5cc2ca6a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x07e17913808ca2983b10181e589d800218d57cc7",
    token0: "0x1ba42e5193dfa8b03d15dd1b86a3113bbbef8eeb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf01633faed3ec69e8fcae43c4646a84194f4da44",
    token0: "0x04e3e226bedfd57252198443561b57c0a6456e9b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x6eda4bc69a139b846ad4466225fcbdde9024bc4f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x90422d35496e8ed3391971dbec894e4a8057081f"
  },
  {
    feeTier: "2500",
    id: "0x44a83d53db65a64c056ffda6070b128a648ad397",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xec4181db75f17d3bf7885158794d060ae30bd730"
  },
  {
    feeTier: "100",
    id: "0x4b30fff989b65d7531c65f930c18778d85335c6c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc4a1e7106d08b7ff947254b6d75cf2b877d55daf"
  },
  {
    feeTier: "500",
    id: "0xbe1a1073316449c26536285f4dd6d1261cac7c14",
    token0: "0x36c7b164f85d6f775cd128966d5819c7d36feff3",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xc57e3504642133e66b3c660d2149d44e82071d1e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd69ee2e508363fed57f89917d5ca03e715ee5519"
  },
  {
    feeTier: "2500",
    id: "0xa9ae342b34f3ab5ff41c6790cc483b3529dfefbb",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x581fa684d0ec11ccb46b1d92f1f24c8a3f95c0ca"
  },
  {
    feeTier: "10000",
    id: "0x1905a544414ff059b1305cbc52c4869011140f34",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xb7f8cd00c5a06c0537e2abff0b58033d02e5e094"
  },
  {
    feeTier: "100",
    id: "0x96e26cb1d978d97c8f12e9af4b1e3fa2ad6e3e60",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x63436d8a6ae90943cf09eb589cc815f645c14bb4"
  },
  {
    feeTier: "500",
    id: "0x9ad03947b04c92908f274418965d850189e5fd2a",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x8eb05c38c1d92ff74fd941ab4f7a469a5cc2ca6a"
  },
  {
    feeTier: "500",
    id: "0x9b6d825e16df17b5ea416319e1ac0b85ecd9be19",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x75ca521892de7f2ecfb070cab545c250d0ceb7e3"
  },
  {
    feeTier: "10000",
    id: "0xa638c867b2fb628c35b2875ab1e25752882f3de4",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc71b5f631354be6853efe9c3ab6b9590f8302e81"
  },
  {
    feeTier: "10000",
    id: "0x39cf11ccd4c6901e5ecb5833e3e6561f7b5c9f18",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf154c15f692bf2be10739cc5681abd6c8fd751ba"
  },
  {
    feeTier: "10000",
    id: "0x40b725f87de8d05af269ec48c6a0f3a674305c71",
    token0: "0x3a12a501b2bdcf86c9db0c22e9b117c54c0a4d31",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x85bf2332c9033624b5d6f2607d8f07f22bc86345",
    token0: "0x2598c30330d5771ae9f983979209486ae26de875",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x6ee3ee9c3395bbd136b6076a70cb6cff241c0e24",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "2500",
    id: "0xe67f297f1d861002cd24970f8df24f1497dbac5b",
    token0: "0x2d060ef4d6bf7f9e5edde373ab735513c0e4f944",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x5ab189ab838ff96aad40231230d6ae0fcd0033d9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7e9d9c632c2f82066388a5a66300183ed2885572"
  },
  {
    feeTier: "100",
    id: "0x94232697dd93c003e943d1b83b9892d90abcca0d",
    token0: "0x472935591f64a09c5622eed08c51707a6640c86a",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x18f2e303537bd1a53ff09e637c62efae2b0edd2e",
    token0: "0x6e5b7d293fa136839647b5b45cf520d04708cc01",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x3cc71c5079c93035498259788a3812ad696f542e",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x8ff795a6f4d97e7887c79bea79aba5cc76444adf"
  },
  {
    feeTier: "2500",
    id: "0x032ab93b734bef57d98552eb56839f0995d4fb28",
    token0: "0x4ea98c1999575aaadfb38237dd015c5e773f75a2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xcfbd29b64f65dd63799f411133dcf0e78df01729",
    token0: "0x8fb7a3d213c3a2b605386cd3617fe0eaab7f3b1c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x189e3722ff5865c84db15390f7d6f31c7b09c2e1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x90c97f71e18723b0cf0dfa30ee176ab653e89f40"
  },
  {
    feeTier: "10000",
    id: "0xca98dc9896fe8622558b85200541e026bb132241",
    token0: "0x1ce23701b30cb6230a1748e0e54286934e54d56e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x917b695ead54e01cfbc511547424bc0fffaa5d65",
    token0: "0xa2dd9651f54320022af562ce5b25aea69b3b444c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x1f29aa89b21eb07084bcc151f6b917b39ff6f796",
    token0: "0x88da9901b3a02fe24e498e1ed683d2310383e295",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x95a13229c552f47ac395d47c03a1c49f9e1bc2ca",
    token0: "0x75ca521892de7f2ecfb070cab545c250d0ceb7e3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x627fcfa6247ed6c8ce21831e7924e606c880190c",
    token0: "0x56d06a78ef8e95d6043341f24759e2834be6f97b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x5b6e3508cb302f3174ea92b22d3f21bd56deb890",
    token0: "0xaa390bd1657514730d98baabce4b393a53acd579",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xf53453d8ccfbd2b92fab0363e40e17fd04b522ac",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x61efd49636b558ec4895a9f5d8273ab51dacea35"
  },
  {
    feeTier: "2500",
    id: "0xe1dadbda36fd556409f93a7d731295f7a8864111",
    token0: "0x9ab70e92319f0b9127df78868fd3655fb9f1e322",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd1a110c752027f6d3d66cc6485dffb4c58b01919",
    token0: "0x335b6828e2860abcdd0ef50ba86334ab25fd03ad",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xa84b5350cc3badfcabe64c51a40fb185f722f8b0",
    token0: "0x9521728bf66a867bc65a93ece4a543d817871eb7",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb0e35a2b6bf11a697dab5e17781efc1d6b4cc4a2",
    token0: "0x37a56cdcd83dce2868f721de58cb3830c44c6303",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x671fac0e2c1df148cd3cc564b3f3c85da88d2df9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9521728bf66a867bc65a93ece4a543d817871eb7"
  },
  {
    feeTier: "10000",
    id: "0x31a4244f1bb303bbde006fa7f3dc56c6cd44c1ff",
    token0: "0x2d4c3f0cebe62f9af50fcb5361d66896271fd6a2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x48bfb05d41ee8ffd5574c7adadaf289074c98312",
    token0: "0x011a5de645f7b599bb4d6fa1371532dd25a45201",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x45be9c7defb1ccdf0cc8e04a414a2aff64ae92f2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x724749f0d31ddb05f4e461d1777b16fd525a5035"
  },
  {
    feeTier: "100",
    id: "0x78abfc727425000854fa85c12031258649762a48",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x89ebfda3a8e69e541bfe61770c1f9d9fd7342941"
  },
  {
    feeTier: "10000",
    id: "0x55143c1ebf7ff9683b669ca1224655e59673f3fd",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xba2ae424d960c26247dd6c32edc70b295c744c43"
  },
  {
    feeTier: "2500",
    id: "0x8a876ca851063e0252654ca6368a5b2280f51c32",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x6a1c1447f97b27da23dc52802f5f1435b5ac821a"
  },
  {
    feeTier: "2500",
    id: "0xa78debaeffbbd1d075560b03b0a264879e1c2370",
    token0: "0x5857c96dae9cf8511b08cb07f85753c472d36ea3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x4c0e8992668fd4e74431115f3ebeddc6e5fe4a75",
    token0: "0x48ef9b1d19ec131f4c33cd3283b39e7af682a8cc",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xfef4566a4a770e1b945a206b44c416d9eb3b3ceb",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x57bc18f6177cdaffb34ace048745bc913a1b1b54"
  },
  {
    feeTier: "2500",
    id: "0x67d19e3837a92c34188477f7be0ae6c54633bca0",
    token0: "0x7083609fce4d1d8dc0c979aab8c869ea2c873402",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0xbe356455913e190ec1c33d883d55b1841f051016",
    token0: "0x35da89a339de2c78f8fb1c5e1a9a9c6539e2fa8a",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x85faac652b707fdf6907ef726751087f9e0b6687",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x844dcc97e94bc9b5238f8ad24be6e0dea4b03961",
    token0: "0x15669cf161946c09a8b207650bfbb00e3d8a2e3e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xfc18301b94a77d91015bb90d5249827c506846ae",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xf6718b2701d4a6498ef77d7c152b2137ab28b8a3"
  },
  {
    feeTier: "100",
    id: "0x23ab35fac8a7ff11f0fe197df68e8ee52e415f2a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6e88056e8376ae7709496ba64d37fa2f8015ce3e"
  },
  {
    feeTier: "10000",
    id: "0x4bbe064b5e13330dd130e6fd1d83e94ca05d5a57",
    token0: "0x0af8c016620d3ed0c56381060e8ab2917775885e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd07228fe0ab8bf50e4d2290efa68aca7907d7e5c",
    token0: "0x24b4440c60b512eadd0d093367a46dbbe2f6540e",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x6f6984724fcc83b2ceeba7c4f17260bb29b6d465",
    token0: "0x0c09cebe826dae71d5e59458b742539f603530f7",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "10000",
    id: "0xc05275c3a830f44ec45762526138dfd532e27b61",
    token0: "0x7f68528a0464ecf3eb7f0c16bf77bbbb466c0288",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x12d6757e9c6b4a906ac8ff6560a1ea8a9b8fe38e",
    token0: "0x668db7aa38eac6b40c9d13dbe61361dc4c4611d1",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x2c533e2c2b4fd1172b5a0a0178805be1526a15a7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfceb31a79f71ac9cbdcf853519c1b12d379edc46"
  },
  {
    feeTier: "2500",
    id: "0xd95a7e5a66c309d613b448bb93072f3d31453cc6",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfb6115445bff7b52feb98650c87f44907e58f802"
  },
  {
    feeTier: "2500",
    id: "0x72539d6cd1400e22915476d498fc2c5e504b0926",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbbca42c60b5290f2c48871a596492f93ff0ddc82"
  },
  {
    feeTier: "500",
    id: "0x90f2aa32b4d4c82de66249c16cce3275513279dc",
    token0: "0x1f6ba0e8db204b9b7762ddcbcd6d3941f8e405cf",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x8e4bb36c2418f6b161af7aa5887451a3cba3ed7b",
    token0: "0x0cc3754442d15aeeceafdc1f56624b592eb0bb99",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xf0cff8fac93fc1bd93407545963e7dcdba9df5e6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd9483ea7214fcfd89b4fb8f513b544920e315a52"
  },
  {
    feeTier: "10000",
    id: "0xecd6abb254407c62ffd3e5b068fef6e4544bd816",
    token0: "0xbada1ed4003fee20075b44b2d3b9db7bae472042",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x171849dab7ddf2abdbbf98296e188e454f8ab8a6",
    token0: "0x34ed9b0c8bde1478470ed3bebd5bd131431d4624",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xa6a82689cc13e7920a748b903bd536f54f2ed06c",
    token0: "0x1294f4183763743c7c9519bec51773fb3acd78fd",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xe4dc89139c47bef053e14bc38196ca95e8b50365",
    token0: "0x99aa29ac023057951781dc5d1784e9a4c362ce23",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xa566d23ff995af663f1a0cc91ee525e344facbc5",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdadc8dff9f122f0bd84fc52ba2d7e6b512393956"
  },
  {
    feeTier: "10000",
    id: "0x2e55583856a4eff49f1260331e4ed78edbf849f7",
    token0: "0x1796ae0b0fa4862485106a0de9b654efe301d0b2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xe96df3c94073367ab7df8b35ee7c33b561e67d95",
    token0: "0x4bd17003473389a42daf6a0a729f6fdb328bbbd7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x73461015ed0a70e56165d461675cd60652f8f694",
    token0: "0xb55ee890426341fe45ee6dc788d2d93d25b59063",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x95b605d7a48472984c748e05140ee08273f3bbb3",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x250632378e573c6be1ac2f97fcdf00515d0aa91b"
  },
  {
    feeTier: "10000",
    id: "0xe439cd0b34da64470d2816e55b90c7c4a82cc3e8",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8457ca5040ad67fdebbcc8edce889a335bc0fbfb"
  },
  {
    feeTier: "10000",
    id: "0xea7f33db7bbf84780069232c80ed128b75ee679e",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xfd7b3a77848f1c2d67e05e54d78d174a0c850335"
  },
  {
    feeTier: "500",
    id: "0x8ec186cd1ad51c380bd23fde29f852226647616c",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xedde607eb1df414cc3a73b5997d046333c624aa4",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc9dccbb27d712494c99c20702fa87bd591f5f8ce"
  },
  {
    feeTier: "10000",
    id: "0x74e4746ff8f3528e8874fca6b0712a36074a72c4",
    token0: "0x62d0a8458ed7719fdaf978fe5929c6d342b0bfce",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xb6bda830c2b746662331b1e781d76268ed463bd1",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe7618f728ac6526a2054f7896e7bd6b5cbd5a36d"
  },
  {
    feeTier: "2500",
    id: "0x4e91b97585a735d7e7d6e68022b3ca0ba41934d4",
    token0: "0x8b3bd80ed1f4c758c5faab7f4d66a7e34b6f7ab4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x3532d93d9247a07472d9ee74cd4d97935c840c0f",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd9361d306a9e9a43f5883a064038220ef0d46fb0"
  },
  {
    feeTier: "100",
    id: "0x7002a255692d977c10237385689218131eaf8a12",
    token0: "0x7e9d9c632c2f82066388a5a66300183ed2885572",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x68f35058728c1d7ee14bbb7ffd6177972200551d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x67db74b6d1ea807cb47248489c99d144323d348d"
  },
  {
    feeTier: "10000",
    id: "0xe34c457d26e0496eee07330c35a1df7f43b7a1f4",
    token0: "0x55a9ee0bd79fb0fc0ac71a35d6f481fb4bdc9a5c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xed11f044b13a8f794c6d8e25fb73380d7d62a3ae",
    token0: "0x32dc065cc6bf468b5c8922ac034aeb5ac779dd79",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf2860e3f01665d7dba71e4e9cdb8d508118af8d5",
    token0: "0xae493a1f8bbe36ba8e687352f638d4c07c54f8d7",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x40493c78636114bbab3e97fe87013d8df667e52f",
    token0: "0x256d1fce1b1221e8398f65f9b36033ce50b2d497",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x5fb8e29579ec1b4f2c72f47e9c1c789a3eaf14aa",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7e60c74b9096f8fa6fb5a9fd88405ded8b7d44f3"
  },
  {
    feeTier: "2500",
    id: "0xf73d6616ae57d390bbc27fb28bf9dbf8d52ef28e",
    token0: "0xb7e2713cf55cf4b469b5a8421ae6fc0ed18f1467",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xf913fa1cc8e6f25b91143265257fb03ed5bfd65d",
    token0: "0x4d1e90ab966ae26c778b2f9f365aa40abb13f53c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x20a4587277ceb04372f9a734c1acf89eb8b08427",
    token0: "0x62d0a8458ed7719fdaf978fe5929c6d342b0bfce",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xe53b8cd449aa55ff9c64310e78b4f92ba8d27d77",
    token0: "0x99aa29ac023057951781dc5d1784e9a4c362ce23",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x3d7a87ad4f41a716e2b538f9a0d552842dc4b65d",
    token0: "0x7ddee176f665cd201f93eede625770e2fd911990",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xba1afebc8f19e9e246e6c051116a0d8a16f54d87",
    token0: "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "500",
    id: "0x324ec61a4c8595dfb8036facd9b6b12481c15e2d",
    token0: "0x0c9ad20802e89bea858ae2e8594843fafa887cb3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x802cb54dd81a11abd27b53825434b78f7db72e9e",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xbe2b6c5e31f292009f495ddbda88e28391c9815e"
  },
  {
    feeTier: "2500",
    id: "0x6e2d57b345ecf2057b2e6feafaceb586f6017114",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x8eb05c38c1d92ff74fd941ab4f7a469a5cc2ca6a"
  },
  {
    feeTier: "500",
    id: "0x55f0af2cfc605f549480201fa5c9418f9812e9eb",
    token0: "0x5357e9c3488c7680e710b46b744e706e484b4ad7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x95799c4a209a10868ebfc04e7764e6868480f5b5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x808602d91e58f2d58d7c09306044b88234ab4628"
  },
  {
    feeTier: "10000",
    id: "0x77e4ba48091f23a8a54b3e2c72f17be58cc2d137",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb64e280e9d1b5dbec4accedb2257a87b400db149"
  },
  {
    feeTier: "500",
    id: "0xf41d0d6b40054a7f6a62f615f8a62b2459d2226e",
    token0: "0x477bc8d23c634c154061869478bce96be6045d12",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x15a9ca357ceaaecc8d11c01185bd6c3e88b37b67",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x52ce071bd9b1c4b00a0b92d298c512478cad67e8"
  },
  {
    feeTier: "100",
    id: "0x9de6ae43a8842795e54cced432263179baba06df",
    token0: "0x0cc5dc6cd17a4e003d675ae91354373945d4e0c6",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x5523801e45ff69278011c3f6fc8cd959170d9c49",
    token0: "0x299142a6370e1912156e53fbd4f25d7ba49ddcc5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xcbf5ce9204cbbbff0263e741a3f1bc7102a19317",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x8eb05c38c1d92ff74fd941ab4f7a469a5cc2ca6a"
  },
  {
    feeTier: "2500",
    id: "0xc286b311cbc11cbde440853a984cf268c2d752ea",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfba8d4af65c6d54612ba962bb3de3fc06b05f20a"
  },
  {
    feeTier: "10000",
    id: "0xfa5a4ade0235673d8c5e971616e7af51cb6708ef",
    token0: "0x193f4a4a6ea24102f49b931deeeb931f6e32405d",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0xa3bbcbf27bc264739db0d91b3c073113947ed61f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc51c05b7ea1147a9c846136a6f64358db4d6548e"
  },
  {
    feeTier: "10000",
    id: "0xf0a2463515367f5e33b28a34574f384a6414d4e4",
    token0: "0x935a544bf5816e3a7c13db2efe3009ffda0acda2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x1df82f5e26819b8e52b7ce4cfd7189183d1261b4",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd369f1af3f6d194800ebb76ed70a23055927fb49"
  },
  {
    feeTier: "2500",
    id: "0xa2caadd68881f49b30c78caabee74062bc13c2f3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x66109633715d2110dda791e64a7b2afadb517abb"
  },
  {
    feeTier: "10000",
    id: "0x0ffb2ca54c3116f3f4d4cf2f6057333fe760d97f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x740df024ce73f589acd5e8756b377ef8c6558bab"
  },
  {
    feeTier: "2500",
    id: "0xe341e29ac7b81b0e2c2e1163910f3bd63ffd81f9",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xeb880acb83c63ea3eab4baae9693dc5dd9d324a3"
  },
  {
    feeTier: "10000",
    id: "0xb88cf2ae9ee107813ff38073ab0ceed1dbb033a1",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcbbb3e5099f769f6d4e2b8b92dc0e268f7e099d8"
  },
  {
    feeTier: "500",
    id: "0xf44624abb195cb04ac3ddb8a2affe761791c7149",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb6489783d37aab7f74d266894002decc51172091"
  },
  {
    feeTier: "500",
    id: "0x6f7d16cbb23aaa76bcc2fd0500c2d921e9997af6",
    token0: "0x0eb3a705fc54725037cc9e008bdede697f62f335",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xd4dca84e1808da3354924cd243c66828cf775470",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "2500",
    id: "0x469d8af071a2c525a1d6cf6bf13ad56b6678f3cc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe6ce27025f13f5213bbc560dc275e292965a392f"
  },
  {
    feeTier: "2500",
    id: "0x193d71b6ba9729f87e9e7e1e274cbf3a732c7cf2",
    token0: "0x4ea98c1999575aaadfb38237dd015c5e773f75a2",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x26d4d95c26d8be316f5a5c408c0568bb8880f63a",
    token0: "0x301f02cbd81c2653bcd72a9d443da136d3b1b1b1",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xd3ae217e8fc04989ec87c9a981fce46aec824ee5",
    token0: "0x0eb3a705fc54725037cc9e008bdede697f62f335",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "100",
    id: "0x16295a13ea890528ed2793e9eebcc8f19526e20e",
    token0: "0xac68931b666e086e9de380cfdb0fb5704a35dc2d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x69707d09d8689a5a08ab6be3ee37aa464554a98e",
    token0: "0x24b4440c60b512eadd0d093367a46dbbe2f6540e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xfbdb1ebe3fbe2bab011a2b6b801a16cde16a4487",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb455d798e8b07dbbf9d4609f7b7bdc574463d0b3"
  },
  {
    feeTier: "2500",
    id: "0x170a4d2a29b30c6551f6a4c0cb527e7a9cb7d526",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xebbaeff6217d22e7744394061d874015709b8141"
  },
  {
    feeTier: "10000",
    id: "0xb898bbc49310e9ce54585f298db380d92e2c2036",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xbc7d6b50616989655afd682fb42743507003056d"
  },
  {
    feeTier: "10000",
    id: "0x975d7be758472dd6e6faa2c9c8d4ec2ed026e2bd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5d37abafd5498b0e7af753a2e83bd4f0335aa89f"
  },
  {
    feeTier: "100",
    id: "0x09aa565373b8d26fe8733d6ed0d7a3a75ef15a51",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc7af62df637a77fb1ff5c4d1a904d3a966f8623e"
  },
  {
    feeTier: "10000",
    id: "0x1d80fe88136206ac0d02ddffa1b3e43b8aa01972",
    token0: "0x0000028a2eb8346cd5c0267856ab7594b7a55308",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xd0227fbbe1c8edc134568e5bf46a856128f296fd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc2cef6245a8f0488d0437e0d77cab51d5420be48"
  },
  {
    feeTier: "100",
    id: "0x9afddb25c1e5cd55543f5246541516853c6ea555",
    token0: "0x0f5d54b27bdb556823f96f2536496550f8816dc5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xb1853a06cc8dcb58e80f26ecfdf2d33176df1833",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9a5350edf28c1f93bb36d6e94b5c425fde8e222d"
  },
  {
    feeTier: "10000",
    id: "0xc6e8cec89099a9e3ec1291b74bffa373b8306cde",
    token0: "0x0892f6273c31d4c55c6bace88bc09ea300e2808b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x97e108b37453f2f2f3fe3d03cbbb396c925ce8bd",
    token0: "0x7f9ad7a5854658d984924e868187b2135514fb88",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0xcb88cc0793097618944c810dc7f38b9acb916519",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbfffd68774aa006840385cb021966188990a2d1a"
  },
  {
    feeTier: "2500",
    id: "0x2e78bf2b280aa5fa41cfa673125bc2103d906c8b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf03e02acbc5eb22de027ea4f59235966f5810d4f"
  },
  {
    feeTier: "10000",
    id: "0x2986e99919a7cd69a6e6a3b0c669df7cc3063f1d",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc0eff7749b125444953ef89682201fb8c6a917cd"
  },
  {
    feeTier: "10000",
    id: "0x73d69d55893d6c97dca44af2aa85b688c0242d7f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd069599e718f963bd84502b49ba8f8657faf5b3a"
  },
  {
    feeTier: "10000",
    id: "0x6a13d1a9bdb8514ae6a61d254f304c104571d5f2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xec1f55b5be7ee8c24ee26b6cc931ce4d7fd5955c"
  },
  {
    feeTier: "100",
    id: "0x9f037651c9175fde748bc9c473d1819636ea2222",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbaea9aba1454df334943951d51116ae342eab255"
  },
  {
    feeTier: "10000",
    id: "0xa82890212096ec40c2d31c8f1f9359a5eac5731c",
    token0: "0x4d7fa587ec8e50bd0e9cd837cb4da796f47218a1",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x2901ec33f9669f2d0120df458a7df8c75e274b8f",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc79d1fd14f514cd713b5ca43d288a782ae53eab2"
  },
  {
    feeTier: "10000",
    id: "0xd7a6cf7759169e925ec1851b8d66568906bd5d14",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8888888837f84a7a82668e0320ac454f5945d0b9"
  },
  {
    feeTier: "10000",
    id: "0x1e5b8800b4a65a2107a49949cdad18bfdbca288d",
    token0: "0x1294f4183763743c7c9519bec51773fb3acd78fd",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xc01b7337258e2f2a99ee9cc54fd3b218bd42781f",
    token0: "0x04756126f044634c9a0f0e985e60c88a51acc206",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x06ac8ee32bcdce6bf2ea82d9bfb932a84d45bfcb",
    token0: "0x8d279274789ccec8af94a430a5996eaace9609a9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x94acfc643d58f2aba30de527add01bc7bed34684",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05"
  },
  {
    feeTier: "2500",
    id: "0x0f74d4bf3c707b191e60be614a0e7e318f52e7ae",
    token0: "0x44f5909e97e1cbf5fbbdf0fc92fd83cde5d5c58a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x008a35e1d213bb3164653030f19f7ce5370a6bf4",
    token0: "0x9dd5aca7afaa266c249ffc58161fedb731a0b601",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x3f173b7672fdec2b3e8a795a9d21e3c3ba0a9bd2",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcb191ac518e7dee0f6e34c6b59ffbef47580e092"
  },
  {
    feeTier: "500",
    id: "0x0de16cf6b08917071da0ac169fe7569cd6af1120",
    token0: "0x4735a433efdcacb7374e50b3653da1af13b80c38",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xc9d2dc95f40a34252f643c7d872ab4b24a4e1f66",
    token0: "0x34e7b24c6203cf361b73e426e0b9cfbb28dcc01f",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xb9f47c14b945915badb1217af781aa7de6f6569f",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x4c882ec256823ee773b25b414d36f92ef58a7c0c"
  },
  {
    feeTier: "10000",
    id: "0xd152fc050d7e02ed13f3eb6ece962b79dd700ed2",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd4abef1d6b87a584888ec15b92ef69b07da19f61"
  },
  {
    feeTier: "10000",
    id: "0xbec6dca1e78d5cc82fc1b6a96b602f3faab9b3c5",
    token0: "0xa64455a4553c9034236734faddaddbb64ace4cc7",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x91fa832ee10722a15ef6ad18b8525a63e36857e5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x84affeef925cdce87f8a99b7b2e540da5140fc09"
  },
  {
    feeTier: "2500",
    id: "0xbc78fc990414a2e02a3d0485d9ab8115ed28824e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe2a59d5e33c6540e18aaa46bf98917ac3158db0d"
  },
  {
    feeTier: "10000",
    id: "0xe0d4f397935a6346c8e2cd2aba4ab5ff26532352",
    token0: "0x11cd72f7a4b699c67f225ca8abb20bc9f8db90c7",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x11a22c6c808827efcb1951bb64b34c1ef2243427",
    token0: "0x13a637026df26f846d55acc52775377717345c06",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xb7a33777d4effffe4a0ae75fd56699ab97a1d014",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7cd392a37a36152f5b3afe086a9832ad2ef8d145"
  },
  {
    feeTier: "2500",
    id: "0x4df1d45b34d0db0f0629677ce0b5f5a12904f8ed",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa856098dcbc1b2b3a9c96c35c32bc4f71e49aed2"
  },
  {
    feeTier: "2500",
    id: "0xd46e2d529e2a55000f16bbd7e5e95fc89f58d38f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd8047afecb86e44eff3add991b9f063ed4ca716b"
  },
  {
    feeTier: "10000",
    id: "0x7443713609eefa201050e80c2c59263dc483ef27",
    token0: "0x510ca7d22a84599e7d0f15f09e674056a6255389",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x8438897c80d0ce7f407fa4680d03f0af9fb2c550",
    token0: "0x5888faf314e060b0b0c765dc706818036e1b910a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xc0069261d1673ed47ae3c95b1381dc34cd506474",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5dc1f1de9c9d18622defefaa00de43748b70005d"
  },
  {
    feeTier: "100",
    id: "0x390ecc1fc627fc0ed3638daf761add7ea4f28ff0",
    token0: "0x864195f5ee582d52037c3e54efad60dcd288ed64",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xe09a5f0ec37591b3c942289f4f6ac0b7fcd0c16a",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe"
  },
  {
    feeTier: "100",
    id: "0x2657f8593fd3ef54500eef8bfed80252734e2fc0",
    token0: "0x28a085352127713d6da7748ce15df19ce805a0b3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x0c45176b5be3b1bd453b4dd22432436af89ec887",
    token0: "0x53d851131f9a82b97af8a32d70c57b5c24c429ce",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xd881d9d0e0767719701305c614903f555d589586",
    token0: "0x40af3827f39d0eacbf4a168f8d4ee67c121d11c9",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xd336518d9b27d5ddd7ebe293497fa4d95a2ac92b",
    token0: "0x00e1656e45f18ec6747f5a8496fd39b50b38396d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xa5128e9d4a930fff62d2702129914b26913a001c",
    token0: "0xa5f249f401ba8931899a364d8e2699b5fa1d87a9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x25f9bd626cbadfd28c3c8a4c206fdbfc998dde8a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7635120d43584e3d9639b81de61f8b5191ffca98"
  },
  {
    feeTier: "500",
    id: "0x89d0e386928089a97d1e231c3f3ca300db36fa73",
    token0: "0x1e140fe3e34f719352756fc83ecff3bd32de8400",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x91239645e58ca1f825a61384f9a21c733e29cb22",
    token0: "0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x1fd99b298574633eb89871611c666a339d372831",
    token0: "0x1cc0801f922b3c5dec5efb04d69b3c4ca9f00c54",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xb0c449f9c16780f5ab31a7b614a4681a22eb8f77",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd3fafe7094d744b17efb6c356046f59a0fce7ead"
  },
  {
    feeTier: "500",
    id: "0xd7336ad5f92db319f9fb561c69ee321c23dbc18f",
    token0: "0x0505efad2f885705c4035848349ec54cc8b993a0",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xa7dce4f6322dbea74d3e1dc3d021945fcaa24151",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbd01fe3b4bdd01a2bc71c007cbabedc95c2f5e79"
  },
  {
    feeTier: "100",
    id: "0x188bb4e30d81535596bcfe0f12d3d1d7c80a86e4",
    token0: "0x349a3a681a5beb51902faeb9326de26b3a5c31e2",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x6afe0f2b39b98857e49af22cef4e4525551b46ac",
    token0: "0x944824290cc12f31ae18ef51216a223ba4063092",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x71f5a8f7d448e59b1ede00a19fe59e05d125e742",
    token0: "0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x223e3fe30e5c4c5d908d2476c6d0bf227d755847",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x94b69263fca20119ae817b6f783fc0f13b02ad50"
  },
  {
    feeTier: "2500",
    id: "0x93ba6af467c7b46b44d5c0bb300270c732510c9c",
    token0: "0x8581cc815e40615998f4561f3e24e68066293595",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xee013defbebf7d7c836a3234edc239b5c8b4a4f1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6a8fd46f88dbd7bdc2d536c604f811c63052ce0f"
  },
  {
    feeTier: "100",
    id: "0x20ae5077058f5eac67cbb6ec9afd550037ec44e3",
    token0: "0x82c44cbb041a1415dbc2662ef0896bfdb9b21a3c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xa0911b8a2e6ae5f8149fa2e9032c6beb4dd01a52",
    token0: "0x1f1c90aeb2fd13ea972f0a71e35c0753848e3db0",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x8104552c7cc0131513e19f1627d34aa1363b4e05",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf99f2aec50adfde23cc67ab6240168b0a59f1d30"
  },
  {
    feeTier: "2500",
    id: "0x0915d09552642554832ba7b1a6e8846c408f2608",
    token0: "0x53e562b9b7e5e94b81f10e96ee70ad06df3d2657",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9c56d383159ec6ddc59ffa4d1ac56aed05a01de2",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcc42724c6683b7e57334c4e856f4c9965ed682bd"
  },
  {
    feeTier: "500",
    id: "0x7e5f107ad2e997fc5baf15ab98cdbad2e2594afd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf99b183e803da2efaaf7a1cd6a1fb90eaaa243db"
  },
  {
    feeTier: "100",
    id: "0x22536030b9ce783b6ddfb9a39ac7f439f568e5e6",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x0074fc89aac21f5deb884e737b513cd0586e655e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc27a719105a987b4c34116223cae8bd8f4b5def4"
  },
  {
    feeTier: "10000",
    id: "0x84a6f887987eca15f96861519585c1591a8aa055",
    token0: "0xa325ad6d9c92b55a3fc5ad7e412b1518f96441c0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xe47914f2284c59f359c77b83234638c8abfc4224",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe085650f7c55787b183269cc9427edf310589347"
  },
  {
    feeTier: "10000",
    id: "0x38250856bb30c21b7cd9f1a3dc40a955160e91b5",
    token0: "0x2728c49f42f4ac5a38da0080b27ded5ec04b05cc",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x469efaaadb06b5f4618ed1907aba380411f9a200",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0xe99674b100494352fb0a68754a5b3a616918f2b9",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc8505e8ec969fa76811769736b76c62da2ebbcf1"
  },
  {
    feeTier: "100",
    id: "0x589a5062e47202bb994cd354913733a14b54e8dc",
    token0: "0x323665443cef804a3b5206103304bd4872ea4253",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x2706763e5585f8d123229191a9da4fd4c441aefd",
    token0: "0x156ab3346823b651294766e23e6cf87254d68962",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x413f8d5e025817ae665c586d078d231bb7a61967",
    token0: "0x4b0f1812e5df2a09796481ff14017e6005508003",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x70ed8e7f299c4df3dc14f4d3c2d551eacca7ceff",
    token0: "0x41e025ea850bb4d0dcbb5b1f4353af099cbd026a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x8c57abe035656688d98fb510f851f0bdf6b3ee6c",
    token0: "0x5d37abafd5498b0e7af753a2e83bd4f0335aa89f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x7cc891826f33d66c942ae82efc66ae702fef39b5",
    token0: "0x5b943bc2f6ec33cd402d16d975030d70be8d20e1",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x34da342c2f46ceaff94d48c46fb798d44f61680b",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xec91cc1c33d44fe13b42150d2f1dfbeb668aef2e"
  },
  {
    feeTier: "2500",
    id: "0xb24cd29e32facddf9e73831d5cd1ffcd1e535423",
    token0: "0x003d87d02a2a01e9e8a20f507c83e15dd83a33d1",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xfaa256c78db92a90e790570ee11c15cb84d09fad",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xe77fddc622ca05b7791facb9176b3cb0a9ea905d"
  },
  {
    feeTier: "10000",
    id: "0x9db47137b3361c541b55ff740579b2dba1c103a5",
    token0: "0xa9f978c02915246e435c0bda9785aaaad3cc46d2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x05862cefc95469d4d036f79bd229ab38ccafe0f0",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x4691937a7508860f876c9c0a2a617e7d9e945d4b"
  },
  {
    feeTier: "100",
    id: "0x2884853533c71ebb0df0a37c45b36ba81a0e7d90",
    token0: "0x43d0551682687589c742f72309906d2b4f4ff05a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xa01a9525e9d768500612c0d0b38b02de4b28a00c",
    token0: "0x42dabca1af369fbd9e8ea286dafba45b23fc92d9",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x7edc24acfe188b0886f53c0922bdb8f1c801341e",
    token0: "0x570a5d26f7765ecb712c0924e4de545b89fd43df",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "10000",
    id: "0xa9a06091ee8b649d8533774c28fcbf6442ad789a",
    token0: "0xac472d0eed2b8a2f57a6e304ea7ebd8e88d1d36f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x52614b03a019dc185969fd9689455aa062788f60",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xbf5140a22578168fd562dccf235e5d43a02ce9b1"
  },
  {
    feeTier: "2500",
    id: "0x6c40d1ed536a7bd060296a1fd12d9cf24d11a8c0",
    token0: "0x9d9f77e697cd60862ef48245dee42f8e0136e8a1",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xc9d8e183400cab08bbcb526c7acdfefc8b030fb2",
    token0: "0x7346aefecbb75c982575ee8861ddf365e7d0ae7d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xaea1acf88e3a1bb75cbb87dde2493b3fa3b269f6",
    token0: "0x4a8049c015ae1c6665fc9e49f053458ae3a102d0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xcbf9f41e567e52bb9c86a85bd101bbd964b5c5e1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x965f527d9159dce6288a2219db51fc6eef120dd1"
  },
  {
    feeTier: "2500",
    id: "0xc721deccd986d54b39e8c29428a1f06155c3671e",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x75570f51ff6069e655ccff5864f1c3a4da1bc9fa",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9fc0444a45fc4c784af6c2f95259306c4f8c7bf6"
  },
  {
    feeTier: "500",
    id: "0x936b39a8c429b6d7feefdb9f3f967bb74cc32909",
    token0: "0x03aa6298f1370642642415edc0db8b957783e8d6",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xdccd1004c5c297155a12cf89d10bc5136fc38493",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8"
  },
  {
    feeTier: "2500",
    id: "0x33dcd5381c0fd234867d5d7a49a19c009f82af4e",
    token0: "0x0eb3a705fc54725037cc9e008bdede697f62f335",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x6aa9c4eda3bf8ac038ad5c243133d6d25aa9cc73",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409"
  },
  {
    feeTier: "2500",
    id: "0x1852123bd75f4f2c588f16e33f0f84051b3f0ecf",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x95a6772a2272b9822d4b3dfeeaedf732f1d28db8"
  },
  {
    feeTier: "2500",
    id: "0x921cc8339822e193dad588796281d515a5cb7567",
    token0: "0x4cfac133438b25c22434ed56106eaf8503ec65ea",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x3fd9d94f0f00a27c7d0451e86732a3945acd5d17",
    token0: "0x27d72484f1910f5d0226afa4e03742c9cd2b297a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x8204ab1319c0e55f94bea98c6c4f0389d4438c62",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfdad8edc724277e975f4955d288c6eb5b20a3146"
  },
  {
    feeTier: "10000",
    id: "0x63ca58e7c6bf06b06cbbec2a83bf6aa8f8f9f77b",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x37a56cdcd83dce2868f721de58cb3830c44c6303"
  },
  {
    feeTier: "2500",
    id: "0x89cc4347eac9bdf71f9d783c7a25729e5c579108",
    token0: "0x0ae38f7e10a43b5b2fb064b42a2f4514cba909ef",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xce6cab75608aa20ce748da7b340ce9294617ce00",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xade2321efcc54b1d0676a29e331579da7b82aa76"
  },
  {
    feeTier: "2500",
    id: "0xde3acddde2c72f7b6d0ff0556e0aaaf8ec57aa81",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x650bba0eeea407681e3bcca434707240d0911b6f"
  },
  {
    feeTier: "10000",
    id: "0x5efd04dd954da8694360f92bd6d4bd83122798c2",
    token0: "0x20b4620a767d6dccbb9314104d5cf0d08d1f7045",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x0004222c2075e9a1291e41f1ca4c8d32141db501",
    token0: "0x3203c9e46ca618c8c1ce5dc67e7e9d75f5da2377",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x1107f1ccb88d5a749993f5c835e54802c1ff9d73",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc38ecfbf81ec96478526b82526e53e9562aec297"
  },
  {
    feeTier: "500",
    id: "0x6828040be38a4c3dad539711afd908095e0db11a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfe351f4d0dbfbd8a301cce91e3040f897cf76191"
  },
  {
    feeTier: "100",
    id: "0x192f7289cfb0e4e62cb0030c18d61f9b5de5302c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbe655f7b58d5482e09aa426e54a4d20c6f80a122"
  },
  {
    feeTier: "10000",
    id: "0xdca0e468930de874b945ee65dc4669ed0a0fb7cc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdbe42cbf345afd9dd6a76eaeb12bde09454eb3a7"
  },
  {
    feeTier: "500",
    id: "0xcc7d4236c83ecb325019b41514b342ddb1c6256f",
    token0: "0x48e34efa67032ca5b15543c269b6c81d584c74a3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xc3c88c67ec9bccbd2ffaa81a7678b9ac5273ebe2",
    token0: "0x1851ccd370c444ff494d7505e6103959bce9f9d9",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xf84281e545b900623ecd3dc066d70aedff486e0e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd4364d2c7ad05530cb0e8defc291d7d7262e3924"
  },
  {
    feeTier: "10000",
    id: "0x10cb1a762eb7d22194e561bcccdd66c0e808511e",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xe02df9e3e622debdd69fb838bb799e3f168902c5"
  },
  {
    feeTier: "2500",
    id: "0xaa579a157b735c1bf515cd0b192e1e50b733d1bf",
    token0: "0x2598c30330d5771ae9f983979209486ae26de875",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xa8305a7cf6ea5852de277a693a45761b474298ed",
    token0: "0x1ce0c2827e2ef14d5c4f29a091d735a204794041",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "10000",
    id: "0x13888c73711ebdb4fabf8fe7b18ef16659ab7f7f",
    token0: "0xb6c53431608e626ac81a9776ac3e999c5556717c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x33ff75fbf97fe86c32e09a32a60be8b4bddbbded",
    token0: "0x66535f4e5d718d941597205b7e76a116d64fbbac",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x5ec4c312275970b2b17b008f24acf677bb4c5153",
    token0: "0xa4838122c683f732289805fc3c207febd55babdd",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x845725721a79df9a9a87e4abd83c48d29a70e00d",
    token0: "0x25382fb31e4b22e0ea09cb0761863df5ad97ed72",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x3701eb63737f5c0f5451ffd935256ae6bb49c30a",
    token0: "0x6664d47a0985584e8c1d99da138fe211b1c5ae67",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "500",
    id: "0x9474e972f49605315763c296b122cbb998b615cf",
    token0: "0xb0b84d294e0c75a6abe60171b70edeb2efd14a1b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x6f68cb2d7c9a435cbee774a2532a5593dba1edd2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf4bea2c219eb95c6745983b68185c7340c319d9e"
  },
  {
    feeTier: "500",
    id: "0xc6748e6784c2a51caafacc72e21ee1b1d8991619",
    token0: "0x284c57e21abc46063c893d1f53893fac557bddab",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x02b37d761108b2a738b34ddcd60931edaa61032d",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xaef0d72a118ce24fee3cd1d43d383897d05b4e99"
  },
  {
    feeTier: "10000",
    id: "0xda964c34dc3ba7325c54fd6758162908856d9805",
    token0: "0x67b725d7e342d7b611fa85e859df9697d9378b2e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xc7b99f5c5109aaea40a78f4a361e957ed8da0c24",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd5d0322b6bab6a762c79f8c81a0b674778e13aed"
  },
  {
    feeTier: "10000",
    id: "0x3cb75d72401d2dba4349c696824f1397277d6a11",
    token0: "0x91d6d6af7635b7b23a8ced9508117965180e2362",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x2baaf64f128cfa6baebec6585d3a1e4155437752",
    token0: "0x307bc76e3d59ed73886a9cf9360a9286f6281ba7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x0246913ec96765bca457b0a3608872bba37d1d15",
    token0: "0x1fa4a73a3f0133f0025378af00236f3abdee5d63",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xf359fa53135987e41208e3192ddbafa9a7ea0171",
    token0: "0x872a34ebb2d54af86827810eebc7b9dc6b2144aa",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x9f1e039839c903de56ed8c2415acd5a83bd3099c",
    token0: "0x12a16d6b160809f6be748c9dc29f934b960d7258",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x6580546363f245eb39d12dc39a6168b76f2cec74",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf041a35049f1609e77afb02c573739af73efd532"
  },
  {
    feeTier: "10000",
    id: "0xf51c15df6cdeb8c4a7ddee596cd3886db3365c6d",
    token0: "0x9ce84f6a69986a83d92c324df10bc8e64771030f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x30db99aa25b5ea55c0aae41208be486dc2cadfbd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa80d88d15c315a8f40229fed2d01551747b97fd2"
  },
  {
    feeTier: "10000",
    id: "0xd4bd253861824f3984136250845bff8af6000d3c",
    token0: "0x2ed9a5c8c13b93955103b9a7c167b67ef4d568a3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x539e0ebfffd39e54a0f7e5f8fec40ade7933a664",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0xe793dee50fbab0e88dee592d97c1d88876005923",
    token0: "0x368ce786ea190f32439074e8d22e12ecb718b44c",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "10000",
    id: "0x45c6e2dc810867f88f24ae9ccde24089dbdadfc5",
    token0: "0x29b6839d7136a0f44e4c5636ee059b5ef5b757b7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xdad9c3e87d33069a7d96569959e73cb1ad34dfcd",
    token0: "0x2452adf40d9eb150c2377ac99df5a134070eaaf2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x7066ea4f4bfd0dc43fe5dbe0814553f9b4741123",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5c9ac6cbadfb0900a17735c9ffaacd20c60cfc15"
  },
  {
    feeTier: "500",
    id: "0x1076201b2c7d0b972ca272d9609eec126af8392c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b"
  },
  {
    feeTier: "2500",
    id: "0x3d06887ee8a691153402398c48928c9b58214b8b",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xcc42724c6683b7e57334c4e856f4c9965ed682bd"
  },
  {
    feeTier: "10000",
    id: "0x2dd8f5e4d5b9041b548f7a46d62d453e97a88da9",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa"
  },
  {
    feeTier: "100",
    id: "0x6cb5392b9ca52d7a0e6940e82d29087361360ec3",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x26c5e01524d2e6280a48f2c50ff6de7e52e9611c"
  },
  {
    feeTier: "10000",
    id: "0x95a2c76da58e3a4a4f7e7344e74edaa8d7761e4c",
    token0: "0x54bb6c8551712ab214950cd7acf8493ef4e7e3ae",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x19609ac88fd9de637e078391ab158c4c51566138",
    token0: "0x05c50a62b0b87be1ffb1cf3b77d9edba834ef6f7",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb34236c002227bdb19a4dcc6fddfc10f5fc055d4",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdfa1c5fcd4d64729cdf6d553b2fb1def11a7c689"
  },
  {
    feeTier: "10000",
    id: "0x77ab059556c343f3ecb7d7aaef65a730f35ebfa0",
    token0: "0x45808ce43eb2d7685ff0242631f0feb6f3d8701a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf05bcb4e3f6a015c4d961c413f7b72efdbb31eab",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfe8bf5b8f5e4eb5f9bc2be16303f7dab8cf56aa8"
  },
  {
    feeTier: "2500",
    id: "0x91b3abdcb5226733338b1a1aeb4b546618eea4e1",
    token0: "0x9240c44ee90d058b0b17ababe0f74ab1a205ae04",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xe7e4588c032e291cecb4bac5aecf8f0ff9a93368",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xff2aec2dfd8978eebf9bc036ab820e0350acf28b"
  },
  {
    feeTier: "10000",
    id: "0xcf0bc69e8dea5bf3e11cc2a3c8bc5110f2ca37ed",
    token0: "0x9767c8e438aa18f550208e6d1fdf5f43541cc2c8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x03a5a1f1c66c4c0d69aa5f992e76e4ac6b1a9241",
    token0: "0x34b08ccf9620aed6d158bae65e85bb3bbe2c384a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x837d2ea766ea32dd7ce729c04c0003052792f136",
    token0: "0x4c3145cb6285eb269c37685e05ff8c6684a70ec7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xf5fcf3d5ae98bc5972df473be3722757955a7f5d",
    token0: "0x124bc965a42fa4ca8967d5bd764d7c50df730a08",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x692cb71a629aa90a8ed6c6b6e56ce4d86760dd43",
    token0: "0x998305efdc264b9674178899fffbb44a47134a76",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xb137b171ad7cbfa9b64f4f8e2d13f6537eea4e11",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8eb05c38c1d92ff74fd941ab4f7a469a5cc2ca6a"
  },
  {
    feeTier: "2500",
    id: "0x76484ea1fc2a519666d42a4917d977d612c876ff",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa5e39aa224e2d4a6971dd0fe7f69c1abfa569f21"
  },
  {
    feeTier: "100",
    id: "0xe3533f826a6335782a6e20e11cec34fde6a7ff23",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf7be93fd73732039c2cb07861a416e43cf37128b"
  },
  {
    feeTier: "10000",
    id: "0x2d8b5b50033554d2645ffb782b4b96a1da994150",
    token0: "0xb66279ce85ff79df18901946e65216777b093967",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x3bab47eeb90d2525087973cda2707587b0b5c7de",
    token0: "0x7411f8d62203a9b4d2c7fbf063fabfef8d6290e0",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xfb2be81c23deb36643d3d2037327a9ef4834c565",
    token0: "0x8da443f84fea710266c8eb6bc34b71702d033ef2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x792957139791dbc4ab8e0c543f0505c42de253e3",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xc335df7c25b72eec661d5aa32a7c2b7b2a1d1874"
  },
  {
    feeTier: "500",
    id: "0x2296cbbefeaef6c0b07db56f75d769c0d357b5be",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8899ec96ed8c96b5c86c23c3f069c3def75b6d97"
  },
  {
    feeTier: "2500",
    id: "0xf219a1008ad113b2d9964cbc1d6dc22d7fec425e",
    token0: "0x062ca2d2f1af8c203fa3ad5298fd6faa4e44e897",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x948a5086e7c7fbf1ffdea860ce56710a34ae5905",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa40e4b91afa53ae65d793831218adf869eabb1a3"
  },
  {
    feeTier: "10000",
    id: "0xdba4290f22858a924f38b68d085b4f1ae68c78ad",
    token0: "0x903beffc8ecc50841373d0ecc2ca53fa4b04c31f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd267ea81732d6f5e9d516d1052485282eeec72d9",
    token0: "0x4f01df11d1ca0167bcf026981e5659336a9eaee0",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x9c7a87327f658ebb643bd180835de2e2829f88f8",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcdb96d3aef363a036c6cf6c9b5736d79f0e404e2"
  },
  {
    feeTier: "10000",
    id: "0xaacc80e7b08f68f330c51089d4250dbc4fb94c75",
    token0: "0x755f34709e369d37c6fa52808ae84a32007d1155",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x4b8ee19b1b4b95f2770e3b500148cb70efba230d",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x62d0a8458ed7719fdaf978fe5929c6d342b0bfce"
  },
  {
    feeTier: "500",
    id: "0xda20f7c507d5248ba76ebe3e4db01f7b5031889e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf05e45ad22150677a017fbd94b84fbb63dc9b44c"
  },
  {
    feeTier: "100",
    id: "0xb2657f72fb6d66a5efcab957c4ec0ee30d46d826",
    token0: "0x2b72867c32cf673f7b02d208b26889fed353b1f8",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x43046c4d373e2e25c39595ed6948882ce83730bd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8eacc7dc1043c4d750246aecb3e8a0c8d4405f88"
  },
  {
    feeTier: "500",
    id: "0x12197d7a4fe2d67f9f97ae64d82a44c24b7ad407",
    token0: "0x4aae823a6a0b376de6a78e74ecc5b079d38cbcf7",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "2500",
    id: "0x062e5a0e976878755311e9254be65821ceb25adf",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x90c97f71e18723b0cf0dfa30ee176ab653e89f40"
  },
  {
    feeTier: "10000",
    id: "0x15eb6a2bcab85bc8e0daf25f77985cfb59f7b9cc",
    token0: "0x2ccb747f969355e792f21335c54b92cd75c87d0c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x937b0f1d559ac7f59e83f14044ac4c98765ce436",
    token0: "0x7b3b1d7d4375e78e061b3a6782828c71d6a4d5d4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x51eee1b3d7d1e9dbea7d120d1d5e358bbe69024f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb"
  },
  {
    feeTier: "100",
    id: "0x38c1e6a5aa3b940a0ae556763cfd716d2696f2b8",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05"
  },
  {
    feeTier: "10000",
    id: "0xb0669fdfd105bc29878da388c30914fe4496f383",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe68b79e51bf826534ff37aa9cee71a3842ee9c70"
  },
  {
    feeTier: "500",
    id: "0xcd7c2dae8a6f99155bfb187c71b1f983684cc119",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfeb4e9b932ef708c498cc997abe51d0ee39300cf"
  },
  {
    feeTier: "2500",
    id: "0xbb04cbaee15e6ecbd529765d09d393d6945739ea",
    token0: "0x567351e802f52ca60b2ac9d61d5b538e9582e78d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x4cc8ba620d3fb7150d160caa970dc45bc600c9a7",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xbd2949f67dcdc549c6ebe98696449fa79d988a9f"
  },
  {
    feeTier: "500",
    id: "0x78fc892a29d7a5d6f6a08826b47cc4d66da4f153",
    token0: "0x0976bd9e6c5c4eedf2a535c2a87ea390787a6e45",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x6b65aa253308167892448c59325299c511f138f8",
    token0: "0x351da1e7500aba1d168b9435dce73415718d212f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xc119b1b3a8aef1e75889c41fccb639d16451f611",
    token0: "0x0c9bb15b32334bdaa7ad319fa356dd3e8e184564",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x3fb55e93de8f1871278d7d0c9446b6a000ba63dc",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf8455cf9bcc672f9dd5539c44430eb7542a0dcb1"
  },
  {
    feeTier: "2500",
    id: "0x1d70a40b05f4401061a6364e5912afb0b10e3244",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf98b660adf2ed7d9d9d9daacc2fb0cace4f21835"
  },
  {
    feeTier: "100",
    id: "0x514f6f07b069d178d3c5ab8d989fc772a135ae82",
    token0: "0x335b6828e2860abcdd0ef50ba86334ab25fd03ad",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xbba8f85c3ceddf73db4de17d31608d640eaea416",
    token0: "0x25d887ce7a35172c62febfd67a1856f20faebb00",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x298accd14a6c4e004feeb2163680490bf1121a24",
    token0: "0x75ca521892de7f2ecfb070cab545c250d0ceb7e3",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xe080ef77ed59e110f8402aea1db41218e5b86722",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xeb880acb83c63ea3eab4baae9693dc5dd9d324a3"
  },
  {
    feeTier: "10000",
    id: "0x42790e074fed7e6d472d5aba5eb07fef528aa8bd",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xfb9c339b4bace4fe63ccc1dd9a3c3c531441d5fe"
  },
  {
    feeTier: "10000",
    id: "0xb297d74cbe67ba9a0fa92862c31e501228e8b00b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7ddc52c4de30e94be3a6a0a2b259b2850f421989"
  },
  {
    feeTier: "2500",
    id: "0x03a253627c3399fb78b89a22a12136ce1f36a18a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc2098a8938119a52b1f7661893c0153a6cb116d5"
  },
  {
    feeTier: "100",
    id: "0x032ab4727d496b15ecbaca2b5b26f512e4ff7569",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xde3ab7aa2964fa7e2e45321dc0ee613e854623fc"
  },
  {
    feeTier: "10000",
    id: "0x123a51522fdeb0ba547689f67e4beff2d19541b3",
    token0: "0xa5957e0e2565dc93880da7be32abcbdf55788888",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x236f12c74d8646892c91f77bbef4d45761fc9410",
    token0: "0x353db403271057188e6353651112d7b6bc7cc57e",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xe9315c49a23faad9b9131b3cfa20cf5763e80c58",
    token0: "0x5cd8778345950d339ae088d7fc2db9b20c367316",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x5e52bcd87db2c6aae7d075e24b054f25aefdf4bc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfba2863727e2bafa39687d01fb2eefbe4e6e1d5a"
  },
  {
    feeTier: "2500",
    id: "0xd10612a288bd5024db6a47663750996d176130fe",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8b1f4432f943c465a973fedc6d7aa50fc96f1f65"
  },
  {
    feeTier: "10000",
    id: "0x9a5936bab8f9ae1d89da5fa95c484f7ad597c8c0",
    token0: "0x5cc5e64ab764a0f1e97f23984e20fd4528356a6a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x8034a852035826fd50919824b254527a3f88041b",
    token0: "0x0f5a89029342c88133c63c4e092a985160c5c5e6",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x275970f51c6c4f30a9bc36cc9d49303789a34a3e",
    token0: "0x8c8891f3eabc17a8e056604185efad642407bf0f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xd0e226f674bbf064f54ab47f42473ff80db98cba",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xc7d4d8b8d88e70d0b91aa74a231af8fbdf8d2cb4",
    token0: "0xad29abb318791d579433d831ed122afeaf29dcfe",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x5d57b92797774f278420e9ae6e23a1a22d6e8232",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfceb31a79f71ac9cbdcf853519c1b12d379edc46"
  },
  {
    feeTier: "10000",
    id: "0xdcff8de46a9bc48eaf65aa59ad404074c13e48b8",
    token0: "0x4c3145cb6285eb269c37685e05ff8c6684a70ec7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xd9d0aed9822e3d7c67b9c13a18de070f86cdf2e5",
    token0: "0x23ce9e926048273ef83be0a3a8ba9cb6d45cd978",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x86384e39ffb9384d42a2886b089f4dc518909daf",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "500",
    id: "0x81723d4817f770eb59451f8ae7251f445c6d29b0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcc42724c6683b7e57334c4e856f4c9965ed682bd"
  },
  {
    feeTier: "10000",
    id: "0x2d33e5548cccc8dfc65462588a1313ee44b54a4d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe3d286a1c777538daf75a536493f2b87ec3c4c8a"
  },
  {
    feeTier: "500",
    id: "0x7112db764b21e0186e8fe5511e3c4bef9a0c05f9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9a5350edf28c1f93bb36d6e94b5c425fde8e222d"
  },
  {
    feeTier: "10000",
    id: "0xd092da15fabde59bb532fb4f96ae236f861c74cd",
    token0: "0x4518231a8fdf6ac553b9bbd51bbb86825b583263",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x6497df49fe26489709e198793fed518fbcbb5dd8",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xceb24c99579e6140517d59c8dd4f5b36d84ed6de"
  },
  {
    feeTier: "10000",
    id: "0x0cd5057ab5b35ccea2a8c2e786c7b2fd340672ae",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xad86d0e9764ba90ddd68747d64bffbd79879a238"
  },
  {
    feeTier: "2500",
    id: "0xa9576a53ec0e2f2e3a45ce38852a6a0f21c49239",
    token0: "0x510ca7d22a84599e7d0f15f09e674056a6255389",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xb3bdb16e45fa2ff65f18d212f11968082f801514",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x605a1c214172fa504309b2af2600fe5307567b3d"
  },
  {
    feeTier: "2500",
    id: "0x97e5d882b63ece6c622b3df8ac1430c90b9a1eb4",
    token0: "0x73fbd93bfda83b111ddc092aa3a4ca77fd30d380",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x2393d8ccd89e01f89e9a8964458cd5e4cfc1de23",
    token0: "0xb10cb07ca2cdac77fbb5707f6690301f9d036f45",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xbde45f8a81fec2054aac34c7270a5a25dc194420",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb93ee4522c44ef4cd7ee8c83b9fe1a421b4b42c3"
  },
  {
    feeTier: "100",
    id: "0x5c9c0920e5f37856ac44810154f77e99dd2b5d41",
    token0: "0x2940566eb50f15129238f4dc599adc4f742d7d8e",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x4c34a3fec94678989edc06a3df8304e5e1a0c6f5",
    token0: "0x45435ce62fe8b1577a5ba0deb3e1deefca704d64",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x635c26c473bb0686d403247477cc648a7c6edc2e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf9cec8d50f6c8ad3fb6dccec577e05aa32b224fe"
  },
  {
    feeTier: "2500",
    id: "0xcc547541d371d9d8bc0e9568096f03fd164e0e1e",
    token0: "0x15d1dafbcc97f606bd02120d170fdac33b1a4a86",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x8066be190a9b53834479f08552c7e6780338bc3d",
    token0: "0x156ab3346823b651294766e23e6cf87254d68962",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x39d8ede022a675641a94a3944d848515b381497d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6887d10d11daa2365a1c0699334eaaf67f41a1b0"
  },
  {
    feeTier: "10000",
    id: "0x841488f74ccf0aff0b97f756c43961a195fe0abf",
    token0: "0x89af13a10b32f1b2f8d1588f93027f69b6f4e27e",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x06ead6904a6a93d5becb32a198405576684e02a9",
    token0: "0x083dcb9df5453bb81f73dd9df5fa81b128035a29",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x92fb8463ac6bc0f700b20cd67cdee7c753947f66",
    token0: "0x51e72dd1f2628295cc2ef931cb64fdbdc3a0c599",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xba0aa85c33f3badaf7947ce93c612677127bb8d6",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x7083609fce4d1d8dc0c979aab8c869ea2c873402"
  },
  {
    feeTier: "2500",
    id: "0xa867e2109b513c9c8bd781ead298582dff311aed",
    token0: "0x4507cef57c46789ef8d1a19ea45f4216bae2b528",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x8aff21d7e5a08e303429c3f732326c4567fe6444",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf48f91df403976060cc05dbbf8a0901b09fdefd4"
  },
  {
    feeTier: "10000",
    id: "0x18c5affa481e7edbf37405ade553827d6387899f",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x262797ac88edfd5ae406bfceb4a4de7b254684ff",
    token0: "0x8b1869f79b9abf52001314a2e6990a96f039058d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x4fed140205a9b2ccb798db66893707370fac339d",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xedef1f9ebd79e5057cf82b60fddcc7594a7615a7"
  },
  {
    feeTier: "10000",
    id: "0x7906b9a3a4781538db89da3dd64cb0e4fb1530b9",
    token0: "0x4595ae1eaecbd4cffc5e5cc7754bbeb12fa5a2a2",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x6999b88c26552bd1180bf46750db2cd53a3e137b",
    token0: "0x735c522c20305d868f2c14654b878950f820dc50",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x974b9854e85ea87aa8f1820e62065883c1790ddb",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc14a7747cfec02cfea62e72bb93538de6b2078e6"
  },
  {
    feeTier: "10000",
    id: "0xa51da87491f9bcd649ef8f89d07e07526a659509",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7f9ad7a5854658d984924e868187b2135514fb88"
  },
  {
    feeTier: "10000",
    id: "0x04900052f39bea3bab9849fa9d0b19e97694b3d7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf3e5cc435bd2c13cc40894f97bdfdf5fb29ffc26"
  },
  {
    feeTier: "10000",
    id: "0x0c97017fa9d2436dd582321a4e77d160a7cb3c54",
    token0: "0x11cd72f7a4b699c67f225ca8abb20bc9f8db90c7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x1401ff943d08a7e098328c1d3a9d388923b115d2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x18b9a211b6bb1ed6b0f1da36d0cbe2a2201b9a25",
    token0: "0x3ade350e05f631f946b6d2b1a2deaaf95dcb243a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xfdb8c5ff3121048b98330a96738aa1740daa7754",
    token0: "0x1f6ba0e8db204b9b7762ddcbcd6d3941f8e405cf",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x56c23262de8138ab33e31734d8e7ac7aded03367",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe29142e14e52bdfbb8108076f66f49661f10ec10"
  },
  {
    feeTier: "2500",
    id: "0xe6e6f792b47e3d937466313742fe3f625bf79dd4",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf2ba89a6f9670459ed5aeefbd8db52be912228b8"
  },
  {
    feeTier: "100",
    id: "0x238efed22c3f31e5f204f743e1cf07ef5e5d8add",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xefc815196e33f30c5ce42b9d7418688fe33f31a9"
  },
  {
    feeTier: "100",
    id: "0xc3078139ebbbc64a649048ffc25e7af2711b1787",
    token0: "0x495354b53fc856c55da044f4329ca19167438f5d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xee36eac5f95ad4165f2d3203f887438aa0d3e80a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8839adcd26fdd3645f9c1d016f01f6d331c48767"
  },
  {
    feeTier: "2500",
    id: "0x342d717b9f80a99b4d8fdd97a495106c11ab258b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdcf0929aa20077c7ff96da0cd91ab5183c29abdd"
  },
  {
    feeTier: "2500",
    id: "0x662c8e77af8b9af75997de780b31bd649e12afc4",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe02df9e3e622debdd69fb838bb799e3f168902c5"
  },
  {
    feeTier: "10000",
    id: "0x674c7c506c984093aacba42bab3dc08aa61289e1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6d106c0b8d2f47c5465bdbd58d1be253762cbbc1"
  },
  {
    feeTier: "10000",
    id: "0x6cd061334aafee6cdd5bc5c958e71f769d7ca8cc",
    token0: "0x9ec02756a559700d8d9e79ece56809f7bcc5dc27",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x04c6e287dc40b2ccbac5c630e23e6489f582e197",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xccb39e9566fdec731feb4be50706e975078cd173"
  },
  {
    feeTier: "10000",
    id: "0xd7efcd3a6f56d91eccde4412d702d9c4fb069672",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbaea9aba1454df334943951d51116ae342eab255"
  },
  {
    feeTier: "100",
    id: "0x39a163a1afabf643e38970c7e0085fc2e38ebbec",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd9eea06e2220a0e4af7ceb0f4628c3809a5025c7"
  },
  {
    feeTier: "2500",
    id: "0x7ae18d71d0ea77596e07d8e6094d9be8370ee6cf",
    token0: "0x4507cef57c46789ef8d1a19ea45f4216bae2b528",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x6b6e9d8c1d5523f8aaf33f0b2f0186686fdb261c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc5a05951f995cf19b7407820efeb618bf590d27a"
  },
  {
    feeTier: "100",
    id: "0x0314850b4f776aa8522bcd0bcc13993ac1ba835b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe632000238abd0c7c95c116c47bbcc036ecd98ee"
  },
  {
    feeTier: "10000",
    id: "0x446eb6c90c4ed4b49d03ce4c22cc3e1e64029487",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbe2b6c5e31f292009f495ddbda88e28391c9815e"
  },
  {
    feeTier: "10000",
    id: "0x23260d883417dc8a8534b9c6e9d04248fe021f05",
    token0: "0x5137f2503ce2774b0e52c7e6fbd7f39261a88888",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x01390a5d2165b15ec91ab5270a5f81aab8bd4c5d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfead2aaa2ed08d0725eca0b2768d2d0bc794a419"
  },
  {
    feeTier: "2500",
    id: "0x846bd025527c8427809e11d0b0a9ce50f149d5d5",
    token0: "0x14778860e937f509e651192a90589de711fb88a9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x81a9f793c74be15cf65685270f21e2f7b31b00cf",
    token0: "0x58b26c9b2d32df1d0e505bcca2d776698c9be6b6",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x5f7c377bc2770ec258bfbcc992f90fe01990bbb8",
    token0: "0x57db6e13b2ad1fcdecd127d5905cf4cd36ab864b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x1625f94b9185c028733e3eb41c8203b6b8a11729",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x66e9acba7c3a82c8ee02faf3e325dd55d6581a8c",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xcfb06e40ff0e4007c77ce75f292d388beedf60f9",
    token0: "0x0bd74a50f0309bc11158c4af11c20e5fda5e43da",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xe5452999375b0f6957bbb77547373d3ec4e9860a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5e2689412fae5c29bd575fbe1d5c1cd1e0622a8f"
  },
  {
    feeTier: "500",
    id: "0x8dd7c0bd568bf519b17d49fffd91aa464fb0a958",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xe9d7023f2132d55cbd4ee1f78273cb7a3e74f10a"
  },
  {
    feeTier: "2500",
    id: "0x61b1e265ab333d7b5f913c2403b2335cfb45f081",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe9d7023f2132d55cbd4ee1f78273cb7a3e74f10a"
  },
  {
    feeTier: "500",
    id: "0xe8cd56d758e60c48d501568ebb41307c42445b9a",
    token0: "0x467eaebadb8e24f7b4747b70a58de8b84da494e4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x413e3a972c76ab474123b2ab5120fce9f7598338",
    token0: "0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x2570978d1e0b960db4bc2ecba636635e0bae3fe6",
    token0: "0x22514ffb0d7232a56f0c24090e7b68f179faa940",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9a720e36de144796490d3e47c8e9efb0394bf565",
    token0: "0x1f926b439fae4595e5951029d47616feca401b77",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x90f1b2df8f1baa2853f9d4f98144d6f3425a2d1b",
    token0: "0x05675c77ddf19d2e139f7a34164746c3bf32a2f1",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x2a84ea7fbb48edbc9e55de8c827cfb0ab5334fdd",
    token0: "0x74d45cc9af8e4e9f967ad923a8878044e5e96c0d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xbc42221825d19d78a4838e042802ac66f8e43316",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf4a00b788ee6d063559c5982ea9dc405fd9fff63"
  },
  {
    feeTier: "2500",
    id: "0x26db6ab80ef5383abb16dd1fa2fd875d87d9b92e",
    token0: "0x50c34995a273075a80c23625f69f40d56ce414de",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xde302d7a9b62953fc1b78758c613dd479fa3f556",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5c999e15b71de2bb8e651f0f999fb0bc321a0dfe"
  },
  {
    feeTier: "10000",
    id: "0x9a5ee02f87199b1a8e8d6b5b60a2c0edc4be28ee",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x9f882567a62a5560d147d64871776eea72df41d3"
  },
  {
    feeTier: "2500",
    id: "0xb5d57c32ea2d700f7d4c2de57a6f08262402fd80",
    token0: "0xacce237625e4e5ad971d949fd527c89d924cb653",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xf90b551d7d06719111fa987fbf513525c62ae8ec",
    token0: "0x1926554f9dc1c91caf7bdd2196410db4bbbb717d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x8a417f8c64811d7022224fd8806486ae5d1a5fd2",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc732b6586a93b6b7cf5fed3470808bc74998224d"
  },
  {
    feeTier: "500",
    id: "0xd5252f4a3bfc43bfccdc0c98f62257df9fda47fe",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xd8047afecb86e44eff3add991b9f063ed4ca716b"
  },
  {
    feeTier: "10000",
    id: "0x43e798b9c531e397783ab2960f159aa558360a4b",
    token0: "0x9b208b117b2c4f76c1534b6f006b033220a681a4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x86cbfa773cb2dd5a3a9b8cac91f63dfa05b558a9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x76d36d44dc4595e8d2eb3ad745f175eda134284f"
  },
  {
    feeTier: "10000",
    id: "0xe88408bf95f23e38d9286dcc2c3d78c6e30cfbb5",
    token0: "0x4f8b986ecffe7bed5dbeb2b49310fb00ca85a539",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xee2fa78466945200a8dfc1deb0c6ca3338cfa201",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe02df9e3e622debdd69fb838bb799e3f168902c5"
  },
  {
    feeTier: "2500",
    id: "0x1fd43745e142c0c5357963d16987f5386a0cba92",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x67e6cc7af400e1a5f0018feff566f93dc2f95cc2"
  },
  {
    feeTier: "10000",
    id: "0x6c5c6a75384073309208a199819e978b850285e1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x815d5d6a1ee9cc25349769fd197dc739733b1485"
  },
  {
    feeTier: "500",
    id: "0xa589248905a5454f379750facfb0b25c329ec287",
    token0: "0x2297aebd383787a160dd0d9f71508148769342e3",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "10000",
    id: "0xb85e0613af86e364bc03b32081fd0290a40c40a5",
    token0: "0x4ace5cdb2aa47d1b2b8e4c4ca01bf6850a4b87b5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xff35c9b32f7465c4c353e76fb742a2e3e1176a44",
    token0: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x386e7151c247f0231890d520e63093f0f1e9d3dc",
    token0: "0x0085c014256e6cd2dcb76f73937e37a23de075e4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xb4a062f5a461554708b9a7ffe759b3e328cb90a9",
    token0: "0x42dabca1af369fbd9e8ea286dafba45b23fc92d9",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xe8b5d7ce3e845f93b3a66c8610b6f9ef2b2a5bbf",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa40640458fbc27b6eefedea1e9c9e17d4cee7a21"
  },
  {
    feeTier: "10000",
    id: "0x0daacc1ec0251dec752b13ece05d2d3abb23e409",
    token0: "0x101d82428437127bf1608f699cd651e6abf9766e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x1c79d6599a5ff35922b2aed8d2a2eacbc77ebd44",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x96ed7a707d93a56a8d53e42d1c003237dfaa1410",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xeaf0acd7fe39f2ea5ac52b0a8c20d3878082cc36"
  },
  {
    feeTier: "10000",
    id: "0x293d792bb5003b9cce582cf1f58555f540f5dbf1",
    token0: "0xaeb63742f2c7dd1538bbe2285b6789017a06b58b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xa5495b46f39c6e677469c5c980b12e6c7a93a454",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xefa4f2ac6e1f90c5632c36ae1dc3c4fd8ba4693b"
  },
  {
    feeTier: "2500",
    id: "0xc8e872dfe4332318b25a56dc15cc75268068f0cf",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfceb31a79f71ac9cbdcf853519c1b12d379edc46"
  },
  {
    feeTier: "100",
    id: "0x1081c393d97a55fc6f622041e4f9dd6a2bb61d43",
    token0: "0x219ec76b9ae42f6beebd05d079d166da38d3e61a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x8382ea4dc2844ca0538236088cb878060ef301a2",
    token0: "0x2dc917b722184ece1dcb9bb9dddfb1d63ccd25eb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x22d763e36d3e60b8146516fa9f2a045e374b5cac",
    token0: "0x1a651fcdc5a3ab2b60efc0602557b6d926c13755",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xb4690c173c7374b20d0a5e105e01841154809c66",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x766afcf83fd5eaf884b3d529b432ca27a6d84617"
  },
  {
    feeTier: "100",
    id: "0x803036ac78752ef599ec75c500ac8b0ac0be67df",
    token0: "0x4268b8f0b87b6eae5d897996e6b845ddbd99adf3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x0ad972803df5a1ee2b89587960970f3232565e9c",
    token0: "0x50e6c37ca59488701b05c1f3dfa0ff07de5f4b98",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xfc30d8faebada2626c9e9f6a4e4af8fb2e5240ac",
    token0: "0x4636d73f536f2c28a33b5c758e731c512a6ca323",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x991c215e8f23ef03180a253cc96855544b411440",
    token0: "0xc51c05b7ea1147a9c846136a6f64358db4d6548e",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xf208cab305b70f43a2ba44c9b38c3e66736e2839",
    token0: "0x382cefb55d3e06c1be985c599d55f0393ee5e6a3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xd3ef1ad12fb8970b218705bab9aa79aa17c2c8a1",
    token0: "0x29c55f1b02a95f0b30e61976835a3eee2359ad92",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xda968fe96b94e99cf9c88a6cc3a65439a2dfd7ed",
    token0: "0x19a00e359990ec7daf6e9dd9a2fb7664014bb5f7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x11aaebfee250cb201f4da3b8a34c715f57e7d32a",
    token0: "0x22b4fa9a13a0d303ad258ee6d62a6ac60364b0c9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x4682ef4fe86cec08bb5eb4a00c607fa6144764f5",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbd7b8e4de08d9b01938f7ff2058f110ee1e0e8d4"
  },
  {
    feeTier: "500",
    id: "0x76a8a696ea7db2424358010a9c9af5a9bc887cba",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5e57f24415f37c7d304e85df9b4c36bc08789794"
  },
  {
    feeTier: "10000",
    id: "0x7d633fc97698716d391256cc0235c5f576cefbd7",
    token0: "0x4803ac6b79f9582f69c4fa23c72cb76dd1e46d8d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xa590cfccbdfb508fe6faa33cc243672f09fac06a",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe308278c69d55adda9c4ef9dffae54a351f1ccab"
  },
  {
    feeTier: "10000",
    id: "0x34957d3c6635390aaf798df5eaac7d4aec93bb43",
    token0: "0x0aa086e7a108d387de63294fe2a88b05820a9855",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xcc8077d2bcf55dc9a9afa39032180d1bbdd7bdd9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x89eb16377f3d10d39b23df7c02ae94ac3a81d389"
  },
  {
    feeTier: "100",
    id: "0x8412da9125820e151fadc844ebeba0da14720d3e",
    token0: "0x11fea412f4cad3baaaceddac44d73abaf0dd4485",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xc9d5c78e3d54a9019548ad02599d231d922cd68f",
    token0: "0x2c8d970d7c8c878db422c4bcd7d2542104ecfa2c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x58aafe0758aaa41564cbb7f5d4f6f7acbfec891b",
    token0: "0x4e89d67d88dba3c42a8c37e1991c192384c75625",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xaff57e7d4fb716230a7e4a884e31bee1faf5ebff",
    token0: "0xa4838122c683f732289805fc3c207febd55babdd",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xbcda4fa6b66737c328130464e87f266775b117f0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x843d4a358471547f51534e3e51fae91cb4dc3f28"
  },
  {
    feeTier: "500",
    id: "0x3db5e175cef262394a97555c66b47f45af8ff5ed",
    token0: "0x48a8ba1754fe84e2f9dfa97982e524f18e5b4bd3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x591527b5daa56284ec5128898b8905b50afa9795",
    token0: "0x62823659d09f9f9d2222058878f89437425eb261",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x2702f90d2318a82e637dce7e2bfac7cc097e88f3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5c4bcc4dbaeabc7659f6435bce4e659314ebad87"
  },
  {
    feeTier: "10000",
    id: "0x8cf03d0e8ac29a76385303d829d622ee4e0b75f5",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdc8c8221b8e27dfda87a6d56dc5899a65087b6f4"
  },
  {
    feeTier: "2500",
    id: "0x23bb1f255641b1837bfcad7d55a52e5922a79ef3",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xffff132b6b3010bfa7e9e16631bb3942bdd94461"
  },
  {
    feeTier: "2500",
    id: "0x098a8fb6e2996bfe4f2c24fd6c73bea796aefeb8",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbaea9aba1454df334943951d51116ae342eab255"
  },
  {
    feeTier: "2500",
    id: "0x005f2c697d6fdc180b81829b280fb8f3eb7fa865",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x705ca67c29fad9f5afa5d086c66e6c9f96602a09"
  },
  {
    feeTier: "2500",
    id: "0x5d68bfc76e9dc614654ecdfde112e2b9588d5096",
    token0: "0x13a637026df26f846d55acc52775377717345c06",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x0ee19d61f457e5dc6dcbb86c9c20ae5cbf9c22cf",
    token0: "0x0323cae0318c1686b7c69272ef5d006146096812",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xf895b4286ef8769d92c62fc0302e3048fec01ae6",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbe8868d6d8bf0021af801f931bcf9105add6fbed"
  },
  {
    feeTier: "2500",
    id: "0xb785a2bda64bc3e66f959d33ce59c22112529309",
    token0: "0x30842a9c941d9de3af582c41ad12b11d776ba69e",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x248cfcc5d93eab00aea11f7781916815b3c68d11",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf7de7e8a6bd59ed41a4b5fe50278b3b7f31384df"
  },
  {
    feeTier: "2500",
    id: "0x86822663969b21ce8b3fc37ebf6eed265dc11d18",
    token0: "0x965f527d9159dce6288a2219db51fc6eef120dd1",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x9ba93f4ff8632fb186c4cf61f483cbf88cab0478",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x82544454c88f6ac8b4ae50361c4db950fbcfac66"
  },
  {
    feeTier: "100",
    id: "0x99fe6154f45fd2c3d403f621735a688cb5de4058",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x66207e39bb77e6b99aab56795c7c340c08520d83"
  },
  {
    feeTier: "100",
    id: "0x782d4b015ff0272bf37c397bde05adee278fd8e7",
    token0: "0x311fafa4649583f0add8f7b3130cc139b84dbb06",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xa612a531038aface5b5a28e2653e2d7c21c2f80e",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8"
  },
  {
    feeTier: "2500",
    id: "0x57f98f90c33652e31d727047c3378293c9782c45",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x69bfa36d50d92e8985d27e6aa6e685c0325ce7b4"
  },
  {
    feeTier: "500",
    id: "0x355ab94f3e44a19b073d9858f316245c6dc33aa5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5715a750f155c958bb5bafe1336826a4dd6a83cb"
  },
  {
    feeTier: "500",
    id: "0x7eb6b5ab4a075071e339e09d4f665a91b6007745",
    token0: "0x12bb890508c125661e03b09ec06e404bc9289040",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xd8cf0de0387a9c16acf53384c89632678d77f311",
    token0: "0x52242cbab41e290e9e17ccc50cc437bb60020a9d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x525d0aeb8dd8a4a0313447dd46a5ff16b7965de4",
    token0: "0x47c454ca6be2f6def6f32b638c80f91c9c3c5949",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xfb9dd206945b0cb931184bf367b21c4271cf0c73",
    token0: "0x05675c77ddf19d2e139f7a34164746c3bf32a2f1",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x9caf3e2e34df9bbc520b3f3373d26aa78c770032",
    token0: "0x2d27ce2c1b19c0fb72422053bea69e333269bf04",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x55fe55677e8398ef5c92f01b780403c9a771a1c0",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x6cf4bf18f5afdc39aedeed65f35b22f761135670",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xec86b3f01671147ed9a2066d2e51afa9906cae37"
  },
  {
    feeTier: "500",
    id: "0xf100c2b62912ba9d2fc989ad73b1ba5c1505429d",
    token0: "0x2936564a325f394931fea526b55c725601bc9055",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x46a804d0d300d3e5b1af66bcbd99f4ad8d406673",
    token0: "0x21015b5607a4445fe45f041cae413f3292c5cf6e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x7dc9aa7abbd29be30cbee739dd4638522987e811",
    token0: "0x143d7a700a533b4baf6d693449b278a8a2f5927d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x6dba30870bc46bd6d2289e1827cc415f6fa23e1a",
    token0: "0x44ec807ce2f4a6f2737a92e985f318d035883e47",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x3a1946d87334f8af958c889b8950ec3c0dd44633",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf585b5b4f22816baf7629aea55b701662630397b"
  },
  {
    feeTier: "10000",
    id: "0xb8b68bfa48e2f6f9ebf2d110289ef5fa269c52cc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd21d29b38374528675c34936bf7d5dd693d2a577"
  },
  {
    feeTier: "2500",
    id: "0x6de16f5edad1f43b2b4043cc8a50f876bba7c613",
    token0: "0x0e7779e698052f8fe56c415c3818fcf89de9ac6d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd52ed638dde3622c7d85e8cc4e135a4b9297a5ad",
    token0: "0x63436d8a6ae90943cf09eb589cc815f645c14bb4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xf2b438694e2dd17a24c970435460de58b5785cfd",
    token0: "0x0000028a2eb8346cd5c0267856ab7594b7a55308",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x925340887cba5c24ab96873b6b74ebeed268a12c",
    token0: "0x128f397237b6489de867c4d4e749689e284d58a4",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xb58a9609187a2d8900fdd6159492c781e03c89fb",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x87266413e5b64db72f11bb6795ee976545dbaf43"
  },
  {
    feeTier: "10000",
    id: "0xfcafaab2e9491a9f8e6e6b64c7d5dfe50be2ca0b",
    token0: "0x6d57f5c286e04850c2c085350f2e60aaa7b7c15b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x72a69db367ae0ff529daef7350011a2b607b6529",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0x8f0528ce5ef7b51152a59745befdd91d97091d2f"
  },
  {
    feeTier: "500",
    id: "0x81a9b5f18179ce2bf8f001b8a634db80771f1824",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x7e4259eaac5ca2bc855c728e162d4d7782e52b7b",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xec9742f992acc615c4252060d896c845ca8fc086"
  },
  {
    feeTier: "100",
    id: "0x87bd81393efa40d0341e2073f086ab03d62215fc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5af7e16aaf80ff4122f6964b09be5f4b5507b415"
  },
  {
    feeTier: "2500",
    id: "0x45decf9d9b07e3536d5e64fa80a09b3f03334d6b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x610547fb5e781c98ce52b62f9ace4e1526385311"
  },
  {
    feeTier: "500",
    id: "0x642cd70834713f5c8f311fa5da0af6131aaac0fc",
    token0: "0x9b83cdd4834ab6f4b892e7b668248ca6659a7a9f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x642089a5da2512db761d325a868882ece6e387f5",
    token0: "0x3419875b4d3bca7f3fdda2db7a476a79fd31b4fe",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xfc26fe66458538205e83c846fdfcdc2189511d3b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x591aa8039414f5fbc713913ecadb21e8e6d14913"
  },
  {
    feeTier: "2500",
    id: "0xc8d3cef6f91cdc3d737f96109991d463614b90d5",
    token0: "0x03aa6298f1370642642415edc0db8b957783e8d6",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0x57dbe41582591e8a420cc80fb669f953d137a571",
    token0: "0x38e382f74dfb84608f3c1f10187f6bef5951de93",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xe01c9cbae3289d486ee80c0e0749855a186a6454",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x734d66f635523d7ddb7d2373c128333da313041b"
  },
  {
    feeTier: "10000",
    id: "0xad8e1ea1bd459d231ac134087609f481d2fa3a2b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x991b4ce57864060115700d6fc05c7780346a15ac"
  },
  {
    feeTier: "10000",
    id: "0xc7c78f4eb03db672d379e96e9fcf89a6ff0eb8f2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfb5b838b6cfeedc2873ab27866079ac55363d37e"
  },
  {
    feeTier: "500",
    id: "0x16d7c51e9c59be9f18b19b608d53b37fa9890b8a",
    token0: "0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9a75d27ee753297be8655deaba58d1b55d1af53d",
    token0: "0x27d72484f1910f5d0226afa4e03742c9cd2b297a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb3530a9de8441419e06fe5355c0794da13da7a92",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x6985884c4392d348587b19cb9eaaf157f13271cd"
  },
  {
    feeTier: "10000",
    id: "0x5815d5f9688d7476fc4db9c6be2a4089db168e1a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x772b609d3a8f2ebe1c1b8f87ebda2e462ec475f8"
  },
  {
    feeTier: "10000",
    id: "0x96e55d2d53b79d636166b23103552253e23b699e",
    token0: "0x1633b7157e7638c4d6593436111bf125ee74703f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x1437a1f1112e1c342c24e83194a4b2ed06c15794",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6985884c4392d348587b19cb9eaaf157f13271cd"
  },
  {
    feeTier: "10000",
    id: "0x68363f76195328dddc3f21bbfbf6fbcba2bbbdc3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7552742dfccc8d0b13463ec93d259a3d87249a2d"
  },
  {
    feeTier: "2500",
    id: "0x5a3105763b608fe6186c5a9d65f3478626becb1e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc71b5f631354be6853efe9c3ab6b9590f8302e81"
  },
  {
    feeTier: "2500",
    id: "0x505d091fd01b3d4340827a3737c950f030cdd9a7",
    token0: "0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xd9f97e7c4030a77e7f773cec1d80342e07f244d7",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf339e8c294046e6e7ef6ad4f6fa9e202b59b556b"
  },
  {
    feeTier: "500",
    id: "0xa0b149bf04ddd1042619cf911a18210509ddd871",
    token0: "0x32f1518baace69e85b9e5ff844ebd617c52573ac",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xc47172b8e5a1cb563373b97681364a452c4e20b8",
    token0: "0x193f4a4a6ea24102f49b931deeeb931f6e32405d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x1e15693ad2bfefab832b4cdeaa44613494d256ed",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6c6d604d3f07abe287c1a3df0281e999a83495c0"
  },
  {
    feeTier: "10000",
    id: "0xbe9cbde3ee6a52a3f347df11c01d7453363c3134",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa177bdd433aea3702beb46652adcfc64248d4ab3"
  },
  {
    feeTier: "100",
    id: "0x9c8c3b05fcf5cb0a937e1d6e24eeba1bcda60e9a",
    token0: "0x258b1eb611a0c66540eebd1f9fc5a7d056e395fe",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x35d3dcd46fed6b81e22f49819305fa3d9db2136b",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfa54ff1a158b5189ebba6ae130ced6bbd3aea76e"
  },
  {
    feeTier: "500",
    id: "0x6db3aa984e5dc3e73abf526da04db4a7d3f24e84",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc8daa981b49f045c524596791bc844df59cb709f"
  },
  {
    feeTier: "10000",
    id: "0xca50a353202a9340531b945aedd0433026d55b69",
    token0: "0x27f16d9a5095b763baeadd7dd78e83288af29cf4",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xf94a160d0bd3735e77c5e1c459ae7737d3507a40",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb4357054c3da8d46ed642383f03139ac7f090343"
  },
  {
    feeTier: "2500",
    id: "0x97ae24ecf15f0429a5eea4976fbf40e7f2083c7e",
    token0: "0xaaa9214f675316182eaa21c85f0ca99160cc3aaa",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x39125eed2ea0b316ea8169de17eee48592276323",
    token0: "0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xbd186e7b935a5aa7621e0e101f6244eab09e9e07",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xa0a2ee912caf7921eaabc866c6ef6fec8f7e90a4"
  },
  {
    feeTier: "2500",
    id: "0x30d6bd6f6626f87ee5fb9372c239e7cc5184cca2",
    token0: "0x8291e5de10efe916fad377ccd0af574caf392692",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x004a335932d50f666011935677d96a366af3eae2",
    token0: "0x4536819095a8969c94362ba130ee0bb1cda714cb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x7034e45bf354f36e03db89c360592fc4c51c3b08",
    token0: "0x678e840c640f619e17848045d23072844224dd37",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd38bd0440cc6c6363f1ff3f4441eac3b3ba8cf8b",
    token0: "0x00ad418ca33dc9c49592357086b88a939b293bb5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x1419a8941d11b4a98a1d2c253177f1635bc226e1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7e9808c731ce79b2dfc18b88e3baad3d115db102"
  },
  {
    feeTier: "500",
    id: "0x379044e32f5a162233e82de19da852255d0951b8",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xa2e3356610840701bdf5611a53974510ae27e2e1"
  },
  {
    feeTier: "2500",
    id: "0x320ae2f4e2144a11ac4ab2286eb207be55879423",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x936b6659ad0c1b244ba8efe639092acae30dc8d6"
  },
  {
    feeTier: "10000",
    id: "0x376827cef8ceb72e5aa47f0288a278dd08db82f2",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x62823659d09f9f9d2222058878f89437425eb261"
  },
  {
    feeTier: "2500",
    id: "0xf95d86abc7ac48477ec06dcca8fd8a68bfb19a0b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcf1b55d79e824da0ae0652f96c66fe33263d743f"
  },
  {
    feeTier: "100",
    id: "0xf3f045734199029d76e66b37ac85e1d3a4928d4a",
    token0: "0x4cd6aff304711810c48233908bdc94aff7d2d66f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xa3732d7de9aba3b4565db15598b0645d46703a63",
    token0: "0x36530092b1413c21ab7e5203197cf76d4d598888",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x9350724a7c23cc1d82af0293f205a4e1f900a088",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe9d7023f2132d55cbd4ee1f78273cb7a3e74f10a"
  },
  {
    feeTier: "10000",
    id: "0x2d272d0ae2fdd6ded99cc5a5bcaa03eaeaa8e51d",
    token0: "0xb962150760f9a3bb00e3e9cf48297ee20ada4a33",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x5a1fe6d5026cc3736cfb7316dbcfbf63d82cc789",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf95a5532d67c944dfa7eddd2f8c358fe0dc7fac2"
  },
  {
    feeTier: "10000",
    id: "0xb373b13e1b8b8c657c19362368f8e19f4a481b29",
    token0: "0x045c4324039da91c52c55df5d785385aab073dcf",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "2500",
    id: "0xa96f927c2906c5084fb4c3e1dc4f4ea40a2e7493",
    token0: "0x2019941099e3e2c536c8a91c5e57a33ab0f9d9db",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x1de2a3dfebd6f56247b4b403fdb47fada086aa90",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc4a1e7106d08b7ff947254b6d75cf2b877d55daf"
  },
  {
    feeTier: "10000",
    id: "0xf2e1eb5b1a421897a1cedb62a297808bc6c960d4",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd"
  },
  {
    feeTier: "500",
    id: "0x6a772d697ae98bd437eba13072e59b7c4a68d491",
    token0: "0x57db6e13b2ad1fcdecd127d5905cf4cd36ab864b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xf73a258620ca089dd3b96dc16bb0451fa83e656a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6743665257c429605aa344ed04dff7a183a50296"
  },
  {
    feeTier: "100",
    id: "0x5937190611d9c096279fc2bcc2453970ce015c2b",
    token0: "0x2c95a2a76d58c4f8b790d4b3d272a10b85bbd637",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x2f7164314f9bf62eb7b78a3f59c076504efef503",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xebd3619642d78f0c98c84f6fa9a678653fb5a99b"
  },
  {
    feeTier: "500",
    id: "0x46e5473b11e9890e8b94ac56ce51c7a0b2027953",
    token0: "0x9377e3c3180dddfcda4e4217ed21f2f7c3b235a0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x3f6b51501b03aec93a39786f7bbf8a528b48c73d",
    token0: "0x352cb5e19b12fc216548a2677bd0fce83bae434b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x2cbfa271cce515fed6e49b406df4a77ec952a952",
    token0: "0x031b41e504677879370e9dbcf937283a8691fa7f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x69b8c774bf2de33bd5ab0c1cd8633f4255d39141",
    token0: "0x0cbd6fadcf8096cc9a43d90b45f65826102e3ece",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "500",
    id: "0x5a529e7b694696063acf2364b7f37a08a96bcde2",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xf9c4ff105803a77ecb5dae300871ad76c2794fa4"
  },
  {
    feeTier: "10000",
    id: "0xa7722baa8b28eb6955907abd0ed40cad74529020",
    token0: "0xa2c17a6fd0afe27afa2630a7528bc673089e6b8d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x49510a335273347d04b87d36405eac3d4a7c766d",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e"
  },
  {
    feeTier: "10000",
    id: "0x325e38cdbe081aee5fbfd978d38d4fc22a8de18e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcbfb0d98151d03ef8bb71fa668f57df5e3fb4673"
  },
  {
    feeTier: "2500",
    id: "0xc6dddcf94e53f8997dab999a32a3aa8fd3f7f106",
    token0: "0x2bf83d080d8bc4715984e75e5b3d149805d11751",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x260468ecda64a186b9cefae3fefbf077e41f525a",
    token0: "0x070a08beef8d36734dd67a491202ff35a6a16d97",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x97872d3c97516511d645eeea6e83225f34bd3f32",
    token0: "0x33d08d8c7a168333a85285a68c0042b39fc3741d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x38f5c1c80963c5c6f641ce8260ef29700ad837f0",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xec7fef81e936196a9a77619353fe8b69c81df732"
  },
  {
    feeTier: "2500",
    id: "0xcf7f5081309f73af2d6627b4b8538c2fe6066f18",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe50ac93cc22683a4b6e96bbdc663c4b31cf8674a"
  },
  {
    feeTier: "2500",
    id: "0x916d2fce767453a5db5ad028a14bdddfe8ec22b1",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63"
  },
  {
    feeTier: "500",
    id: "0x4521701299aaad27910874e2be2f513088db86d9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf23c5be290292d9a7dfca0036c58d9578fb192a0"
  },
  {
    feeTier: "2500",
    id: "0xff63994066755f3ea1c37ba3337e417f7ff2cb15",
    token0: "0xb92c5e0135a510a4a3a8803f143d2cb085bbaf73",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf5fc3702a4baed1c3159602e72e060dd34783746",
    token0: "0x80b199fedb89eb5fd6b4efd9f000508ecc76f81c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xbc64365e99422904977b7685dd39bb5c2f9e2589",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9240c44ee90d058b0b17ababe0f74ab1a205ae04"
  },
  {
    feeTier: "2500",
    id: "0x7cb70e4aef02a0ea9575549a55f4f13d754cf39d",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xefdcdbabfe88baed5f8360da6ee10cc191709506"
  },
  {
    feeTier: "10000",
    id: "0xf8c7e9597f15351ed624e689a10a84c700e68f07",
    token0: "0x003144b41d9743d402c5bdf3f72ca0f327aa0bca",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xbe6494e2b4f5a1200afe9f915b52962544c83f65",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x64cf1e2cab86694ac8b31653460faa47a68f59f0"
  },
  {
    feeTier: "2500",
    id: "0xa0f7c418188c7e544d4b412742fcbc61951349d0",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x4db5a66e937a9f4473fa95b1caf1d1e1d62e29ea"
  },
  {
    feeTier: "10000",
    id: "0x0e46906f5c3add43b31d059273e67e443c2fd74b",
    token0: "0x50c34995a273075a80c23625f69f40d56ce414de",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x13f0d0df1f347e7246ba16866d2562bb2b337d0c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa75d9ca2a0a1d547409d82e1b06618ec284a2ced"
  },
  {
    feeTier: "100",
    id: "0x80d2e0dc4b93bcc6f1f4a547bd41132f898a57b0",
    token0: "0x93ab66ae3407158a89ec5cf53d58b8998ff6ff7b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x56f9e6f9353508c465eafb3920b835b7721963e5",
    token0: "0x2b8ee528de0615d8f1de75805dcd1c0b2481c784",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x7ed2706ee529b62157bcb202a92606aee35bca5b",
    token0: "0x21fd16cd0ef24a49d28429921e335bb0c1bfadb3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xf11c361f189385010b61b5f13aba4cbbf33d5b01",
    token0: "0x05dc4a3b3254992f9e10ed9bbe1d1d8b7e122c38",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x65cd15f4223b3258918ff4d0765c33851715253c",
    token0: "0x998305efdc264b9674178899fffbb44a47134a76",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xcf319550ae7d1a518ca89a69e52a176bdaa54a4b",
    token0: "0x1c50013e69efb68575773ba4a48013f1a4a1fb6c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xa493b5ec362169a40d965137fecf7308da217c16",
    token0: "0x9ec02756a559700d8d9e79ece56809f7bcc5dc27",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xdd55684ce97dd62c6285bdb2fdb06d0cc3e4dc72",
    token0: "0x9e1170c12fddd3b00fec42ddf4c942565d9be577",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf3d1742eb1bfcfa9df6e1ae280790083c0477de3",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdb79c12d1d0670988a39b0e48b96e955ef922d24"
  },
  {
    feeTier: "500",
    id: "0x2ff0213221e3c778ad83371014d5fbff129f18ad",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf606bd19b1e61574ed625d9ea96c841d4e247a32"
  },
  {
    feeTier: "500",
    id: "0xb5bf551df2c078890809ad295c91ec5abc23e620",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x2416092f143378750bb29b79ed961ab195cceea5"
  },
  {
    feeTier: "100",
    id: "0x4f3126d5de26413abdcf6948943fb9d0847d9818",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x751926520de494102d02645f4a00be30ee7111ea",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe9c803f48dffe50180bd5b01dc04da939e3445fc"
  },
  {
    feeTier: "2500",
    id: "0xe52e4816441aa56ad585ff14841344319954a941",
    token0: "0x5033b5b12980ce1b270bf3e7376b47f6ad502ebe",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xcd1797acdb6e9c30ebdd72638b927ac5ff462288",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6ba7a8f9063c712c1c8cabc776b1da7126805f3b"
  },
  {
    feeTier: "2500",
    id: "0xa62ac98f6f192d8110efbf301a0e723087a53145",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe2fc7eb28b6ecd68fa015a088ed5d4a95ce1fe3d"
  },
  {
    feeTier: "100",
    id: "0x7304b411a07b550e5ae5e083aa8872f3eaa92e8a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x72b462178d42a7101940654f8629fda2cdd6eb11"
  },
  {
    feeTier: "100",
    id: "0x1a51039c8a83e5db411680213e7f4f93ae829214",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbd7b8e4de08d9b01938f7ff2058f110ee1e0e8d4"
  },
  {
    feeTier: "500",
    id: "0x6bbc40579ad1bbd243895ca0acb086bb6300d636",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x3cd692c485e97b473967d7d5626e2e8d88bb08e3",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf74594a5606eeca8eb5c09933a361f261296d3b7"
  },
  {
    feeTier: "100",
    id: "0xf66a930ed3b004ba16ee11b3a9b142eaf2259b0d",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409"
  },
  {
    feeTier: "500",
    id: "0xe9a94b6a5d6b8c2cebef1b8f504b367fd49e799c",
    token0: "0xb51d09b75193c35c1eb72d5714453a04051a80bc",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xeeec39efc3349c2d013cab33629f9367302d78c7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf44e63caebb71df1b73a033b96edf89cc9cd84ac"
  },
  {
    feeTier: "10000",
    id: "0xcca7901230cceada591d962faa46f6c982f0ced1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x64f291de10ecd36d5f7b64aaebc70943cface28e"
  },
  {
    feeTier: "10000",
    id: "0xb323f5df0b737a8c19d30b30f5ca6423e88ddf8e",
    token0: "0x6d6ba21e4c4b29ca7bfa1c344ba1e35b8dae7205",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf9fd55e48fc9c466509a168ff034e76fd4cd8675",
    token0: "0x50c34995a273075a80c23625f69f40d56ce414de",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x422420123633a2eec8c2eb556632eef98252cb56",
    token0: "0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x97be05692180131a5c747b50f9a21208e1e54021",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7f6ee7e043d12c2de15e9b4bb6bc0921e86361a9"
  },
  {
    feeTier: "10000",
    id: "0xa30feccfa3d2cc5aba50a31c0c8b310af0272d08",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdcf0929aa20077c7ff96da0cd91ab5183c29abdd"
  },
  {
    feeTier: "100",
    id: "0x11bd737757b86c16646313fdf9e86681dd3f065f",
    token0: "0x410a56541bd912f9b60943fcb344f1e3d6f09567",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x0bb8e0b7968b3aab923eebb1e8dbfd4bc4102c10",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf3a587d1ac967b40db59223434baf0c6e11588ea"
  },
  {
    feeTier: "2500",
    id: "0xb2e7da5063caaf0319427eacb1ad602f2767f80c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x776f9987d9deed90eed791cbd824d971fd5ccf09"
  },
  {
    feeTier: "10000",
    id: "0xece4eceb6b7f61cd82fb090e8ec6f6ffd02f37f7",
    token0: "0x0cbd6fadcf8096cc9a43d90b45f65826102e3ece",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "500",
    id: "0xd55960aaf5f512a10bd48ec88af137ca53371d31",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x63b497c731adc1412453c4cffd63f372932740f1"
  },
  {
    feeTier: "10000",
    id: "0x98474f17efc833882a004d9bfce9e5250d10cfc0",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc762043e211571eb34f1ef377e5e8e76914962f9"
  },
  {
    feeTier: "500",
    id: "0x67932682e182bcbafd6b910947e2d6be246e943e",
    token0: "0xab737e248d3c088bdf093e0a28171ce35920f91b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x62cf00528cb7af872c1f9dd426e655c903f16770",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0xad48dae803cbc2d13c72c0de9fdd51c7d84cdb08",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa9d2c420247ae4fe7b694be75d5db10b20fe3ea8"
  },
  {
    feeTier: "100",
    id: "0xcb9ae7c8c599fddbbe1c98469158169cc34c9435",
    token0: "0x5b6bf0c7f989de824677cfbd507d9635965e9cd3",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x503e7bff5c36e2409cabbae9ed6b53c2b24e09f6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8c912fd6fe2b14c1bb1a19f663aa8afe3008c1cd"
  },
  {
    feeTier: "2500",
    id: "0xfdfcde34d2038ebede62e95c65b1492c28c990c9",
    token0: "0x0782b6d8c4551b9760e74c0545a9bcd90bdc41e5",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "10000",
    id: "0x2df6977cc8e28a9f8806ea4ec3de3fe06fafc3ce",
    token0: "0x937c73d59a26058f074428c0a7b1d31bd45f53d0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x8754142abad18dd663de38ba7ee100c5d213639b",
    token0: "0x21fd16cd0ef24a49d28429921e335bb0c1bfadb3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xdae7fced2f94daa73d076044fd5d97c12d8eedf8",
    token0: "0x36c7b164f85d6f775cd128966d5819c7d36feff3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x29e13e65e8e2160dbd391ba3cee55e7dde2a386c",
    token0: "0x477bc8d23c634c154061869478bce96be6045d12",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x671d78d26d72a72b879fc037bb9f28b39e9f5e5d",
    token0: "0x3cea5f4a8dfee9c497b8dcfee862a49073340bb3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xc48a64de1a5fafd7e60963b1a448748f20481d36",
    token0: "0x8626264b6a1b4e920905efd381002aba52ea0eea",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb513024c7a516d68a242d3a716667bb6176b263f",
    token0: "0xb43ac9a81eda5a5b36839d5b6fc65606815361b0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xfdd6b394bc1eb7b1e146006a74b0a2d17baff7cd",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x6be6ac5fd71d7395a1fc875cf34c112177ce3413"
  },
  {
    feeTier: "100",
    id: "0x741145f84f252a83477de2a55c76f7db1365f1ab",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xeb1b4651a9bcc7f5fc2f8ba9e73b70f2e4d8d802"
  },
  {
    feeTier: "10000",
    id: "0xd613dc04519642ca15bf28417812a107ddbc86cf",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xa6f5de3c9ccb9768091c57fff2c67efa7cd09d34"
  },
  {
    feeTier: "500",
    id: "0x410d3425b4bf2e96147828f5818234a6365af62a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb2d9683364da90ab057215d55192520200888888"
  },
  {
    feeTier: "10000",
    id: "0x62185214c993257b775377a94c8ee0bb1686b807",
    token0: "0x7f9ad7a5854658d984924e868187b2135514fb88",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x1f3b55f85fdabe5f21d9021525e7ee715f545a6c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xad88cc97f6c175c39a391e57469e332e5a2bde75"
  },
  {
    feeTier: "10000",
    id: "0xa51056304287718f9514ec59ec60f27677ffafc9",
    token0: "0xb1a1d06d42a43a8fcfdc7fdcd744f7ef03e8ad1a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9c2d50b3662a1a8f9aef94dde3b509a236a62858",
    token0: "0xdda8d1fd0d42f2cb43f625e6d3f13eb2cdef983f",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0xf12e5ef59fabd70b228624a80c130e276ef66a15",
    token0: "0xac51066d7bec65dc4589368da368b212745d63e8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x721db5354ad3a51c475ece5b8ecaee3725d3b76c",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xb7e2713cf55cf4b469b5a8421ae6fc0ed18f1467"
  },
  {
    feeTier: "100",
    id: "0x3cd908d55f22e92981fe27a225777c15fe049829",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcbd9f6d748dd3d19416f8914528a65c7838e27d8"
  },
  {
    feeTier: "500",
    id: "0x61af05acf1dbcd99136e0ab96a4649cdf6ad7b9f",
    token0: "0x477bc8d23c634c154061869478bce96be6045d12",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0x6a116fc073d5c0cd3b65755da3dbe46d3ff9c1d3",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xaa88c603d142c371ea0eac8756123c5805edee03"
  },
  {
    feeTier: "100",
    id: "0x7d3c51d707c8c63cb9f85cec6e9f9ff0a5fb2735",
    token0: "0x4bd17003473389a42daf6a0a729f6fdb328bbbd7",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "500",
    id: "0x9dd70024ff211ba754c089cdee47bdedc17c4cbe",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf00600ebc7633462bc4f9c61ea2ce99f5aaebd4a"
  },
  {
    feeTier: "2500",
    id: "0x60216e532cc88a6e23facbed5034f980a35a9617",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6866b964f12ad1006d4b00520eb8ad61e7cc208d"
  },
  {
    feeTier: "2500",
    id: "0xbb8b5430334c4f246fab4b6d43e73ca95e812375",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcd7c5025753a49f1881b31c48caa7c517bb46308"
  },
  {
    feeTier: "10000",
    id: "0x142b8ed6df9f2fa3c678ca6a9014702845bb197d",
    token0: "0xaf41054c1487b0e5e2b9250c0332ecbce6ce9d71",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x4b1ac1e4b828ebc81fcac587bef64e4add1dbcec",
    token0: "0x0b464d2c36d52bbbf3071b2b0fca82032dcf656d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x183a1338a02bd84d517e72369c19022ffb81118d",
    token0: "0x91d6d6af7635b7b23a8ced9508117965180e2362",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x4243fc493d112d78e10ccbe896ceff35cfb1712f",
    token0: "0x617cab4aaae1f8dfb3ee138698330776a1e1b324",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x644093acadc898de2e0716027fd192788212a66e",
    token0: "0x6cad12b3618a3c7ef1feb6c91fdc3251f58c2a90",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xbf72b6485e4b31601afe7b0a1210be2004d2b1d6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409"
  },
  {
    feeTier: "2500",
    id: "0xa5e16806263773b1d1a5e4c76fd6b4dc461b1655",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf0fd0ada41ef2cb88a83b0301d451cc6e4ba054c"
  },
  {
    feeTier: "500",
    id: "0x19cf0dfec87e449a783201065b465a390161dab8",
    token0: "0x5232276d5f4b23b45cab1a9b556d28d9054921cf",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x06e2d4002a693812a6348c91a2beccf4e926ff2f",
    token0: "0x0782b6d8c4551b9760e74c0545a9bcd90bdc41e5",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "10000",
    id: "0x42ead00e69394ffbb2985c1ea4fbb32aa07f6243",
    token0: "0x16939ef78684453bfdfb47825f8a5f714f12623a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x3f8cf9a2f136e4469191f61e4db0d0e969c310d2",
    token0: "0x47e131a93b01c12dc0803016543ac07000a8c563",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x14cfad9a4fcb5fb4f702f5d0e90dcc633e1ded9a",
    token0: "0x8ff795a6f4d97e7887c79bea79aba5cc76444adf",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xd648c62f72523e7c8a9eec76c20dfc2d9713b0dc",
    token0: "0x0104f019c8889bdabc62ae6c7b84f6f2ed351133",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xfb1d5e2e6c62fabfb1a8e7735419012b03940a43",
    token0: "0x1a076e4633fa139d7b908b88326de603fbe8c199",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x74085d1c68457f4d16c1ec85028bdef2dc07a583",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x62cfe8ac265918815f3ad5a2546d0dd96c62789b"
  },
  {
    feeTier: "100",
    id: "0x8f4d9e19edab2de4b8063945001d2ee2a7fb5464",
    token0: "0xb0461d7e8212d311b842a58e9989ede849ac6816",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xf3e9fd240c33c22f7b30e97308bd3a8862902d30",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7fa895ddf5294c13d7c197cc5543b21cb0034084"
  },
  {
    feeTier: "500",
    id: "0x74e286d9519586ab623bef019422ad7ba2533145",
    token0: "0x37a56cdcd83dce2868f721de58cb3830c44c6303",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x2180f15225e86613cbcb60ea4b8570a864460c67",
    token0: "0x2940566eb50f15129238f4dc599adc4f742d7d8e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x5a9b63d53428af8595871e9bc5349d1ab6e472d3",
    token0: "0xa27e68aee11b9753424fee73f86d25500090cd3c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xee470bd88a4b5d7c464472a9a670552164669317",
    token0: "0x87174c5ce67e84b2413a2e82380ceef3fc38b1d0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x4447b585458c917cbb331556cf06c79104dc62e6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8cd161eaa9809596917c7ab0dfbc488da60fac1a"
  },
  {
    feeTier: "10000",
    id: "0x17d8f66a21646143f409668c73ee98859f7d7cb7",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc636782a837feee37ccc29d58bdbb4bcbdd0ae1f"
  },
  {
    feeTier: "2500",
    id: "0xe53804e4d6c20f3edc8347140cbe044a74d47129",
    token0: "0xac66fb49759d5cb644d2527f3053a75766467fe9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x46cf1cf8c69595804ba91dfdd8d6b960c9b0a7c4",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "10000",
    id: "0xfb71483bfabc477c3cd604dad6ffa8055be8c1a7",
    token0: "0x03aa6298f1370642642415edc0db8b957783e8d6",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x6701b287c8170d6c290c6f4ef426782bd61ae310",
    token0: "0x1ba42e5193dfa8b03d15dd1b86a3113bbbef8eeb",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x64b3c79cdfc9cd75d36f22b48ce33c6a8d9f0bbb",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd67ca81c326aeb0c780016401970cad4e29e6902"
  },
  {
    feeTier: "10000",
    id: "0x4b17994fabfa02b64d0b41d06e89ab4c2c11ad2c",
    token0: "0x27f16d9a5095b763baeadd7dd78e83288af29cf4",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0xe2373ba0314ff0c2a6aba1eeb1737757929ef4dd",
    token0: "0x6ad9e9c098a45b2b41b519119c31c3dcb02accb2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x3fc55bfda193f745656d178e4144275e67c6b647",
    token0: "0x0669538fcdef9a73cd37938eba8c79e652bb93aa",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x7ad4aa0d69f874a5e4405e4e2248b5601a5ca239",
    token0: "0xb8afc02c6959bfe0fa6445c515ddceaa58c47026",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xbea5d8dd34c479a94aacff4d40661095559021d2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x859c940f080b197659b3effc804fd622df66f0a1"
  },
  {
    feeTier: "10000",
    id: "0x50a531cb6e366c2464207e36fe67e971ff496cd6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x998305efdc264b9674178899fffbb44a47134a76"
  },
  {
    feeTier: "100",
    id: "0x8cb829111c90e0101492d5a1aa011f09614129e7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05"
  },
  {
    feeTier: "10000",
    id: "0x3402de9929ac26b8bb50bdb54d3628fc83f965a1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc14a7747cfec02cfea62e72bb93538de6b2078e6"
  },
  {
    feeTier: "10000",
    id: "0x82033842b636ed95f0f4d5ea733e00b561943b23",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdc8c8221b8e27dfda87a6d56dc5899a65087b6f4"
  },
  {
    feeTier: "500",
    id: "0xda484fa6c24ba93176c38f5a1b5af840e6449fd7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xaacf9eacb17658bf0bbdd52d2db7a93531d37d07"
  },
  {
    feeTier: "100",
    id: "0xe42cc1c771f73e77ff2eddc1966b403e2fefc5c7",
    token0: "0x3668eef8b0fe30e260e1706471be6543197f1769",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x4f742ee10efacdb881f92a13b735c18b8b0ff8ee",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xda75aaad4cbbc16a1ddda3583ffb06e2fd0289fb"
  },
  {
    feeTier: "2500",
    id: "0x64e20dba5e2fc3471a8b9f8d87b6cb622a8caa51",
    token0: "0xb64e280e9d1b5dbec4accedb2257a87b400db149",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x8879c67d850dd6cc64e99e4f9bdb5bc4088170f8",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbbcf73bd3f6774f6bd8c09d41c3c4a73cbab30b8"
  },
  {
    feeTier: "2500",
    id: "0xade1fac77bd942f65518c81fc8c5887436549d89",
    token0: "0x428d0a41a442f7a69e7f6bdc0cc96866af348c43",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xbb87f33d9f43ec3fe75502958408262e7043b2e8",
    token0: "0x6679eb24f59dfe111864aec72b443d1da666b360",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x106b888cf039d75a7fa2caff73c95efb9e3c1995",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xef4e9088c05424d6456056f3be80d7ae36278e9c"
  },
  {
    feeTier: "10000",
    id: "0xd9b262c28b6130bc3a324b62aa8655bb8236de8c",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e"
  },
  {
    feeTier: "2500",
    id: "0xdaca9622e924c289935f54c11248d004229dc120",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9d44c04ef10cbd4ba321e51a54f1354d0799feef"
  },
  {
    feeTier: "100",
    id: "0x1d1024096dbd8ce01955f167da8794eeac3072bd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdbee29e9f356164ade20f0fd26652eff8fa41f22"
  },
  {
    feeTier: "10000",
    id: "0x753d8e3b2f7f5c473ec36b6aa61b94fa3f4bed67",
    token0: "0x0c7d31befe4945089a3b8f835d6e8c1d4df6d952",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xa1e978a20042a74f69b6fe3d83c8fb0b245017de",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdebd6e2da378784a69dc6ec99fe254223b312287"
  },
  {
    feeTier: "10000",
    id: "0xbaef89a4a3884eb756501ba9c0de74d492793b94",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8fff93e810a2edaafc326edee51071da9d398e83"
  },
  {
    feeTier: "2500",
    id: "0xc3fbc697537bde991ff1921419d7419dde1ee346",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xec1f55b5be7ee8c24ee26b6cc931ce4d7fd5955c"
  },
  {
    feeTier: "10000",
    id: "0x03dc21dbb20e109aa8f013a12816e39aa1e40c66",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x43c934a845205f0b514417d757d7235b8f53f1b9"
  },
  {
    feeTier: "10000",
    id: "0xdd82975ab85e745c84e497fd75ba409ec02d4739",
    token0: "0x25d887ce7a35172c62febfd67a1856f20faebb00",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x15bc675d16e6172ce7859ac2d79a3b3bfc0b12bb",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbd436456ec590fe2cd279e9408d068673121b494"
  },
  {
    feeTier: "100",
    id: "0x8cbb9c2bbc92f97d750c31875b4e47251e3489c6",
    token0: "0x263a6024c56fc0251a54d14d9f073d36908cf1b3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x6a4c814e2861470535976317425f76bad6335b71",
    token0: "0x1dc525b3b1a5040dd1324618c49374edf13c3c5d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xd0e925a1c22e30a363283d79ebf5a901cf928b95",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc335df7c25b72eec661d5aa32a7c2b7b2a1d1874"
  },
  {
    feeTier: "100",
    id: "0x5b46fc8392cded6a91a79d85efabfd51c7956ca0",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf027e525d491ef6ffcc478555fbb3cfabb3406a6"
  },
  {
    feeTier: "2500",
    id: "0x9a39f5251ad0b5e1666212b3d4b751dd00789f63",
    token0: "0x8457ca5040ad67fdebbcc8edce889a335bc0fbfb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x3557991f661b68da16aff6a3baa8625ce1154533",
    token0: "0x24864549ee528ee50b9322bb6819d38f241c31d5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xb561e0fa61599f537d628a5e2ddb2e20b871fb2d",
    token0: "0x299142a6370e1912156e53fbd4f25d7ba49ddcc5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x4d9ccd1da5b140d8e276bb10f24ed146424106f5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb0a1c87b890fe171371f81a59f7ed4636e82595d"
  },
  {
    feeTier: "10000",
    id: "0x401969add762660836df0a353fa319d7a5f514d7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc209831f7349d4e200d420326b3401899ab9ae68"
  },
  {
    feeTier: "10000",
    id: "0xf33db205ce1654cfff0ad110f5575224bdae78e7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9485bca5317b8214bffc790d34fface0c92d7656"
  },
  {
    feeTier: "2500",
    id: "0x44604c88797968a15d74be6a756263f9b053421c",
    token0: "0x070a08beef8d36734dd67a491202ff35a6a16d97",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0xebf0df3ee8a36efd1aefaa4c12f2e986af6fad92",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x93b30f6d5c2eed35950498f71235a749e6f0540c"
  },
  {
    feeTier: "10000",
    id: "0x24b7a3a71b5ee68d47c14b5004dac66649b84643",
    token0: "0x8263cd1601fe73c066bf49cc09841f35348e3be0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x10962141b3b36159fab48ce6ed37446feb09eb29",
    token0: "0x4d2d32d8652058bf98c772953e1df5c5c85d9f45",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xfc75f4e78bf71ed5066db9ca771d4ccb7c1264e0",
    token0: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xcf15530265bae5c899aecf04f350b7dc9db78de7",
    token0: "0x33d08d8c7a168333a85285a68c0042b39fc3741d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xc259d03cfa6e38f7bd06ee75d71e11a3cc731dae",
    token0: "0x5a7a15f8d5daeae4e5ba880451cddf64fa2fae6d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x957d56dd22257df5615a9a584d030775ae4fcc97",
    token0: "0x0cf453dc7ea21ef8fdffc1b14cb848e1e3884be5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xfb6f2224d0581c16b35cdeeba01a41152d1886e5",
    token0: "0x7a5256ab919d4ea7a50de02eb0e5ef339db20083",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x75110964b694163425c41d11f58f8389d02e149c",
    token0: "0x493361d6164093936c86dcb35ad03b4c0d032076",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xd578405af7b5abb93f60389311f8ed79e5c569f8",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbe7bdd5d57ddd667347764b13626b90175ab852b"
  },
  {
    feeTier: "100",
    id: "0xad81b44e8740b89562459860a0d23b1fa153aeef",
    token0: "0x4df357fba8a681eca72e133bc1e63198ef611641",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x702ce3abb89c6433f4c050d976dc2bd396735167",
    token0: "0x05d10932970d048408e73d9b40787831c1e5c7d2",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xe4e695fa53598da586f798a9844a3b03d86f421e",
    token0: "0x352cb5e19b12fc216548a2677bd0fce83bae434b",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x61db764c20a2ebfb7e8a7a5afb0b2dd85a4cef5f",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc748673057861a797275cd8a068abb95a902e8de"
  },
  {
    feeTier: "2500",
    id: "0x141ecd8ff0c2b37d8f84a08d814e5aa90e80eed7",
    token0: "0x776f9987d9deed90eed791cbd824d971fd5ccf09",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0xe0898f9027f037c298649afd0fcdeeb7bd210aca",
    token0: "0x40c8225329bd3e28a043b029e0d07a5344d2c27c",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0xfc750e51f249cd978f7465e74a5062574d88d997",
    token0: "0x39ac82d1a6d87be085cb5c70ebec0f99af6b3829",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x224a31761fc6a4ea62707efc6a57aed3ebe73ff9",
    token0: "0xb51d09b75193c35c1eb72d5714453a04051a80bc",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xaf0c5b5c651d4b6a1ea446385ff036dbfa23a991",
    token0: "0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x4db26f9de417387329f473ee522c8c76bf4135a4",
    token0: "0x56403d4123e0662b9b0e22b4bc447d59b39b91ad",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xb90b91dcfe0de39f448d9204119d7a882e15d8d3",
    token0: "0x872a34ebb2d54af86827810eebc7b9dc6b2144aa",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xa7cfb67c904c3c085a4be4e182b1e750c8d03c7a",
    token0: "0x3cb6b8dbbe340691529551b2bc460efafdc91d20",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xc19b0bf931cbe57c67088248da771ca2f743fcd2",
    token0: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    token1: "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa"
  },
  {
    feeTier: "2500",
    id: "0xbe43e64cd61e0b9207a6bee93e2149317a604326",
    token0: "0x0782b6d8c4551b9760e74c0545a9bcd90bdc41e5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x93b96148cf64ccf7641e2ddc5b0b2ab976a5c9f5",
    token0: "0x6c1efbed2f57dd486ec091dffd08ee5235a570b1",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0xd465d9c13c43003f5b874e0d96a6030336ed50eb",
    token0: "0x16faf9daa401aa42506af503aa3d80b871c467a3",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0xf076209c0167b3e1144f4a914bf645a62d9f0168",
    token0: "0x6d106c0b8d2f47c5465bdbd58d1be253762cbbc1",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x2e524d484977f175bc2d68605c204ff1ca711b7b",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbe2b6c5e31f292009f495ddbda88e28391c9815e"
  },
  {
    feeTier: "10000",
    id: "0x22f07e9716d9e2ef07fb835fdd1aa0f9e63396fe",
    token0: "0x23e8a70534308a4aaf76fb8c32ec13d17a3bd89e",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0xd77f31bfde9f5f999d133a6bfbc99087703904c9",
    token0: "0x1f7e8fe01aeba6fdaea85161746f4d53dc9bda4f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x6a4116345bd9446af758000476b144cf5da626c0",
    token0: "0x4d2d32d8652058bf98c772953e1df5c5c85d9f45",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x662c402b11e29e1aa3fefb1673f25e82d2f13656",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcc42724c6683b7e57334c4e856f4c9965ed682bd"
  },
  {
    feeTier: "10000",
    id: "0x6ef2265defb02f4ebadae8be00e852b800fb8e74",
    token0: "0x491347561cec563ad7d91135f92dbdc700277505",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xe5bffcc3b8b59a2e11f2c9e91c03cced115000d3",
    token0: "0x1a05ebd6fa3a9ff19e40988f84dbb300abb2b11d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x61fa92ef9310904684f648f4ea5555fd04a99622",
    token0: "0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xa36fb8f7437beab9cc31758383ee8fd00eda2286",
    token0: "0x3e195dd3c55568362dcab32a61d253c1ca365786",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x09baa5c3af806b5c0da38d1d0b8021a2304acda3",
    token0: "0xab4e026a2f6f6265c29bbb4c565e66968e3d4962",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9e0bdbb2db5a2dc47f7d9db6a58b21d296d44313",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb67a0b57703a43e7e2dc5dbf9754979652916f17"
  },
  {
    feeTier: "2500",
    id: "0xd1dae5121a0fc86317bb631574a7843fef866431",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xad4c689dcb380a94f7e13400bd03fd998cf7af7a"
  },
  {
    feeTier: "500",
    id: "0xe654cc6093f045ad0d5913bd43abc610cef971be",
    token0: "0x1f9f6a696c6fd109cd3956f45dc709d2b3902163",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "10000",
    id: "0x35d4586143a40b805e04d1e4680b5ce62cf1fad0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd98438889ae7364c7e2a3540547fad042fb24642"
  },
  {
    feeTier: "2500",
    id: "0xf7ba85da65ecdfcdb2714cb8540fde06d04054f5",
    token0: "0x460a49db303f620ad72fc070b6ffe90ce993713d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xe44ac41e9144f12f8380979e8009f5724fcd109a",
    token0: "0x0f7d6e8cbe343f402d030e4809aaa2d5b10d725b",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x4d3fefb4b83ee779d665ed77812fa31c0dc62863",
    token0: "0x31e4efe290973ebe91b3a875a7994f650942d28f",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xe356050beb40e7bcbddab645fad5dcf90d0a7107",
    token0: "0x59f4f336bf3d0c49dbfba4a74ebd2a6ace40539a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x772f063977c72bd8fa990d605fc0521f6de2c7d3",
    token0: "0xaff9084f2374585879e8b434c399e29e80cce635",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x532931fe9160070fb1f07c0a9952c953a89612fd",
    token0: "0x8105ece4ce08b6b6449539a5db23e23b973dfa8f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x8b626acfb32cdad0d2f3b493eb9928bba1bbbcca",
    token0: "0x2b5d9adea07b590b638ffc165792b2c610eda649",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xdb2b227c82bf46c4c956e7226a279a97b15d196a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x91dc92be0bfc47db50790949f423b62282887292"
  },
  {
    feeTier: "500",
    id: "0x7806d2365af3fb1871ec7ac94af0755dc2539ea4",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05"
  },
  {
    feeTier: "2500",
    id: "0xad4022c9554587b20b5077326e204aec00be24a8",
    token0: "0x368ce786ea190f32439074e8d22e12ecb718b44c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xded9b697d5a019774c726e24a15ab0ebfae723b7",
    token0: "0x846f52020749715f02aef25b5d1d65e48945649d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xd5defa9dcc3e1b508e9e9dc7efe604a4883410ef",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xa2b726b1145a4773f68593cf171187d8ebe4d495"
  },
  {
    feeTier: "10000",
    id: "0x43c6e4011883ee04d989b0da88070078549058bd",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc37d341ea63bd93219a0e36c8213d9e8e4888888"
  },
  {
    feeTier: "10000",
    id: "0xf9c2637abb35eaa688aef771e14bfcfb374eaf7c",
    token0: "0x291be4b6ea733148ad1d2489dd59da28f92b710e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x08737612200de7789bb125238a5aca14190011c0",
    token0: "0x2df2a49e0cf2b4faccf089e522eb6d3b63738e2c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xa9e6daa4d53a45e9b17bebfb1fff75f47b05dccf",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe069af87450fb51fc0d0e044617f1c134163e591"
  },
  {
    feeTier: "10000",
    id: "0xa44601125f85fd15206305aafafffcf6985e08e5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6894cde390a3f51155ea41ed24a33a4827d3063d"
  },
  {
    feeTier: "10000",
    id: "0x8f08c9a919d518f782abae0b6aba5badbf85979c",
    token0: "0xa4e8e73c8be170528385bbce78172c891f1febd7",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xec85539e1721be5f94af395a715387592d4829cc",
    token0: "0x3d36685d91b060fb0351401f27ee058311fb00c1",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0x55b7d55ff491d6704aa7037fa08e67dd4d030b67",
    token0: "0x21ba761f1f667daf2846d601a9440e744efd0fb3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x4da95fc26fd363425f077a4ad8f4ca8b1c10cb88",
    token0: "0x932b73421ff9724ef46e8c8b1547383e8181144a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xcfd701dfa42d72b73af972cb7f387fa0fd2477cb",
    token0: "0x9f46ecf92e7f6ee8c03f393adf04c2e17b8cd0b0",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x8217ff6945bb4b3cce91fad6e710d47e382a505f",
    token0: "0x1c50013e69efb68575773ba4a48013f1a4a1fb6c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xbedd952a6022976b7dcb17614a7ad481b6be8529",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xe48a3d7d0bc88d552f730b62c006bc925eadb9ee"
  },
  {
    feeTier: "100",
    id: "0xefd3116c52e7bc09339089b7ead9e720af85d361",
    token0: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    token1: "0xef33fd3d46c3efa1804b513e3ddb7fdff215def1"
  },
  {
    feeTier: "500",
    id: "0x4fa8024d4aca5be817b508be3b0456b94233e682",
    token0: "0x178fbe1cf4775fbdb9756d6349195a05799c0fe5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x7a72b31918f598154f3e6171c5f341fbaf1fd0b7",
    token0: "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0x5f8e4079aeb1447ce11626a5d95d18e1e307a4a1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xeca41281c24451168a37211f0bc2b8645af45092"
  },
  {
    feeTier: "10000",
    id: "0xec4656d84b484ef44281876bcbbbb34ebc4e6fcb",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb806fa32ebdc04e5dbdd2ad83e75c8f7d8e8ef8b"
  },
  {
    feeTier: "2500",
    id: "0x455024fea6e6bdeb9fe4d11ec6039a728343a600",
    token0: "0x39df92f325938c610f4e4a04f7b756145ebe8804",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x22016340c1e79223df2d086a2aa6043049afb72f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd637c586f8ae1002f87ae4b3cc50d12c015120c2"
  },
  {
    feeTier: "10000",
    id: "0xa9ae5f1078bad74b98f822e3e3d6b59cff0f1f89",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf78d2e7936f5fe18308a3b2951a93b6c4a41f5e2"
  },
  {
    feeTier: "10000",
    id: "0x1a92c1b200ed1064e7569c455b5aab3098df99c2",
    token0: "0xad0926ecf31719263dc86426024794332d9dd9a3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9338892ac6b2b19ccf17a84d93713aa14ccb2193",
    token0: "0x9840652dc04fb9db2c43853633f0f62be6f00f98",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x660b571d34b91bc4c2fffbf8957ad50b5fac56f4",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa"
  },
  {
    feeTier: "2500",
    id: "0xb80fb975b4502251c50fe870f3dd39c6b4f7f36a",
    token0: "0xa76fd6ac1a9d9511db1f14a97319a3ff797c7838",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xe9f442cfc34d5dc921b33ae96f68d20f7463977c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdd23a3d8b57c6a31b4d863f32bf542365e407622"
  },
  {
    feeTier: "10000",
    id: "0x46e7d84402a86f8615a083c40841a8338ebc3874",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf4b5470523ccd314c6b9da041076e7d79e0df267"
  },
  {
    feeTier: "10000",
    id: "0x94f260dbbfe1b08ed3e76910221ff41750d0d5a4",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfd4f2caf941b6d737382dce420b368de3fc7f2d4"
  },
  {
    feeTier: "100",
    id: "0xefde6761c03e0dcb70f90b66d0bed13e4034af31",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xcfb70a4f8a3665e7c4d12f903cbd5046a541d887"
  },
  {
    feeTier: "500",
    id: "0xa12b3b3d619bc8b48901332f940ffc898d7f445b",
    token0: "0x2d2567dec25c9795117228adc7fd58116d2e310c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x61f625664aa41b0059f61d5c978d5ec902751f78",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18"
  },
  {
    feeTier: "2500",
    id: "0x815879d9fad31202a4f436ba13777c984a3afc92",
    token0: "0x9321bc6185adc9b9cb503cc211e17cb311c3fa95",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xcde9ceeab63db3b68bdbc2c9441b92b8fb9f160f",
    token0: "0x062ca2d2f1af8c203fa3ad5298fd6faa4e44e897",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xc46411cf4f0813ce62925ff173fe440bb114b700",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf6769d9ba88e9e0c9827b1aae33dd83da252d629"
  },
  {
    feeTier: "2500",
    id: "0x26202a00a6fb53fb45dc70344748a7ee453b0110",
    token0: "0x8457ca5040ad67fdebbcc8edce889a335bc0fbfb",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "100",
    id: "0x74d0b9c9360649c06dc5389172a6235c1341db8b",
    token0: "0x4aae823a6a0b376de6a78e74ecc5b079d38cbcf7",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "100",
    id: "0xa364657952ef9b260c6b3262f7e1460385db05d4",
    token0: "0x106513e399c5b4bcc3fa3978e39a083185027554",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x7caee8f7dd5702c8d59c2f7e91af3bc5631148aa",
    token0: "0x85528a8d186a55bde79cacb30dfddba4a9da5f0a",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x4ee93f55dc38ca634f0178ea7f6fd81c6559e7ac",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcebef3df1f3c5bfd90fde603e71f31a53b11944d"
  },
  {
    feeTier: "100",
    id: "0x54060e86c33358f3ba730fafa47f330d7d0e1d48",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf31da2bbd0cc88cf204f76b21425a865ad9acc31"
  },
  {
    feeTier: "2500",
    id: "0x77d5b2560e4b84b3fc58875cb0133f39560e8ae3",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63"
  },
  {
    feeTier: "500",
    id: "0x09472b9854a60637b99ddd2f8cf47763aa2ae6b6",
    token0: "0x4b178bce59ef7fa00208315f905d6c10f84da0bd",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xc68234106229b5ad63765a12e473220decec1f17",
    token0: "0x444444444444c1a66f394025ac839a535246fcc8",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "2500",
    id: "0x59e727d76b49b2e8e4849ae395911955f964b5b1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb0c4080a8fa7afa11a09473f3be14d44af3f8743"
  },
  {
    feeTier: "100",
    id: "0x51f4d8a0d0142082d83944deb6c83cb490aac4fa",
    token0: "0x6664d47a0985584e8c1d99da138fe211b1c5ae67",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9325ca03d9c0567fa878ad84c2358236bd92e4c8",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xda75aaad4cbbc16a1ddda3583ffb06e2fd0289fb"
  },
  {
    feeTier: "10000",
    id: "0xeea445f03a0a9ca3212aa41b6e5b674ab6e8a8c3",
    token0: "0x922722e9ef614ec9a3e94b78496e92abfbb5a624",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xd4fb9d253739c5db6aad90ad2409757d224ccc0c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc0041ef357b183448b235a8ea73ce4e4ec8c265f"
  },
  {
    feeTier: "2500",
    id: "0x524f1dae7b794bce2702ad8420243ed339308fe0",
    token0: "0x767b28a30e3a15dcece7bff7a020adfde9d19cf8",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x934c4ce7cf0dcb1c3191110d6e073044cf1eedf3",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdd9852b32c1fd16488967f197680b0c0fdb106aa"
  },
  {
    feeTier: "10000",
    id: "0x345ec74c4ecb9ae6b5091ff6b74ae8b1d5b7d831",
    token0: "0x61dc650c10ec3c758d251cd2d1ab45af1a43e941",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xa77ebfcae02f48bbf2069b3a54df1abe0682cca0",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf307910a4c7bbc79691fd374889b36d8531b08e3"
  },
  {
    feeTier: "500",
    id: "0x8c78b7cf85ae6c9781aa5a1e269662b299a43998",
    token0: "0x32f1518baace69e85b9e5ff844ebd617c52573ac",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xeea25464376a5a566474123a07b4945fcd4aabf0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6a8fd46f88dbd7bdc2d536c604f811c63052ce0f"
  },
  {
    feeTier: "10000",
    id: "0x6d6f122d20ca6471ec0e5025822d4411df0a2c6d",
    token0: "0x557805bbe627ad81adecf4a94ef028141cebabdf",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x322830172c48ceede4dbd20de7d9329972d0314f",
    token0: "0x0ab9d2adca4ce4cd6f6cac51f3e42acbbc5d1b2d",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x19f4569a884c8b3bbbac74077f1a9200dadce441",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8a7b5fe6f43db70affc51f3881ff79354640f3e7"
  },
  {
    feeTier: "2500",
    id: "0xb3cfec821d2f581a34d9c0f7d0a0e149dd3dc3ef",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc3ecff520953cec9098e8d573dd277dd289098ae"
  },
  {
    feeTier: "10000",
    id: "0x41e3149918f8efee8ef6f47cf45d4ce580f837cb",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf30224eb7104aca47235beb3362e331ece70616a"
  },
  {
    feeTier: "100",
    id: "0x4d2535a0a91f0e8227fc4c43aec2a9205d58240b",
    token0: "0x9a5350edf28c1f93bb36d6e94b5c425fde8e222d",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x70b9ab7b29ff96e0323d79cee6b3faf4f996637d",
    token0: "0x701b7acddf7ccb04c2e95d03c45d0f384105b08c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x2df3ca637816f2d75ef054540e1bfcf02966355a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xdb0a8721d6e5574a6ca64336dc6d3c21dccba326"
  },
  {
    feeTier: "10000",
    id: "0x2450f6b521567f0edc8a95bf3cf5c452e4f9cc67",
    token0: "0x03aa6298f1370642642415edc0db8b957783e8d6",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x9ed198d2f8f0b088aa8c09afc0c6b7f63233e422",
    token0: "0x2598c30330d5771ae9f983979209486ae26de875",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x661bfe174561b26f78f2c26beedef41c3dfe96be",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe77fddc622ca05b7791facb9176b3cb0a9ea905d"
  },
  {
    feeTier: "500",
    id: "0x4bba1018b967e59220b22ca03f68821a3276c9a6",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "500",
    id: "0x95a8e6cde5cad2d4f2016cbb08d4a64c5b1310a3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8c96e0b7f9fca112d36474a12a4e1d726e477fa1"
  },
  {
    feeTier: "100",
    id: "0x0866e1f0a9f7417492d2d6ecf9539932f236d82d",
    token0: "0x30ef46ecfc7d047810c9143af60072adf18bf01b",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xc79cbd5b8837db49fdfa89f0317bf5897bd38b1c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8f0a66bedd597a633b41626df04af9f41b304b48"
  },
  {
    feeTier: "10000",
    id: "0x9087bbc31db380f3a2f5f82b7c8852ed6ff62f84",
    token0: "0x4d2776307c56b44431744221c09c59cc4c371779",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x555dce91f4ef570bcc9fdb83d9f83a6d05065f31",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf700d4c708c2be1463e355f337603183d20e0808"
  },
  {
    feeTier: "2500",
    id: "0xb8ee61d7cf985e3d5ae8a90cb54f15edde13aec6",
    token0: "0x0df73831c00b157bb0fed3c06eb475f201b64a78",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x4e1f9adf96dba6dc09c973228c286568f1315ea8",
    token0: "0x2dff88a56767223a5529ea5960da7a3f5f766406",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x64ebb904e169cb94e9788fcb68283b4c894ed881",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb"
  },
  {
    feeTier: "2500",
    id: "0xd69aeaf5db8a2f44d0e79a169ab461728b5a00ab",
    token0: "0xa325ad6d9c92b55a3fc5ad7e412b1518f96441c0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x9a36d8979dba8b3aeb832b92cf9a6f627299d76c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcc4d447b1206347a4d0e091e2373547ad1ef3a12"
  },
  {
    feeTier: "500",
    id: "0x7eb02939e4d917ea1dd1799a2cc71ec522c9ec6c",
    token0: "0x9e1170c12fddd3b00fec42ddf4c942565d9be577",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xa03e131792443aef95db46d686ac8677076b0e4b",
    token0: "0x9f9f093bbc604916e38247a32c14147e565990da",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x92e88e8fa4f339cea0c1d89b09496223ab1e0022",
    token0: "0x5e2689412fae5c29bd575fbe1d5c1cd1e0622a8f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x2630ce0266377c7c52b95bc5cffde10975a2a658",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x762539b45a1dcce3d36d080f74d1aed37844b878"
  },
  {
    feeTier: "10000",
    id: "0xa1005453232267ecd5d9068847cb3cc7345e950d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xacd2b5e2cb43532a7a01db2bf7a2f37871d80e64"
  },
  {
    feeTier: "500",
    id: "0xe5a0fb054d21ea6c4b99f2d5e13c325f3c2a70cf",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x9ae407142753f950467a8999786efbf3d4fbf5ee"
  },
  {
    feeTier: "100",
    id: "0x999dde7963a36f329d8e454687914854d151bb99",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfe1d8816a1c4431f14cdf1d20e3e0c3812dce3e0"
  },
  {
    feeTier: "10000",
    id: "0x144b632e957dc93a324a60f06ff19e26958c0f99",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf585b5b4f22816baf7629aea55b701662630397b"
  },
  {
    feeTier: "2500",
    id: "0xb5c38c94770cc1255d72631aff291d817d44176e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfe8bf5b8f5e4eb5f9bc2be16303f7dab8cf56aa8"
  },
  {
    feeTier: "10000",
    id: "0xcf622aefbcea5f0f8e0f658d69f45126604e7936",
    token0: "0x8416a4b66369b4b8e0e7473e2be0d604c6c922f9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xe3cbe4dd1bd2f7101f17d586f44bab944091d383",
    token0: "0x4338665cbb7b2485a8855a139b75d5e34ab0db94",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x97577b6f529795316901075938d1862e226bfa0d",
    token0: "0xd98438889ae7364c7e2a3540547fad042fb24642",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x5ed49d17abeff1fc51ea7305fa0d295c0f0a5f9b",
    token0: "0x35f3ffffcb622bc9f64fa561d74e983fd488d90c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xc58e8e33efca83990b1df67c472d90c878d82f26",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcf160cc9701ac2c410f5801d16b8a279c1cdb520"
  },
  {
    feeTier: "100",
    id: "0x6318f3b1539a6b580b6acbd7f782f558a0601f3e",
    token0: "0xbb4b8c06f14eeaee36e8e481259284772b49d1c8",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "500",
    id: "0x77f060b83585826ddf9a3cb6f78292cac27e3327",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8d879a030b339a91538e806616921fdad163b064"
  },
  {
    feeTier: "2500",
    id: "0x35346986b68b336d370f126b4f69ac6712a986b5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6d106c0b8d2f47c5465bdbd58d1be253762cbbc1"
  },
  {
    feeTier: "10000",
    id: "0x2c7082bcd8d3be926083764b6f9310c0b1ff0320",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x59f4f336bf3d0c49dbfba4a74ebd2a6ace40539a"
  },
  {
    feeTier: "100",
    id: "0x822d1ed226929d1448c45e375de2b506f2a64ceb",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xef070f5c9eb5998b0feed9174cff8e87f56e73b5"
  },
  {
    feeTier: "10000",
    id: "0xfdb47f5b71f802eb9426504154b75934449fa972",
    token0: "0x11cee2f0f707810c98382724fb6d5e14972366dc",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x4b36782b47a28ee003013e7c56174cb5812f418b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x75e8ddb518bb757b4282cd5b83bb70d4101d12fb"
  },
  {
    feeTier: "10000",
    id: "0x744f84adb617007e730f5c54d97df2ade2e920a6",
    token0: "0x33dc5a6e2e01702c39f038f3a1c1cfefb81f2857",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x5221802eb939f70be43cd86fba94d712bfdf6508",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6e5b7d293fa136839647b5b45cf520d04708cc01"
  },
  {
    feeTier: "100",
    id: "0xc773f8873fa213117b3b56fb970e30ab9d5feb9d",
    token0: "0x9840652dc04fb9db2c43853633f0f62be6f00f98",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x15ec2deb0336a82ffb830a7d953849799f2b4d43",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8c49a510756224e887b3d99d00d959f2d86dda1c"
  },
  {
    feeTier: "500",
    id: "0xc87434f68caae6bcb171048cd9b923a22f6a9218",
    token0: "0x76a797a59ba2c17726896976b7b3747bfd1d220f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x55f65de7d20615ce7e00569c595997f8590595e8",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbbca42c60b5290f2c48871a596492f93ff0ddc82"
  },
  {
    feeTier: "2500",
    id: "0x749e2cff6164f2d1e7545094305b1ef5fcbdeab5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7ddc52c4de30e94be3a6a0a2b259b2850f421989"
  },
  {
    feeTier: "500",
    id: "0xaeea2d8e86d10b8436c416c52520ac730ba29c19",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8dad9693b6b1c42b1dd189bdd6c9963c7fdb9005"
  },
  {
    feeTier: "500",
    id: "0xcf57daadfbe05a04440c502967ce5209f64747eb",
    token0: "0x52f24a5e03aee338da5fd9df68d2b6fae1178827",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xedba5e1e5bb0546527f887de65df7b0c449fe229",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe50ac93cc22683a4b6e96bbdc663c4b31cf8674a"
  },
  {
    feeTier: "10000",
    id: "0x1f5383b9839cb4c91f95edb736acf76c6c46e620",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xdafc45a82c3681d857c6ae36227998190a9b6798"
  },
  {
    feeTier: "10000",
    id: "0xce44ebe42abc496eacbd6582b6e14f3937116b23",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa80221d067603e30060f75e2458aa361f8ee5402"
  },
  {
    feeTier: "100",
    id: "0x6dd6d95b4d8ab0ec908b78b92aa4b49452bdbe94",
    token0: "0x41084e95725561782664eb43aa5fc1c3d6cf0c31",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xb881c5d306b2129479ed41a714e7ea9d202ada5f",
    token0: "0x5674743427b624c87be4159495c88ba4356335aa",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x7e9fbfdb6f43de97692064726f3f036811884bd7",
    token0: "0x5e2689412fae5c29bd575fbe1d5c1cd1e0622a8f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xc54754c807a9cb594f56a2e1cd31a7789b1e24ab",
    token0: "0x1c45366641014069114c78962bdc371f534bc81c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x372db066fa6dc7dfb6a3a6a0ab20cb2a87c847e8",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd773affb89f9dbef8b1bcd2003a9de421f979416"
  },
  {
    feeTier: "10000",
    id: "0x86d41a9b5270e5e4954043332dd76f39b0271709",
    token0: "0x23ec58e45ac5313bcb6681f4f7827b8a8453ac45",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x1cf977828364c597a4a80779a3a5eb8fb673a845",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd69ee2e508363fed57f89917d5ca03e715ee5519"
  },
  {
    feeTier: "100",
    id: "0xf808c38aa3d820967a4cdc183e61167fe3e22016",
    token0: "0x7d9093c5f8529dc5093a86ee36c917ba75d3fc92",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xd775f8d7fb9fb1d2ce19b981e7255cffe2cca76f",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xefb5df8eb84055026018030e71bc2cdfa2f138b9"
  },
  {
    feeTier: "10000",
    id: "0xd02aaf62d5a7d9cabc4e8f13210b175bf305d0c3",
    token0: "0x031b41e504677879370e9dbcf937283a8691fa7f",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "500",
    id: "0xafb2da14056725e3ba3a30dd846b6bbbd7886c56",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x77601d9dc446f87be3b814d80375d8f7cde37e81",
    token0: "0x53bba8f1d143b8ab80653dc2c1c4ddd49b6c7d8d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x97ba9af01447c6d60f81e8d0fe213a0407f5c05b",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xe864d06eeec7dd463c60be42c54886d238995919"
  },
  {
    feeTier: "100",
    id: "0xdf0c1c30e8c1ae3f189f6e6ef248d71977f7be29",
    token0: "0x40af3827f39d0eacbf4a168f8d4ee67c121d11c9",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x73c9f927bd4fa992a6185ae649813035bc11aad8",
    token0: "0x3d04edc843e74935c09f54cc4b2fe1870e347ac9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xeb705c5271d70c62f94248abb53772c231021021",
    token0: "0x8263cd1601fe73c066bf49cc09841f35348e3be0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xf3ee3fda8f8a67b7e90cc7fa98ddaf17ca673607",
    token0: "0x555a29d0e0e00d573a63fb11dc37b61a9da52f86",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x6e99e63629dc255b401c9b47ef092d9fa44e2c66",
    token0: "0x1c50013e69efb68575773ba4a48013f1a4a1fb6c",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0xe07e12ab2d1f3a8fe36daf0a6392c3729dc7c1bb",
    token0: "0xe9e7cea3dedca5984780bafc599bd69add087d56",
    token1: "0xf1f0fa0287c47804636ffef14e2c241f2587903e"
  },
  {
    feeTier: "100",
    id: "0x2591369bdfedbabfd9f9495798cb20db63d9595b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd61ec800066d4b8b1b3609ef91d50817193e6056"
  },
  {
    feeTier: "500",
    id: "0xae7a3d9bed2ba4ef9c134ff4baee33655ae5de6f",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc2e9d07f66a89c44062459a47a0d2dc038e4fb16"
  },
  {
    feeTier: "2500",
    id: "0x9f11264d6d0d9671dab2cc485eb6ec1b502c4025",
    token0: "0x1ce0c2827e2ef14d5c4f29a091d735a204794041",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x2ff82c5b87efb02c4041260aeed647823bab877d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb524a9a21702813f8ea7a79c16afcb5fb4660544"
  },
  {
    feeTier: "2500",
    id: "0x239ae0441c9d08bdb672ee189dcea6299a5865b0",
    token0: "0x248d995f14deebb179a222cd36c4767388545a62",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x3ed2a017f8b08deb8f823917e18dd1c7847c2002",
    token0: "0x0d37dea32d5ba45c1e19f620aa4f61f1ffd8d2fa",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x1117c71762d98911da760f30909edc20f2688589",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x59a780443b607499802e719b85ad4f964061b11e"
  },
  {
    feeTier: "100",
    id: "0xa956247e98d68aa7fd58a40c69fed0fe2bcd2434",
    token0: "0x545356d4d69d8cd1213ee7e339867574738751ca",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x180d25d06a97889827d6d6ccde6c09778bbb694f",
    token0: "0x0cc3754442d15aeeceafdc1f56624b592eb0bb99",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x821eb9ea4c057a76bd59e2d49dafb155ffdc7628",
    token0: "0xa260e12d2b924cb899ae80bb58123ac3fee1e2f0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x729c9a7e1f642eab4019dfb0d467f4a9838e7cbd",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe4cc45bb5dbda06db6183e8bf016569f40497aa5"
  },
  {
    feeTier: "10000",
    id: "0x7f73db7aa81f65ca5b1ef3562175ef5491fc9a87",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xeca19f3079009b7dfa626313e74c807d05bd8603"
  },
  {
    feeTier: "10000",
    id: "0x832eebf89f99aaccf6640fe6b5e838066c630fbe",
    token0: "0x20de22029ab63cf9a7cf5feb2b737ca1ee4c82a6",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xc9002d23cebf00b40f7cdb5b1e63d96eebb50031",
    token0: "0x26c5e01524d2e6280a48f2c50ff6de7e52e9611c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x7583ced27df4c5e74bf1ca4c30e87460bc41d441",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8f36cc333f55b09bb71091409a3d7ade399e3b1c"
  },
  {
    feeTier: "10000",
    id: "0xfb2d325d6162ad96f14ce622f2556cfcc2941424",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd8047afecb86e44eff3add991b9f063ed4ca716b"
  },
  {
    feeTier: "100",
    id: "0x6f457dd0a623948bd96cd10da2d7fb211f406bdd",
    token0: "0x087c28d8941030870a4f833e5c3b4c8f04f83a84",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xdcf714c05a04cf115afca0a5351d044c4e4149df",
    token0: "0xb6c53431608e626ac81a9776ac3e999c5556717c",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x4fe2a0bc64c012017828a680a9c8450c560b36b6",
    token0: "0x363178c81c1d1eb8391de18726d450dc857ea3da",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x6d9e0f0dc455f246029f8e01a62593dea22563d6",
    token0: "0xa136f6a5fe53d042959a2ed39187010361a4b1c7",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x40f2b1bb8253c9304b2f90e2aa4e4a638e8a0e3c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc2eaaf69e6439abab12dd21f560ba0ec7f17cff7"
  },
  {
    feeTier: "500",
    id: "0x0f3ada81a32d8a7233fe9b1d04f0a8231adb98f0",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409"
  },
  {
    feeTier: "2500",
    id: "0x9f6eb6903c1277c8f02d71f8814dc9998199af1d",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x4aa3dcdf22fc16a9843dac2dd67e2d83c7608280",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xea96daa186c1fa0a709929822867ec176af8baff"
  },
  {
    feeTier: "10000",
    id: "0xa436a56ff4368f784b633522fd850764849f1c6a",
    token0: "0xa184088a740c695e156f91f5cc086a06bb78b827",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xfcf1ebe6c613ef493760a8a8089c4ec84e5720b7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd69ee2e508363fed57f89917d5ca03e715ee5519"
  },
  {
    feeTier: "10000",
    id: "0x638be2968705bc2daeeeec9507130f204e7c155f",
    token0: "0x555296de6a86e72752e5c5dc091fe49713aa145c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x32db5c9293f139e2ee4f66c276b18348408b0124",
    token0: "0xadbaf88b39d37dc68775ed1541f1bf83a5a45feb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x3d0f377a13f8159191939ea657eeb176f482beb0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa9500f552ba0c249817c813999d856cbc932e847"
  },
  {
    feeTier: "10000",
    id: "0xdb49d4509aa2b45eda6c21e412fb6a4ea41a2749",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xde6e12bdb2062dc48b409f0086219464a0c317a0"
  },
  {
    feeTier: "2500",
    id: "0x35c4ef619382ae16c8b8bf9204a94b109a5a1207",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf03ca04dd56d695a410f46f14fef4028b22fb79a"
  },
  {
    feeTier: "100",
    id: "0xdc64c196894a9b1099ae3fe4a11423fb33402c2d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa6c59de838f1eeb82d86f5af0750f5f656439999"
  },
  {
    feeTier: "10000",
    id: "0xceb7b723a46c865b8aa4185daac8df91c45ae3b6",
    token0: "0x22b4fa9a13a0d303ad258ee6d62a6ac60364b0c9",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0x1b2eb11fcbc0047851ea1eccff7a225959778235",
    token0: "0xa910a46e2f2002fa9b5aa85f35b9440f6dac4b10",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x588d7cf062f4edd7c7c7f2d66fd770e03b1ea735",
    token0: "0x6894cde390a3f51155ea41ed24a33a4827d3063d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x8d12c967bbca8f63e1b99c71c9b29b6d99d6261e",
    token0: "0x3419875b4d3bca7f3fdda2db7a476a79fd31b4fe",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x814653206db92683b5f78e47d1db84e3534aa3e9",
    token0: "0x631c2f0edabac799f07550aee4ff0bf7fd35212b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xc4c1cb2dff2b4d0ec130713737ba251c9fddd009",
    token0: "0x09f423ac3c9babbff6f94d372b16e4206e71439f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x68c3117d708d56f75cf6c93e6bc33e05e4534c55",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x88da9901b3a02fe24e498e1ed683d2310383e295"
  },
  {
    feeTier: "2500",
    id: "0xcd583803fcb3ac2bfab79961d4bd1eb6d5b7730a",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xee81ca267b8357ba30049d679027ebf65fcf7458"
  },
  {
    feeTier: "10000",
    id: "0xf8104aaa719d31ea25dc494576593c10a8f929e6",
    token0: "0x0cbd6fadcf8096cc9a43d90b45f65826102e3ece",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x703fc0c582357779b70ab6e06957de9fe4a44780",
    token0: "0x34bcd80dcf2da6a07f48a2ce08537daf2f140c6b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xcd92d19c8e841d61911a273765d6958b19d10358",
    token0: "0x8899ec96ed8c96b5c86c23c3f069c3def75b6d97",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xcdf576323767d4cf270de09f7ebf0123c94375f1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc4402fccef278ea6367296b74f3fd2e12f4726c5"
  },
  {
    feeTier: "10000",
    id: "0xb70ec67b32e41cb6dae7d291980a69435bb60845",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8048517e2a46eab4a6aeb98c709ed69483f04d83"
  },
  {
    feeTier: "10000",
    id: "0xf3e393e4ef6aefe78b855853f7cd730b3a594d58",
    token0: "0x039cb485212f996a9dbb85a9a75d898f94d38da6",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "500",
    id: "0xe40733244ccbb98c55df5ee92db0230dde324c68",
    token0: "0x2ffe5f2ea116dd9d2b6dc1768d64c0d8295b4640",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x9f8ca02962de84a7094c381d66efd46e01c2b8f0",
    token0: "0x2ab0e9e4ee70fff1fb9d67031e44f6410170d00e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x321d27af9068b683fb08a9eef6232ab918e88891",
    token0: "0x0409633a72d846fc5bbe2f98d88564d35987904d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x1cee12734c1a2658ba883e50fe82b12b9ffe477a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x564a4468e1060a0dd40356d044682e5688888888"
  },
  {
    feeTier: "500",
    id: "0x61837a8a78f42dc6cfed457c4ec1114f5e2d90f4",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0xe05a08226c49b636acf99c40da8dc6af83ce5bb3"
  },
  {
    feeTier: "10000",
    id: "0x5b757003df57a558bbfda6aa04a140fd9e28ea3f",
    token0: "0x4a2c860cec6471b9f5f5a336eb4f38bb21683c98",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "500",
    id: "0xdcf53883026ed4263fb86b42d7bcbec70f7fa03c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf389ad7b33d6f434e1141f20a3211f39a7855121"
  },
  {
    feeTier: "2500",
    id: "0xdd15e622185261a7e42398ee9df5ec1849387fd5",
    token0: "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "10000",
    id: "0x815000c70c7501cb9867f2c394add2bbc2c60bed",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x4d7fa587ec8e50bd0e9cd837cb4da796f47218a1"
  },
  {
    feeTier: "10000",
    id: "0xf2bd24ff8c48d01fe9a1ce4324af754aad09835a",
    token0: "0xb0d502e938ed5f4df2e681fe6e419ff29631d62b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xe8df1539b380274f1f8205a8f45a7cc266793518",
    token0: "0x2859e4544c4bb03966803b044a93563bd2d0dd4d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xcd9d9828226c025f5181df783fa147a127ed5770",
    token0: "0x5f0da599bb2cccfcf6fdfd7d81743b6020864350",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "10000",
    id: "0xf89068b387771c706f5451c25204f9f2d42e371d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xeceb87cf00dcbf2d4e2880223743ff087a995ad9"
  },
  {
    feeTier: "500",
    id: "0x087b41c11ab6e938ee6d0ee65ff679c8fc0a5db2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x86bcc39b1370a1e675463c79bb515addccc59472"
  },
  {
    feeTier: "10000",
    id: "0x11da18b89d32fe92b8a6c4d5a20883db864d69c3",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf46306cdc35b845ebcc823be8363249b21f7ee63"
  },
  {
    feeTier: "100",
    id: "0x82362cd4b074ce9ce9bf42c6f6647db55e4fbc4f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb052b6c7c8f804a62ca14e5d284edcc70a151cf9"
  },
  {
    feeTier: "500",
    id: "0x1936be860d93b0ff98f3a9b83254d61a78930b76",
    token0: "0x12bb890508c125661e03b09ec06e404bc9289040",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x94019544fd89721620947b871882b04e9bc34bb6",
    token0: "0x94025780a1ab58868d9b2dbbb775f44b32e8e6e5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x4eb455c7ff614717835fe05981e72b088a343606",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc14a7747cfec02cfea62e72bb93538de6b2078e6"
  },
  {
    feeTier: "100",
    id: "0x38edf010c71e0e429ab4d94ee98cff695c8c9074",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5715a750f155c958bb5bafe1336826a4dd6a83cb"
  },
  {
    feeTier: "500",
    id: "0xf4a95fe9f61fc2984432d05721ebcd08e7d5a1cc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xae3d757cefc32b4c30e7f98384c1e0dfa8c7170c"
  },
  {
    feeTier: "100",
    id: "0x4237b3ab29d3adb5d974fdfc3eb6f6e89e6dfb17",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x88691f292b76bf4d2caa5678a54515fae77c33af"
  },
  {
    feeTier: "2500",
    id: "0x5309b603e0313fabaec2d722299be5b7bd98f26e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf705deb80034cf7109984d1c13751a791b61f234"
  },
  {
    feeTier: "10000",
    id: "0x51d22eeea764dc2fd49944ef46c8dedf52488251",
    token0: "0x6a9ab0d83fdbb71f591864eba267c92c9bf98e8d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf53d0caa2b87ab99e8909899841872d4e762319a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x947950bcc74888a40ffa2593c5798f11fc9124c4"
  },
  {
    feeTier: "10000",
    id: "0x772c730d9709234294ae162039277e230492f173",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb12e8eb6b1f24e14381514d2f3b75e7c61487016"
  },
  {
    feeTier: "10000",
    id: "0xd9546d0790fe60f5185d11e5cfd028800b8e419a",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc53ca0d56c420e8f913316e84d2c492ede99c61e"
  },
  {
    feeTier: "10000",
    id: "0x30e286ac0d501316abf4a54b57b457da9b120685",
    token0: "0x05f00661c5de083c15f1137e9fa53f34ad11fd65",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xf3a140465a6497a0778c6a6f07ad2144fb6db8f9",
    token0: "0xe9d7023f2132d55cbd4ee1f78273cb7a3e74f10a",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x3241d5243c76cfda80188a626f920187f88e4d6d",
    token0: "0x681e6dcea16e612edda1f092ba35882748271de2",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x3d1bd08784bcdd6567f244eb8e34979e1723a2f5",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x89eb16377f3d10d39b23df7c02ae94ac3a81d389"
  },
  {
    feeTier: "10000",
    id: "0x01fa500c8201ddaf8cdcad672aa5c20e76342ec1",
    token0: "0x77edfae59a7948d66e9911a30cc787d2172343d4",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "500",
    id: "0xf17b7e65eb4c02ea8636d577afd58300c0f4c660",
    token0: "0x0e15bb4ed19cd8eb6721daac04895c16388ba632",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xaaf4d05cafdb84597224e205331cc9f645dca1ae",
    token0: "0x8b5097bf77ac7c33b3b60b33e3eba7d9ce325a26",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xdf732f8567e53990f30801602d654790758c8ddc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd"
  },
  {
    feeTier: "2500",
    id: "0x08eabc3d13fb4bdffd1f42a5644c1c826acf62c0",
    token0: "0x734548a9e43d2d564600b1b2ed5be9c2b911c6ab",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x93c004ae97f696359aa6de286b10f236d763c515",
    token0: "0x4df357fba8a681eca72e133bc1e63198ef611641",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0xe62451736e7e18be6234120dc5b1644ea74d7507",
    token0: "0x11a31b833d43853f8869c9eec17f60e3b4d2a753",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "500",
    id: "0xd5cc37a085188592221066dcf6bdbc0e1490c3bc",
    token0: "0x02724c3927859bc47abc9a94ef6c818ea49332d9",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x2fc01cf7ac465df51b51f95ecabf52efae5fb1bc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8c770a4958f55e742b05e58b87c4a44146237acc"
  },
  {
    feeTier: "10000",
    id: "0x7e8d9982eb4e41e9f3a885bb3dd4a2b1d9786267",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xefd8bb69ab5c0b022b1d33120ddd1dac3a83877e"
  },
  {
    feeTier: "10000",
    id: "0xd9ce7a1a68afcc84210e10c92abfc858dc2cbcbe",
    token0: "0x6ba7a8f9063c712c1c8cabc776b1da7126805f3b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x6dde55def60de064b4cd5abffa77af0d363188dc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x98fc774181369a7929ee949b61d39c166a48cb8b"
  },
  {
    feeTier: "10000",
    id: "0x7055a7cf4b42aec67210ee527e86b8488c01f062",
    token0: "0x8457ca5040ad67fdebbcc8edce889a335bc0fbfb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x2d9eb07db7c9d0ad9a856a30b8413421d3bdc143",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf22a5324a8f10bba6cedcb260e303e9f40c5f157"
  },
  {
    feeTier: "2500",
    id: "0xc4e8c1b0c6e6f36af8bbb3d554cb4e3a7054f294",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc2c07cd0f570ee77c05b4360982a38d0306c534a"
  },
  {
    feeTier: "10000",
    id: "0x41938f88ab4ad64891660d219c770d3fc39f897f",
    token0: "0x2024b9be6b03f2a57d3533ae33c7e1d0b0b4be47",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xdb5311dde77e908a6017e7ba174fc2cbe6b296f2",
    token0: "0x0782b6d8c4551b9760e74c0545a9bcd90bdc41e5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x82b13a3fa0f5c6f5baa68605e5d33a757bcdebbe",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xfb5b838b6cfeedc2873ab27866079ac55363d37e"
  },
  {
    feeTier: "500",
    id: "0x6e49051d818075187e6f82aa26b2ef469733ae5d",
    token0: "0x9f1b821bf22c580fd6d8d57477c3b104a2b69054",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xbcb7acc24001c11ef12653886ab80238bcc8c229",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x58730ae0faa10d73b0cddb5e7b87c3594f7a20cb"
  },
  {
    feeTier: "100",
    id: "0xcec31052610aaf0693d6b4d34e055687af3aeee6",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "500",
    id: "0xf6af9571137bfd6a3edd377923e10e82374847a7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd6edbb510af7901b2c049ce778b65a740c4aeb7f"
  },
  {
    feeTier: "10000",
    id: "0xd0ba6d96a9e0bd0f5abcce822116d4d562c0bd58",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7e60c74b9096f8fa6fb5a9fd88405ded8b7d44f3"
  },
  {
    feeTier: "500",
    id: "0x7b1db35fbd95548777b9079527e8fa2a70fb2ce0",
    token0: "0x12f31b73d812c6bb0d735a218c086d44d5fe5f89",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x8057eb02e41821d5ca7faf31e4b35e006619da89",
    token0: "0x12996c7b23c4012149bf9f5663ff9aa08a9cf2e4",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0xcfa0db1a0335f2097a9f66c31c9d60979798ced4",
    token0: "0x08801120ab610f42eaa5c573112eec68c19cbd9c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xa43f647b1082b48349ae51fb9a174e909af66154",
    token0: "0x24f0c4097dfc7d1ce67487270f5cf827bbf93cf3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x5c72328396c8d337bbcfd08326cdbb33bc8606da",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xddb341e88bb2dd7cb56e3c62991c5ad3911518cc"
  },
  {
    feeTier: "2500",
    id: "0x133b3d95bad5405d14d53473671200e9342896bf",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xee5dfe5d597d0c94ec4a652c0514f706facd021c",
    token0: "0xa4080f1778e69467e905b8d6f72f6e441f9e9484",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "100",
    id: "0x0c730e9dcb613a06d364dbc7881e9d4f75635a34",
    token0: "0x4be35ec329343d7d9f548d42b0f8c17fffe07db4",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x2bc8d557865078ecbf4a231e8243385f4eeb83ed",
    token0: "0x44846e92dd01e3fe8f84a9a33d555b2aee862edb",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xed7abc033fc39ba671f82d010829465468937303",
    token0: "0x2dff88a56767223a5529ea5960da7a3f5f766406",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x3e9f887270d68d34297cab66f76fa97b01c5e4cf",
    token0: "0x78f5d389f5cdccfc41594abab4b0ed02f31398b3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x1e9ffe50d043f3c0a8715efe4ed71d95979aa462",
    token0: "0x0ee7292bd28f4a490f849fb30c28cabab9440f9e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x81bef404f5c93d99ed04ed55488c99722cdd7a50",
    token0: "0x715d400f88c167884bbcc41c5fea407ed4d2f8a0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xf26cfbf7df88e389b06f297fb3ec2a36a44a0f25",
    token0: "0x08bfe995df70b6a2b887dd316b792eeb09bda6b4",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x4f110dc63b95eab8493830ec5861e27a413039a0",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xd8047afecb86e44eff3add991b9f063ed4ca716b"
  },
  {
    feeTier: "2500",
    id: "0x71b948b361ad69a233a208190c9ac9c5b130d095",
    token0: "0x07715ee7219b07b8e01cc7d2787f4e5e75860383",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x58fd8a03779266a34460dd230e58912c3868054f",
    token0: "0x14016e85a25aeb13065688cafb43044c2ef86784",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0xf547b4be8a12ab481a247660a69c897b3444290f",
    token0: "0x425e800e22d521e0c8f5ebfe56e828c704510e3f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xf4f21ce45f2108a21cecd29d98765b01dde6adcc",
    token0: "0x335b6828e2860abcdd0ef50ba86334ab25fd03ad",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xb66cb4092277ee946d4fba1d34f425329fedd37e",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x80137510979822322193fc997d400d5a6c747bf7"
  },
  {
    feeTier: "2500",
    id: "0xd361bc5e92e318e02fbf8767ee9f8d271c402f07",
    token0: "0x477bc8d23c634c154061869478bce96be6045d12",
    token1: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d"
  },
  {
    feeTier: "100",
    id: "0xd6549e1bd42f6477c773d5e3a3b3e6e4c14eeddc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7133ced95c468b76175168600590c6260164f74b"
  },
  {
    feeTier: "2500",
    id: "0x97d034836797f2d003f396b9f79b384eb2a8c13e",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x872d068c25511be88c1f5990c53eeffcdf46c9b4"
  },
  {
    feeTier: "10000",
    id: "0x0b2a5404b97c792a4c7b4ca7a3ae04fdbb2c2b1a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa045e37a0d1dd3a45fefb8803d22457abc0a728a"
  },
  {
    feeTier: "100",
    id: "0x2ce7e533bdd39b685ab80f643370033b658805f6",
    token0: "0x0400ff00ffd395ef93e701ae27087a7eeeb84f32",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x91b0663805b088af0bdfdfa91b10c24eac61aa4c",
    token0: "0x382ec3f9f2e79b03abf0127f3aa985b148cef6d7",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xb2ff6eda4cd0c0c54b9d6ead25ed6717edcf5727",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc541fa360527f19d7f2a83b6de5221dc5de9fe54"
  },
  {
    feeTier: "500",
    id: "0xc08b59ae73dc39f1bfebb3e6f9f9579b1eadd2f1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x8f22a9373b4328ba0de5816f2cb82f4e669d3848"
  },
  {
    feeTier: "10000",
    id: "0x73ad4b2d6d6004490394f02dba18d806349ecbbf",
    token0: "0x4d1e90ab966ae26c778b2f9f365aa40abb13f53c",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x6f1382061d16635af61a40608ede8b720e7a4a7f",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd"
  },
  {
    feeTier: "100",
    id: "0xb302bcd108210f5c817faac562b90a0111de6699",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe405b8148d731e4e1117e00542264dac5375bc97"
  },
  {
    feeTier: "2500",
    id: "0xdeaa89cf12c2d97a8851cd02cbaad550fcc838e4",
    token0: "0x3e195dd3c55568362dcab32a61d253c1ca365786",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x1027f5c0a4d4ce18f85f32b1c2a935a33da88d4a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xbd66323633d8cc375482c2470443ee3ffc6dc22f"
  },
  {
    feeTier: "10000",
    id: "0x20ca4e4c51f8a688fd06068cf8dd6de0c2c51b18",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xb90cdb259b9c96b579a30dac027ff92c1e99f1e3"
  },
  {
    feeTier: "2500",
    id: "0xbcef5c8beef2d5fbc62a627be29aaefe211e8c00",
    token0: "0x61dc650c10ec3c758d251cd2d1ab45af1a43e941",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "2500",
    id: "0x05b77ead38f5a016dcd26365ce57028e416175d2",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xae493a1f8bbe36ba8e687352f638d4c07c54f8d7"
  },
  {
    feeTier: "100",
    id: "0x4805c5a57e64692337168b4d2ed73d1db676edea",
    token0: "0xa801d5ecb0dd7263655bae6511709146588bb55b",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0x9b5f52114d23bfe5302a82d5c4f59113dd070f26",
    token0: "0x488cf9905cd9f5dea7212b4571c8b1052631ab8d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd38f03a296991b957617dc704f86b2da9f239afc",
    token0: "0x88691f292b76bf4d2caa5678a54515fae77c33af",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0xe6f1af7afdd396adf8ef19291bd07c5d9b20fecc",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf328ed974e586b6eea7997a87ea2ab1de149b186"
  },
  {
    feeTier: "10000",
    id: "0xc6c0c7037398de6fdd2c06f61c188abd11e5c59b",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x57f2be3e97e7653a2e6d6bddda40160d202d5305"
  },
  {
    feeTier: "2500",
    id: "0xaa251535d7cc793e131ce7e0dbf4f8ca5edf1ad0",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x686318000d982bc8dcc1cdcf8ffd22322f0960ed"
  },
  {
    feeTier: "10000",
    id: "0x914709f1d9c9b14c48e071c7444c324130f95508",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc0f0465d44f4846fae219623a3faa041b126dab1"
  },
  {
    feeTier: "10000",
    id: "0x4d6f6726a043657a3714421356794787ff08399f",
    token0: "0xb46584e0efde3092e04010a13f2eae62adb3b9f0",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "500",
    id: "0x137b01f48f7c925cf452e69d9445a0ebe91c6d67",
    token0: "0x4f52f33910c262be948ce7480cd5a75fa091ad01",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0x121e842e68ab5407e54ce6b8f0843be93abd887b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcde131f756176967b695c6090885d387f1337456"
  },
  {
    feeTier: "2500",
    id: "0x98fdcfc7f26d0e6cfbda48fe6ecdbfc4d1f04da5",
    token0: "0x10da043d0b46e43b53b74a88ac60ccc28e2afdf8",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x5d07e772e3cfd1ca7c1c6581556894d3a1381865",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xec33d722d014c02cf4efb46d68098e98e027c364"
  },
  {
    feeTier: "500",
    id: "0x44133b9b8dddd606b9a64dac04c22e8e760924f7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x90cb6ac729025226c7a90009dba2c1cf9129211c"
  },
  {
    feeTier: "100",
    id: "0xee7e431e13a77d0d8799c5d5574d7084ffd315e5",
    token0: "0x2532bf4a9e1c52dc2f579acfee38d74e26d43f45",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "500",
    id: "0xee445e64eec4c860ad528803b957b00d8ed0df16",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0xafcc12e4040615e7afe9fb4330eb3d9120acac05"
  },
  {
    feeTier: "10000",
    id: "0xb4aee9155dbe31e1d1301ff48fc23a8fc450b8e6",
    token0: "0x2170ed0880ac9a755fd29b2688956bd959f933f8",
    token1: "0x9ac983826058b8a9c7aa1c9171441191232e8404"
  },
  {
    feeTier: "100",
    id: "0x92974438c330d5c6790b4260e358e84513109872",
    token0: "0x5542958fa9bd89c96cb86d1a6cb7a3e644a3d46e",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xf2d0f6f88bb82bd633c033ec5fae2b1054aaff68",
    token0: "0xb46584e0efde3092e04010a13f2eae62adb3b9f0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x107f930c8f112624eb3e273094f68d5012377efd",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd9c7d2d9347f6e5a9c9c9fb640e963e102a83181"
  },
  {
    feeTier: "500",
    id: "0x7af49d394cb3bbb015fc9248bfb5ff9e3497593f",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x63436d8a6ae90943cf09eb589cc815f645c14bb4"
  },
  {
    feeTier: "500",
    id: "0x7338b29a25a419df14d6f25b9e8aea7a5e5c10d4",
    token0: "0xb72a20c7b8bd666f80ac053b0f4de20a787080f5",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x376f297436ff03d953d092ab667e7c3e996db6c3",
    token0: "0x12275257375797e32b799398ba2ee25e6a62404f",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x3eeb55deed86086bfcd736880e896e026c8109ee",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa2741bec3115a4cc43bbccdc351e21df4c6c0e31"
  },
  {
    feeTier: "100",
    id: "0xe043558b77e2b4c262d7d6e579b005ceb7f4591c",
    token0: "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0xbd59dcf49e6a63b438940de92888760a5290e455",
    token0: "0x772b609d3a8f2ebe1c1b8f87ebda2e462ec475f8",
    token1: "0xe9e7cea3dedca5984780bafc599bd69add087d56"
  },
  {
    feeTier: "10000",
    id: "0x69040b55dad8eec2b71de08a54d0f11b1f6e31fc",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xf74cc13b97f0706696871bf4b7ba88057decf349"
  },
  {
    feeTier: "100",
    id: "0x8d63e111c4396cdef8182c7138b53da8bfe54a7b",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xfbc26841c173e9cce7be7c811cb8fe06289be820"
  },
  {
    feeTier: "2500",
    id: "0x62f0546cbcd684f7c394d8549119e072527c41bc",
    token0: "0x7083609fce4d1d8dc0c979aab8c869ea2c873402",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xb470f34ddcbba0b26a683c55bd04d6915e2ffaa9",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcbfb0d98151d03ef8bb71fa668f57df5e3fb4673"
  },
  {
    feeTier: "2500",
    id: "0x517f28453b947ba01fe6a6b193294d4576528826",
    token0: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "2500",
    id: "0xc18310af8ea61809918082a966220ea50f6d2aa8",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xe9d7023f2132d55cbd4ee1f78273cb7a3e74f10a"
  },
  {
    feeTier: "10000",
    id: "0x7298f4bcf9fbc580b2aabcf5ad92fa2e3e4aac44",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe05001a6fb6b1dcf2c0fa18f26abf691a5b9cca4"
  },
  {
    feeTier: "100",
    id: "0xce1bfd17ee519ed09710d9c517e2670b56fe6437",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x7d9093c5f8529dc5093a86ee36c917ba75d3fc92"
  },
  {
    feeTier: "100",
    id: "0x0f4439a95987dee2d0b7a89aafef33842a9e42f8",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xf1f0fa0287c47804636ffef14e2c241f2587903e"
  },
  {
    feeTier: "2500",
    id: "0xc453fb2603d6a80c0067fde74a0680706b56b704",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc01fa5f062e67dd51a40cb59e5fad4ffe14d5bb6"
  },
  {
    feeTier: "2500",
    id: "0x67a68233cdd392b4e9cce1174b2430745184e3ae",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x833f307ac507d47309fd8cdd1f835bef8d702a93"
  },
  {
    feeTier: "100",
    id: "0xa3745bf0656694c056bec36b658f13b13b80ab00",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa66e74ddf06cbfa3bdb010f8f47af6979ac4597b"
  },
  {
    feeTier: "2500",
    id: "0x0c908dd60e9fe25b22ff27a708764b8539f827ee",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x76a797a59ba2c17726896976b7b3747bfd1d220f"
  },
  {
    feeTier: "10000",
    id: "0x314f366c1a7ccac86a43642c68358324895072b5",
    token0: "0x9240c44ee90d058b0b17ababe0f74ab1a205ae04",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x277c33ef1bf8f5846d8aa10a3df0e6e89c2703d1",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x593313847ffe88796e002ecd0b80c44faa913c7b"
  },
  {
    feeTier: "2500",
    id: "0x7aae59aa007438a1d31845a3f1e4d5ba207d1bed",
    token0: "0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d",
    token1: "0xf03e02acbc5eb22de027ea4f59235966f5810d4f"
  },
  {
    feeTier: "2500",
    id: "0x700f9a7778f107e72ccd7e88d4530ab2cc393c76",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x6730f7a6bbb7b9c8e60843948f7feb4b6a17b7f7"
  },
  {
    feeTier: "2500",
    id: "0x60ba4a0752e839a04cb1defc1ac0a7552fbb8e6f",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe05de356c8eeb00eceab3ad9d4959c10eb2b0475"
  },
  {
    feeTier: "500",
    id: "0xa279ca990bbb8d247c49997e9362b69264282f94",
    token0: "0x137615267e6a4680d7d417951d96d45678b4a3d3",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x088464e4e8cc54bf91180cbb8c61c68aecc74166",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xd06716e1ff2e492cc5034c2e81805562dd3b45fa"
  },
  {
    feeTier: "10000",
    id: "0xd97e03d02ce147cad1f470e436948436b6d12e1f",
    token0: "0x3d6545b08693dae087e957cb1180ee38b9e3c25e",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xa94d19bd645d2fce14da5cb39837906927865c7a",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xab5cd36302d83ad5e524a67578ae27beefdd4fc0"
  },
  {
    feeTier: "10000",
    id: "0x2243ccfdc5ab8ed66fe0a1378aa8319b8dbcfae5",
    token0: "0x2dff88a56767223a5529ea5960da7a3f5f766406",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x08dc101cf49561cdabc031f63d9f82085e0c9201",
    token0: "0x0808bf94d57c905f1236212654268ef82e1e594e",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x135fe652d45d57c9f67cf15526be52f470806a82",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xc45de8ab31140e9ced1575ec53ffffa1e3062576"
  },
  {
    feeTier: "10000",
    id: "0x069acabcdb399c5f40aefd0f2f91d859e4a86d29",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xad86d0e9764ba90ddd68747d64bffbd79879a238"
  },
  {
    feeTier: "2500",
    id: "0x4af6b2ee118d9164bdf216adb84ca66d7db4f43c",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xbda011d7f8ec00f66c1923b049b94c67d148d8b2"
  },
  {
    feeTier: "500",
    id: "0x6239ad2052a2c8cd6e5677d44ffd8051b2f7a9a7",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xe0464a2ca466da301ba62a996def801bff963671"
  },
  {
    feeTier: "500",
    id: "0x6382925339bbceeb6248669eb5a628acddb3c036",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xc14a7747cfec02cfea62e72bb93538de6b2078e6"
  },
  {
    feeTier: "10000",
    id: "0x1efd637bb78187a2977298e21ad01aa39fe6bb18",
    token0: "0x3d36685d91b060fb0351401f27ee058311fb00c1",
    token1: "0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c"
  },
  {
    feeTier: "2500",
    id: "0x80968a476e0235a026fd1f33aaac5a3b7b76110f",
    token0: "0x33d08d8c7a168333a85285a68c0042b39fc3741d",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xe6be850a43ae64c68754845ea444de7d3fe761ab",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa865197a84e780957422237b5d152772654341f3"
  },
  {
    feeTier: "10000",
    id: "0xfc92e5fbdcf2237189d4ec5fca2bd15528610b0a",
    token0: "0xb3c33b5128f27b089c5407273e9f6b03ba3693a0",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "2500",
    id: "0x466e7d53e23620a24db23e2b1f8bd10ff52116cd",
    token0: "0x04756126f044634c9a0f0e985e60c88a51acc206",
    token1: "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82"
  },
  {
    feeTier: "10000",
    id: "0x6f24a3db514370ca6c0e94144d71c1b3d2646488",
    token0: "0x21fd16cd0ef24a49d28429921e335bb0c1bfadb3",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0x293c665b9b98cd51d6454c72529fe17a1cf1f504",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x5f4bde007dc06b867f86ebfe4802e34a1ffeed63"
  },
  {
    feeTier: "100",
    id: "0x9229cf2dd552a1b6261f65eb90f5d308b945ff16",
    token0: "0x0a846d5f27b9192270567d9e0c20d1895fc92ed9",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x1f627a16c8092b22ac6d1f5e2049a579a90c014b",
    token0: "0x124123c7af9efd2a86f4d41daa88ac164d02a3d5",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x166b394989f026c148f47e2f5ed7acfca34e781c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xcbec2cb9dc21a79bc3691633b43ae931fc632b9a"
  },
  {
    feeTier: "10000",
    id: "0xf271f01ea7cb14c6e31466c6ec95a2b9cebee1f5",
    token0: "0x0ae38f7e10a43b5b2fb064b42a2f4514cba909ef",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "500",
    id: "0x3cccef8d9d515ec7f59eb69ad06c22265cc95ea9",
    token0: "0x0ae38f7e10a43b5b2fb064b42a2f4514cba909ef",
    token1: "0x2170ed0880ac9a755fd29b2688956bd959f933f8"
  },
  {
    feeTier: "500",
    id: "0x592f1543d99af806ab670891bd9f2a2b4d7c78ce",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xd0c8ad30606b2f428e7edd10c56939b1d223227f"
  },
  {
    feeTier: "2500",
    id: "0x309785431c8d550bb3bc00fdc3b211c13567b57d",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xaa9e582e5751d703f85912903bacaddfed26484c"
  },
  {
    feeTier: "10000",
    id: "0x4f55423de1049d3cbfdc72f8a40f8a6f554f92aa",
    token0: "0x12bb890508c125661e03b09ec06e404bc9289040",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "10000",
    id: "0x9c4a4aca65341624377b79053dc61ce6f1c229e6",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xe356cb3efc9cb4320b945393a10fd71c77dc24a0"
  },
  {
    feeTier: "10000",
    id: "0x3618336abc465bce29d946667b6932a0357e138e",
    token0: "0x062ca2d2f1af8c203fa3ad5298fd6faa4e44e897",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "10000",
    id: "0xe335aa30076171152a93debc38a6490efb108549",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa1ed0bd9a4776830c5b7ba004f26427b71152ca5"
  },
  {
    feeTier: "500",
    id: "0xecb082543937bf9e69df5c748f817a6cfd74e7f7",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0x740e1e17f65cf2d33413eed337db6dcd890e79db"
  },
  {
    feeTier: "10000",
    id: "0x7eb60ffa01659569bbfca408247368fc284fe33e",
    token0: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c",
    token1: "0xde76797419d3af76206b9a6aab06539f7135ebe8"
  },
  {
    feeTier: "10000",
    id: "0x2d1a0fc3aefe5e14cad3c3ef75453fc2a78794e2",
    token0: "0x5651fa7a726b9ec0cad00ee140179912b6e73599",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "100",
    id: "0xd67eb8f57e6399c04905b0e425fcbddfb7fbeace",
    token0: "0x471bb4ccec146de565ba6339beb2bc86f9bff514",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "100",
    id: "0x77b479c269c6e93916b52cf62269f6f016bd195a",
    token0: "0x4c3145cb6285eb269c37685e05ff8c6684a70ec7",
    token1: "0x55d398326f99059ff775485246999027b3197955"
  },
  {
    feeTier: "2500",
    id: "0x37990abfd83e62eee88231cdeece411c40ba07c9",
    token0: "0xa7bd657c5838472ddf85ff0797a2e6fce8fd4833",
    token1: "0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c"
  },
  {
    feeTier: "500",
    id: "0x2bd5d05f765917b185852d37bfd60452e4bb391c",
    token0: "0x55d398326f99059ff775485246999027b3197955",
    token1: "0xa65dda13aaceed7c906dfe7c6cec805ae3d8ed71"
  }
];
const get = (address) => tokens$1.filter((t) => t.id === address)[0];
const getAll = () => tokens$1;
const getPools = (address) => pools.filter((p) => p.token0 === address || p.token1 === address).map((p) => ({
  token0: get(p.token0),
  token1: get(p.token1),
  id: p.id,
  feeTier: p.feeTier
}));
const getPaired = (address) => Array.from(
  new Set(
    pools.filter((p) => p.token0 === address || p.token1 === address).flatMap((p) => [p.token0, p.token1]).filter((p) => p !== address)
  )
).map((addr) => get(addr));
const tokens = {
  get,
  getAll,
  getPools,
  getPaired
};
export {
  Chains as C,
  TokenPicker as T,
  walletAccount as a,
  activeChain as b,
  tokens as t,
  walletClient as w
};
